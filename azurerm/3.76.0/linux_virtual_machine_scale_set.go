// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	"encoding/json"
	"fmt"
	linuxvirtualmachinescaleset "github.com/golingon/terraproviders/azurerm/3.76.0/linuxvirtualmachinescaleset"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

// NewLinuxVirtualMachineScaleSet creates a new instance of [LinuxVirtualMachineScaleSet].
func NewLinuxVirtualMachineScaleSet(name string, args LinuxVirtualMachineScaleSetArgs) *LinuxVirtualMachineScaleSet {
	return &LinuxVirtualMachineScaleSet{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*LinuxVirtualMachineScaleSet)(nil)

// LinuxVirtualMachineScaleSet represents the Terraform resource azurerm_linux_virtual_machine_scale_set.
type LinuxVirtualMachineScaleSet struct {
	Name      string
	Args      LinuxVirtualMachineScaleSetArgs
	state     *linuxVirtualMachineScaleSetState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [LinuxVirtualMachineScaleSet].
func (lvmss *LinuxVirtualMachineScaleSet) Type() string {
	return "azurerm_linux_virtual_machine_scale_set"
}

// LocalName returns the local name for [LinuxVirtualMachineScaleSet].
func (lvmss *LinuxVirtualMachineScaleSet) LocalName() string {
	return lvmss.Name
}

// Configuration returns the configuration (args) for [LinuxVirtualMachineScaleSet].
func (lvmss *LinuxVirtualMachineScaleSet) Configuration() interface{} {
	return lvmss.Args
}

// DependOn is used for other resources to depend on [LinuxVirtualMachineScaleSet].
func (lvmss *LinuxVirtualMachineScaleSet) DependOn() terra.Reference {
	return terra.ReferenceResource(lvmss)
}

// Dependencies returns the list of resources [LinuxVirtualMachineScaleSet] depends_on.
func (lvmss *LinuxVirtualMachineScaleSet) Dependencies() terra.Dependencies {
	return lvmss.DependsOn
}

// LifecycleManagement returns the lifecycle block for [LinuxVirtualMachineScaleSet].
func (lvmss *LinuxVirtualMachineScaleSet) LifecycleManagement() *terra.Lifecycle {
	return lvmss.Lifecycle
}

// Attributes returns the attributes for [LinuxVirtualMachineScaleSet].
func (lvmss *LinuxVirtualMachineScaleSet) Attributes() linuxVirtualMachineScaleSetAttributes {
	return linuxVirtualMachineScaleSetAttributes{ref: terra.ReferenceResource(lvmss)}
}

// ImportState imports the given attribute values into [LinuxVirtualMachineScaleSet]'s state.
func (lvmss *LinuxVirtualMachineScaleSet) ImportState(av io.Reader) error {
	lvmss.state = &linuxVirtualMachineScaleSetState{}
	if err := json.NewDecoder(av).Decode(lvmss.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", lvmss.Type(), lvmss.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [LinuxVirtualMachineScaleSet] has state.
func (lvmss *LinuxVirtualMachineScaleSet) State() (*linuxVirtualMachineScaleSetState, bool) {
	return lvmss.state, lvmss.state != nil
}

// StateMust returns the state for [LinuxVirtualMachineScaleSet]. Panics if the state is nil.
func (lvmss *LinuxVirtualMachineScaleSet) StateMust() *linuxVirtualMachineScaleSetState {
	if lvmss.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", lvmss.Type(), lvmss.LocalName()))
	}
	return lvmss.state
}

// LinuxVirtualMachineScaleSetArgs contains the configurations for azurerm_linux_virtual_machine_scale_set.
type LinuxVirtualMachineScaleSetArgs struct {
	// AdminPassword: string, optional
	AdminPassword terra.StringValue `hcl:"admin_password,attr"`
	// AdminUsername: string, required
	AdminUsername terra.StringValue `hcl:"admin_username,attr" validate:"required"`
	// CapacityReservationGroupId: string, optional
	CapacityReservationGroupId terra.StringValue `hcl:"capacity_reservation_group_id,attr"`
	// ComputerNamePrefix: string, optional
	ComputerNamePrefix terra.StringValue `hcl:"computer_name_prefix,attr"`
	// CustomData: string, optional
	CustomData terra.StringValue `hcl:"custom_data,attr"`
	// DisablePasswordAuthentication: bool, optional
	DisablePasswordAuthentication terra.BoolValue `hcl:"disable_password_authentication,attr"`
	// DoNotRunExtensionsOnOverprovisionedMachines: bool, optional
	DoNotRunExtensionsOnOverprovisionedMachines terra.BoolValue `hcl:"do_not_run_extensions_on_overprovisioned_machines,attr"`
	// EdgeZone: string, optional
	EdgeZone terra.StringValue `hcl:"edge_zone,attr"`
	// EncryptionAtHostEnabled: bool, optional
	EncryptionAtHostEnabled terra.BoolValue `hcl:"encryption_at_host_enabled,attr"`
	// EvictionPolicy: string, optional
	EvictionPolicy terra.StringValue `hcl:"eviction_policy,attr"`
	// ExtensionOperationsEnabled: bool, optional
	ExtensionOperationsEnabled terra.BoolValue `hcl:"extension_operations_enabled,attr"`
	// ExtensionsTimeBudget: string, optional
	ExtensionsTimeBudget terra.StringValue `hcl:"extensions_time_budget,attr"`
	// HealthProbeId: string, optional
	HealthProbeId terra.StringValue `hcl:"health_probe_id,attr"`
	// HostGroupId: string, optional
	HostGroupId terra.StringValue `hcl:"host_group_id,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Instances: number, optional
	Instances terra.NumberValue `hcl:"instances,attr"`
	// Location: string, required
	Location terra.StringValue `hcl:"location,attr" validate:"required"`
	// MaxBidPrice: number, optional
	MaxBidPrice terra.NumberValue `hcl:"max_bid_price,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Overprovision: bool, optional
	Overprovision terra.BoolValue `hcl:"overprovision,attr"`
	// PlatformFaultDomainCount: number, optional
	PlatformFaultDomainCount terra.NumberValue `hcl:"platform_fault_domain_count,attr"`
	// Priority: string, optional
	Priority terra.StringValue `hcl:"priority,attr"`
	// ProvisionVmAgent: bool, optional
	ProvisionVmAgent terra.BoolValue `hcl:"provision_vm_agent,attr"`
	// ProximityPlacementGroupId: string, optional
	ProximityPlacementGroupId terra.StringValue `hcl:"proximity_placement_group_id,attr"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// ScaleInPolicy: string, optional
	ScaleInPolicy terra.StringValue `hcl:"scale_in_policy,attr"`
	// SecureBootEnabled: bool, optional
	SecureBootEnabled terra.BoolValue `hcl:"secure_boot_enabled,attr"`
	// SinglePlacementGroup: bool, optional
	SinglePlacementGroup terra.BoolValue `hcl:"single_placement_group,attr"`
	// Sku: string, required
	Sku terra.StringValue `hcl:"sku,attr" validate:"required"`
	// SourceImageId: string, optional
	SourceImageId terra.StringValue `hcl:"source_image_id,attr"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// UpgradeMode: string, optional
	UpgradeMode terra.StringValue `hcl:"upgrade_mode,attr"`
	// UserData: string, optional
	UserData terra.StringValue `hcl:"user_data,attr"`
	// VtpmEnabled: bool, optional
	VtpmEnabled terra.BoolValue `hcl:"vtpm_enabled,attr"`
	// ZoneBalance: bool, optional
	ZoneBalance terra.BoolValue `hcl:"zone_balance,attr"`
	// Zones: set of string, optional
	Zones terra.SetValue[terra.StringValue] `hcl:"zones,attr"`
	// AdditionalCapabilities: optional
	AdditionalCapabilities *linuxvirtualmachinescaleset.AdditionalCapabilities `hcl:"additional_capabilities,block"`
	// AdminSshKey: min=0
	AdminSshKey []linuxvirtualmachinescaleset.AdminSshKey `hcl:"admin_ssh_key,block" validate:"min=0"`
	// AutomaticInstanceRepair: optional
	AutomaticInstanceRepair *linuxvirtualmachinescaleset.AutomaticInstanceRepair `hcl:"automatic_instance_repair,block"`
	// AutomaticOsUpgradePolicy: optional
	AutomaticOsUpgradePolicy *linuxvirtualmachinescaleset.AutomaticOsUpgradePolicy `hcl:"automatic_os_upgrade_policy,block"`
	// BootDiagnostics: optional
	BootDiagnostics *linuxvirtualmachinescaleset.BootDiagnostics `hcl:"boot_diagnostics,block"`
	// DataDisk: min=0
	DataDisk []linuxvirtualmachinescaleset.DataDisk `hcl:"data_disk,block" validate:"min=0"`
	// Extension: min=0
	Extension []linuxvirtualmachinescaleset.Extension `hcl:"extension,block" validate:"min=0"`
	// GalleryApplication: min=0,max=100
	GalleryApplication []linuxvirtualmachinescaleset.GalleryApplication `hcl:"gallery_application,block" validate:"min=0,max=100"`
	// GalleryApplications: min=0,max=100
	GalleryApplications []linuxvirtualmachinescaleset.GalleryApplications `hcl:"gallery_applications,block" validate:"min=0,max=100"`
	// Identity: optional
	Identity *linuxvirtualmachinescaleset.Identity `hcl:"identity,block"`
	// NetworkInterface: min=1
	NetworkInterface []linuxvirtualmachinescaleset.NetworkInterface `hcl:"network_interface,block" validate:"min=1"`
	// OsDisk: required
	OsDisk *linuxvirtualmachinescaleset.OsDisk `hcl:"os_disk,block" validate:"required"`
	// Plan: optional
	Plan *linuxvirtualmachinescaleset.Plan `hcl:"plan,block"`
	// RollingUpgradePolicy: optional
	RollingUpgradePolicy *linuxvirtualmachinescaleset.RollingUpgradePolicy `hcl:"rolling_upgrade_policy,block"`
	// ScaleIn: optional
	ScaleIn *linuxvirtualmachinescaleset.ScaleIn `hcl:"scale_in,block"`
	// Secret: min=0
	Secret []linuxvirtualmachinescaleset.Secret `hcl:"secret,block" validate:"min=0"`
	// SourceImageReference: optional
	SourceImageReference *linuxvirtualmachinescaleset.SourceImageReference `hcl:"source_image_reference,block"`
	// SpotRestore: optional
	SpotRestore *linuxvirtualmachinescaleset.SpotRestore `hcl:"spot_restore,block"`
	// TerminateNotification: optional
	TerminateNotification *linuxvirtualmachinescaleset.TerminateNotification `hcl:"terminate_notification,block"`
	// TerminationNotification: optional
	TerminationNotification *linuxvirtualmachinescaleset.TerminationNotification `hcl:"termination_notification,block"`
	// Timeouts: optional
	Timeouts *linuxvirtualmachinescaleset.Timeouts `hcl:"timeouts,block"`
}
type linuxVirtualMachineScaleSetAttributes struct {
	ref terra.Reference
}

// AdminPassword returns a reference to field admin_password of azurerm_linux_virtual_machine_scale_set.
func (lvmss linuxVirtualMachineScaleSetAttributes) AdminPassword() terra.StringValue {
	return terra.ReferenceAsString(lvmss.ref.Append("admin_password"))
}

// AdminUsername returns a reference to field admin_username of azurerm_linux_virtual_machine_scale_set.
func (lvmss linuxVirtualMachineScaleSetAttributes) AdminUsername() terra.StringValue {
	return terra.ReferenceAsString(lvmss.ref.Append("admin_username"))
}

// CapacityReservationGroupId returns a reference to field capacity_reservation_group_id of azurerm_linux_virtual_machine_scale_set.
func (lvmss linuxVirtualMachineScaleSetAttributes) CapacityReservationGroupId() terra.StringValue {
	return terra.ReferenceAsString(lvmss.ref.Append("capacity_reservation_group_id"))
}

// ComputerNamePrefix returns a reference to field computer_name_prefix of azurerm_linux_virtual_machine_scale_set.
func (lvmss linuxVirtualMachineScaleSetAttributes) ComputerNamePrefix() terra.StringValue {
	return terra.ReferenceAsString(lvmss.ref.Append("computer_name_prefix"))
}

// CustomData returns a reference to field custom_data of azurerm_linux_virtual_machine_scale_set.
func (lvmss linuxVirtualMachineScaleSetAttributes) CustomData() terra.StringValue {
	return terra.ReferenceAsString(lvmss.ref.Append("custom_data"))
}

// DisablePasswordAuthentication returns a reference to field disable_password_authentication of azurerm_linux_virtual_machine_scale_set.
func (lvmss linuxVirtualMachineScaleSetAttributes) DisablePasswordAuthentication() terra.BoolValue {
	return terra.ReferenceAsBool(lvmss.ref.Append("disable_password_authentication"))
}

// DoNotRunExtensionsOnOverprovisionedMachines returns a reference to field do_not_run_extensions_on_overprovisioned_machines of azurerm_linux_virtual_machine_scale_set.
func (lvmss linuxVirtualMachineScaleSetAttributes) DoNotRunExtensionsOnOverprovisionedMachines() terra.BoolValue {
	return terra.ReferenceAsBool(lvmss.ref.Append("do_not_run_extensions_on_overprovisioned_machines"))
}

// EdgeZone returns a reference to field edge_zone of azurerm_linux_virtual_machine_scale_set.
func (lvmss linuxVirtualMachineScaleSetAttributes) EdgeZone() terra.StringValue {
	return terra.ReferenceAsString(lvmss.ref.Append("edge_zone"))
}

// EncryptionAtHostEnabled returns a reference to field encryption_at_host_enabled of azurerm_linux_virtual_machine_scale_set.
func (lvmss linuxVirtualMachineScaleSetAttributes) EncryptionAtHostEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(lvmss.ref.Append("encryption_at_host_enabled"))
}

// EvictionPolicy returns a reference to field eviction_policy of azurerm_linux_virtual_machine_scale_set.
func (lvmss linuxVirtualMachineScaleSetAttributes) EvictionPolicy() terra.StringValue {
	return terra.ReferenceAsString(lvmss.ref.Append("eviction_policy"))
}

// ExtensionOperationsEnabled returns a reference to field extension_operations_enabled of azurerm_linux_virtual_machine_scale_set.
func (lvmss linuxVirtualMachineScaleSetAttributes) ExtensionOperationsEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(lvmss.ref.Append("extension_operations_enabled"))
}

// ExtensionsTimeBudget returns a reference to field extensions_time_budget of azurerm_linux_virtual_machine_scale_set.
func (lvmss linuxVirtualMachineScaleSetAttributes) ExtensionsTimeBudget() terra.StringValue {
	return terra.ReferenceAsString(lvmss.ref.Append("extensions_time_budget"))
}

// HealthProbeId returns a reference to field health_probe_id of azurerm_linux_virtual_machine_scale_set.
func (lvmss linuxVirtualMachineScaleSetAttributes) HealthProbeId() terra.StringValue {
	return terra.ReferenceAsString(lvmss.ref.Append("health_probe_id"))
}

// HostGroupId returns a reference to field host_group_id of azurerm_linux_virtual_machine_scale_set.
func (lvmss linuxVirtualMachineScaleSetAttributes) HostGroupId() terra.StringValue {
	return terra.ReferenceAsString(lvmss.ref.Append("host_group_id"))
}

// Id returns a reference to field id of azurerm_linux_virtual_machine_scale_set.
func (lvmss linuxVirtualMachineScaleSetAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(lvmss.ref.Append("id"))
}

// Instances returns a reference to field instances of azurerm_linux_virtual_machine_scale_set.
func (lvmss linuxVirtualMachineScaleSetAttributes) Instances() terra.NumberValue {
	return terra.ReferenceAsNumber(lvmss.ref.Append("instances"))
}

// Location returns a reference to field location of azurerm_linux_virtual_machine_scale_set.
func (lvmss linuxVirtualMachineScaleSetAttributes) Location() terra.StringValue {
	return terra.ReferenceAsString(lvmss.ref.Append("location"))
}

// MaxBidPrice returns a reference to field max_bid_price of azurerm_linux_virtual_machine_scale_set.
func (lvmss linuxVirtualMachineScaleSetAttributes) MaxBidPrice() terra.NumberValue {
	return terra.ReferenceAsNumber(lvmss.ref.Append("max_bid_price"))
}

// Name returns a reference to field name of azurerm_linux_virtual_machine_scale_set.
func (lvmss linuxVirtualMachineScaleSetAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(lvmss.ref.Append("name"))
}

// Overprovision returns a reference to field overprovision of azurerm_linux_virtual_machine_scale_set.
func (lvmss linuxVirtualMachineScaleSetAttributes) Overprovision() terra.BoolValue {
	return terra.ReferenceAsBool(lvmss.ref.Append("overprovision"))
}

// PlatformFaultDomainCount returns a reference to field platform_fault_domain_count of azurerm_linux_virtual_machine_scale_set.
func (lvmss linuxVirtualMachineScaleSetAttributes) PlatformFaultDomainCount() terra.NumberValue {
	return terra.ReferenceAsNumber(lvmss.ref.Append("platform_fault_domain_count"))
}

// Priority returns a reference to field priority of azurerm_linux_virtual_machine_scale_set.
func (lvmss linuxVirtualMachineScaleSetAttributes) Priority() terra.StringValue {
	return terra.ReferenceAsString(lvmss.ref.Append("priority"))
}

// ProvisionVmAgent returns a reference to field provision_vm_agent of azurerm_linux_virtual_machine_scale_set.
func (lvmss linuxVirtualMachineScaleSetAttributes) ProvisionVmAgent() terra.BoolValue {
	return terra.ReferenceAsBool(lvmss.ref.Append("provision_vm_agent"))
}

// ProximityPlacementGroupId returns a reference to field proximity_placement_group_id of azurerm_linux_virtual_machine_scale_set.
func (lvmss linuxVirtualMachineScaleSetAttributes) ProximityPlacementGroupId() terra.StringValue {
	return terra.ReferenceAsString(lvmss.ref.Append("proximity_placement_group_id"))
}

// ResourceGroupName returns a reference to field resource_group_name of azurerm_linux_virtual_machine_scale_set.
func (lvmss linuxVirtualMachineScaleSetAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceAsString(lvmss.ref.Append("resource_group_name"))
}

// ScaleInPolicy returns a reference to field scale_in_policy of azurerm_linux_virtual_machine_scale_set.
func (lvmss linuxVirtualMachineScaleSetAttributes) ScaleInPolicy() terra.StringValue {
	return terra.ReferenceAsString(lvmss.ref.Append("scale_in_policy"))
}

// SecureBootEnabled returns a reference to field secure_boot_enabled of azurerm_linux_virtual_machine_scale_set.
func (lvmss linuxVirtualMachineScaleSetAttributes) SecureBootEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(lvmss.ref.Append("secure_boot_enabled"))
}

// SinglePlacementGroup returns a reference to field single_placement_group of azurerm_linux_virtual_machine_scale_set.
func (lvmss linuxVirtualMachineScaleSetAttributes) SinglePlacementGroup() terra.BoolValue {
	return terra.ReferenceAsBool(lvmss.ref.Append("single_placement_group"))
}

// Sku returns a reference to field sku of azurerm_linux_virtual_machine_scale_set.
func (lvmss linuxVirtualMachineScaleSetAttributes) Sku() terra.StringValue {
	return terra.ReferenceAsString(lvmss.ref.Append("sku"))
}

// SourceImageId returns a reference to field source_image_id of azurerm_linux_virtual_machine_scale_set.
func (lvmss linuxVirtualMachineScaleSetAttributes) SourceImageId() terra.StringValue {
	return terra.ReferenceAsString(lvmss.ref.Append("source_image_id"))
}

// Tags returns a reference to field tags of azurerm_linux_virtual_machine_scale_set.
func (lvmss linuxVirtualMachineScaleSetAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](lvmss.ref.Append("tags"))
}

// UniqueId returns a reference to field unique_id of azurerm_linux_virtual_machine_scale_set.
func (lvmss linuxVirtualMachineScaleSetAttributes) UniqueId() terra.StringValue {
	return terra.ReferenceAsString(lvmss.ref.Append("unique_id"))
}

// UpgradeMode returns a reference to field upgrade_mode of azurerm_linux_virtual_machine_scale_set.
func (lvmss linuxVirtualMachineScaleSetAttributes) UpgradeMode() terra.StringValue {
	return terra.ReferenceAsString(lvmss.ref.Append("upgrade_mode"))
}

// UserData returns a reference to field user_data of azurerm_linux_virtual_machine_scale_set.
func (lvmss linuxVirtualMachineScaleSetAttributes) UserData() terra.StringValue {
	return terra.ReferenceAsString(lvmss.ref.Append("user_data"))
}

// VtpmEnabled returns a reference to field vtpm_enabled of azurerm_linux_virtual_machine_scale_set.
func (lvmss linuxVirtualMachineScaleSetAttributes) VtpmEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(lvmss.ref.Append("vtpm_enabled"))
}

// ZoneBalance returns a reference to field zone_balance of azurerm_linux_virtual_machine_scale_set.
func (lvmss linuxVirtualMachineScaleSetAttributes) ZoneBalance() terra.BoolValue {
	return terra.ReferenceAsBool(lvmss.ref.Append("zone_balance"))
}

// Zones returns a reference to field zones of azurerm_linux_virtual_machine_scale_set.
func (lvmss linuxVirtualMachineScaleSetAttributes) Zones() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](lvmss.ref.Append("zones"))
}

func (lvmss linuxVirtualMachineScaleSetAttributes) AdditionalCapabilities() terra.ListValue[linuxvirtualmachinescaleset.AdditionalCapabilitiesAttributes] {
	return terra.ReferenceAsList[linuxvirtualmachinescaleset.AdditionalCapabilitiesAttributes](lvmss.ref.Append("additional_capabilities"))
}

func (lvmss linuxVirtualMachineScaleSetAttributes) AdminSshKey() terra.SetValue[linuxvirtualmachinescaleset.AdminSshKeyAttributes] {
	return terra.ReferenceAsSet[linuxvirtualmachinescaleset.AdminSshKeyAttributes](lvmss.ref.Append("admin_ssh_key"))
}

func (lvmss linuxVirtualMachineScaleSetAttributes) AutomaticInstanceRepair() terra.ListValue[linuxvirtualmachinescaleset.AutomaticInstanceRepairAttributes] {
	return terra.ReferenceAsList[linuxvirtualmachinescaleset.AutomaticInstanceRepairAttributes](lvmss.ref.Append("automatic_instance_repair"))
}

func (lvmss linuxVirtualMachineScaleSetAttributes) AutomaticOsUpgradePolicy() terra.ListValue[linuxvirtualmachinescaleset.AutomaticOsUpgradePolicyAttributes] {
	return terra.ReferenceAsList[linuxvirtualmachinescaleset.AutomaticOsUpgradePolicyAttributes](lvmss.ref.Append("automatic_os_upgrade_policy"))
}

func (lvmss linuxVirtualMachineScaleSetAttributes) BootDiagnostics() terra.ListValue[linuxvirtualmachinescaleset.BootDiagnosticsAttributes] {
	return terra.ReferenceAsList[linuxvirtualmachinescaleset.BootDiagnosticsAttributes](lvmss.ref.Append("boot_diagnostics"))
}

func (lvmss linuxVirtualMachineScaleSetAttributes) DataDisk() terra.ListValue[linuxvirtualmachinescaleset.DataDiskAttributes] {
	return terra.ReferenceAsList[linuxvirtualmachinescaleset.DataDiskAttributes](lvmss.ref.Append("data_disk"))
}

func (lvmss linuxVirtualMachineScaleSetAttributes) Extension() terra.SetValue[linuxvirtualmachinescaleset.ExtensionAttributes] {
	return terra.ReferenceAsSet[linuxvirtualmachinescaleset.ExtensionAttributes](lvmss.ref.Append("extension"))
}

func (lvmss linuxVirtualMachineScaleSetAttributes) GalleryApplication() terra.ListValue[linuxvirtualmachinescaleset.GalleryApplicationAttributes] {
	return terra.ReferenceAsList[linuxvirtualmachinescaleset.GalleryApplicationAttributes](lvmss.ref.Append("gallery_application"))
}

func (lvmss linuxVirtualMachineScaleSetAttributes) GalleryApplications() terra.ListValue[linuxvirtualmachinescaleset.GalleryApplicationsAttributes] {
	return terra.ReferenceAsList[linuxvirtualmachinescaleset.GalleryApplicationsAttributes](lvmss.ref.Append("gallery_applications"))
}

func (lvmss linuxVirtualMachineScaleSetAttributes) Identity() terra.ListValue[linuxvirtualmachinescaleset.IdentityAttributes] {
	return terra.ReferenceAsList[linuxvirtualmachinescaleset.IdentityAttributes](lvmss.ref.Append("identity"))
}

func (lvmss linuxVirtualMachineScaleSetAttributes) NetworkInterface() terra.ListValue[linuxvirtualmachinescaleset.NetworkInterfaceAttributes] {
	return terra.ReferenceAsList[linuxvirtualmachinescaleset.NetworkInterfaceAttributes](lvmss.ref.Append("network_interface"))
}

func (lvmss linuxVirtualMachineScaleSetAttributes) OsDisk() terra.ListValue[linuxvirtualmachinescaleset.OsDiskAttributes] {
	return terra.ReferenceAsList[linuxvirtualmachinescaleset.OsDiskAttributes](lvmss.ref.Append("os_disk"))
}

func (lvmss linuxVirtualMachineScaleSetAttributes) Plan() terra.ListValue[linuxvirtualmachinescaleset.PlanAttributes] {
	return terra.ReferenceAsList[linuxvirtualmachinescaleset.PlanAttributes](lvmss.ref.Append("plan"))
}

func (lvmss linuxVirtualMachineScaleSetAttributes) RollingUpgradePolicy() terra.ListValue[linuxvirtualmachinescaleset.RollingUpgradePolicyAttributes] {
	return terra.ReferenceAsList[linuxvirtualmachinescaleset.RollingUpgradePolicyAttributes](lvmss.ref.Append("rolling_upgrade_policy"))
}

func (lvmss linuxVirtualMachineScaleSetAttributes) ScaleIn() terra.ListValue[linuxvirtualmachinescaleset.ScaleInAttributes] {
	return terra.ReferenceAsList[linuxvirtualmachinescaleset.ScaleInAttributes](lvmss.ref.Append("scale_in"))
}

func (lvmss linuxVirtualMachineScaleSetAttributes) Secret() terra.ListValue[linuxvirtualmachinescaleset.SecretAttributes] {
	return terra.ReferenceAsList[linuxvirtualmachinescaleset.SecretAttributes](lvmss.ref.Append("secret"))
}

func (lvmss linuxVirtualMachineScaleSetAttributes) SourceImageReference() terra.ListValue[linuxvirtualmachinescaleset.SourceImageReferenceAttributes] {
	return terra.ReferenceAsList[linuxvirtualmachinescaleset.SourceImageReferenceAttributes](lvmss.ref.Append("source_image_reference"))
}

func (lvmss linuxVirtualMachineScaleSetAttributes) SpotRestore() terra.ListValue[linuxvirtualmachinescaleset.SpotRestoreAttributes] {
	return terra.ReferenceAsList[linuxvirtualmachinescaleset.SpotRestoreAttributes](lvmss.ref.Append("spot_restore"))
}

func (lvmss linuxVirtualMachineScaleSetAttributes) TerminateNotification() terra.ListValue[linuxvirtualmachinescaleset.TerminateNotificationAttributes] {
	return terra.ReferenceAsList[linuxvirtualmachinescaleset.TerminateNotificationAttributes](lvmss.ref.Append("terminate_notification"))
}

func (lvmss linuxVirtualMachineScaleSetAttributes) TerminationNotification() terra.ListValue[linuxvirtualmachinescaleset.TerminationNotificationAttributes] {
	return terra.ReferenceAsList[linuxvirtualmachinescaleset.TerminationNotificationAttributes](lvmss.ref.Append("termination_notification"))
}

func (lvmss linuxVirtualMachineScaleSetAttributes) Timeouts() linuxvirtualmachinescaleset.TimeoutsAttributes {
	return terra.ReferenceAsSingle[linuxvirtualmachinescaleset.TimeoutsAttributes](lvmss.ref.Append("timeouts"))
}

type linuxVirtualMachineScaleSetState struct {
	AdminPassword                               string                                                      `json:"admin_password"`
	AdminUsername                               string                                                      `json:"admin_username"`
	CapacityReservationGroupId                  string                                                      `json:"capacity_reservation_group_id"`
	ComputerNamePrefix                          string                                                      `json:"computer_name_prefix"`
	CustomData                                  string                                                      `json:"custom_data"`
	DisablePasswordAuthentication               bool                                                        `json:"disable_password_authentication"`
	DoNotRunExtensionsOnOverprovisionedMachines bool                                                        `json:"do_not_run_extensions_on_overprovisioned_machines"`
	EdgeZone                                    string                                                      `json:"edge_zone"`
	EncryptionAtHostEnabled                     bool                                                        `json:"encryption_at_host_enabled"`
	EvictionPolicy                              string                                                      `json:"eviction_policy"`
	ExtensionOperationsEnabled                  bool                                                        `json:"extension_operations_enabled"`
	ExtensionsTimeBudget                        string                                                      `json:"extensions_time_budget"`
	HealthProbeId                               string                                                      `json:"health_probe_id"`
	HostGroupId                                 string                                                      `json:"host_group_id"`
	Id                                          string                                                      `json:"id"`
	Instances                                   float64                                                     `json:"instances"`
	Location                                    string                                                      `json:"location"`
	MaxBidPrice                                 float64                                                     `json:"max_bid_price"`
	Name                                        string                                                      `json:"name"`
	Overprovision                               bool                                                        `json:"overprovision"`
	PlatformFaultDomainCount                    float64                                                     `json:"platform_fault_domain_count"`
	Priority                                    string                                                      `json:"priority"`
	ProvisionVmAgent                            bool                                                        `json:"provision_vm_agent"`
	ProximityPlacementGroupId                   string                                                      `json:"proximity_placement_group_id"`
	ResourceGroupName                           string                                                      `json:"resource_group_name"`
	ScaleInPolicy                               string                                                      `json:"scale_in_policy"`
	SecureBootEnabled                           bool                                                        `json:"secure_boot_enabled"`
	SinglePlacementGroup                        bool                                                        `json:"single_placement_group"`
	Sku                                         string                                                      `json:"sku"`
	SourceImageId                               string                                                      `json:"source_image_id"`
	Tags                                        map[string]string                                           `json:"tags"`
	UniqueId                                    string                                                      `json:"unique_id"`
	UpgradeMode                                 string                                                      `json:"upgrade_mode"`
	UserData                                    string                                                      `json:"user_data"`
	VtpmEnabled                                 bool                                                        `json:"vtpm_enabled"`
	ZoneBalance                                 bool                                                        `json:"zone_balance"`
	Zones                                       []string                                                    `json:"zones"`
	AdditionalCapabilities                      []linuxvirtualmachinescaleset.AdditionalCapabilitiesState   `json:"additional_capabilities"`
	AdminSshKey                                 []linuxvirtualmachinescaleset.AdminSshKeyState              `json:"admin_ssh_key"`
	AutomaticInstanceRepair                     []linuxvirtualmachinescaleset.AutomaticInstanceRepairState  `json:"automatic_instance_repair"`
	AutomaticOsUpgradePolicy                    []linuxvirtualmachinescaleset.AutomaticOsUpgradePolicyState `json:"automatic_os_upgrade_policy"`
	BootDiagnostics                             []linuxvirtualmachinescaleset.BootDiagnosticsState          `json:"boot_diagnostics"`
	DataDisk                                    []linuxvirtualmachinescaleset.DataDiskState                 `json:"data_disk"`
	Extension                                   []linuxvirtualmachinescaleset.ExtensionState                `json:"extension"`
	GalleryApplication                          []linuxvirtualmachinescaleset.GalleryApplicationState       `json:"gallery_application"`
	GalleryApplications                         []linuxvirtualmachinescaleset.GalleryApplicationsState      `json:"gallery_applications"`
	Identity                                    []linuxvirtualmachinescaleset.IdentityState                 `json:"identity"`
	NetworkInterface                            []linuxvirtualmachinescaleset.NetworkInterfaceState         `json:"network_interface"`
	OsDisk                                      []linuxvirtualmachinescaleset.OsDiskState                   `json:"os_disk"`
	Plan                                        []linuxvirtualmachinescaleset.PlanState                     `json:"plan"`
	RollingUpgradePolicy                        []linuxvirtualmachinescaleset.RollingUpgradePolicyState     `json:"rolling_upgrade_policy"`
	ScaleIn                                     []linuxvirtualmachinescaleset.ScaleInState                  `json:"scale_in"`
	Secret                                      []linuxvirtualmachinescaleset.SecretState                   `json:"secret"`
	SourceImageReference                        []linuxvirtualmachinescaleset.SourceImageReferenceState     `json:"source_image_reference"`
	SpotRestore                                 []linuxvirtualmachinescaleset.SpotRestoreState              `json:"spot_restore"`
	TerminateNotification                       []linuxvirtualmachinescaleset.TerminateNotificationState    `json:"terminate_notification"`
	TerminationNotification                     []linuxvirtualmachinescaleset.TerminationNotificationState  `json:"termination_notification"`
	Timeouts                                    *linuxvirtualmachinescaleset.TimeoutsState                  `json:"timeouts"`
}
