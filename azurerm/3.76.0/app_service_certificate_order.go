// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	"encoding/json"
	"fmt"
	appservicecertificateorder "github.com/golingon/terraproviders/azurerm/3.76.0/appservicecertificateorder"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

// NewAppServiceCertificateOrder creates a new instance of [AppServiceCertificateOrder].
func NewAppServiceCertificateOrder(name string, args AppServiceCertificateOrderArgs) *AppServiceCertificateOrder {
	return &AppServiceCertificateOrder{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*AppServiceCertificateOrder)(nil)

// AppServiceCertificateOrder represents the Terraform resource azurerm_app_service_certificate_order.
type AppServiceCertificateOrder struct {
	Name      string
	Args      AppServiceCertificateOrderArgs
	state     *appServiceCertificateOrderState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [AppServiceCertificateOrder].
func (asco *AppServiceCertificateOrder) Type() string {
	return "azurerm_app_service_certificate_order"
}

// LocalName returns the local name for [AppServiceCertificateOrder].
func (asco *AppServiceCertificateOrder) LocalName() string {
	return asco.Name
}

// Configuration returns the configuration (args) for [AppServiceCertificateOrder].
func (asco *AppServiceCertificateOrder) Configuration() interface{} {
	return asco.Args
}

// DependOn is used for other resources to depend on [AppServiceCertificateOrder].
func (asco *AppServiceCertificateOrder) DependOn() terra.Reference {
	return terra.ReferenceResource(asco)
}

// Dependencies returns the list of resources [AppServiceCertificateOrder] depends_on.
func (asco *AppServiceCertificateOrder) Dependencies() terra.Dependencies {
	return asco.DependsOn
}

// LifecycleManagement returns the lifecycle block for [AppServiceCertificateOrder].
func (asco *AppServiceCertificateOrder) LifecycleManagement() *terra.Lifecycle {
	return asco.Lifecycle
}

// Attributes returns the attributes for [AppServiceCertificateOrder].
func (asco *AppServiceCertificateOrder) Attributes() appServiceCertificateOrderAttributes {
	return appServiceCertificateOrderAttributes{ref: terra.ReferenceResource(asco)}
}

// ImportState imports the given attribute values into [AppServiceCertificateOrder]'s state.
func (asco *AppServiceCertificateOrder) ImportState(av io.Reader) error {
	asco.state = &appServiceCertificateOrderState{}
	if err := json.NewDecoder(av).Decode(asco.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", asco.Type(), asco.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [AppServiceCertificateOrder] has state.
func (asco *AppServiceCertificateOrder) State() (*appServiceCertificateOrderState, bool) {
	return asco.state, asco.state != nil
}

// StateMust returns the state for [AppServiceCertificateOrder]. Panics if the state is nil.
func (asco *AppServiceCertificateOrder) StateMust() *appServiceCertificateOrderState {
	if asco.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", asco.Type(), asco.LocalName()))
	}
	return asco.state
}

// AppServiceCertificateOrderArgs contains the configurations for azurerm_app_service_certificate_order.
type AppServiceCertificateOrderArgs struct {
	// AutoRenew: bool, optional
	AutoRenew terra.BoolValue `hcl:"auto_renew,attr"`
	// Csr: string, optional
	Csr terra.StringValue `hcl:"csr,attr"`
	// DistinguishedName: string, optional
	DistinguishedName terra.StringValue `hcl:"distinguished_name,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// KeySize: number, optional
	KeySize terra.NumberValue `hcl:"key_size,attr"`
	// Location: string, required
	Location terra.StringValue `hcl:"location,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// ProductType: string, optional
	ProductType terra.StringValue `hcl:"product_type,attr"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// ValidityInYears: number, optional
	ValidityInYears terra.NumberValue `hcl:"validity_in_years,attr"`
	// Certificates: min=0
	Certificates []appservicecertificateorder.Certificates `hcl:"certificates,block" validate:"min=0"`
	// Timeouts: optional
	Timeouts *appservicecertificateorder.Timeouts `hcl:"timeouts,block"`
}
type appServiceCertificateOrderAttributes struct {
	ref terra.Reference
}

// AppServiceCertificateNotRenewableReasons returns a reference to field app_service_certificate_not_renewable_reasons of azurerm_app_service_certificate_order.
func (asco appServiceCertificateOrderAttributes) AppServiceCertificateNotRenewableReasons() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](asco.ref.Append("app_service_certificate_not_renewable_reasons"))
}

// AutoRenew returns a reference to field auto_renew of azurerm_app_service_certificate_order.
func (asco appServiceCertificateOrderAttributes) AutoRenew() terra.BoolValue {
	return terra.ReferenceAsBool(asco.ref.Append("auto_renew"))
}

// Csr returns a reference to field csr of azurerm_app_service_certificate_order.
func (asco appServiceCertificateOrderAttributes) Csr() terra.StringValue {
	return terra.ReferenceAsString(asco.ref.Append("csr"))
}

// DistinguishedName returns a reference to field distinguished_name of azurerm_app_service_certificate_order.
func (asco appServiceCertificateOrderAttributes) DistinguishedName() terra.StringValue {
	return terra.ReferenceAsString(asco.ref.Append("distinguished_name"))
}

// DomainVerificationToken returns a reference to field domain_verification_token of azurerm_app_service_certificate_order.
func (asco appServiceCertificateOrderAttributes) DomainVerificationToken() terra.StringValue {
	return terra.ReferenceAsString(asco.ref.Append("domain_verification_token"))
}

// ExpirationTime returns a reference to field expiration_time of azurerm_app_service_certificate_order.
func (asco appServiceCertificateOrderAttributes) ExpirationTime() terra.StringValue {
	return terra.ReferenceAsString(asco.ref.Append("expiration_time"))
}

// Id returns a reference to field id of azurerm_app_service_certificate_order.
func (asco appServiceCertificateOrderAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(asco.ref.Append("id"))
}

// IntermediateThumbprint returns a reference to field intermediate_thumbprint of azurerm_app_service_certificate_order.
func (asco appServiceCertificateOrderAttributes) IntermediateThumbprint() terra.StringValue {
	return terra.ReferenceAsString(asco.ref.Append("intermediate_thumbprint"))
}

// IsPrivateKeyExternal returns a reference to field is_private_key_external of azurerm_app_service_certificate_order.
func (asco appServiceCertificateOrderAttributes) IsPrivateKeyExternal() terra.BoolValue {
	return terra.ReferenceAsBool(asco.ref.Append("is_private_key_external"))
}

// KeySize returns a reference to field key_size of azurerm_app_service_certificate_order.
func (asco appServiceCertificateOrderAttributes) KeySize() terra.NumberValue {
	return terra.ReferenceAsNumber(asco.ref.Append("key_size"))
}

// Location returns a reference to field location of azurerm_app_service_certificate_order.
func (asco appServiceCertificateOrderAttributes) Location() terra.StringValue {
	return terra.ReferenceAsString(asco.ref.Append("location"))
}

// Name returns a reference to field name of azurerm_app_service_certificate_order.
func (asco appServiceCertificateOrderAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(asco.ref.Append("name"))
}

// ProductType returns a reference to field product_type of azurerm_app_service_certificate_order.
func (asco appServiceCertificateOrderAttributes) ProductType() terra.StringValue {
	return terra.ReferenceAsString(asco.ref.Append("product_type"))
}

// ResourceGroupName returns a reference to field resource_group_name of azurerm_app_service_certificate_order.
func (asco appServiceCertificateOrderAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceAsString(asco.ref.Append("resource_group_name"))
}

// RootThumbprint returns a reference to field root_thumbprint of azurerm_app_service_certificate_order.
func (asco appServiceCertificateOrderAttributes) RootThumbprint() terra.StringValue {
	return terra.ReferenceAsString(asco.ref.Append("root_thumbprint"))
}

// SignedCertificateThumbprint returns a reference to field signed_certificate_thumbprint of azurerm_app_service_certificate_order.
func (asco appServiceCertificateOrderAttributes) SignedCertificateThumbprint() terra.StringValue {
	return terra.ReferenceAsString(asco.ref.Append("signed_certificate_thumbprint"))
}

// Status returns a reference to field status of azurerm_app_service_certificate_order.
func (asco appServiceCertificateOrderAttributes) Status() terra.StringValue {
	return terra.ReferenceAsString(asco.ref.Append("status"))
}

// Tags returns a reference to field tags of azurerm_app_service_certificate_order.
func (asco appServiceCertificateOrderAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](asco.ref.Append("tags"))
}

// ValidityInYears returns a reference to field validity_in_years of azurerm_app_service_certificate_order.
func (asco appServiceCertificateOrderAttributes) ValidityInYears() terra.NumberValue {
	return terra.ReferenceAsNumber(asco.ref.Append("validity_in_years"))
}

func (asco appServiceCertificateOrderAttributes) Certificates() terra.ListValue[appservicecertificateorder.CertificatesAttributes] {
	return terra.ReferenceAsList[appservicecertificateorder.CertificatesAttributes](asco.ref.Append("certificates"))
}

func (asco appServiceCertificateOrderAttributes) Timeouts() appservicecertificateorder.TimeoutsAttributes {
	return terra.ReferenceAsSingle[appservicecertificateorder.TimeoutsAttributes](asco.ref.Append("timeouts"))
}

type appServiceCertificateOrderState struct {
	AppServiceCertificateNotRenewableReasons []string                                       `json:"app_service_certificate_not_renewable_reasons"`
	AutoRenew                                bool                                           `json:"auto_renew"`
	Csr                                      string                                         `json:"csr"`
	DistinguishedName                        string                                         `json:"distinguished_name"`
	DomainVerificationToken                  string                                         `json:"domain_verification_token"`
	ExpirationTime                           string                                         `json:"expiration_time"`
	Id                                       string                                         `json:"id"`
	IntermediateThumbprint                   string                                         `json:"intermediate_thumbprint"`
	IsPrivateKeyExternal                     bool                                           `json:"is_private_key_external"`
	KeySize                                  float64                                        `json:"key_size"`
	Location                                 string                                         `json:"location"`
	Name                                     string                                         `json:"name"`
	ProductType                              string                                         `json:"product_type"`
	ResourceGroupName                        string                                         `json:"resource_group_name"`
	RootThumbprint                           string                                         `json:"root_thumbprint"`
	SignedCertificateThumbprint              string                                         `json:"signed_certificate_thumbprint"`
	Status                                   string                                         `json:"status"`
	Tags                                     map[string]string                              `json:"tags"`
	ValidityInYears                          float64                                        `json:"validity_in_years"`
	Certificates                             []appservicecertificateorder.CertificatesState `json:"certificates"`
	Timeouts                                 *appservicecertificateorder.TimeoutsState      `json:"timeouts"`
}
