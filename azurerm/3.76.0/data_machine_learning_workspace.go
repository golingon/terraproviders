// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	datamachinelearningworkspace "github.com/golingon/terraproviders/azurerm/3.76.0/datamachinelearningworkspace"
	"github.com/volvo-cars/lingon/pkg/terra"
)

// NewDataMachineLearningWorkspace creates a new instance of [DataMachineLearningWorkspace].
func NewDataMachineLearningWorkspace(name string, args DataMachineLearningWorkspaceArgs) *DataMachineLearningWorkspace {
	return &DataMachineLearningWorkspace{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataMachineLearningWorkspace)(nil)

// DataMachineLearningWorkspace represents the Terraform data resource azurerm_machine_learning_workspace.
type DataMachineLearningWorkspace struct {
	Name string
	Args DataMachineLearningWorkspaceArgs
}

// DataSource returns the Terraform object type for [DataMachineLearningWorkspace].
func (mlw *DataMachineLearningWorkspace) DataSource() string {
	return "azurerm_machine_learning_workspace"
}

// LocalName returns the local name for [DataMachineLearningWorkspace].
func (mlw *DataMachineLearningWorkspace) LocalName() string {
	return mlw.Name
}

// Configuration returns the configuration (args) for [DataMachineLearningWorkspace].
func (mlw *DataMachineLearningWorkspace) Configuration() interface{} {
	return mlw.Args
}

// Attributes returns the attributes for [DataMachineLearningWorkspace].
func (mlw *DataMachineLearningWorkspace) Attributes() dataMachineLearningWorkspaceAttributes {
	return dataMachineLearningWorkspaceAttributes{ref: terra.ReferenceDataResource(mlw)}
}

// DataMachineLearningWorkspaceArgs contains the configurations for azurerm_machine_learning_workspace.
type DataMachineLearningWorkspaceArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// Identity: min=0
	Identity []datamachinelearningworkspace.Identity `hcl:"identity,block" validate:"min=0"`
	// Timeouts: optional
	Timeouts *datamachinelearningworkspace.Timeouts `hcl:"timeouts,block"`
}
type dataMachineLearningWorkspaceAttributes struct {
	ref terra.Reference
}

// Id returns a reference to field id of azurerm_machine_learning_workspace.
func (mlw dataMachineLearningWorkspaceAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(mlw.ref.Append("id"))
}

// Location returns a reference to field location of azurerm_machine_learning_workspace.
func (mlw dataMachineLearningWorkspaceAttributes) Location() terra.StringValue {
	return terra.ReferenceAsString(mlw.ref.Append("location"))
}

// Name returns a reference to field name of azurerm_machine_learning_workspace.
func (mlw dataMachineLearningWorkspaceAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(mlw.ref.Append("name"))
}

// ResourceGroupName returns a reference to field resource_group_name of azurerm_machine_learning_workspace.
func (mlw dataMachineLearningWorkspaceAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceAsString(mlw.ref.Append("resource_group_name"))
}

// Tags returns a reference to field tags of azurerm_machine_learning_workspace.
func (mlw dataMachineLearningWorkspaceAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](mlw.ref.Append("tags"))
}

func (mlw dataMachineLearningWorkspaceAttributes) Identity() terra.ListValue[datamachinelearningworkspace.IdentityAttributes] {
	return terra.ReferenceAsList[datamachinelearningworkspace.IdentityAttributes](mlw.ref.Append("identity"))
}

func (mlw dataMachineLearningWorkspaceAttributes) Timeouts() datamachinelearningworkspace.TimeoutsAttributes {
	return terra.ReferenceAsSingle[datamachinelearningworkspace.TimeoutsAttributes](mlw.ref.Append("timeouts"))
}
