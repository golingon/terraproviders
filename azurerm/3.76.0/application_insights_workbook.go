// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	"encoding/json"
	"fmt"
	applicationinsightsworkbook "github.com/golingon/terraproviders/azurerm/3.76.0/applicationinsightsworkbook"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

// NewApplicationInsightsWorkbook creates a new instance of [ApplicationInsightsWorkbook].
func NewApplicationInsightsWorkbook(name string, args ApplicationInsightsWorkbookArgs) *ApplicationInsightsWorkbook {
	return &ApplicationInsightsWorkbook{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*ApplicationInsightsWorkbook)(nil)

// ApplicationInsightsWorkbook represents the Terraform resource azurerm_application_insights_workbook.
type ApplicationInsightsWorkbook struct {
	Name      string
	Args      ApplicationInsightsWorkbookArgs
	state     *applicationInsightsWorkbookState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [ApplicationInsightsWorkbook].
func (aiw *ApplicationInsightsWorkbook) Type() string {
	return "azurerm_application_insights_workbook"
}

// LocalName returns the local name for [ApplicationInsightsWorkbook].
func (aiw *ApplicationInsightsWorkbook) LocalName() string {
	return aiw.Name
}

// Configuration returns the configuration (args) for [ApplicationInsightsWorkbook].
func (aiw *ApplicationInsightsWorkbook) Configuration() interface{} {
	return aiw.Args
}

// DependOn is used for other resources to depend on [ApplicationInsightsWorkbook].
func (aiw *ApplicationInsightsWorkbook) DependOn() terra.Reference {
	return terra.ReferenceResource(aiw)
}

// Dependencies returns the list of resources [ApplicationInsightsWorkbook] depends_on.
func (aiw *ApplicationInsightsWorkbook) Dependencies() terra.Dependencies {
	return aiw.DependsOn
}

// LifecycleManagement returns the lifecycle block for [ApplicationInsightsWorkbook].
func (aiw *ApplicationInsightsWorkbook) LifecycleManagement() *terra.Lifecycle {
	return aiw.Lifecycle
}

// Attributes returns the attributes for [ApplicationInsightsWorkbook].
func (aiw *ApplicationInsightsWorkbook) Attributes() applicationInsightsWorkbookAttributes {
	return applicationInsightsWorkbookAttributes{ref: terra.ReferenceResource(aiw)}
}

// ImportState imports the given attribute values into [ApplicationInsightsWorkbook]'s state.
func (aiw *ApplicationInsightsWorkbook) ImportState(av io.Reader) error {
	aiw.state = &applicationInsightsWorkbookState{}
	if err := json.NewDecoder(av).Decode(aiw.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", aiw.Type(), aiw.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [ApplicationInsightsWorkbook] has state.
func (aiw *ApplicationInsightsWorkbook) State() (*applicationInsightsWorkbookState, bool) {
	return aiw.state, aiw.state != nil
}

// StateMust returns the state for [ApplicationInsightsWorkbook]. Panics if the state is nil.
func (aiw *ApplicationInsightsWorkbook) StateMust() *applicationInsightsWorkbookState {
	if aiw.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", aiw.Type(), aiw.LocalName()))
	}
	return aiw.state
}

// ApplicationInsightsWorkbookArgs contains the configurations for azurerm_application_insights_workbook.
type ApplicationInsightsWorkbookArgs struct {
	// Category: string, optional
	Category terra.StringValue `hcl:"category,attr"`
	// DataJson: string, required
	DataJson terra.StringValue `hcl:"data_json,attr" validate:"required"`
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// DisplayName: string, required
	DisplayName terra.StringValue `hcl:"display_name,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Location: string, required
	Location terra.StringValue `hcl:"location,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// SourceId: string, optional
	SourceId terra.StringValue `hcl:"source_id,attr"`
	// StorageContainerId: string, optional
	StorageContainerId terra.StringValue `hcl:"storage_container_id,attr"`
	// Tags: map of string, optional
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// Identity: optional
	Identity *applicationinsightsworkbook.Identity `hcl:"identity,block"`
	// Timeouts: optional
	Timeouts *applicationinsightsworkbook.Timeouts `hcl:"timeouts,block"`
}
type applicationInsightsWorkbookAttributes struct {
	ref terra.Reference
}

// Category returns a reference to field category of azurerm_application_insights_workbook.
func (aiw applicationInsightsWorkbookAttributes) Category() terra.StringValue {
	return terra.ReferenceAsString(aiw.ref.Append("category"))
}

// DataJson returns a reference to field data_json of azurerm_application_insights_workbook.
func (aiw applicationInsightsWorkbookAttributes) DataJson() terra.StringValue {
	return terra.ReferenceAsString(aiw.ref.Append("data_json"))
}

// Description returns a reference to field description of azurerm_application_insights_workbook.
func (aiw applicationInsightsWorkbookAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(aiw.ref.Append("description"))
}

// DisplayName returns a reference to field display_name of azurerm_application_insights_workbook.
func (aiw applicationInsightsWorkbookAttributes) DisplayName() terra.StringValue {
	return terra.ReferenceAsString(aiw.ref.Append("display_name"))
}

// Id returns a reference to field id of azurerm_application_insights_workbook.
func (aiw applicationInsightsWorkbookAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aiw.ref.Append("id"))
}

// Location returns a reference to field location of azurerm_application_insights_workbook.
func (aiw applicationInsightsWorkbookAttributes) Location() terra.StringValue {
	return terra.ReferenceAsString(aiw.ref.Append("location"))
}

// Name returns a reference to field name of azurerm_application_insights_workbook.
func (aiw applicationInsightsWorkbookAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(aiw.ref.Append("name"))
}

// ResourceGroupName returns a reference to field resource_group_name of azurerm_application_insights_workbook.
func (aiw applicationInsightsWorkbookAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceAsString(aiw.ref.Append("resource_group_name"))
}

// SourceId returns a reference to field source_id of azurerm_application_insights_workbook.
func (aiw applicationInsightsWorkbookAttributes) SourceId() terra.StringValue {
	return terra.ReferenceAsString(aiw.ref.Append("source_id"))
}

// StorageContainerId returns a reference to field storage_container_id of azurerm_application_insights_workbook.
func (aiw applicationInsightsWorkbookAttributes) StorageContainerId() terra.StringValue {
	return terra.ReferenceAsString(aiw.ref.Append("storage_container_id"))
}

// Tags returns a reference to field tags of azurerm_application_insights_workbook.
func (aiw applicationInsightsWorkbookAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](aiw.ref.Append("tags"))
}

func (aiw applicationInsightsWorkbookAttributes) Identity() terra.ListValue[applicationinsightsworkbook.IdentityAttributes] {
	return terra.ReferenceAsList[applicationinsightsworkbook.IdentityAttributes](aiw.ref.Append("identity"))
}

func (aiw applicationInsightsWorkbookAttributes) Timeouts() applicationinsightsworkbook.TimeoutsAttributes {
	return terra.ReferenceAsSingle[applicationinsightsworkbook.TimeoutsAttributes](aiw.ref.Append("timeouts"))
}

type applicationInsightsWorkbookState struct {
	Category           string                                      `json:"category"`
	DataJson           string                                      `json:"data_json"`
	Description        string                                      `json:"description"`
	DisplayName        string                                      `json:"display_name"`
	Id                 string                                      `json:"id"`
	Location           string                                      `json:"location"`
	Name               string                                      `json:"name"`
	ResourceGroupName  string                                      `json:"resource_group_name"`
	SourceId           string                                      `json:"source_id"`
	StorageContainerId string                                      `json:"storage_container_id"`
	Tags               map[string]string                           `json:"tags"`
	Identity           []applicationinsightsworkbook.IdentityState `json:"identity"`
	Timeouts           *applicationinsightsworkbook.TimeoutsState  `json:"timeouts"`
}
