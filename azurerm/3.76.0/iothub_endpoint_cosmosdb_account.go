// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	"encoding/json"
	"fmt"
	iothubendpointcosmosdbaccount "github.com/golingon/terraproviders/azurerm/3.76.0/iothubendpointcosmosdbaccount"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

// NewIothubEndpointCosmosdbAccount creates a new instance of [IothubEndpointCosmosdbAccount].
func NewIothubEndpointCosmosdbAccount(name string, args IothubEndpointCosmosdbAccountArgs) *IothubEndpointCosmosdbAccount {
	return &IothubEndpointCosmosdbAccount{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*IothubEndpointCosmosdbAccount)(nil)

// IothubEndpointCosmosdbAccount represents the Terraform resource azurerm_iothub_endpoint_cosmosdb_account.
type IothubEndpointCosmosdbAccount struct {
	Name      string
	Args      IothubEndpointCosmosdbAccountArgs
	state     *iothubEndpointCosmosdbAccountState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [IothubEndpointCosmosdbAccount].
func (ieca *IothubEndpointCosmosdbAccount) Type() string {
	return "azurerm_iothub_endpoint_cosmosdb_account"
}

// LocalName returns the local name for [IothubEndpointCosmosdbAccount].
func (ieca *IothubEndpointCosmosdbAccount) LocalName() string {
	return ieca.Name
}

// Configuration returns the configuration (args) for [IothubEndpointCosmosdbAccount].
func (ieca *IothubEndpointCosmosdbAccount) Configuration() interface{} {
	return ieca.Args
}

// DependOn is used for other resources to depend on [IothubEndpointCosmosdbAccount].
func (ieca *IothubEndpointCosmosdbAccount) DependOn() terra.Reference {
	return terra.ReferenceResource(ieca)
}

// Dependencies returns the list of resources [IothubEndpointCosmosdbAccount] depends_on.
func (ieca *IothubEndpointCosmosdbAccount) Dependencies() terra.Dependencies {
	return ieca.DependsOn
}

// LifecycleManagement returns the lifecycle block for [IothubEndpointCosmosdbAccount].
func (ieca *IothubEndpointCosmosdbAccount) LifecycleManagement() *terra.Lifecycle {
	return ieca.Lifecycle
}

// Attributes returns the attributes for [IothubEndpointCosmosdbAccount].
func (ieca *IothubEndpointCosmosdbAccount) Attributes() iothubEndpointCosmosdbAccountAttributes {
	return iothubEndpointCosmosdbAccountAttributes{ref: terra.ReferenceResource(ieca)}
}

// ImportState imports the given attribute values into [IothubEndpointCosmosdbAccount]'s state.
func (ieca *IothubEndpointCosmosdbAccount) ImportState(av io.Reader) error {
	ieca.state = &iothubEndpointCosmosdbAccountState{}
	if err := json.NewDecoder(av).Decode(ieca.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", ieca.Type(), ieca.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [IothubEndpointCosmosdbAccount] has state.
func (ieca *IothubEndpointCosmosdbAccount) State() (*iothubEndpointCosmosdbAccountState, bool) {
	return ieca.state, ieca.state != nil
}

// StateMust returns the state for [IothubEndpointCosmosdbAccount]. Panics if the state is nil.
func (ieca *IothubEndpointCosmosdbAccount) StateMust() *iothubEndpointCosmosdbAccountState {
	if ieca.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", ieca.Type(), ieca.LocalName()))
	}
	return ieca.state
}

// IothubEndpointCosmosdbAccountArgs contains the configurations for azurerm_iothub_endpoint_cosmosdb_account.
type IothubEndpointCosmosdbAccountArgs struct {
	// AuthenticationType: string, optional
	AuthenticationType terra.StringValue `hcl:"authentication_type,attr"`
	// ContainerName: string, required
	ContainerName terra.StringValue `hcl:"container_name,attr" validate:"required"`
	// DatabaseName: string, required
	DatabaseName terra.StringValue `hcl:"database_name,attr" validate:"required"`
	// EndpointUri: string, required
	EndpointUri terra.StringValue `hcl:"endpoint_uri,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// IdentityId: string, optional
	IdentityId terra.StringValue `hcl:"identity_id,attr"`
	// IothubId: string, required
	IothubId terra.StringValue `hcl:"iothub_id,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// PartitionKeyName: string, optional
	PartitionKeyName terra.StringValue `hcl:"partition_key_name,attr"`
	// PartitionKeyTemplate: string, optional
	PartitionKeyTemplate terra.StringValue `hcl:"partition_key_template,attr"`
	// PrimaryKey: string, optional
	PrimaryKey terra.StringValue `hcl:"primary_key,attr"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// SecondaryKey: string, optional
	SecondaryKey terra.StringValue `hcl:"secondary_key,attr"`
	// Timeouts: optional
	Timeouts *iothubendpointcosmosdbaccount.Timeouts `hcl:"timeouts,block"`
}
type iothubEndpointCosmosdbAccountAttributes struct {
	ref terra.Reference
}

// AuthenticationType returns a reference to field authentication_type of azurerm_iothub_endpoint_cosmosdb_account.
func (ieca iothubEndpointCosmosdbAccountAttributes) AuthenticationType() terra.StringValue {
	return terra.ReferenceAsString(ieca.ref.Append("authentication_type"))
}

// ContainerName returns a reference to field container_name of azurerm_iothub_endpoint_cosmosdb_account.
func (ieca iothubEndpointCosmosdbAccountAttributes) ContainerName() terra.StringValue {
	return terra.ReferenceAsString(ieca.ref.Append("container_name"))
}

// DatabaseName returns a reference to field database_name of azurerm_iothub_endpoint_cosmosdb_account.
func (ieca iothubEndpointCosmosdbAccountAttributes) DatabaseName() terra.StringValue {
	return terra.ReferenceAsString(ieca.ref.Append("database_name"))
}

// EndpointUri returns a reference to field endpoint_uri of azurerm_iothub_endpoint_cosmosdb_account.
func (ieca iothubEndpointCosmosdbAccountAttributes) EndpointUri() terra.StringValue {
	return terra.ReferenceAsString(ieca.ref.Append("endpoint_uri"))
}

// Id returns a reference to field id of azurerm_iothub_endpoint_cosmosdb_account.
func (ieca iothubEndpointCosmosdbAccountAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(ieca.ref.Append("id"))
}

// IdentityId returns a reference to field identity_id of azurerm_iothub_endpoint_cosmosdb_account.
func (ieca iothubEndpointCosmosdbAccountAttributes) IdentityId() terra.StringValue {
	return terra.ReferenceAsString(ieca.ref.Append("identity_id"))
}

// IothubId returns a reference to field iothub_id of azurerm_iothub_endpoint_cosmosdb_account.
func (ieca iothubEndpointCosmosdbAccountAttributes) IothubId() terra.StringValue {
	return terra.ReferenceAsString(ieca.ref.Append("iothub_id"))
}

// Name returns a reference to field name of azurerm_iothub_endpoint_cosmosdb_account.
func (ieca iothubEndpointCosmosdbAccountAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(ieca.ref.Append("name"))
}

// PartitionKeyName returns a reference to field partition_key_name of azurerm_iothub_endpoint_cosmosdb_account.
func (ieca iothubEndpointCosmosdbAccountAttributes) PartitionKeyName() terra.StringValue {
	return terra.ReferenceAsString(ieca.ref.Append("partition_key_name"))
}

// PartitionKeyTemplate returns a reference to field partition_key_template of azurerm_iothub_endpoint_cosmosdb_account.
func (ieca iothubEndpointCosmosdbAccountAttributes) PartitionKeyTemplate() terra.StringValue {
	return terra.ReferenceAsString(ieca.ref.Append("partition_key_template"))
}

// PrimaryKey returns a reference to field primary_key of azurerm_iothub_endpoint_cosmosdb_account.
func (ieca iothubEndpointCosmosdbAccountAttributes) PrimaryKey() terra.StringValue {
	return terra.ReferenceAsString(ieca.ref.Append("primary_key"))
}

// ResourceGroupName returns a reference to field resource_group_name of azurerm_iothub_endpoint_cosmosdb_account.
func (ieca iothubEndpointCosmosdbAccountAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceAsString(ieca.ref.Append("resource_group_name"))
}

// SecondaryKey returns a reference to field secondary_key of azurerm_iothub_endpoint_cosmosdb_account.
func (ieca iothubEndpointCosmosdbAccountAttributes) SecondaryKey() terra.StringValue {
	return terra.ReferenceAsString(ieca.ref.Append("secondary_key"))
}

func (ieca iothubEndpointCosmosdbAccountAttributes) Timeouts() iothubendpointcosmosdbaccount.TimeoutsAttributes {
	return terra.ReferenceAsSingle[iothubendpointcosmosdbaccount.TimeoutsAttributes](ieca.ref.Append("timeouts"))
}

type iothubEndpointCosmosdbAccountState struct {
	AuthenticationType   string                                       `json:"authentication_type"`
	ContainerName        string                                       `json:"container_name"`
	DatabaseName         string                                       `json:"database_name"`
	EndpointUri          string                                       `json:"endpoint_uri"`
	Id                   string                                       `json:"id"`
	IdentityId           string                                       `json:"identity_id"`
	IothubId             string                                       `json:"iothub_id"`
	Name                 string                                       `json:"name"`
	PartitionKeyName     string                                       `json:"partition_key_name"`
	PartitionKeyTemplate string                                       `json:"partition_key_template"`
	PrimaryKey           string                                       `json:"primary_key"`
	ResourceGroupName    string                                       `json:"resource_group_name"`
	SecondaryKey         string                                       `json:"secondary_key"`
	Timeouts             *iothubendpointcosmosdbaccount.TimeoutsState `json:"timeouts"`
}
