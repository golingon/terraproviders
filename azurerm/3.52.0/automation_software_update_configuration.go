// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	"encoding/json"
	"fmt"
	automationsoftwareupdateconfiguration "github.com/golingon/terraproviders/azurerm/3.52.0/automationsoftwareupdateconfiguration"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

// NewAutomationSoftwareUpdateConfiguration creates a new instance of [AutomationSoftwareUpdateConfiguration].
func NewAutomationSoftwareUpdateConfiguration(name string, args AutomationSoftwareUpdateConfigurationArgs) *AutomationSoftwareUpdateConfiguration {
	return &AutomationSoftwareUpdateConfiguration{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*AutomationSoftwareUpdateConfiguration)(nil)

// AutomationSoftwareUpdateConfiguration represents the Terraform resource azurerm_automation_software_update_configuration.
type AutomationSoftwareUpdateConfiguration struct {
	Name      string
	Args      AutomationSoftwareUpdateConfigurationArgs
	state     *automationSoftwareUpdateConfigurationState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [AutomationSoftwareUpdateConfiguration].
func (asuc *AutomationSoftwareUpdateConfiguration) Type() string {
	return "azurerm_automation_software_update_configuration"
}

// LocalName returns the local name for [AutomationSoftwareUpdateConfiguration].
func (asuc *AutomationSoftwareUpdateConfiguration) LocalName() string {
	return asuc.Name
}

// Configuration returns the configuration (args) for [AutomationSoftwareUpdateConfiguration].
func (asuc *AutomationSoftwareUpdateConfiguration) Configuration() interface{} {
	return asuc.Args
}

// DependOn is used for other resources to depend on [AutomationSoftwareUpdateConfiguration].
func (asuc *AutomationSoftwareUpdateConfiguration) DependOn() terra.Reference {
	return terra.ReferenceResource(asuc)
}

// Dependencies returns the list of resources [AutomationSoftwareUpdateConfiguration] depends_on.
func (asuc *AutomationSoftwareUpdateConfiguration) Dependencies() terra.Dependencies {
	return asuc.DependsOn
}

// LifecycleManagement returns the lifecycle block for [AutomationSoftwareUpdateConfiguration].
func (asuc *AutomationSoftwareUpdateConfiguration) LifecycleManagement() *terra.Lifecycle {
	return asuc.Lifecycle
}

// Attributes returns the attributes for [AutomationSoftwareUpdateConfiguration].
func (asuc *AutomationSoftwareUpdateConfiguration) Attributes() automationSoftwareUpdateConfigurationAttributes {
	return automationSoftwareUpdateConfigurationAttributes{ref: terra.ReferenceResource(asuc)}
}

// ImportState imports the given attribute values into [AutomationSoftwareUpdateConfiguration]'s state.
func (asuc *AutomationSoftwareUpdateConfiguration) ImportState(av io.Reader) error {
	asuc.state = &automationSoftwareUpdateConfigurationState{}
	if err := json.NewDecoder(av).Decode(asuc.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", asuc.Type(), asuc.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [AutomationSoftwareUpdateConfiguration] has state.
func (asuc *AutomationSoftwareUpdateConfiguration) State() (*automationSoftwareUpdateConfigurationState, bool) {
	return asuc.state, asuc.state != nil
}

// StateMust returns the state for [AutomationSoftwareUpdateConfiguration]. Panics if the state is nil.
func (asuc *AutomationSoftwareUpdateConfiguration) StateMust() *automationSoftwareUpdateConfigurationState {
	if asuc.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", asuc.Type(), asuc.LocalName()))
	}
	return asuc.state
}

// AutomationSoftwareUpdateConfigurationArgs contains the configurations for azurerm_automation_software_update_configuration.
type AutomationSoftwareUpdateConfigurationArgs struct {
	// AutomationAccountId: string, required
	AutomationAccountId terra.StringValue `hcl:"automation_account_id,attr" validate:"required"`
	// Duration: string, optional
	Duration terra.StringValue `hcl:"duration,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// NonAzureComputerNames: list of string, optional
	NonAzureComputerNames terra.ListValue[terra.StringValue] `hcl:"non_azure_computer_names,attr"`
	// OperatingSystem: string, required
	OperatingSystem terra.StringValue `hcl:"operating_system,attr" validate:"required"`
	// VirtualMachineIds: list of string, optional
	VirtualMachineIds terra.ListValue[terra.StringValue] `hcl:"virtual_machine_ids,attr"`
	// Linux: min=0
	Linux []automationsoftwareupdateconfiguration.Linux `hcl:"linux,block" validate:"min=0"`
	// PostTask: min=0
	PostTask []automationsoftwareupdateconfiguration.PostTask `hcl:"post_task,block" validate:"min=0"`
	// PreTask: min=0
	PreTask []automationsoftwareupdateconfiguration.PreTask `hcl:"pre_task,block" validate:"min=0"`
	// Schedule: min=0
	Schedule []automationsoftwareupdateconfiguration.Schedule `hcl:"schedule,block" validate:"min=0"`
	// Target: optional
	Target *automationsoftwareupdateconfiguration.Target `hcl:"target,block"`
	// Timeouts: optional
	Timeouts *automationsoftwareupdateconfiguration.Timeouts `hcl:"timeouts,block"`
	// Windows: optional
	Windows *automationsoftwareupdateconfiguration.Windows `hcl:"windows,block"`
}
type automationSoftwareUpdateConfigurationAttributes struct {
	ref terra.Reference
}

// AutomationAccountId returns a reference to field automation_account_id of azurerm_automation_software_update_configuration.
func (asuc automationSoftwareUpdateConfigurationAttributes) AutomationAccountId() terra.StringValue {
	return terra.ReferenceAsString(asuc.ref.Append("automation_account_id"))
}

// Duration returns a reference to field duration of azurerm_automation_software_update_configuration.
func (asuc automationSoftwareUpdateConfigurationAttributes) Duration() terra.StringValue {
	return terra.ReferenceAsString(asuc.ref.Append("duration"))
}

// ErrorCode returns a reference to field error_code of azurerm_automation_software_update_configuration.
func (asuc automationSoftwareUpdateConfigurationAttributes) ErrorCode() terra.StringValue {
	return terra.ReferenceAsString(asuc.ref.Append("error_code"))
}

// ErrorMeesage returns a reference to field error_meesage of azurerm_automation_software_update_configuration.
func (asuc automationSoftwareUpdateConfigurationAttributes) ErrorMeesage() terra.StringValue {
	return terra.ReferenceAsString(asuc.ref.Append("error_meesage"))
}

// ErrorMessage returns a reference to field error_message of azurerm_automation_software_update_configuration.
func (asuc automationSoftwareUpdateConfigurationAttributes) ErrorMessage() terra.StringValue {
	return terra.ReferenceAsString(asuc.ref.Append("error_message"))
}

// Id returns a reference to field id of azurerm_automation_software_update_configuration.
func (asuc automationSoftwareUpdateConfigurationAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(asuc.ref.Append("id"))
}

// Name returns a reference to field name of azurerm_automation_software_update_configuration.
func (asuc automationSoftwareUpdateConfigurationAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(asuc.ref.Append("name"))
}

// NonAzureComputerNames returns a reference to field non_azure_computer_names of azurerm_automation_software_update_configuration.
func (asuc automationSoftwareUpdateConfigurationAttributes) NonAzureComputerNames() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](asuc.ref.Append("non_azure_computer_names"))
}

// OperatingSystem returns a reference to field operating_system of azurerm_automation_software_update_configuration.
func (asuc automationSoftwareUpdateConfigurationAttributes) OperatingSystem() terra.StringValue {
	return terra.ReferenceAsString(asuc.ref.Append("operating_system"))
}

// VirtualMachineIds returns a reference to field virtual_machine_ids of azurerm_automation_software_update_configuration.
func (asuc automationSoftwareUpdateConfigurationAttributes) VirtualMachineIds() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](asuc.ref.Append("virtual_machine_ids"))
}

func (asuc automationSoftwareUpdateConfigurationAttributes) Linux() terra.ListValue[automationsoftwareupdateconfiguration.LinuxAttributes] {
	return terra.ReferenceAsList[automationsoftwareupdateconfiguration.LinuxAttributes](asuc.ref.Append("linux"))
}

func (asuc automationSoftwareUpdateConfigurationAttributes) PostTask() terra.ListValue[automationsoftwareupdateconfiguration.PostTaskAttributes] {
	return terra.ReferenceAsList[automationsoftwareupdateconfiguration.PostTaskAttributes](asuc.ref.Append("post_task"))
}

func (asuc automationSoftwareUpdateConfigurationAttributes) PreTask() terra.ListValue[automationsoftwareupdateconfiguration.PreTaskAttributes] {
	return terra.ReferenceAsList[automationsoftwareupdateconfiguration.PreTaskAttributes](asuc.ref.Append("pre_task"))
}

func (asuc automationSoftwareUpdateConfigurationAttributes) Schedule() terra.ListValue[automationsoftwareupdateconfiguration.ScheduleAttributes] {
	return terra.ReferenceAsList[automationsoftwareupdateconfiguration.ScheduleAttributes](asuc.ref.Append("schedule"))
}

func (asuc automationSoftwareUpdateConfigurationAttributes) Target() terra.ListValue[automationsoftwareupdateconfiguration.TargetAttributes] {
	return terra.ReferenceAsList[automationsoftwareupdateconfiguration.TargetAttributes](asuc.ref.Append("target"))
}

func (asuc automationSoftwareUpdateConfigurationAttributes) Timeouts() automationsoftwareupdateconfiguration.TimeoutsAttributes {
	return terra.ReferenceAsSingle[automationsoftwareupdateconfiguration.TimeoutsAttributes](asuc.ref.Append("timeouts"))
}

func (asuc automationSoftwareUpdateConfigurationAttributes) Windows() terra.ListValue[automationsoftwareupdateconfiguration.WindowsAttributes] {
	return terra.ReferenceAsList[automationsoftwareupdateconfiguration.WindowsAttributes](asuc.ref.Append("windows"))
}

type automationSoftwareUpdateConfigurationState struct {
	AutomationAccountId   string                                                `json:"automation_account_id"`
	Duration              string                                                `json:"duration"`
	ErrorCode             string                                                `json:"error_code"`
	ErrorMeesage          string                                                `json:"error_meesage"`
	ErrorMessage          string                                                `json:"error_message"`
	Id                    string                                                `json:"id"`
	Name                  string                                                `json:"name"`
	NonAzureComputerNames []string                                              `json:"non_azure_computer_names"`
	OperatingSystem       string                                                `json:"operating_system"`
	VirtualMachineIds     []string                                              `json:"virtual_machine_ids"`
	Linux                 []automationsoftwareupdateconfiguration.LinuxState    `json:"linux"`
	PostTask              []automationsoftwareupdateconfiguration.PostTaskState `json:"post_task"`
	PreTask               []automationsoftwareupdateconfiguration.PreTaskState  `json:"pre_task"`
	Schedule              []automationsoftwareupdateconfiguration.ScheduleState `json:"schedule"`
	Target                []automationsoftwareupdateconfiguration.TargetState   `json:"target"`
	Timeouts              *automationsoftwareupdateconfiguration.TimeoutsState  `json:"timeouts"`
	Windows               []automationsoftwareupdateconfiguration.WindowsState  `json:"windows"`
}
