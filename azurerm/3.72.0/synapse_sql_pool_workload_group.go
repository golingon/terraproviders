// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	"encoding/json"
	"fmt"
	synapsesqlpoolworkloadgroup "github.com/golingon/terraproviders/azurerm/3.72.0/synapsesqlpoolworkloadgroup"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

// NewSynapseSqlPoolWorkloadGroup creates a new instance of [SynapseSqlPoolWorkloadGroup].
func NewSynapseSqlPoolWorkloadGroup(name string, args SynapseSqlPoolWorkloadGroupArgs) *SynapseSqlPoolWorkloadGroup {
	return &SynapseSqlPoolWorkloadGroup{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*SynapseSqlPoolWorkloadGroup)(nil)

// SynapseSqlPoolWorkloadGroup represents the Terraform resource azurerm_synapse_sql_pool_workload_group.
type SynapseSqlPoolWorkloadGroup struct {
	Name      string
	Args      SynapseSqlPoolWorkloadGroupArgs
	state     *synapseSqlPoolWorkloadGroupState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [SynapseSqlPoolWorkloadGroup].
func (sspwg *SynapseSqlPoolWorkloadGroup) Type() string {
	return "azurerm_synapse_sql_pool_workload_group"
}

// LocalName returns the local name for [SynapseSqlPoolWorkloadGroup].
func (sspwg *SynapseSqlPoolWorkloadGroup) LocalName() string {
	return sspwg.Name
}

// Configuration returns the configuration (args) for [SynapseSqlPoolWorkloadGroup].
func (sspwg *SynapseSqlPoolWorkloadGroup) Configuration() interface{} {
	return sspwg.Args
}

// DependOn is used for other resources to depend on [SynapseSqlPoolWorkloadGroup].
func (sspwg *SynapseSqlPoolWorkloadGroup) DependOn() terra.Reference {
	return terra.ReferenceResource(sspwg)
}

// Dependencies returns the list of resources [SynapseSqlPoolWorkloadGroup] depends_on.
func (sspwg *SynapseSqlPoolWorkloadGroup) Dependencies() terra.Dependencies {
	return sspwg.DependsOn
}

// LifecycleManagement returns the lifecycle block for [SynapseSqlPoolWorkloadGroup].
func (sspwg *SynapseSqlPoolWorkloadGroup) LifecycleManagement() *terra.Lifecycle {
	return sspwg.Lifecycle
}

// Attributes returns the attributes for [SynapseSqlPoolWorkloadGroup].
func (sspwg *SynapseSqlPoolWorkloadGroup) Attributes() synapseSqlPoolWorkloadGroupAttributes {
	return synapseSqlPoolWorkloadGroupAttributes{ref: terra.ReferenceResource(sspwg)}
}

// ImportState imports the given attribute values into [SynapseSqlPoolWorkloadGroup]'s state.
func (sspwg *SynapseSqlPoolWorkloadGroup) ImportState(av io.Reader) error {
	sspwg.state = &synapseSqlPoolWorkloadGroupState{}
	if err := json.NewDecoder(av).Decode(sspwg.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", sspwg.Type(), sspwg.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [SynapseSqlPoolWorkloadGroup] has state.
func (sspwg *SynapseSqlPoolWorkloadGroup) State() (*synapseSqlPoolWorkloadGroupState, bool) {
	return sspwg.state, sspwg.state != nil
}

// StateMust returns the state for [SynapseSqlPoolWorkloadGroup]. Panics if the state is nil.
func (sspwg *SynapseSqlPoolWorkloadGroup) StateMust() *synapseSqlPoolWorkloadGroupState {
	if sspwg.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", sspwg.Type(), sspwg.LocalName()))
	}
	return sspwg.state
}

// SynapseSqlPoolWorkloadGroupArgs contains the configurations for azurerm_synapse_sql_pool_workload_group.
type SynapseSqlPoolWorkloadGroupArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Importance: string, optional
	Importance terra.StringValue `hcl:"importance,attr"`
	// MaxResourcePercent: number, required
	MaxResourcePercent terra.NumberValue `hcl:"max_resource_percent,attr" validate:"required"`
	// MaxResourcePercentPerRequest: number, optional
	MaxResourcePercentPerRequest terra.NumberValue `hcl:"max_resource_percent_per_request,attr"`
	// MinResourcePercent: number, required
	MinResourcePercent terra.NumberValue `hcl:"min_resource_percent,attr" validate:"required"`
	// MinResourcePercentPerRequest: number, optional
	MinResourcePercentPerRequest terra.NumberValue `hcl:"min_resource_percent_per_request,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// QueryExecutionTimeoutInSeconds: number, optional
	QueryExecutionTimeoutInSeconds terra.NumberValue `hcl:"query_execution_timeout_in_seconds,attr"`
	// SqlPoolId: string, required
	SqlPoolId terra.StringValue `hcl:"sql_pool_id,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *synapsesqlpoolworkloadgroup.Timeouts `hcl:"timeouts,block"`
}
type synapseSqlPoolWorkloadGroupAttributes struct {
	ref terra.Reference
}

// Id returns a reference to field id of azurerm_synapse_sql_pool_workload_group.
func (sspwg synapseSqlPoolWorkloadGroupAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(sspwg.ref.Append("id"))
}

// Importance returns a reference to field importance of azurerm_synapse_sql_pool_workload_group.
func (sspwg synapseSqlPoolWorkloadGroupAttributes) Importance() terra.StringValue {
	return terra.ReferenceAsString(sspwg.ref.Append("importance"))
}

// MaxResourcePercent returns a reference to field max_resource_percent of azurerm_synapse_sql_pool_workload_group.
func (sspwg synapseSqlPoolWorkloadGroupAttributes) MaxResourcePercent() terra.NumberValue {
	return terra.ReferenceAsNumber(sspwg.ref.Append("max_resource_percent"))
}

// MaxResourcePercentPerRequest returns a reference to field max_resource_percent_per_request of azurerm_synapse_sql_pool_workload_group.
func (sspwg synapseSqlPoolWorkloadGroupAttributes) MaxResourcePercentPerRequest() terra.NumberValue {
	return terra.ReferenceAsNumber(sspwg.ref.Append("max_resource_percent_per_request"))
}

// MinResourcePercent returns a reference to field min_resource_percent of azurerm_synapse_sql_pool_workload_group.
func (sspwg synapseSqlPoolWorkloadGroupAttributes) MinResourcePercent() terra.NumberValue {
	return terra.ReferenceAsNumber(sspwg.ref.Append("min_resource_percent"))
}

// MinResourcePercentPerRequest returns a reference to field min_resource_percent_per_request of azurerm_synapse_sql_pool_workload_group.
func (sspwg synapseSqlPoolWorkloadGroupAttributes) MinResourcePercentPerRequest() terra.NumberValue {
	return terra.ReferenceAsNumber(sspwg.ref.Append("min_resource_percent_per_request"))
}

// Name returns a reference to field name of azurerm_synapse_sql_pool_workload_group.
func (sspwg synapseSqlPoolWorkloadGroupAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(sspwg.ref.Append("name"))
}

// QueryExecutionTimeoutInSeconds returns a reference to field query_execution_timeout_in_seconds of azurerm_synapse_sql_pool_workload_group.
func (sspwg synapseSqlPoolWorkloadGroupAttributes) QueryExecutionTimeoutInSeconds() terra.NumberValue {
	return terra.ReferenceAsNumber(sspwg.ref.Append("query_execution_timeout_in_seconds"))
}

// SqlPoolId returns a reference to field sql_pool_id of azurerm_synapse_sql_pool_workload_group.
func (sspwg synapseSqlPoolWorkloadGroupAttributes) SqlPoolId() terra.StringValue {
	return terra.ReferenceAsString(sspwg.ref.Append("sql_pool_id"))
}

func (sspwg synapseSqlPoolWorkloadGroupAttributes) Timeouts() synapsesqlpoolworkloadgroup.TimeoutsAttributes {
	return terra.ReferenceAsSingle[synapsesqlpoolworkloadgroup.TimeoutsAttributes](sspwg.ref.Append("timeouts"))
}

type synapseSqlPoolWorkloadGroupState struct {
	Id                             string                                     `json:"id"`
	Importance                     string                                     `json:"importance"`
	MaxResourcePercent             float64                                    `json:"max_resource_percent"`
	MaxResourcePercentPerRequest   float64                                    `json:"max_resource_percent_per_request"`
	MinResourcePercent             float64                                    `json:"min_resource_percent"`
	MinResourcePercentPerRequest   float64                                    `json:"min_resource_percent_per_request"`
	Name                           string                                     `json:"name"`
	QueryExecutionTimeoutInSeconds float64                                    `json:"query_execution_timeout_in_seconds"`
	SqlPoolId                      string                                     `json:"sql_pool_id"`
	Timeouts                       *synapsesqlpoolworkloadgroup.TimeoutsState `json:"timeouts"`
}
