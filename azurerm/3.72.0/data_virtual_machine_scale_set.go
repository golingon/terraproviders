// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	datavirtualmachinescaleset "github.com/golingon/terraproviders/azurerm/3.72.0/datavirtualmachinescaleset"
	"github.com/volvo-cars/lingon/pkg/terra"
)

// NewDataVirtualMachineScaleSet creates a new instance of [DataVirtualMachineScaleSet].
func NewDataVirtualMachineScaleSet(name string, args DataVirtualMachineScaleSetArgs) *DataVirtualMachineScaleSet {
	return &DataVirtualMachineScaleSet{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataVirtualMachineScaleSet)(nil)

// DataVirtualMachineScaleSet represents the Terraform data resource azurerm_virtual_machine_scale_set.
type DataVirtualMachineScaleSet struct {
	Name string
	Args DataVirtualMachineScaleSetArgs
}

// DataSource returns the Terraform object type for [DataVirtualMachineScaleSet].
func (vmss *DataVirtualMachineScaleSet) DataSource() string {
	return "azurerm_virtual_machine_scale_set"
}

// LocalName returns the local name for [DataVirtualMachineScaleSet].
func (vmss *DataVirtualMachineScaleSet) LocalName() string {
	return vmss.Name
}

// Configuration returns the configuration (args) for [DataVirtualMachineScaleSet].
func (vmss *DataVirtualMachineScaleSet) Configuration() interface{} {
	return vmss.Args
}

// Attributes returns the attributes for [DataVirtualMachineScaleSet].
func (vmss *DataVirtualMachineScaleSet) Attributes() dataVirtualMachineScaleSetAttributes {
	return dataVirtualMachineScaleSetAttributes{ref: terra.ReferenceDataResource(vmss)}
}

// DataVirtualMachineScaleSetArgs contains the configurations for azurerm_virtual_machine_scale_set.
type DataVirtualMachineScaleSetArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// Identity: min=0
	Identity []datavirtualmachinescaleset.Identity `hcl:"identity,block" validate:"min=0"`
	// Instances: min=0
	Instances []datavirtualmachinescaleset.Instances `hcl:"instances,block" validate:"min=0"`
	// NetworkInterface: min=0
	NetworkInterface []datavirtualmachinescaleset.NetworkInterface `hcl:"network_interface,block" validate:"min=0"`
	// Timeouts: optional
	Timeouts *datavirtualmachinescaleset.Timeouts `hcl:"timeouts,block"`
}
type dataVirtualMachineScaleSetAttributes struct {
	ref terra.Reference
}

// Id returns a reference to field id of azurerm_virtual_machine_scale_set.
func (vmss dataVirtualMachineScaleSetAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(vmss.ref.Append("id"))
}

// Location returns a reference to field location of azurerm_virtual_machine_scale_set.
func (vmss dataVirtualMachineScaleSetAttributes) Location() terra.StringValue {
	return terra.ReferenceAsString(vmss.ref.Append("location"))
}

// Name returns a reference to field name of azurerm_virtual_machine_scale_set.
func (vmss dataVirtualMachineScaleSetAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(vmss.ref.Append("name"))
}

// ResourceGroupName returns a reference to field resource_group_name of azurerm_virtual_machine_scale_set.
func (vmss dataVirtualMachineScaleSetAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceAsString(vmss.ref.Append("resource_group_name"))
}

func (vmss dataVirtualMachineScaleSetAttributes) Identity() terra.ListValue[datavirtualmachinescaleset.IdentityAttributes] {
	return terra.ReferenceAsList[datavirtualmachinescaleset.IdentityAttributes](vmss.ref.Append("identity"))
}

func (vmss dataVirtualMachineScaleSetAttributes) Instances() terra.ListValue[datavirtualmachinescaleset.InstancesAttributes] {
	return terra.ReferenceAsList[datavirtualmachinescaleset.InstancesAttributes](vmss.ref.Append("instances"))
}

func (vmss dataVirtualMachineScaleSetAttributes) NetworkInterface() terra.ListValue[datavirtualmachinescaleset.NetworkInterfaceAttributes] {
	return terra.ReferenceAsList[datavirtualmachinescaleset.NetworkInterfaceAttributes](vmss.ref.Append("network_interface"))
}

func (vmss dataVirtualMachineScaleSetAttributes) Timeouts() datavirtualmachinescaleset.TimeoutsAttributes {
	return terra.ReferenceAsSingle[datavirtualmachinescaleset.TimeoutsAttributes](vmss.ref.Append("timeouts"))
}
