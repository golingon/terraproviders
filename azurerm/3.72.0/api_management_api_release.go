// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	"encoding/json"
	"fmt"
	apimanagementapirelease "github.com/golingon/terraproviders/azurerm/3.72.0/apimanagementapirelease"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

// NewApiManagementApiRelease creates a new instance of [ApiManagementApiRelease].
func NewApiManagementApiRelease(name string, args ApiManagementApiReleaseArgs) *ApiManagementApiRelease {
	return &ApiManagementApiRelease{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*ApiManagementApiRelease)(nil)

// ApiManagementApiRelease represents the Terraform resource azurerm_api_management_api_release.
type ApiManagementApiRelease struct {
	Name      string
	Args      ApiManagementApiReleaseArgs
	state     *apiManagementApiReleaseState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [ApiManagementApiRelease].
func (amar *ApiManagementApiRelease) Type() string {
	return "azurerm_api_management_api_release"
}

// LocalName returns the local name for [ApiManagementApiRelease].
func (amar *ApiManagementApiRelease) LocalName() string {
	return amar.Name
}

// Configuration returns the configuration (args) for [ApiManagementApiRelease].
func (amar *ApiManagementApiRelease) Configuration() interface{} {
	return amar.Args
}

// DependOn is used for other resources to depend on [ApiManagementApiRelease].
func (amar *ApiManagementApiRelease) DependOn() terra.Reference {
	return terra.ReferenceResource(amar)
}

// Dependencies returns the list of resources [ApiManagementApiRelease] depends_on.
func (amar *ApiManagementApiRelease) Dependencies() terra.Dependencies {
	return amar.DependsOn
}

// LifecycleManagement returns the lifecycle block for [ApiManagementApiRelease].
func (amar *ApiManagementApiRelease) LifecycleManagement() *terra.Lifecycle {
	return amar.Lifecycle
}

// Attributes returns the attributes for [ApiManagementApiRelease].
func (amar *ApiManagementApiRelease) Attributes() apiManagementApiReleaseAttributes {
	return apiManagementApiReleaseAttributes{ref: terra.ReferenceResource(amar)}
}

// ImportState imports the given attribute values into [ApiManagementApiRelease]'s state.
func (amar *ApiManagementApiRelease) ImportState(av io.Reader) error {
	amar.state = &apiManagementApiReleaseState{}
	if err := json.NewDecoder(av).Decode(amar.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", amar.Type(), amar.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [ApiManagementApiRelease] has state.
func (amar *ApiManagementApiRelease) State() (*apiManagementApiReleaseState, bool) {
	return amar.state, amar.state != nil
}

// StateMust returns the state for [ApiManagementApiRelease]. Panics if the state is nil.
func (amar *ApiManagementApiRelease) StateMust() *apiManagementApiReleaseState {
	if amar.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", amar.Type(), amar.LocalName()))
	}
	return amar.state
}

// ApiManagementApiReleaseArgs contains the configurations for azurerm_api_management_api_release.
type ApiManagementApiReleaseArgs struct {
	// ApiId: string, required
	ApiId terra.StringValue `hcl:"api_id,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Notes: string, optional
	Notes terra.StringValue `hcl:"notes,attr"`
	// Timeouts: optional
	Timeouts *apimanagementapirelease.Timeouts `hcl:"timeouts,block"`
}
type apiManagementApiReleaseAttributes struct {
	ref terra.Reference
}

// ApiId returns a reference to field api_id of azurerm_api_management_api_release.
func (amar apiManagementApiReleaseAttributes) ApiId() terra.StringValue {
	return terra.ReferenceAsString(amar.ref.Append("api_id"))
}

// Id returns a reference to field id of azurerm_api_management_api_release.
func (amar apiManagementApiReleaseAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(amar.ref.Append("id"))
}

// Name returns a reference to field name of azurerm_api_management_api_release.
func (amar apiManagementApiReleaseAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(amar.ref.Append("name"))
}

// Notes returns a reference to field notes of azurerm_api_management_api_release.
func (amar apiManagementApiReleaseAttributes) Notes() terra.StringValue {
	return terra.ReferenceAsString(amar.ref.Append("notes"))
}

func (amar apiManagementApiReleaseAttributes) Timeouts() apimanagementapirelease.TimeoutsAttributes {
	return terra.ReferenceAsSingle[apimanagementapirelease.TimeoutsAttributes](amar.ref.Append("timeouts"))
}

type apiManagementApiReleaseState struct {
	ApiId    string                                 `json:"api_id"`
	Id       string                                 `json:"id"`
	Name     string                                 `json:"name"`
	Notes    string                                 `json:"notes"`
	Timeouts *apimanagementapirelease.TimeoutsState `json:"timeouts"`
}
