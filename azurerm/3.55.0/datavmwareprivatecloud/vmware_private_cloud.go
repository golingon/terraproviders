// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package datavmwareprivatecloud

import (
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
	terra "github.com/volvo-cars/lingon/pkg/terra"
)

type Circuit struct{}

type ManagementCluster struct{}

type Timeouts struct {
	// Read: string, optional
	Read terra.StringValue `hcl:"read,attr"`
}

type CircuitAttributes struct {
	ref terra.Reference
}

func (c CircuitAttributes) InternalRef() (terra.Reference, error) {
	return c.ref, nil
}

func (c CircuitAttributes) InternalWithRef(ref terra.Reference) CircuitAttributes {
	return CircuitAttributes{ref: ref}
}

func (c CircuitAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return c.ref.InternalTokens()
}

func (c CircuitAttributes) ExpressRouteId() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("express_route_id"))
}

func (c CircuitAttributes) ExpressRoutePrivatePeeringId() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("express_route_private_peering_id"))
}

func (c CircuitAttributes) PrimarySubnetCidr() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("primary_subnet_cidr"))
}

func (c CircuitAttributes) SecondarySubnetCidr() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("secondary_subnet_cidr"))
}

type ManagementClusterAttributes struct {
	ref terra.Reference
}

func (mc ManagementClusterAttributes) InternalRef() (terra.Reference, error) {
	return mc.ref, nil
}

func (mc ManagementClusterAttributes) InternalWithRef(ref terra.Reference) ManagementClusterAttributes {
	return ManagementClusterAttributes{ref: ref}
}

func (mc ManagementClusterAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return mc.ref.InternalTokens()
}

func (mc ManagementClusterAttributes) Hosts() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](mc.ref.Append("hosts"))
}

func (mc ManagementClusterAttributes) Id() terra.NumberValue {
	return terra.ReferenceAsNumber(mc.ref.Append("id"))
}

func (mc ManagementClusterAttributes) Size() terra.NumberValue {
	return terra.ReferenceAsNumber(mc.ref.Append("size"))
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Read() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("read"))
}

type CircuitState struct {
	ExpressRouteId               string `json:"express_route_id"`
	ExpressRoutePrivatePeeringId string `json:"express_route_private_peering_id"`
	PrimarySubnetCidr            string `json:"primary_subnet_cidr"`
	SecondarySubnetCidr          string `json:"secondary_subnet_cidr"`
}

type ManagementClusterState struct {
	Hosts []string `json:"hosts"`
	Id    float64  `json:"id"`
	Size  float64  `json:"size"`
}

type TimeoutsState struct {
	Read string `json:"read"`
}
