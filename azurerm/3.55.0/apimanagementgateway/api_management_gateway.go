// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package apimanagementgateway

import (
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
	terra "github.com/volvo-cars/lingon/pkg/terra"
)

type LocationData struct {
	// City: string, optional
	City terra.StringValue `hcl:"city,attr"`
	// District: string, optional
	District terra.StringValue `hcl:"district,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Region: string, optional
	Region terra.StringValue `hcl:"region,attr"`
}

type Timeouts struct {
	// Create: string, optional
	Create terra.StringValue `hcl:"create,attr"`
	// Delete: string, optional
	Delete terra.StringValue `hcl:"delete,attr"`
	// Read: string, optional
	Read terra.StringValue `hcl:"read,attr"`
	// Update: string, optional
	Update terra.StringValue `hcl:"update,attr"`
}

type LocationDataAttributes struct {
	ref terra.Reference
}

func (ld LocationDataAttributes) InternalRef() (terra.Reference, error) {
	return ld.ref, nil
}

func (ld LocationDataAttributes) InternalWithRef(ref terra.Reference) LocationDataAttributes {
	return LocationDataAttributes{ref: ref}
}

func (ld LocationDataAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ld.ref.InternalTokens()
}

func (ld LocationDataAttributes) City() terra.StringValue {
	return terra.ReferenceAsString(ld.ref.Append("city"))
}

func (ld LocationDataAttributes) District() terra.StringValue {
	return terra.ReferenceAsString(ld.ref.Append("district"))
}

func (ld LocationDataAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(ld.ref.Append("name"))
}

func (ld LocationDataAttributes) Region() terra.StringValue {
	return terra.ReferenceAsString(ld.ref.Append("region"))
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("create"))
}

func (t TimeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("delete"))
}

func (t TimeoutsAttributes) Read() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("read"))
}

func (t TimeoutsAttributes) Update() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("update"))
}

type LocationDataState struct {
	City     string `json:"city"`
	District string `json:"district"`
	Name     string `json:"name"`
	Region   string `json:"region"`
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
	Read   string `json:"read"`
	Update string `json:"update"`
}
