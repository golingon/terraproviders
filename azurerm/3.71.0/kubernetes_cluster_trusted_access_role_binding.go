// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	"encoding/json"
	"fmt"
	kubernetesclustertrustedaccessrolebinding "github.com/golingon/terraproviders/azurerm/3.71.0/kubernetesclustertrustedaccessrolebinding"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

// NewKubernetesClusterTrustedAccessRoleBinding creates a new instance of [KubernetesClusterTrustedAccessRoleBinding].
func NewKubernetesClusterTrustedAccessRoleBinding(name string, args KubernetesClusterTrustedAccessRoleBindingArgs) *KubernetesClusterTrustedAccessRoleBinding {
	return &KubernetesClusterTrustedAccessRoleBinding{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*KubernetesClusterTrustedAccessRoleBinding)(nil)

// KubernetesClusterTrustedAccessRoleBinding represents the Terraform resource azurerm_kubernetes_cluster_trusted_access_role_binding.
type KubernetesClusterTrustedAccessRoleBinding struct {
	Name      string
	Args      KubernetesClusterTrustedAccessRoleBindingArgs
	state     *kubernetesClusterTrustedAccessRoleBindingState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [KubernetesClusterTrustedAccessRoleBinding].
func (kctarb *KubernetesClusterTrustedAccessRoleBinding) Type() string {
	return "azurerm_kubernetes_cluster_trusted_access_role_binding"
}

// LocalName returns the local name for [KubernetesClusterTrustedAccessRoleBinding].
func (kctarb *KubernetesClusterTrustedAccessRoleBinding) LocalName() string {
	return kctarb.Name
}

// Configuration returns the configuration (args) for [KubernetesClusterTrustedAccessRoleBinding].
func (kctarb *KubernetesClusterTrustedAccessRoleBinding) Configuration() interface{} {
	return kctarb.Args
}

// DependOn is used for other resources to depend on [KubernetesClusterTrustedAccessRoleBinding].
func (kctarb *KubernetesClusterTrustedAccessRoleBinding) DependOn() terra.Reference {
	return terra.ReferenceResource(kctarb)
}

// Dependencies returns the list of resources [KubernetesClusterTrustedAccessRoleBinding] depends_on.
func (kctarb *KubernetesClusterTrustedAccessRoleBinding) Dependencies() terra.Dependencies {
	return kctarb.DependsOn
}

// LifecycleManagement returns the lifecycle block for [KubernetesClusterTrustedAccessRoleBinding].
func (kctarb *KubernetesClusterTrustedAccessRoleBinding) LifecycleManagement() *terra.Lifecycle {
	return kctarb.Lifecycle
}

// Attributes returns the attributes for [KubernetesClusterTrustedAccessRoleBinding].
func (kctarb *KubernetesClusterTrustedAccessRoleBinding) Attributes() kubernetesClusterTrustedAccessRoleBindingAttributes {
	return kubernetesClusterTrustedAccessRoleBindingAttributes{ref: terra.ReferenceResource(kctarb)}
}

// ImportState imports the given attribute values into [KubernetesClusterTrustedAccessRoleBinding]'s state.
func (kctarb *KubernetesClusterTrustedAccessRoleBinding) ImportState(av io.Reader) error {
	kctarb.state = &kubernetesClusterTrustedAccessRoleBindingState{}
	if err := json.NewDecoder(av).Decode(kctarb.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", kctarb.Type(), kctarb.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [KubernetesClusterTrustedAccessRoleBinding] has state.
func (kctarb *KubernetesClusterTrustedAccessRoleBinding) State() (*kubernetesClusterTrustedAccessRoleBindingState, bool) {
	return kctarb.state, kctarb.state != nil
}

// StateMust returns the state for [KubernetesClusterTrustedAccessRoleBinding]. Panics if the state is nil.
func (kctarb *KubernetesClusterTrustedAccessRoleBinding) StateMust() *kubernetesClusterTrustedAccessRoleBindingState {
	if kctarb.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", kctarb.Type(), kctarb.LocalName()))
	}
	return kctarb.state
}

// KubernetesClusterTrustedAccessRoleBindingArgs contains the configurations for azurerm_kubernetes_cluster_trusted_access_role_binding.
type KubernetesClusterTrustedAccessRoleBindingArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// KubernetesClusterId: string, required
	KubernetesClusterId terra.StringValue `hcl:"kubernetes_cluster_id,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Roles: list of string, required
	Roles terra.ListValue[terra.StringValue] `hcl:"roles,attr" validate:"required"`
	// SourceResourceId: string, required
	SourceResourceId terra.StringValue `hcl:"source_resource_id,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *kubernetesclustertrustedaccessrolebinding.Timeouts `hcl:"timeouts,block"`
}
type kubernetesClusterTrustedAccessRoleBindingAttributes struct {
	ref terra.Reference
}

// Id returns a reference to field id of azurerm_kubernetes_cluster_trusted_access_role_binding.
func (kctarb kubernetesClusterTrustedAccessRoleBindingAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(kctarb.ref.Append("id"))
}

// KubernetesClusterId returns a reference to field kubernetes_cluster_id of azurerm_kubernetes_cluster_trusted_access_role_binding.
func (kctarb kubernetesClusterTrustedAccessRoleBindingAttributes) KubernetesClusterId() terra.StringValue {
	return terra.ReferenceAsString(kctarb.ref.Append("kubernetes_cluster_id"))
}

// Name returns a reference to field name of azurerm_kubernetes_cluster_trusted_access_role_binding.
func (kctarb kubernetesClusterTrustedAccessRoleBindingAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(kctarb.ref.Append("name"))
}

// Roles returns a reference to field roles of azurerm_kubernetes_cluster_trusted_access_role_binding.
func (kctarb kubernetesClusterTrustedAccessRoleBindingAttributes) Roles() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](kctarb.ref.Append("roles"))
}

// SourceResourceId returns a reference to field source_resource_id of azurerm_kubernetes_cluster_trusted_access_role_binding.
func (kctarb kubernetesClusterTrustedAccessRoleBindingAttributes) SourceResourceId() terra.StringValue {
	return terra.ReferenceAsString(kctarb.ref.Append("source_resource_id"))
}

func (kctarb kubernetesClusterTrustedAccessRoleBindingAttributes) Timeouts() kubernetesclustertrustedaccessrolebinding.TimeoutsAttributes {
	return terra.ReferenceAsSingle[kubernetesclustertrustedaccessrolebinding.TimeoutsAttributes](kctarb.ref.Append("timeouts"))
}

type kubernetesClusterTrustedAccessRoleBindingState struct {
	Id                  string                                                   `json:"id"`
	KubernetesClusterId string                                                   `json:"kubernetes_cluster_id"`
	Name                string                                                   `json:"name"`
	Roles               []string                                                 `json:"roles"`
	SourceResourceId    string                                                   `json:"source_resource_id"`
	Timeouts            *kubernetesclustertrustedaccessrolebinding.TimeoutsState `json:"timeouts"`
}
