// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	dataeventgriddomain "github.com/golingon/terraproviders/azurerm/3.71.0/dataeventgriddomain"
	"github.com/volvo-cars/lingon/pkg/terra"
)

// NewDataEventgridDomain creates a new instance of [DataEventgridDomain].
func NewDataEventgridDomain(name string, args DataEventgridDomainArgs) *DataEventgridDomain {
	return &DataEventgridDomain{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataEventgridDomain)(nil)

// DataEventgridDomain represents the Terraform data resource azurerm_eventgrid_domain.
type DataEventgridDomain struct {
	Name string
	Args DataEventgridDomainArgs
}

// DataSource returns the Terraform object type for [DataEventgridDomain].
func (ed *DataEventgridDomain) DataSource() string {
	return "azurerm_eventgrid_domain"
}

// LocalName returns the local name for [DataEventgridDomain].
func (ed *DataEventgridDomain) LocalName() string {
	return ed.Name
}

// Configuration returns the configuration (args) for [DataEventgridDomain].
func (ed *DataEventgridDomain) Configuration() interface{} {
	return ed.Args
}

// Attributes returns the attributes for [DataEventgridDomain].
func (ed *DataEventgridDomain) Attributes() dataEventgridDomainAttributes {
	return dataEventgridDomainAttributes{ref: terra.ReferenceDataResource(ed)}
}

// DataEventgridDomainArgs contains the configurations for azurerm_eventgrid_domain.
type DataEventgridDomainArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// InboundIpRule: min=0
	InboundIpRule []dataeventgriddomain.InboundIpRule `hcl:"inbound_ip_rule,block" validate:"min=0"`
	// InputMappingDefaultValues: min=0
	InputMappingDefaultValues []dataeventgriddomain.InputMappingDefaultValues `hcl:"input_mapping_default_values,block" validate:"min=0"`
	// InputMappingFields: min=0
	InputMappingFields []dataeventgriddomain.InputMappingFields `hcl:"input_mapping_fields,block" validate:"min=0"`
	// Timeouts: optional
	Timeouts *dataeventgriddomain.Timeouts `hcl:"timeouts,block"`
}
type dataEventgridDomainAttributes struct {
	ref terra.Reference
}

// Endpoint returns a reference to field endpoint of azurerm_eventgrid_domain.
func (ed dataEventgridDomainAttributes) Endpoint() terra.StringValue {
	return terra.ReferenceAsString(ed.ref.Append("endpoint"))
}

// Id returns a reference to field id of azurerm_eventgrid_domain.
func (ed dataEventgridDomainAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(ed.ref.Append("id"))
}

// InputSchema returns a reference to field input_schema of azurerm_eventgrid_domain.
func (ed dataEventgridDomainAttributes) InputSchema() terra.StringValue {
	return terra.ReferenceAsString(ed.ref.Append("input_schema"))
}

// Location returns a reference to field location of azurerm_eventgrid_domain.
func (ed dataEventgridDomainAttributes) Location() terra.StringValue {
	return terra.ReferenceAsString(ed.ref.Append("location"))
}

// Name returns a reference to field name of azurerm_eventgrid_domain.
func (ed dataEventgridDomainAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(ed.ref.Append("name"))
}

// PrimaryAccessKey returns a reference to field primary_access_key of azurerm_eventgrid_domain.
func (ed dataEventgridDomainAttributes) PrimaryAccessKey() terra.StringValue {
	return terra.ReferenceAsString(ed.ref.Append("primary_access_key"))
}

// PublicNetworkAccessEnabled returns a reference to field public_network_access_enabled of azurerm_eventgrid_domain.
func (ed dataEventgridDomainAttributes) PublicNetworkAccessEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(ed.ref.Append("public_network_access_enabled"))
}

// ResourceGroupName returns a reference to field resource_group_name of azurerm_eventgrid_domain.
func (ed dataEventgridDomainAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceAsString(ed.ref.Append("resource_group_name"))
}

// SecondaryAccessKey returns a reference to field secondary_access_key of azurerm_eventgrid_domain.
func (ed dataEventgridDomainAttributes) SecondaryAccessKey() terra.StringValue {
	return terra.ReferenceAsString(ed.ref.Append("secondary_access_key"))
}

// Tags returns a reference to field tags of azurerm_eventgrid_domain.
func (ed dataEventgridDomainAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](ed.ref.Append("tags"))
}

func (ed dataEventgridDomainAttributes) InboundIpRule() terra.ListValue[dataeventgriddomain.InboundIpRuleAttributes] {
	return terra.ReferenceAsList[dataeventgriddomain.InboundIpRuleAttributes](ed.ref.Append("inbound_ip_rule"))
}

func (ed dataEventgridDomainAttributes) InputMappingDefaultValues() terra.ListValue[dataeventgriddomain.InputMappingDefaultValuesAttributes] {
	return terra.ReferenceAsList[dataeventgriddomain.InputMappingDefaultValuesAttributes](ed.ref.Append("input_mapping_default_values"))
}

func (ed dataEventgridDomainAttributes) InputMappingFields() terra.ListValue[dataeventgriddomain.InputMappingFieldsAttributes] {
	return terra.ReferenceAsList[dataeventgriddomain.InputMappingFieldsAttributes](ed.ref.Append("input_mapping_fields"))
}

func (ed dataEventgridDomainAttributes) Timeouts() dataeventgriddomain.TimeoutsAttributes {
	return terra.ReferenceAsSingle[dataeventgriddomain.TimeoutsAttributes](ed.ref.Append("timeouts"))
}
