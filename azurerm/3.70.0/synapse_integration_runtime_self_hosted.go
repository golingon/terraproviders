// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	"encoding/json"
	"fmt"
	synapseintegrationruntimeselfhosted "github.com/golingon/terraproviders/azurerm/3.70.0/synapseintegrationruntimeselfhosted"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

// NewSynapseIntegrationRuntimeSelfHosted creates a new instance of [SynapseIntegrationRuntimeSelfHosted].
func NewSynapseIntegrationRuntimeSelfHosted(name string, args SynapseIntegrationRuntimeSelfHostedArgs) *SynapseIntegrationRuntimeSelfHosted {
	return &SynapseIntegrationRuntimeSelfHosted{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*SynapseIntegrationRuntimeSelfHosted)(nil)

// SynapseIntegrationRuntimeSelfHosted represents the Terraform resource azurerm_synapse_integration_runtime_self_hosted.
type SynapseIntegrationRuntimeSelfHosted struct {
	Name      string
	Args      SynapseIntegrationRuntimeSelfHostedArgs
	state     *synapseIntegrationRuntimeSelfHostedState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [SynapseIntegrationRuntimeSelfHosted].
func (sirsh *SynapseIntegrationRuntimeSelfHosted) Type() string {
	return "azurerm_synapse_integration_runtime_self_hosted"
}

// LocalName returns the local name for [SynapseIntegrationRuntimeSelfHosted].
func (sirsh *SynapseIntegrationRuntimeSelfHosted) LocalName() string {
	return sirsh.Name
}

// Configuration returns the configuration (args) for [SynapseIntegrationRuntimeSelfHosted].
func (sirsh *SynapseIntegrationRuntimeSelfHosted) Configuration() interface{} {
	return sirsh.Args
}

// DependOn is used for other resources to depend on [SynapseIntegrationRuntimeSelfHosted].
func (sirsh *SynapseIntegrationRuntimeSelfHosted) DependOn() terra.Reference {
	return terra.ReferenceResource(sirsh)
}

// Dependencies returns the list of resources [SynapseIntegrationRuntimeSelfHosted] depends_on.
func (sirsh *SynapseIntegrationRuntimeSelfHosted) Dependencies() terra.Dependencies {
	return sirsh.DependsOn
}

// LifecycleManagement returns the lifecycle block for [SynapseIntegrationRuntimeSelfHosted].
func (sirsh *SynapseIntegrationRuntimeSelfHosted) LifecycleManagement() *terra.Lifecycle {
	return sirsh.Lifecycle
}

// Attributes returns the attributes for [SynapseIntegrationRuntimeSelfHosted].
func (sirsh *SynapseIntegrationRuntimeSelfHosted) Attributes() synapseIntegrationRuntimeSelfHostedAttributes {
	return synapseIntegrationRuntimeSelfHostedAttributes{ref: terra.ReferenceResource(sirsh)}
}

// ImportState imports the given attribute values into [SynapseIntegrationRuntimeSelfHosted]'s state.
func (sirsh *SynapseIntegrationRuntimeSelfHosted) ImportState(av io.Reader) error {
	sirsh.state = &synapseIntegrationRuntimeSelfHostedState{}
	if err := json.NewDecoder(av).Decode(sirsh.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", sirsh.Type(), sirsh.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [SynapseIntegrationRuntimeSelfHosted] has state.
func (sirsh *SynapseIntegrationRuntimeSelfHosted) State() (*synapseIntegrationRuntimeSelfHostedState, bool) {
	return sirsh.state, sirsh.state != nil
}

// StateMust returns the state for [SynapseIntegrationRuntimeSelfHosted]. Panics if the state is nil.
func (sirsh *SynapseIntegrationRuntimeSelfHosted) StateMust() *synapseIntegrationRuntimeSelfHostedState {
	if sirsh.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", sirsh.Type(), sirsh.LocalName()))
	}
	return sirsh.state
}

// SynapseIntegrationRuntimeSelfHostedArgs contains the configurations for azurerm_synapse_integration_runtime_self_hosted.
type SynapseIntegrationRuntimeSelfHostedArgs struct {
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// SynapseWorkspaceId: string, required
	SynapseWorkspaceId terra.StringValue `hcl:"synapse_workspace_id,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *synapseintegrationruntimeselfhosted.Timeouts `hcl:"timeouts,block"`
}
type synapseIntegrationRuntimeSelfHostedAttributes struct {
	ref terra.Reference
}

// AuthorizationKeyPrimary returns a reference to field authorization_key_primary of azurerm_synapse_integration_runtime_self_hosted.
func (sirsh synapseIntegrationRuntimeSelfHostedAttributes) AuthorizationKeyPrimary() terra.StringValue {
	return terra.ReferenceAsString(sirsh.ref.Append("authorization_key_primary"))
}

// AuthorizationKeySecondary returns a reference to field authorization_key_secondary of azurerm_synapse_integration_runtime_self_hosted.
func (sirsh synapseIntegrationRuntimeSelfHostedAttributes) AuthorizationKeySecondary() terra.StringValue {
	return terra.ReferenceAsString(sirsh.ref.Append("authorization_key_secondary"))
}

// Description returns a reference to field description of azurerm_synapse_integration_runtime_self_hosted.
func (sirsh synapseIntegrationRuntimeSelfHostedAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(sirsh.ref.Append("description"))
}

// Id returns a reference to field id of azurerm_synapse_integration_runtime_self_hosted.
func (sirsh synapseIntegrationRuntimeSelfHostedAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(sirsh.ref.Append("id"))
}

// Name returns a reference to field name of azurerm_synapse_integration_runtime_self_hosted.
func (sirsh synapseIntegrationRuntimeSelfHostedAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(sirsh.ref.Append("name"))
}

// SynapseWorkspaceId returns a reference to field synapse_workspace_id of azurerm_synapse_integration_runtime_self_hosted.
func (sirsh synapseIntegrationRuntimeSelfHostedAttributes) SynapseWorkspaceId() terra.StringValue {
	return terra.ReferenceAsString(sirsh.ref.Append("synapse_workspace_id"))
}

func (sirsh synapseIntegrationRuntimeSelfHostedAttributes) Timeouts() synapseintegrationruntimeselfhosted.TimeoutsAttributes {
	return terra.ReferenceAsSingle[synapseintegrationruntimeselfhosted.TimeoutsAttributes](sirsh.ref.Append("timeouts"))
}

type synapseIntegrationRuntimeSelfHostedState struct {
	AuthorizationKeyPrimary   string                                             `json:"authorization_key_primary"`
	AuthorizationKeySecondary string                                             `json:"authorization_key_secondary"`
	Description               string                                             `json:"description"`
	Id                        string                                             `json:"id"`
	Name                      string                                             `json:"name"`
	SynapseWorkspaceId        string                                             `json:"synapse_workspace_id"`
	Timeouts                  *synapseintegrationruntimeselfhosted.TimeoutsState `json:"timeouts"`
}
