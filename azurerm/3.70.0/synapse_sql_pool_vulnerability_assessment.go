// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	"encoding/json"
	"fmt"
	synapsesqlpoolvulnerabilityassessment "github.com/golingon/terraproviders/azurerm/3.70.0/synapsesqlpoolvulnerabilityassessment"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

// NewSynapseSqlPoolVulnerabilityAssessment creates a new instance of [SynapseSqlPoolVulnerabilityAssessment].
func NewSynapseSqlPoolVulnerabilityAssessment(name string, args SynapseSqlPoolVulnerabilityAssessmentArgs) *SynapseSqlPoolVulnerabilityAssessment {
	return &SynapseSqlPoolVulnerabilityAssessment{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*SynapseSqlPoolVulnerabilityAssessment)(nil)

// SynapseSqlPoolVulnerabilityAssessment represents the Terraform resource azurerm_synapse_sql_pool_vulnerability_assessment.
type SynapseSqlPoolVulnerabilityAssessment struct {
	Name      string
	Args      SynapseSqlPoolVulnerabilityAssessmentArgs
	state     *synapseSqlPoolVulnerabilityAssessmentState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [SynapseSqlPoolVulnerabilityAssessment].
func (sspva *SynapseSqlPoolVulnerabilityAssessment) Type() string {
	return "azurerm_synapse_sql_pool_vulnerability_assessment"
}

// LocalName returns the local name for [SynapseSqlPoolVulnerabilityAssessment].
func (sspva *SynapseSqlPoolVulnerabilityAssessment) LocalName() string {
	return sspva.Name
}

// Configuration returns the configuration (args) for [SynapseSqlPoolVulnerabilityAssessment].
func (sspva *SynapseSqlPoolVulnerabilityAssessment) Configuration() interface{} {
	return sspva.Args
}

// DependOn is used for other resources to depend on [SynapseSqlPoolVulnerabilityAssessment].
func (sspva *SynapseSqlPoolVulnerabilityAssessment) DependOn() terra.Reference {
	return terra.ReferenceResource(sspva)
}

// Dependencies returns the list of resources [SynapseSqlPoolVulnerabilityAssessment] depends_on.
func (sspva *SynapseSqlPoolVulnerabilityAssessment) Dependencies() terra.Dependencies {
	return sspva.DependsOn
}

// LifecycleManagement returns the lifecycle block for [SynapseSqlPoolVulnerabilityAssessment].
func (sspva *SynapseSqlPoolVulnerabilityAssessment) LifecycleManagement() *terra.Lifecycle {
	return sspva.Lifecycle
}

// Attributes returns the attributes for [SynapseSqlPoolVulnerabilityAssessment].
func (sspva *SynapseSqlPoolVulnerabilityAssessment) Attributes() synapseSqlPoolVulnerabilityAssessmentAttributes {
	return synapseSqlPoolVulnerabilityAssessmentAttributes{ref: terra.ReferenceResource(sspva)}
}

// ImportState imports the given attribute values into [SynapseSqlPoolVulnerabilityAssessment]'s state.
func (sspva *SynapseSqlPoolVulnerabilityAssessment) ImportState(av io.Reader) error {
	sspva.state = &synapseSqlPoolVulnerabilityAssessmentState{}
	if err := json.NewDecoder(av).Decode(sspva.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", sspva.Type(), sspva.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [SynapseSqlPoolVulnerabilityAssessment] has state.
func (sspva *SynapseSqlPoolVulnerabilityAssessment) State() (*synapseSqlPoolVulnerabilityAssessmentState, bool) {
	return sspva.state, sspva.state != nil
}

// StateMust returns the state for [SynapseSqlPoolVulnerabilityAssessment]. Panics if the state is nil.
func (sspva *SynapseSqlPoolVulnerabilityAssessment) StateMust() *synapseSqlPoolVulnerabilityAssessmentState {
	if sspva.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", sspva.Type(), sspva.LocalName()))
	}
	return sspva.state
}

// SynapseSqlPoolVulnerabilityAssessmentArgs contains the configurations for azurerm_synapse_sql_pool_vulnerability_assessment.
type SynapseSqlPoolVulnerabilityAssessmentArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// SqlPoolSecurityAlertPolicyId: string, required
	SqlPoolSecurityAlertPolicyId terra.StringValue `hcl:"sql_pool_security_alert_policy_id,attr" validate:"required"`
	// StorageAccountAccessKey: string, optional
	StorageAccountAccessKey terra.StringValue `hcl:"storage_account_access_key,attr"`
	// StorageContainerPath: string, required
	StorageContainerPath terra.StringValue `hcl:"storage_container_path,attr" validate:"required"`
	// StorageContainerSasKey: string, optional
	StorageContainerSasKey terra.StringValue `hcl:"storage_container_sas_key,attr"`
	// RecurringScans: optional
	RecurringScans *synapsesqlpoolvulnerabilityassessment.RecurringScans `hcl:"recurring_scans,block"`
	// Timeouts: optional
	Timeouts *synapsesqlpoolvulnerabilityassessment.Timeouts `hcl:"timeouts,block"`
}
type synapseSqlPoolVulnerabilityAssessmentAttributes struct {
	ref terra.Reference
}

// Id returns a reference to field id of azurerm_synapse_sql_pool_vulnerability_assessment.
func (sspva synapseSqlPoolVulnerabilityAssessmentAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(sspva.ref.Append("id"))
}

// SqlPoolSecurityAlertPolicyId returns a reference to field sql_pool_security_alert_policy_id of azurerm_synapse_sql_pool_vulnerability_assessment.
func (sspva synapseSqlPoolVulnerabilityAssessmentAttributes) SqlPoolSecurityAlertPolicyId() terra.StringValue {
	return terra.ReferenceAsString(sspva.ref.Append("sql_pool_security_alert_policy_id"))
}

// StorageAccountAccessKey returns a reference to field storage_account_access_key of azurerm_synapse_sql_pool_vulnerability_assessment.
func (sspva synapseSqlPoolVulnerabilityAssessmentAttributes) StorageAccountAccessKey() terra.StringValue {
	return terra.ReferenceAsString(sspva.ref.Append("storage_account_access_key"))
}

// StorageContainerPath returns a reference to field storage_container_path of azurerm_synapse_sql_pool_vulnerability_assessment.
func (sspva synapseSqlPoolVulnerabilityAssessmentAttributes) StorageContainerPath() terra.StringValue {
	return terra.ReferenceAsString(sspva.ref.Append("storage_container_path"))
}

// StorageContainerSasKey returns a reference to field storage_container_sas_key of azurerm_synapse_sql_pool_vulnerability_assessment.
func (sspva synapseSqlPoolVulnerabilityAssessmentAttributes) StorageContainerSasKey() terra.StringValue {
	return terra.ReferenceAsString(sspva.ref.Append("storage_container_sas_key"))
}

func (sspva synapseSqlPoolVulnerabilityAssessmentAttributes) RecurringScans() terra.ListValue[synapsesqlpoolvulnerabilityassessment.RecurringScansAttributes] {
	return terra.ReferenceAsList[synapsesqlpoolvulnerabilityassessment.RecurringScansAttributes](sspva.ref.Append("recurring_scans"))
}

func (sspva synapseSqlPoolVulnerabilityAssessmentAttributes) Timeouts() synapsesqlpoolvulnerabilityassessment.TimeoutsAttributes {
	return terra.ReferenceAsSingle[synapsesqlpoolvulnerabilityassessment.TimeoutsAttributes](sspva.ref.Append("timeouts"))
}

type synapseSqlPoolVulnerabilityAssessmentState struct {
	Id                           string                                                      `json:"id"`
	SqlPoolSecurityAlertPolicyId string                                                      `json:"sql_pool_security_alert_policy_id"`
	StorageAccountAccessKey      string                                                      `json:"storage_account_access_key"`
	StorageContainerPath         string                                                      `json:"storage_container_path"`
	StorageContainerSasKey       string                                                      `json:"storage_container_sas_key"`
	RecurringScans               []synapsesqlpoolvulnerabilityassessment.RecurringScansState `json:"recurring_scans"`
	Timeouts                     *synapsesqlpoolvulnerabilityassessment.TimeoutsState        `json:"timeouts"`
}
