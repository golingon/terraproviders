// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	"encoding/json"
	"fmt"
	logicappintegrationaccountassembly "github.com/golingon/terraproviders/azurerm/3.63.0/logicappintegrationaccountassembly"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

// NewLogicAppIntegrationAccountAssembly creates a new instance of [LogicAppIntegrationAccountAssembly].
func NewLogicAppIntegrationAccountAssembly(name string, args LogicAppIntegrationAccountAssemblyArgs) *LogicAppIntegrationAccountAssembly {
	return &LogicAppIntegrationAccountAssembly{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*LogicAppIntegrationAccountAssembly)(nil)

// LogicAppIntegrationAccountAssembly represents the Terraform resource azurerm_logic_app_integration_account_assembly.
type LogicAppIntegrationAccountAssembly struct {
	Name      string
	Args      LogicAppIntegrationAccountAssemblyArgs
	state     *logicAppIntegrationAccountAssemblyState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [LogicAppIntegrationAccountAssembly].
func (laiaa *LogicAppIntegrationAccountAssembly) Type() string {
	return "azurerm_logic_app_integration_account_assembly"
}

// LocalName returns the local name for [LogicAppIntegrationAccountAssembly].
func (laiaa *LogicAppIntegrationAccountAssembly) LocalName() string {
	return laiaa.Name
}

// Configuration returns the configuration (args) for [LogicAppIntegrationAccountAssembly].
func (laiaa *LogicAppIntegrationAccountAssembly) Configuration() interface{} {
	return laiaa.Args
}

// DependOn is used for other resources to depend on [LogicAppIntegrationAccountAssembly].
func (laiaa *LogicAppIntegrationAccountAssembly) DependOn() terra.Reference {
	return terra.ReferenceResource(laiaa)
}

// Dependencies returns the list of resources [LogicAppIntegrationAccountAssembly] depends_on.
func (laiaa *LogicAppIntegrationAccountAssembly) Dependencies() terra.Dependencies {
	return laiaa.DependsOn
}

// LifecycleManagement returns the lifecycle block for [LogicAppIntegrationAccountAssembly].
func (laiaa *LogicAppIntegrationAccountAssembly) LifecycleManagement() *terra.Lifecycle {
	return laiaa.Lifecycle
}

// Attributes returns the attributes for [LogicAppIntegrationAccountAssembly].
func (laiaa *LogicAppIntegrationAccountAssembly) Attributes() logicAppIntegrationAccountAssemblyAttributes {
	return logicAppIntegrationAccountAssemblyAttributes{ref: terra.ReferenceResource(laiaa)}
}

// ImportState imports the given attribute values into [LogicAppIntegrationAccountAssembly]'s state.
func (laiaa *LogicAppIntegrationAccountAssembly) ImportState(av io.Reader) error {
	laiaa.state = &logicAppIntegrationAccountAssemblyState{}
	if err := json.NewDecoder(av).Decode(laiaa.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", laiaa.Type(), laiaa.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [LogicAppIntegrationAccountAssembly] has state.
func (laiaa *LogicAppIntegrationAccountAssembly) State() (*logicAppIntegrationAccountAssemblyState, bool) {
	return laiaa.state, laiaa.state != nil
}

// StateMust returns the state for [LogicAppIntegrationAccountAssembly]. Panics if the state is nil.
func (laiaa *LogicAppIntegrationAccountAssembly) StateMust() *logicAppIntegrationAccountAssemblyState {
	if laiaa.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", laiaa.Type(), laiaa.LocalName()))
	}
	return laiaa.state
}

// LogicAppIntegrationAccountAssemblyArgs contains the configurations for azurerm_logic_app_integration_account_assembly.
type LogicAppIntegrationAccountAssemblyArgs struct {
	// AssemblyName: string, required
	AssemblyName terra.StringValue `hcl:"assembly_name,attr" validate:"required"`
	// AssemblyVersion: string, optional
	AssemblyVersion terra.StringValue `hcl:"assembly_version,attr"`
	// Content: string, optional
	Content terra.StringValue `hcl:"content,attr"`
	// ContentLinkUri: string, optional
	ContentLinkUri terra.StringValue `hcl:"content_link_uri,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// IntegrationAccountName: string, required
	IntegrationAccountName terra.StringValue `hcl:"integration_account_name,attr" validate:"required"`
	// Metadata: map of string, optional
	Metadata terra.MapValue[terra.StringValue] `hcl:"metadata,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *logicappintegrationaccountassembly.Timeouts `hcl:"timeouts,block"`
}
type logicAppIntegrationAccountAssemblyAttributes struct {
	ref terra.Reference
}

// AssemblyName returns a reference to field assembly_name of azurerm_logic_app_integration_account_assembly.
func (laiaa logicAppIntegrationAccountAssemblyAttributes) AssemblyName() terra.StringValue {
	return terra.ReferenceAsString(laiaa.ref.Append("assembly_name"))
}

// AssemblyVersion returns a reference to field assembly_version of azurerm_logic_app_integration_account_assembly.
func (laiaa logicAppIntegrationAccountAssemblyAttributes) AssemblyVersion() terra.StringValue {
	return terra.ReferenceAsString(laiaa.ref.Append("assembly_version"))
}

// Content returns a reference to field content of azurerm_logic_app_integration_account_assembly.
func (laiaa logicAppIntegrationAccountAssemblyAttributes) Content() terra.StringValue {
	return terra.ReferenceAsString(laiaa.ref.Append("content"))
}

// ContentLinkUri returns a reference to field content_link_uri of azurerm_logic_app_integration_account_assembly.
func (laiaa logicAppIntegrationAccountAssemblyAttributes) ContentLinkUri() terra.StringValue {
	return terra.ReferenceAsString(laiaa.ref.Append("content_link_uri"))
}

// Id returns a reference to field id of azurerm_logic_app_integration_account_assembly.
func (laiaa logicAppIntegrationAccountAssemblyAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(laiaa.ref.Append("id"))
}

// IntegrationAccountName returns a reference to field integration_account_name of azurerm_logic_app_integration_account_assembly.
func (laiaa logicAppIntegrationAccountAssemblyAttributes) IntegrationAccountName() terra.StringValue {
	return terra.ReferenceAsString(laiaa.ref.Append("integration_account_name"))
}

// Metadata returns a reference to field metadata of azurerm_logic_app_integration_account_assembly.
func (laiaa logicAppIntegrationAccountAssemblyAttributes) Metadata() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](laiaa.ref.Append("metadata"))
}

// Name returns a reference to field name of azurerm_logic_app_integration_account_assembly.
func (laiaa logicAppIntegrationAccountAssemblyAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(laiaa.ref.Append("name"))
}

// ResourceGroupName returns a reference to field resource_group_name of azurerm_logic_app_integration_account_assembly.
func (laiaa logicAppIntegrationAccountAssemblyAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceAsString(laiaa.ref.Append("resource_group_name"))
}

func (laiaa logicAppIntegrationAccountAssemblyAttributes) Timeouts() logicappintegrationaccountassembly.TimeoutsAttributes {
	return terra.ReferenceAsSingle[logicappintegrationaccountassembly.TimeoutsAttributes](laiaa.ref.Append("timeouts"))
}

type logicAppIntegrationAccountAssemblyState struct {
	AssemblyName           string                                            `json:"assembly_name"`
	AssemblyVersion        string                                            `json:"assembly_version"`
	Content                string                                            `json:"content"`
	ContentLinkUri         string                                            `json:"content_link_uri"`
	Id                     string                                            `json:"id"`
	IntegrationAccountName string                                            `json:"integration_account_name"`
	Metadata               map[string]string                                 `json:"metadata"`
	Name                   string                                            `json:"name"`
	ResourceGroupName      string                                            `json:"resource_group_name"`
	Timeouts               *logicappintegrationaccountassembly.TimeoutsState `json:"timeouts"`
}
