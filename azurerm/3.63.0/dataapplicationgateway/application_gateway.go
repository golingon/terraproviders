// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package dataapplicationgateway

import (
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
	terra "github.com/volvo-cars/lingon/pkg/terra"
)

type BackendAddressPool struct{}

type Identity struct{}

type Timeouts struct {
	// Read: string, optional
	Read terra.StringValue `hcl:"read,attr"`
}

type BackendAddressPoolAttributes struct {
	ref terra.Reference
}

func (bap BackendAddressPoolAttributes) InternalRef() (terra.Reference, error) {
	return bap.ref, nil
}

func (bap BackendAddressPoolAttributes) InternalWithRef(ref terra.Reference) BackendAddressPoolAttributes {
	return BackendAddressPoolAttributes{ref: ref}
}

func (bap BackendAddressPoolAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return bap.ref.InternalTokens()
}

func (bap BackendAddressPoolAttributes) Fqdns() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](bap.ref.Append("fqdns"))
}

func (bap BackendAddressPoolAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(bap.ref.Append("id"))
}

func (bap BackendAddressPoolAttributes) IpAddresses() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](bap.ref.Append("ip_addresses"))
}

func (bap BackendAddressPoolAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(bap.ref.Append("name"))
}

type IdentityAttributes struct {
	ref terra.Reference
}

func (i IdentityAttributes) InternalRef() (terra.Reference, error) {
	return i.ref, nil
}

func (i IdentityAttributes) InternalWithRef(ref terra.Reference) IdentityAttributes {
	return IdentityAttributes{ref: ref}
}

func (i IdentityAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return i.ref.InternalTokens()
}

func (i IdentityAttributes) IdentityIds() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](i.ref.Append("identity_ids"))
}

func (i IdentityAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(i.ref.Append("type"))
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Read() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("read"))
}

type BackendAddressPoolState struct {
	Fqdns       []string `json:"fqdns"`
	Id          string   `json:"id"`
	IpAddresses []string `json:"ip_addresses"`
	Name        string   `json:"name"`
}

type IdentityState struct {
	IdentityIds []string `json:"identity_ids"`
	Type        string   `json:"type"`
}

type TimeoutsState struct {
	Read string `json:"read"`
}
