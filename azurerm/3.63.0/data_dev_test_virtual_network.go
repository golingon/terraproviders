// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azurerm

import (
	datadevtestvirtualnetwork "github.com/golingon/terraproviders/azurerm/3.63.0/datadevtestvirtualnetwork"
	"github.com/volvo-cars/lingon/pkg/terra"
)

// NewDataDevTestVirtualNetwork creates a new instance of [DataDevTestVirtualNetwork].
func NewDataDevTestVirtualNetwork(name string, args DataDevTestVirtualNetworkArgs) *DataDevTestVirtualNetwork {
	return &DataDevTestVirtualNetwork{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataDevTestVirtualNetwork)(nil)

// DataDevTestVirtualNetwork represents the Terraform data resource azurerm_dev_test_virtual_network.
type DataDevTestVirtualNetwork struct {
	Name string
	Args DataDevTestVirtualNetworkArgs
}

// DataSource returns the Terraform object type for [DataDevTestVirtualNetwork].
func (dtvn *DataDevTestVirtualNetwork) DataSource() string {
	return "azurerm_dev_test_virtual_network"
}

// LocalName returns the local name for [DataDevTestVirtualNetwork].
func (dtvn *DataDevTestVirtualNetwork) LocalName() string {
	return dtvn.Name
}

// Configuration returns the configuration (args) for [DataDevTestVirtualNetwork].
func (dtvn *DataDevTestVirtualNetwork) Configuration() interface{} {
	return dtvn.Args
}

// Attributes returns the attributes for [DataDevTestVirtualNetwork].
func (dtvn *DataDevTestVirtualNetwork) Attributes() dataDevTestVirtualNetworkAttributes {
	return dataDevTestVirtualNetworkAttributes{ref: terra.ReferenceDataResource(dtvn)}
}

// DataDevTestVirtualNetworkArgs contains the configurations for azurerm_dev_test_virtual_network.
type DataDevTestVirtualNetworkArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// LabName: string, required
	LabName terra.StringValue `hcl:"lab_name,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// ResourceGroupName: string, required
	ResourceGroupName terra.StringValue `hcl:"resource_group_name,attr" validate:"required"`
	// AllowedSubnets: min=0
	AllowedSubnets []datadevtestvirtualnetwork.AllowedSubnets `hcl:"allowed_subnets,block" validate:"min=0"`
	// SubnetOverrides: min=0
	SubnetOverrides []datadevtestvirtualnetwork.SubnetOverrides `hcl:"subnet_overrides,block" validate:"min=0"`
	// Timeouts: optional
	Timeouts *datadevtestvirtualnetwork.Timeouts `hcl:"timeouts,block"`
}
type dataDevTestVirtualNetworkAttributes struct {
	ref terra.Reference
}

// Id returns a reference to field id of azurerm_dev_test_virtual_network.
func (dtvn dataDevTestVirtualNetworkAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(dtvn.ref.Append("id"))
}

// LabName returns a reference to field lab_name of azurerm_dev_test_virtual_network.
func (dtvn dataDevTestVirtualNetworkAttributes) LabName() terra.StringValue {
	return terra.ReferenceAsString(dtvn.ref.Append("lab_name"))
}

// Name returns a reference to field name of azurerm_dev_test_virtual_network.
func (dtvn dataDevTestVirtualNetworkAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(dtvn.ref.Append("name"))
}

// ResourceGroupName returns a reference to field resource_group_name of azurerm_dev_test_virtual_network.
func (dtvn dataDevTestVirtualNetworkAttributes) ResourceGroupName() terra.StringValue {
	return terra.ReferenceAsString(dtvn.ref.Append("resource_group_name"))
}

// UniqueIdentifier returns a reference to field unique_identifier of azurerm_dev_test_virtual_network.
func (dtvn dataDevTestVirtualNetworkAttributes) UniqueIdentifier() terra.StringValue {
	return terra.ReferenceAsString(dtvn.ref.Append("unique_identifier"))
}

func (dtvn dataDevTestVirtualNetworkAttributes) AllowedSubnets() terra.ListValue[datadevtestvirtualnetwork.AllowedSubnetsAttributes] {
	return terra.ReferenceAsList[datadevtestvirtualnetwork.AllowedSubnetsAttributes](dtvn.ref.Append("allowed_subnets"))
}

func (dtvn dataDevTestVirtualNetworkAttributes) SubnetOverrides() terra.ListValue[datadevtestvirtualnetwork.SubnetOverridesAttributes] {
	return terra.ReferenceAsList[datadevtestvirtualnetwork.SubnetOverridesAttributes](dtvn.ref.Append("subnet_overrides"))
}

func (dtvn dataDevTestVirtualNetworkAttributes) Timeouts() datadevtestvirtualnetwork.TimeoutsAttributes {
	return terra.ReferenceAsSingle[datadevtestvirtualnetwork.TimeoutsAttributes](dtvn.ref.Append("timeouts"))
}
