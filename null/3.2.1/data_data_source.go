// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package null

import "github.com/volvo-cars/lingon/pkg/terra"

// NewDataDataSource creates a new instance of [DataDataSource].
func NewDataDataSource(name string, args DataDataSourceArgs) *DataDataSource {
	return &DataDataSource{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataDataSource)(nil)

// DataDataSource represents the Terraform data resource null_data_source.
type DataDataSource struct {
	Name string
	Args DataDataSourceArgs
}

// DataSource returns the Terraform object type for [DataDataSource].
func (ds *DataDataSource) DataSource() string {
	return "null_data_source"
}

// LocalName returns the local name for [DataDataSource].
func (ds *DataDataSource) LocalName() string {
	return ds.Name
}

// Configuration returns the configuration (args) for [DataDataSource].
func (ds *DataDataSource) Configuration() interface{} {
	return ds.Args
}

// Attributes returns the attributes for [DataDataSource].
func (ds *DataDataSource) Attributes() dataDataSourceAttributes {
	return dataDataSourceAttributes{ref: terra.ReferenceDataResource(ds)}
}

// DataDataSourceArgs contains the configurations for null_data_source.
type DataDataSourceArgs struct {
	// HasComputedDefault: string, optional
	HasComputedDefault terra.StringValue `hcl:"has_computed_default,attr"`
	// Inputs: map of string, optional
	Inputs terra.MapValue[terra.StringValue] `hcl:"inputs,attr"`
}
type dataDataSourceAttributes struct {
	ref terra.Reference
}

// HasComputedDefault returns a reference to field has_computed_default of null_data_source.
func (ds dataDataSourceAttributes) HasComputedDefault() terra.StringValue {
	return terra.ReferenceAsString(ds.ref.Append("has_computed_default"))
}

// Id returns a reference to field id of null_data_source.
func (ds dataDataSourceAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(ds.ref.Append("id"))
}

// Inputs returns a reference to field inputs of null_data_source.
func (ds dataDataSourceAttributes) Inputs() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](ds.ref.Append("inputs"))
}

// Outputs returns a reference to field outputs of null_data_source.
func (ds dataDataSourceAttributes) Outputs() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](ds.ref.Append("outputs"))
}

// Random returns a reference to field random of null_data_source.
func (ds dataDataSourceAttributes) Random() terra.StringValue {
	return terra.ReferenceAsString(ds.ref.Append("random"))
}
