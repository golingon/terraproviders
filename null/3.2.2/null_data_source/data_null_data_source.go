// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package null_data_source

import "github.com/golingon/lingon/pkg/terra"

// Data creates a new instance of [DataSource].
func Data(name string, args DataArgs) *DataSource {
	return &DataSource{
		Args: args,
		Name: name,
	}
}

var _ terra.DataSource = (*DataSource)(nil)

// DataSource represents the Terraform data resource null_data_source.
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (nds *DataSource) DataSource() string {
	return "null_data_source"
}

// LocalName returns the local name for [DataSource].
func (nds *DataSource) LocalName() string {
	return nds.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (nds *DataSource) Configuration() interface{} {
	return nds.Args
}

// Attributes returns the attributes for [DataSource].
func (nds *DataSource) Attributes() dataNullDataSourceAttributes {
	return dataNullDataSourceAttributes{ref: terra.ReferenceDataSource(nds)}
}

// DataArgs contains the configurations for null_data_source.
type DataArgs struct {
	// HasComputedDefault: string, optional
	HasComputedDefault terra.StringValue `hcl:"has_computed_default,attr"`
	// Inputs: map of string, optional
	Inputs terra.MapValue[terra.StringValue] `hcl:"inputs,attr"`
}

type dataNullDataSourceAttributes struct {
	ref terra.Reference
}

// HasComputedDefault returns a reference to field has_computed_default of null_data_source.
func (nds dataNullDataSourceAttributes) HasComputedDefault() terra.StringValue {
	return terra.ReferenceAsString(nds.ref.Append("has_computed_default"))
}

// Id returns a reference to field id of null_data_source.
func (nds dataNullDataSourceAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(nds.ref.Append("id"))
}

// Inputs returns a reference to field inputs of null_data_source.
func (nds dataNullDataSourceAttributes) Inputs() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](nds.ref.Append("inputs"))
}

// Outputs returns a reference to field outputs of null_data_source.
func (nds dataNullDataSourceAttributes) Outputs() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](nds.ref.Append("outputs"))
}

// Random returns a reference to field random of null_data_source.
func (nds dataNullDataSourceAttributes) Random() terra.StringValue {
	return terra.ReferenceAsString(nds.ref.Append("random"))
}
