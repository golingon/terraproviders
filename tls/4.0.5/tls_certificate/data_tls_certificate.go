// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package tls_certificate

import "github.com/golingon/lingon/pkg/terra"

// Data creates a new instance of [DataSource].
func Data(name string, args DataArgs) *DataSource {
	return &DataSource{
		Args: args,
		Name: name,
	}
}

var _ terra.DataSource = (*DataSource)(nil)

// DataSource represents the Terraform data resource tls_certificate.
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (tc *DataSource) DataSource() string {
	return "tls_certificate"
}

// LocalName returns the local name for [DataSource].
func (tc *DataSource) LocalName() string {
	return tc.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (tc *DataSource) Configuration() interface{} {
	return tc.Args
}

// Attributes returns the attributes for [DataSource].
func (tc *DataSource) Attributes() dataTlsCertificateAttributes {
	return dataTlsCertificateAttributes{ref: terra.ReferenceDataSource(tc)}
}

// DataArgs contains the configurations for tls_certificate.
type DataArgs struct {
	// Content: string, optional
	Content terra.StringValue `hcl:"content,attr"`
	// Url: string, optional
	Url terra.StringValue `hcl:"url,attr"`
	// VerifyChain: bool, optional
	VerifyChain terra.BoolValue `hcl:"verify_chain,attr"`
}

type dataTlsCertificateAttributes struct {
	ref terra.Reference
}

// Content returns a reference to field content of tls_certificate.
func (tc dataTlsCertificateAttributes) Content() terra.StringValue {
	return terra.ReferenceAsString(tc.ref.Append("content"))
}

// Id returns a reference to field id of tls_certificate.
func (tc dataTlsCertificateAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(tc.ref.Append("id"))
}

// Url returns a reference to field url of tls_certificate.
func (tc dataTlsCertificateAttributes) Url() terra.StringValue {
	return terra.ReferenceAsString(tc.ref.Append("url"))
}

// VerifyChain returns a reference to field verify_chain of tls_certificate.
func (tc dataTlsCertificateAttributes) VerifyChain() terra.BoolValue {
	return terra.ReferenceAsBool(tc.ref.Append("verify_chain"))
}

func (tc dataTlsCertificateAttributes) Certificates() terra.ListValue[DataCertificatesAttributes] {
	return terra.ReferenceAsList[DataCertificatesAttributes](tc.ref.Append("certificates"))
}
