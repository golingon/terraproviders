// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package tls

import (
	datacertificate "github.com/golingon/terraproviders/tls/4.0.0/datacertificate"
	"github.com/volvo-cars/lingon/pkg/terra"
)

func NewDataCertificate(name string, args DataCertificateArgs) *DataCertificate {
	return &DataCertificate{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataCertificate)(nil)

type DataCertificate struct {
	Name string
	Args DataCertificateArgs
}

func (c *DataCertificate) DataSource() string {
	return "tls_certificate"
}

func (c *DataCertificate) LocalName() string {
	return c.Name
}

func (c *DataCertificate) Configuration() interface{} {
	return c.Args
}

func (c *DataCertificate) Attributes() dataCertificateAttributes {
	return dataCertificateAttributes{ref: terra.ReferenceDataResource(c)}
}

type DataCertificateArgs struct {
	// Content: string, optional
	Content terra.StringValue `hcl:"content,attr"`
	// Url: string, optional
	Url terra.StringValue `hcl:"url,attr"`
	// VerifyChain: bool, optional
	VerifyChain terra.BoolValue `hcl:"verify_chain,attr"`
	// Certificates: min=0
	Certificates []datacertificate.Certificates `hcl:"certificates,block" validate:"min=0"`
}
type dataCertificateAttributes struct {
	ref terra.Reference
}

func (c dataCertificateAttributes) Content() terra.StringValue {
	return terra.ReferenceString(c.ref.Append("content"))
}

func (c dataCertificateAttributes) Id() terra.StringValue {
	return terra.ReferenceString(c.ref.Append("id"))
}

func (c dataCertificateAttributes) Url() terra.StringValue {
	return terra.ReferenceString(c.ref.Append("url"))
}

func (c dataCertificateAttributes) VerifyChain() terra.BoolValue {
	return terra.ReferenceBool(c.ref.Append("verify_chain"))
}

func (c dataCertificateAttributes) Certificates() terra.ListValue[datacertificate.CertificatesAttributes] {
	return terra.ReferenceList[datacertificate.CertificatesAttributes](c.ref.Append("certificates"))
}
