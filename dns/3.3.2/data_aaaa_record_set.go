// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package dns

import "github.com/volvo-cars/lingon/pkg/terra"

// NewDataAaaaRecordSet creates a new instance of [DataAaaaRecordSet].
func NewDataAaaaRecordSet(name string, args DataAaaaRecordSetArgs) *DataAaaaRecordSet {
	return &DataAaaaRecordSet{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataAaaaRecordSet)(nil)

// DataAaaaRecordSet represents the Terraform data resource dns_aaaa_record_set.
type DataAaaaRecordSet struct {
	Name string
	Args DataAaaaRecordSetArgs
}

// DataSource returns the Terraform object type for [DataAaaaRecordSet].
func (ars *DataAaaaRecordSet) DataSource() string {
	return "dns_aaaa_record_set"
}

// LocalName returns the local name for [DataAaaaRecordSet].
func (ars *DataAaaaRecordSet) LocalName() string {
	return ars.Name
}

// Configuration returns the configuration (args) for [DataAaaaRecordSet].
func (ars *DataAaaaRecordSet) Configuration() interface{} {
	return ars.Args
}

// Attributes returns the attributes for [DataAaaaRecordSet].
func (ars *DataAaaaRecordSet) Attributes() dataAaaaRecordSetAttributes {
	return dataAaaaRecordSetAttributes{ref: terra.ReferenceDataResource(ars)}
}

// DataAaaaRecordSetArgs contains the configurations for dns_aaaa_record_set.
type DataAaaaRecordSetArgs struct {
	// Host: string, required
	Host terra.StringValue `hcl:"host,attr" validate:"required"`
}
type dataAaaaRecordSetAttributes struct {
	ref terra.Reference
}

// Addrs returns a reference to field addrs of dns_aaaa_record_set.
func (ars dataAaaaRecordSetAttributes) Addrs() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](ars.ref.Append("addrs"))
}

// Host returns a reference to field host of dns_aaaa_record_set.
func (ars dataAaaaRecordSetAttributes) Host() terra.StringValue {
	return terra.ReferenceAsString(ars.ref.Append("host"))
}

// Id returns a reference to field id of dns_aaaa_record_set.
func (ars dataAaaaRecordSetAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(ars.ref.Append("id"))
}
