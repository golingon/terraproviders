// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package dns_ptr_record_set

import "github.com/golingon/lingon/pkg/terra"

// Data creates a new instance of [DataSource].
func Data(name string, args DataArgs) *DataSource {
	return &DataSource{
		Args: args,
		Name: name,
	}
}

var _ terra.DataSource = (*DataSource)(nil)

// DataSource represents the Terraform data resource dns_ptr_record_set.
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (dprs *DataSource) DataSource() string {
	return "dns_ptr_record_set"
}

// LocalName returns the local name for [DataSource].
func (dprs *DataSource) LocalName() string {
	return dprs.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (dprs *DataSource) Configuration() interface{} {
	return dprs.Args
}

// Attributes returns the attributes for [DataSource].
func (dprs *DataSource) Attributes() dataDnsPtrRecordSetAttributes {
	return dataDnsPtrRecordSetAttributes{ref: terra.ReferenceDataSource(dprs)}
}

// DataArgs contains the configurations for dns_ptr_record_set.
type DataArgs struct {
	// IpAddress: string, required
	IpAddress terra.StringValue `hcl:"ip_address,attr" validate:"required"`
}

type dataDnsPtrRecordSetAttributes struct {
	ref terra.Reference
}

// Id returns a reference to field id of dns_ptr_record_set.
func (dprs dataDnsPtrRecordSetAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(dprs.ref.Append("id"))
}

// IpAddress returns a reference to field ip_address of dns_ptr_record_set.
func (dprs dataDnsPtrRecordSetAttributes) IpAddress() terra.StringValue {
	return terra.ReferenceAsString(dprs.ref.Append("ip_address"))
}

// Ptr returns a reference to field ptr of dns_ptr_record_set.
func (dprs dataDnsPtrRecordSetAttributes) Ptr() terra.StringValue {
	return terra.ReferenceAsString(dprs.ref.Append("ptr"))
}
