// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package dns

import "github.com/golingon/lingon/pkg/terra"

// NewDataCnameRecordSet creates a new instance of [DataCnameRecordSet].
func NewDataCnameRecordSet(name string, args DataCnameRecordSetArgs) *DataCnameRecordSet {
	return &DataCnameRecordSet{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataCnameRecordSet)(nil)

// DataCnameRecordSet represents the Terraform data resource dns_cname_record_set.
type DataCnameRecordSet struct {
	Name string
	Args DataCnameRecordSetArgs
}

// DataSource returns the Terraform object type for [DataCnameRecordSet].
func (crs *DataCnameRecordSet) DataSource() string {
	return "dns_cname_record_set"
}

// LocalName returns the local name for [DataCnameRecordSet].
func (crs *DataCnameRecordSet) LocalName() string {
	return crs.Name
}

// Configuration returns the configuration (args) for [DataCnameRecordSet].
func (crs *DataCnameRecordSet) Configuration() interface{} {
	return crs.Args
}

// Attributes returns the attributes for [DataCnameRecordSet].
func (crs *DataCnameRecordSet) Attributes() dataCnameRecordSetAttributes {
	return dataCnameRecordSetAttributes{ref: terra.ReferenceDataResource(crs)}
}

// DataCnameRecordSetArgs contains the configurations for dns_cname_record_set.
type DataCnameRecordSetArgs struct {
	// Host: string, required
	Host terra.StringValue `hcl:"host,attr" validate:"required"`
}
type dataCnameRecordSetAttributes struct {
	ref terra.Reference
}

// Cname returns a reference to field cname of dns_cname_record_set.
func (crs dataCnameRecordSetAttributes) Cname() terra.StringValue {
	return terra.ReferenceAsString(crs.ref.Append("cname"))
}

// Host returns a reference to field host of dns_cname_record_set.
func (crs dataCnameRecordSetAttributes) Host() terra.StringValue {
	return terra.ReferenceAsString(crs.ref.Append("host"))
}

// Id returns a reference to field id of dns_cname_record_set.
func (crs dataCnameRecordSetAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(crs.ref.Append("id"))
}
