// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package dns_srv_record_set

import "github.com/golingon/lingon/pkg/terra"

// Data creates a new instance of [DataSource].
func Data(name string, args DataArgs) *DataSource {
	return &DataSource{
		Args: args,
		Name: name,
	}
}

var _ terra.DataSource = (*DataSource)(nil)

// DataSource represents the Terraform data resource dns_srv_record_set.
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (dsrs *DataSource) DataSource() string {
	return "dns_srv_record_set"
}

// LocalName returns the local name for [DataSource].
func (dsrs *DataSource) LocalName() string {
	return dsrs.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (dsrs *DataSource) Configuration() interface{} {
	return dsrs.Args
}

// Attributes returns the attributes for [DataSource].
func (dsrs *DataSource) Attributes() dataDnsSrvRecordSetAttributes {
	return dataDnsSrvRecordSetAttributes{ref: terra.ReferenceDataSource(dsrs)}
}

// DataArgs contains the configurations for dns_srv_record_set.
type DataArgs struct {
	// Service: string, required
	Service terra.StringValue `hcl:"service,attr" validate:"required"`
}

type dataDnsSrvRecordSetAttributes struct {
	ref terra.Reference
}

// Id returns a reference to field id of dns_srv_record_set.
func (dsrs dataDnsSrvRecordSetAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(dsrs.ref.Append("id"))
}

// Service returns a reference to field service of dns_srv_record_set.
func (dsrs dataDnsSrvRecordSetAttributes) Service() terra.StringValue {
	return terra.ReferenceAsString(dsrs.ref.Append("service"))
}

func (dsrs dataDnsSrvRecordSetAttributes) Srv() terra.ListValue[DataSrvAttributes] {
	return terra.ReferenceAsList[DataSrvAttributes](dsrs.ref.Append("srv"))
}
