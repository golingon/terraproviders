// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package dns_cname_record_set

import "github.com/golingon/lingon/pkg/terra"

// Data creates a new instance of [DataSource].
func Data(name string, args DataArgs) *DataSource {
	return &DataSource{
		Args: args,
		Name: name,
	}
}

var _ terra.DataSource = (*DataSource)(nil)

// DataSource represents the Terraform data resource dns_cname_record_set.
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (dcrs *DataSource) DataSource() string {
	return "dns_cname_record_set"
}

// LocalName returns the local name for [DataSource].
func (dcrs *DataSource) LocalName() string {
	return dcrs.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (dcrs *DataSource) Configuration() interface{} {
	return dcrs.Args
}

// Attributes returns the attributes for [DataSource].
func (dcrs *DataSource) Attributes() dataDnsCnameRecordSetAttributes {
	return dataDnsCnameRecordSetAttributes{ref: terra.ReferenceDataSource(dcrs)}
}

// DataArgs contains the configurations for dns_cname_record_set.
type DataArgs struct {
	// Host: string, required
	Host terra.StringValue `hcl:"host,attr" validate:"required"`
}

type dataDnsCnameRecordSetAttributes struct {
	ref terra.Reference
}

// Cname returns a reference to field cname of dns_cname_record_set.
func (dcrs dataDnsCnameRecordSetAttributes) Cname() terra.StringValue {
	return terra.ReferenceAsString(dcrs.ref.Append("cname"))
}

// Host returns a reference to field host of dns_cname_record_set.
func (dcrs dataDnsCnameRecordSetAttributes) Host() terra.StringValue {
	return terra.ReferenceAsString(dcrs.ref.Append("host"))
}

// Id returns a reference to field id of dns_cname_record_set.
func (dcrs dataDnsCnameRecordSetAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(dcrs.ref.Append("id"))
}
