// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package dns

import "github.com/volvo-cars/lingon/pkg/terra"

// NewDataARecordSet creates a new instance of [DataARecordSet].
func NewDataARecordSet(name string, args DataARecordSetArgs) *DataARecordSet {
	return &DataARecordSet{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataARecordSet)(nil)

// DataARecordSet represents the Terraform data resource dns_a_record_set.
type DataARecordSet struct {
	Name string
	Args DataARecordSetArgs
}

// DataSource returns the Terraform object type for [DataARecordSet].
func (ars *DataARecordSet) DataSource() string {
	return "dns_a_record_set"
}

// LocalName returns the local name for [DataARecordSet].
func (ars *DataARecordSet) LocalName() string {
	return ars.Name
}

// Configuration returns the configuration (args) for [DataARecordSet].
func (ars *DataARecordSet) Configuration() interface{} {
	return ars.Args
}

// Attributes returns the attributes for [DataARecordSet].
func (ars *DataARecordSet) Attributes() dataARecordSetAttributes {
	return dataARecordSetAttributes{ref: terra.ReferenceDataResource(ars)}
}

// DataARecordSetArgs contains the configurations for dns_a_record_set.
type DataARecordSetArgs struct {
	// Host: string, required
	Host terra.StringValue `hcl:"host,attr" validate:"required"`
}
type dataARecordSetAttributes struct {
	ref terra.Reference
}

// Addrs returns a reference to field addrs of dns_a_record_set.
func (ars dataARecordSetAttributes) Addrs() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](ars.ref.Append("addrs"))
}

// Host returns a reference to field host of dns_a_record_set.
func (ars dataARecordSetAttributes) Host() terra.StringValue {
	return terra.ReferenceAsString(ars.ref.Append("host"))
}

// Id returns a reference to field id of dns_a_record_set.
func (ars dataARecordSetAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(ars.ref.Append("id"))
}
