// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package dns

import (
	datasrvrecordset "github.com/golingon/terraproviders/dns/3.3.0/datasrvrecordset"
	"github.com/volvo-cars/lingon/pkg/terra"
)

// NewDataSrvRecordSet creates a new instance of [DataSrvRecordSet].
func NewDataSrvRecordSet(name string, args DataSrvRecordSetArgs) *DataSrvRecordSet {
	return &DataSrvRecordSet{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataSrvRecordSet)(nil)

// DataSrvRecordSet represents the Terraform data resource dns_srv_record_set.
type DataSrvRecordSet struct {
	Name string
	Args DataSrvRecordSetArgs
}

// DataSource returns the Terraform object type for [DataSrvRecordSet].
func (srs *DataSrvRecordSet) DataSource() string {
	return "dns_srv_record_set"
}

// LocalName returns the local name for [DataSrvRecordSet].
func (srs *DataSrvRecordSet) LocalName() string {
	return srs.Name
}

// Configuration returns the configuration (args) for [DataSrvRecordSet].
func (srs *DataSrvRecordSet) Configuration() interface{} {
	return srs.Args
}

// Attributes returns the attributes for [DataSrvRecordSet].
func (srs *DataSrvRecordSet) Attributes() dataSrvRecordSetAttributes {
	return dataSrvRecordSetAttributes{ref: terra.ReferenceDataResource(srs)}
}

// DataSrvRecordSetArgs contains the configurations for dns_srv_record_set.
type DataSrvRecordSetArgs struct {
	// Service: string, required
	Service terra.StringValue `hcl:"service,attr" validate:"required"`
	// Srv: min=0
	Srv []datasrvrecordset.Srv `hcl:"srv,block" validate:"min=0"`
}
type dataSrvRecordSetAttributes struct {
	ref terra.Reference
}

// Id returns a reference to field id of dns_srv_record_set.
func (srs dataSrvRecordSetAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(srs.ref.Append("id"))
}

// Service returns a reference to field service of dns_srv_record_set.
func (srs dataSrvRecordSetAttributes) Service() terra.StringValue {
	return terra.ReferenceAsString(srs.ref.Append("service"))
}

func (srs dataSrvRecordSetAttributes) Srv() terra.ListValue[datasrvrecordset.SrvAttributes] {
	return terra.ReferenceAsList[datasrvrecordset.SrvAttributes](srs.ref.Append("srv"))
}
