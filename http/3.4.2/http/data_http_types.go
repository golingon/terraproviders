// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package http

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DataRetry struct {
	// Attempts: number, optional
	Attempts terra.NumberValue `hcl:"attempts,attr"`
	// MaxDelayMs: number, optional
	MaxDelayMs terra.NumberValue `hcl:"max_delay_ms,attr"`
	// MinDelayMs: number, optional
	MinDelayMs terra.NumberValue `hcl:"min_delay_ms,attr"`
}

type DataRetryAttributes struct {
	ref terra.Reference
}

func (r DataRetryAttributes) InternalRef() (terra.Reference, error) {
	return r.ref, nil
}

func (r DataRetryAttributes) InternalWithRef(ref terra.Reference) DataRetryAttributes {
	return DataRetryAttributes{ref: ref}
}

func (r DataRetryAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return r.ref.InternalTokens()
}

func (r DataRetryAttributes) Attempts() terra.NumberValue {
	return terra.ReferenceAsNumber(r.ref.Append("attempts"))
}

func (r DataRetryAttributes) MaxDelayMs() terra.NumberValue {
	return terra.ReferenceAsNumber(r.ref.Append("max_delay_ms"))
}

func (r DataRetryAttributes) MinDelayMs() terra.NumberValue {
	return terra.ReferenceAsNumber(r.ref.Append("min_delay_ms"))
}

type DataRetryState struct {
	Attempts   float64 `json:"attempts"`
	MaxDelayMs float64 `json:"max_delay_ms"`
	MinDelayMs float64 `json:"min_delay_ms"`
}
