// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azuread

import "github.com/volvo-cars/lingon/pkg/terra"

func NewProvider(args ProviderArgs) *Provider {
	return &Provider{Args: args}
}

var _ terra.Provider = (*Provider)(nil)

type Provider struct {
	Args ProviderArgs
}

// LocalName returns the provider local name for [Provider].
func (p *Provider) LocalName() string {
	return "azuread"
}

// Source returns the provider source for [Provider].
func (p *Provider) Source() string {
	return "hashicorp/azuread"
}

// Version returns the provider version for [Provider].
func (p *Provider) Version() string {
	return "2.43.0"
}

// Configuration returns the configuration (args) for [Provider].
func (p *Provider) Configuration() interface{} {
	return p.Args
}

// ProviderArgs contains the configurations for provider.
type ProviderArgs struct {
	// ClientCertificate: string, optional
	ClientCertificate terra.StringValue `hcl:"client_certificate,attr"`
	// ClientCertificatePassword: string, optional
	ClientCertificatePassword terra.StringValue `hcl:"client_certificate_password,attr"`
	// ClientCertificatePath: string, optional
	ClientCertificatePath terra.StringValue `hcl:"client_certificate_path,attr"`
	// ClientId: string, optional
	ClientId terra.StringValue `hcl:"client_id,attr"`
	// ClientIdFilePath: string, optional
	ClientIdFilePath terra.StringValue `hcl:"client_id_file_path,attr"`
	// ClientSecret: string, optional
	ClientSecret terra.StringValue `hcl:"client_secret,attr"`
	// ClientSecretFilePath: string, optional
	ClientSecretFilePath terra.StringValue `hcl:"client_secret_file_path,attr"`
	// DisableTerraformPartnerId: bool, optional
	DisableTerraformPartnerId terra.BoolValue `hcl:"disable_terraform_partner_id,attr"`
	// Environment: string, optional
	Environment terra.StringValue `hcl:"environment,attr"`
	// MetadataHost: string, optional
	MetadataHost terra.StringValue `hcl:"metadata_host,attr"`
	// MsiEndpoint: string, optional
	MsiEndpoint terra.StringValue `hcl:"msi_endpoint,attr"`
	// OidcRequestToken: string, optional
	OidcRequestToken terra.StringValue `hcl:"oidc_request_token,attr"`
	// OidcRequestUrl: string, optional
	OidcRequestUrl terra.StringValue `hcl:"oidc_request_url,attr"`
	// OidcToken: string, optional
	OidcToken terra.StringValue `hcl:"oidc_token,attr"`
	// OidcTokenFilePath: string, optional
	OidcTokenFilePath terra.StringValue `hcl:"oidc_token_file_path,attr"`
	// PartnerId: string, optional
	PartnerId terra.StringValue `hcl:"partner_id,attr"`
	// TenantId: string, optional
	TenantId terra.StringValue `hcl:"tenant_id,attr"`
	// UseCli: bool, optional
	UseCli terra.BoolValue `hcl:"use_cli,attr"`
	// UseMsi: bool, optional
	UseMsi terra.BoolValue `hcl:"use_msi,attr"`
	// UseOidc: bool, optional
	UseOidc terra.BoolValue `hcl:"use_oidc,attr"`
}
