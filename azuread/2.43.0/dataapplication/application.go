// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package dataapplication

import (
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
	terra "github.com/volvo-cars/lingon/pkg/terra"
)

type Api struct {
	// Oauth2PermissionScopes: min=0
	Oauth2PermissionScopes []Oauth2PermissionScopes `hcl:"oauth2_permission_scopes,block" validate:"min=0"`
}

type Oauth2PermissionScopes struct{}

type AppRoles struct{}

type FeatureTags struct{}

type OptionalClaims struct {
	// AccessToken: min=0
	AccessToken []AccessToken `hcl:"access_token,block" validate:"min=0"`
	// IdToken: min=0
	IdToken []IdToken `hcl:"id_token,block" validate:"min=0"`
	// Saml2Token: min=0
	Saml2Token []Saml2Token `hcl:"saml2_token,block" validate:"min=0"`
}

type AccessToken struct{}

type IdToken struct{}

type Saml2Token struct{}

type PublicClient struct{}

type RequiredResourceAccess struct {
	// ResourceAccess: min=0
	ResourceAccess []ResourceAccess `hcl:"resource_access,block" validate:"min=0"`
}

type ResourceAccess struct{}

type SinglePageApplication struct{}

type Web struct {
	// ImplicitGrant: min=0
	ImplicitGrant []ImplicitGrant `hcl:"implicit_grant,block" validate:"min=0"`
}

type ImplicitGrant struct{}

type Timeouts struct {
	// Read: string, optional
	Read terra.StringValue `hcl:"read,attr"`
}

type ApiAttributes struct {
	ref terra.Reference
}

func (a ApiAttributes) InternalRef() (terra.Reference, error) {
	return a.ref, nil
}

func (a ApiAttributes) InternalWithRef(ref terra.Reference) ApiAttributes {
	return ApiAttributes{ref: ref}
}

func (a ApiAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return a.ref.InternalTokens()
}

func (a ApiAttributes) KnownClientApplications() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](a.ref.Append("known_client_applications"))
}

func (a ApiAttributes) MappedClaimsEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(a.ref.Append("mapped_claims_enabled"))
}

func (a ApiAttributes) RequestedAccessTokenVersion() terra.NumberValue {
	return terra.ReferenceAsNumber(a.ref.Append("requested_access_token_version"))
}

func (a ApiAttributes) Oauth2PermissionScopes() terra.ListValue[Oauth2PermissionScopesAttributes] {
	return terra.ReferenceAsList[Oauth2PermissionScopesAttributes](a.ref.Append("oauth2_permission_scopes"))
}

type Oauth2PermissionScopesAttributes struct {
	ref terra.Reference
}

func (ops Oauth2PermissionScopesAttributes) InternalRef() (terra.Reference, error) {
	return ops.ref, nil
}

func (ops Oauth2PermissionScopesAttributes) InternalWithRef(ref terra.Reference) Oauth2PermissionScopesAttributes {
	return Oauth2PermissionScopesAttributes{ref: ref}
}

func (ops Oauth2PermissionScopesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ops.ref.InternalTokens()
}

func (ops Oauth2PermissionScopesAttributes) AdminConsentDescription() terra.StringValue {
	return terra.ReferenceAsString(ops.ref.Append("admin_consent_description"))
}

func (ops Oauth2PermissionScopesAttributes) AdminConsentDisplayName() terra.StringValue {
	return terra.ReferenceAsString(ops.ref.Append("admin_consent_display_name"))
}

func (ops Oauth2PermissionScopesAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceAsBool(ops.ref.Append("enabled"))
}

func (ops Oauth2PermissionScopesAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(ops.ref.Append("id"))
}

func (ops Oauth2PermissionScopesAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(ops.ref.Append("type"))
}

func (ops Oauth2PermissionScopesAttributes) UserConsentDescription() terra.StringValue {
	return terra.ReferenceAsString(ops.ref.Append("user_consent_description"))
}

func (ops Oauth2PermissionScopesAttributes) UserConsentDisplayName() terra.StringValue {
	return terra.ReferenceAsString(ops.ref.Append("user_consent_display_name"))
}

func (ops Oauth2PermissionScopesAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(ops.ref.Append("value"))
}

type AppRolesAttributes struct {
	ref terra.Reference
}

func (ar AppRolesAttributes) InternalRef() (terra.Reference, error) {
	return ar.ref, nil
}

func (ar AppRolesAttributes) InternalWithRef(ref terra.Reference) AppRolesAttributes {
	return AppRolesAttributes{ref: ref}
}

func (ar AppRolesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ar.ref.InternalTokens()
}

func (ar AppRolesAttributes) AllowedMemberTypes() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](ar.ref.Append("allowed_member_types"))
}

func (ar AppRolesAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(ar.ref.Append("description"))
}

func (ar AppRolesAttributes) DisplayName() terra.StringValue {
	return terra.ReferenceAsString(ar.ref.Append("display_name"))
}

func (ar AppRolesAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceAsBool(ar.ref.Append("enabled"))
}

func (ar AppRolesAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(ar.ref.Append("id"))
}

func (ar AppRolesAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(ar.ref.Append("value"))
}

type FeatureTagsAttributes struct {
	ref terra.Reference
}

func (ft FeatureTagsAttributes) InternalRef() (terra.Reference, error) {
	return ft.ref, nil
}

func (ft FeatureTagsAttributes) InternalWithRef(ref terra.Reference) FeatureTagsAttributes {
	return FeatureTagsAttributes{ref: ref}
}

func (ft FeatureTagsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ft.ref.InternalTokens()
}

func (ft FeatureTagsAttributes) CustomSingleSignOn() terra.BoolValue {
	return terra.ReferenceAsBool(ft.ref.Append("custom_single_sign_on"))
}

func (ft FeatureTagsAttributes) Enterprise() terra.BoolValue {
	return terra.ReferenceAsBool(ft.ref.Append("enterprise"))
}

func (ft FeatureTagsAttributes) Gallery() terra.BoolValue {
	return terra.ReferenceAsBool(ft.ref.Append("gallery"))
}

func (ft FeatureTagsAttributes) Hide() terra.BoolValue {
	return terra.ReferenceAsBool(ft.ref.Append("hide"))
}

type OptionalClaimsAttributes struct {
	ref terra.Reference
}

func (oc OptionalClaimsAttributes) InternalRef() (terra.Reference, error) {
	return oc.ref, nil
}

func (oc OptionalClaimsAttributes) InternalWithRef(ref terra.Reference) OptionalClaimsAttributes {
	return OptionalClaimsAttributes{ref: ref}
}

func (oc OptionalClaimsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return oc.ref.InternalTokens()
}

func (oc OptionalClaimsAttributes) AccessToken() terra.ListValue[AccessTokenAttributes] {
	return terra.ReferenceAsList[AccessTokenAttributes](oc.ref.Append("access_token"))
}

func (oc OptionalClaimsAttributes) IdToken() terra.ListValue[IdTokenAttributes] {
	return terra.ReferenceAsList[IdTokenAttributes](oc.ref.Append("id_token"))
}

func (oc OptionalClaimsAttributes) Saml2Token() terra.ListValue[Saml2TokenAttributes] {
	return terra.ReferenceAsList[Saml2TokenAttributes](oc.ref.Append("saml2_token"))
}

type AccessTokenAttributes struct {
	ref terra.Reference
}

func (at AccessTokenAttributes) InternalRef() (terra.Reference, error) {
	return at.ref, nil
}

func (at AccessTokenAttributes) InternalWithRef(ref terra.Reference) AccessTokenAttributes {
	return AccessTokenAttributes{ref: ref}
}

func (at AccessTokenAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return at.ref.InternalTokens()
}

func (at AccessTokenAttributes) AdditionalProperties() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](at.ref.Append("additional_properties"))
}

func (at AccessTokenAttributes) Essential() terra.BoolValue {
	return terra.ReferenceAsBool(at.ref.Append("essential"))
}

func (at AccessTokenAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(at.ref.Append("name"))
}

func (at AccessTokenAttributes) Source() terra.StringValue {
	return terra.ReferenceAsString(at.ref.Append("source"))
}

type IdTokenAttributes struct {
	ref terra.Reference
}

func (it IdTokenAttributes) InternalRef() (terra.Reference, error) {
	return it.ref, nil
}

func (it IdTokenAttributes) InternalWithRef(ref terra.Reference) IdTokenAttributes {
	return IdTokenAttributes{ref: ref}
}

func (it IdTokenAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return it.ref.InternalTokens()
}

func (it IdTokenAttributes) AdditionalProperties() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](it.ref.Append("additional_properties"))
}

func (it IdTokenAttributes) Essential() terra.BoolValue {
	return terra.ReferenceAsBool(it.ref.Append("essential"))
}

func (it IdTokenAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(it.ref.Append("name"))
}

func (it IdTokenAttributes) Source() terra.StringValue {
	return terra.ReferenceAsString(it.ref.Append("source"))
}

type Saml2TokenAttributes struct {
	ref terra.Reference
}

func (st Saml2TokenAttributes) InternalRef() (terra.Reference, error) {
	return st.ref, nil
}

func (st Saml2TokenAttributes) InternalWithRef(ref terra.Reference) Saml2TokenAttributes {
	return Saml2TokenAttributes{ref: ref}
}

func (st Saml2TokenAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return st.ref.InternalTokens()
}

func (st Saml2TokenAttributes) AdditionalProperties() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](st.ref.Append("additional_properties"))
}

func (st Saml2TokenAttributes) Essential() terra.BoolValue {
	return terra.ReferenceAsBool(st.ref.Append("essential"))
}

func (st Saml2TokenAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(st.ref.Append("name"))
}

func (st Saml2TokenAttributes) Source() terra.StringValue {
	return terra.ReferenceAsString(st.ref.Append("source"))
}

type PublicClientAttributes struct {
	ref terra.Reference
}

func (pc PublicClientAttributes) InternalRef() (terra.Reference, error) {
	return pc.ref, nil
}

func (pc PublicClientAttributes) InternalWithRef(ref terra.Reference) PublicClientAttributes {
	return PublicClientAttributes{ref: ref}
}

func (pc PublicClientAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return pc.ref.InternalTokens()
}

func (pc PublicClientAttributes) RedirectUris() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](pc.ref.Append("redirect_uris"))
}

type RequiredResourceAccessAttributes struct {
	ref terra.Reference
}

func (rra RequiredResourceAccessAttributes) InternalRef() (terra.Reference, error) {
	return rra.ref, nil
}

func (rra RequiredResourceAccessAttributes) InternalWithRef(ref terra.Reference) RequiredResourceAccessAttributes {
	return RequiredResourceAccessAttributes{ref: ref}
}

func (rra RequiredResourceAccessAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rra.ref.InternalTokens()
}

func (rra RequiredResourceAccessAttributes) ResourceAppId() terra.StringValue {
	return terra.ReferenceAsString(rra.ref.Append("resource_app_id"))
}

func (rra RequiredResourceAccessAttributes) ResourceAccess() terra.ListValue[ResourceAccessAttributes] {
	return terra.ReferenceAsList[ResourceAccessAttributes](rra.ref.Append("resource_access"))
}

type ResourceAccessAttributes struct {
	ref terra.Reference
}

func (ra ResourceAccessAttributes) InternalRef() (terra.Reference, error) {
	return ra.ref, nil
}

func (ra ResourceAccessAttributes) InternalWithRef(ref terra.Reference) ResourceAccessAttributes {
	return ResourceAccessAttributes{ref: ref}
}

func (ra ResourceAccessAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ra.ref.InternalTokens()
}

func (ra ResourceAccessAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(ra.ref.Append("id"))
}

func (ra ResourceAccessAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(ra.ref.Append("type"))
}

type SinglePageApplicationAttributes struct {
	ref terra.Reference
}

func (spa SinglePageApplicationAttributes) InternalRef() (terra.Reference, error) {
	return spa.ref, nil
}

func (spa SinglePageApplicationAttributes) InternalWithRef(ref terra.Reference) SinglePageApplicationAttributes {
	return SinglePageApplicationAttributes{ref: ref}
}

func (spa SinglePageApplicationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return spa.ref.InternalTokens()
}

func (spa SinglePageApplicationAttributes) RedirectUris() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](spa.ref.Append("redirect_uris"))
}

type WebAttributes struct {
	ref terra.Reference
}

func (w WebAttributes) InternalRef() (terra.Reference, error) {
	return w.ref, nil
}

func (w WebAttributes) InternalWithRef(ref terra.Reference) WebAttributes {
	return WebAttributes{ref: ref}
}

func (w WebAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return w.ref.InternalTokens()
}

func (w WebAttributes) HomepageUrl() terra.StringValue {
	return terra.ReferenceAsString(w.ref.Append("homepage_url"))
}

func (w WebAttributes) LogoutUrl() terra.StringValue {
	return terra.ReferenceAsString(w.ref.Append("logout_url"))
}

func (w WebAttributes) RedirectUris() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](w.ref.Append("redirect_uris"))
}

func (w WebAttributes) ImplicitGrant() terra.ListValue[ImplicitGrantAttributes] {
	return terra.ReferenceAsList[ImplicitGrantAttributes](w.ref.Append("implicit_grant"))
}

type ImplicitGrantAttributes struct {
	ref terra.Reference
}

func (ig ImplicitGrantAttributes) InternalRef() (terra.Reference, error) {
	return ig.ref, nil
}

func (ig ImplicitGrantAttributes) InternalWithRef(ref terra.Reference) ImplicitGrantAttributes {
	return ImplicitGrantAttributes{ref: ref}
}

func (ig ImplicitGrantAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ig.ref.InternalTokens()
}

func (ig ImplicitGrantAttributes) AccessTokenIssuanceEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(ig.ref.Append("access_token_issuance_enabled"))
}

func (ig ImplicitGrantAttributes) IdTokenIssuanceEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(ig.ref.Append("id_token_issuance_enabled"))
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Read() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("read"))
}

type ApiState struct {
	KnownClientApplications     []string                      `json:"known_client_applications"`
	MappedClaimsEnabled         bool                          `json:"mapped_claims_enabled"`
	RequestedAccessTokenVersion float64                       `json:"requested_access_token_version"`
	Oauth2PermissionScopes      []Oauth2PermissionScopesState `json:"oauth2_permission_scopes"`
}

type Oauth2PermissionScopesState struct {
	AdminConsentDescription string `json:"admin_consent_description"`
	AdminConsentDisplayName string `json:"admin_consent_display_name"`
	Enabled                 bool   `json:"enabled"`
	Id                      string `json:"id"`
	Type                    string `json:"type"`
	UserConsentDescription  string `json:"user_consent_description"`
	UserConsentDisplayName  string `json:"user_consent_display_name"`
	Value                   string `json:"value"`
}

type AppRolesState struct {
	AllowedMemberTypes []string `json:"allowed_member_types"`
	Description        string   `json:"description"`
	DisplayName        string   `json:"display_name"`
	Enabled            bool     `json:"enabled"`
	Id                 string   `json:"id"`
	Value              string   `json:"value"`
}

type FeatureTagsState struct {
	CustomSingleSignOn bool `json:"custom_single_sign_on"`
	Enterprise         bool `json:"enterprise"`
	Gallery            bool `json:"gallery"`
	Hide               bool `json:"hide"`
}

type OptionalClaimsState struct {
	AccessToken []AccessTokenState `json:"access_token"`
	IdToken     []IdTokenState     `json:"id_token"`
	Saml2Token  []Saml2TokenState  `json:"saml2_token"`
}

type AccessTokenState struct {
	AdditionalProperties []string `json:"additional_properties"`
	Essential            bool     `json:"essential"`
	Name                 string   `json:"name"`
	Source               string   `json:"source"`
}

type IdTokenState struct {
	AdditionalProperties []string `json:"additional_properties"`
	Essential            bool     `json:"essential"`
	Name                 string   `json:"name"`
	Source               string   `json:"source"`
}

type Saml2TokenState struct {
	AdditionalProperties []string `json:"additional_properties"`
	Essential            bool     `json:"essential"`
	Name                 string   `json:"name"`
	Source               string   `json:"source"`
}

type PublicClientState struct {
	RedirectUris []string `json:"redirect_uris"`
}

type RequiredResourceAccessState struct {
	ResourceAppId  string                `json:"resource_app_id"`
	ResourceAccess []ResourceAccessState `json:"resource_access"`
}

type ResourceAccessState struct {
	Id   string `json:"id"`
	Type string `json:"type"`
}

type SinglePageApplicationState struct {
	RedirectUris []string `json:"redirect_uris"`
}

type WebState struct {
	HomepageUrl   string               `json:"homepage_url"`
	LogoutUrl     string               `json:"logout_url"`
	RedirectUris  []string             `json:"redirect_uris"`
	ImplicitGrant []ImplicitGrantState `json:"implicit_grant"`
}

type ImplicitGrantState struct {
	AccessTokenIssuanceEnabled bool `json:"access_token_issuance_enabled"`
	IdTokenIssuanceEnabled     bool `json:"id_token_issuance_enabled"`
}

type TimeoutsState struct {
	Read string `json:"read"`
}
