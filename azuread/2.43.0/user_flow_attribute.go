// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azuread

import (
	"encoding/json"
	"fmt"
	userflowattribute "github.com/golingon/terraproviders/azuread/2.43.0/userflowattribute"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

// NewUserFlowAttribute creates a new instance of [UserFlowAttribute].
func NewUserFlowAttribute(name string, args UserFlowAttributeArgs) *UserFlowAttribute {
	return &UserFlowAttribute{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*UserFlowAttribute)(nil)

// UserFlowAttribute represents the Terraform resource azuread_user_flow_attribute.
type UserFlowAttribute struct {
	Name      string
	Args      UserFlowAttributeArgs
	state     *userFlowAttributeState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [UserFlowAttribute].
func (ufa *UserFlowAttribute) Type() string {
	return "azuread_user_flow_attribute"
}

// LocalName returns the local name for [UserFlowAttribute].
func (ufa *UserFlowAttribute) LocalName() string {
	return ufa.Name
}

// Configuration returns the configuration (args) for [UserFlowAttribute].
func (ufa *UserFlowAttribute) Configuration() interface{} {
	return ufa.Args
}

// DependOn is used for other resources to depend on [UserFlowAttribute].
func (ufa *UserFlowAttribute) DependOn() terra.Reference {
	return terra.ReferenceResource(ufa)
}

// Dependencies returns the list of resources [UserFlowAttribute] depends_on.
func (ufa *UserFlowAttribute) Dependencies() terra.Dependencies {
	return ufa.DependsOn
}

// LifecycleManagement returns the lifecycle block for [UserFlowAttribute].
func (ufa *UserFlowAttribute) LifecycleManagement() *terra.Lifecycle {
	return ufa.Lifecycle
}

// Attributes returns the attributes for [UserFlowAttribute].
func (ufa *UserFlowAttribute) Attributes() userFlowAttributeAttributes {
	return userFlowAttributeAttributes{ref: terra.ReferenceResource(ufa)}
}

// ImportState imports the given attribute values into [UserFlowAttribute]'s state.
func (ufa *UserFlowAttribute) ImportState(av io.Reader) error {
	ufa.state = &userFlowAttributeState{}
	if err := json.NewDecoder(av).Decode(ufa.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", ufa.Type(), ufa.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [UserFlowAttribute] has state.
func (ufa *UserFlowAttribute) State() (*userFlowAttributeState, bool) {
	return ufa.state, ufa.state != nil
}

// StateMust returns the state for [UserFlowAttribute]. Panics if the state is nil.
func (ufa *UserFlowAttribute) StateMust() *userFlowAttributeState {
	if ufa.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", ufa.Type(), ufa.LocalName()))
	}
	return ufa.state
}

// UserFlowAttributeArgs contains the configurations for azuread_user_flow_attribute.
type UserFlowAttributeArgs struct {
	// DataType: string, required
	DataType terra.StringValue `hcl:"data_type,attr" validate:"required"`
	// Description: string, required
	Description terra.StringValue `hcl:"description,attr" validate:"required"`
	// DisplayName: string, required
	DisplayName terra.StringValue `hcl:"display_name,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Timeouts: optional
	Timeouts *userflowattribute.Timeouts `hcl:"timeouts,block"`
}
type userFlowAttributeAttributes struct {
	ref terra.Reference
}

// AttributeType returns a reference to field attribute_type of azuread_user_flow_attribute.
func (ufa userFlowAttributeAttributes) AttributeType() terra.StringValue {
	return terra.ReferenceAsString(ufa.ref.Append("attribute_type"))
}

// DataType returns a reference to field data_type of azuread_user_flow_attribute.
func (ufa userFlowAttributeAttributes) DataType() terra.StringValue {
	return terra.ReferenceAsString(ufa.ref.Append("data_type"))
}

// Description returns a reference to field description of azuread_user_flow_attribute.
func (ufa userFlowAttributeAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(ufa.ref.Append("description"))
}

// DisplayName returns a reference to field display_name of azuread_user_flow_attribute.
func (ufa userFlowAttributeAttributes) DisplayName() terra.StringValue {
	return terra.ReferenceAsString(ufa.ref.Append("display_name"))
}

// Id returns a reference to field id of azuread_user_flow_attribute.
func (ufa userFlowAttributeAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(ufa.ref.Append("id"))
}

func (ufa userFlowAttributeAttributes) Timeouts() userflowattribute.TimeoutsAttributes {
	return terra.ReferenceAsSingle[userflowattribute.TimeoutsAttributes](ufa.ref.Append("timeouts"))
}

type userFlowAttributeState struct {
	AttributeType string                           `json:"attribute_type"`
	DataType      string                           `json:"data_type"`
	Description   string                           `json:"description"`
	DisplayName   string                           `json:"display_name"`
	Id            string                           `json:"id"`
	Timeouts      *userflowattribute.TimeoutsState `json:"timeouts"`
}
