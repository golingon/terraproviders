// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azuread

import (
	dataapplication "github.com/golingon/terraproviders/azuread/2.39.0/dataapplication"
	"github.com/volvo-cars/lingon/pkg/terra"
)

// NewDataApplication creates a new instance of [DataApplication].
func NewDataApplication(name string, args DataApplicationArgs) *DataApplication {
	return &DataApplication{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataApplication)(nil)

// DataApplication represents the Terraform data resource azuread_application.
type DataApplication struct {
	Name string
	Args DataApplicationArgs
}

// DataSource returns the Terraform object type for [DataApplication].
func (a *DataApplication) DataSource() string {
	return "azuread_application"
}

// LocalName returns the local name for [DataApplication].
func (a *DataApplication) LocalName() string {
	return a.Name
}

// Configuration returns the configuration (args) for [DataApplication].
func (a *DataApplication) Configuration() interface{} {
	return a.Args
}

// Attributes returns the attributes for [DataApplication].
func (a *DataApplication) Attributes() dataApplicationAttributes {
	return dataApplicationAttributes{ref: terra.ReferenceDataResource(a)}
}

// DataApplicationArgs contains the configurations for azuread_application.
type DataApplicationArgs struct {
	// ApplicationId: string, optional
	ApplicationId terra.StringValue `hcl:"application_id,attr"`
	// DisplayName: string, optional
	DisplayName terra.StringValue `hcl:"display_name,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// ObjectId: string, optional
	ObjectId terra.StringValue `hcl:"object_id,attr"`
	// Api: min=0
	Api []dataapplication.Api `hcl:"api,block" validate:"min=0"`
	// AppRoles: min=0
	AppRoles []dataapplication.AppRoles `hcl:"app_roles,block" validate:"min=0"`
	// FeatureTags: min=0
	FeatureTags []dataapplication.FeatureTags `hcl:"feature_tags,block" validate:"min=0"`
	// OptionalClaims: min=0
	OptionalClaims []dataapplication.OptionalClaims `hcl:"optional_claims,block" validate:"min=0"`
	// PublicClient: min=0
	PublicClient []dataapplication.PublicClient `hcl:"public_client,block" validate:"min=0"`
	// RequiredResourceAccess: min=0
	RequiredResourceAccess []dataapplication.RequiredResourceAccess `hcl:"required_resource_access,block" validate:"min=0"`
	// SinglePageApplication: min=0
	SinglePageApplication []dataapplication.SinglePageApplication `hcl:"single_page_application,block" validate:"min=0"`
	// Web: min=0
	Web []dataapplication.Web `hcl:"web,block" validate:"min=0"`
	// Timeouts: optional
	Timeouts *dataapplication.Timeouts `hcl:"timeouts,block"`
}
type dataApplicationAttributes struct {
	ref terra.Reference
}

// AppRoleIds returns a reference to field app_role_ids of azuread_application.
func (a dataApplicationAttributes) AppRoleIds() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](a.ref.Append("app_role_ids"))
}

// ApplicationId returns a reference to field application_id of azuread_application.
func (a dataApplicationAttributes) ApplicationId() terra.StringValue {
	return terra.ReferenceAsString(a.ref.Append("application_id"))
}

// Description returns a reference to field description of azuread_application.
func (a dataApplicationAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(a.ref.Append("description"))
}

// DeviceOnlyAuthEnabled returns a reference to field device_only_auth_enabled of azuread_application.
func (a dataApplicationAttributes) DeviceOnlyAuthEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(a.ref.Append("device_only_auth_enabled"))
}

// DisabledByMicrosoft returns a reference to field disabled_by_microsoft of azuread_application.
func (a dataApplicationAttributes) DisabledByMicrosoft() terra.StringValue {
	return terra.ReferenceAsString(a.ref.Append("disabled_by_microsoft"))
}

// DisplayName returns a reference to field display_name of azuread_application.
func (a dataApplicationAttributes) DisplayName() terra.StringValue {
	return terra.ReferenceAsString(a.ref.Append("display_name"))
}

// FallbackPublicClientEnabled returns a reference to field fallback_public_client_enabled of azuread_application.
func (a dataApplicationAttributes) FallbackPublicClientEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(a.ref.Append("fallback_public_client_enabled"))
}

// GroupMembershipClaims returns a reference to field group_membership_claims of azuread_application.
func (a dataApplicationAttributes) GroupMembershipClaims() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](a.ref.Append("group_membership_claims"))
}

// Id returns a reference to field id of azuread_application.
func (a dataApplicationAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(a.ref.Append("id"))
}

// IdentifierUris returns a reference to field identifier_uris of azuread_application.
func (a dataApplicationAttributes) IdentifierUris() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](a.ref.Append("identifier_uris"))
}

// LogoUrl returns a reference to field logo_url of azuread_application.
func (a dataApplicationAttributes) LogoUrl() terra.StringValue {
	return terra.ReferenceAsString(a.ref.Append("logo_url"))
}

// MarketingUrl returns a reference to field marketing_url of azuread_application.
func (a dataApplicationAttributes) MarketingUrl() terra.StringValue {
	return terra.ReferenceAsString(a.ref.Append("marketing_url"))
}

// Notes returns a reference to field notes of azuread_application.
func (a dataApplicationAttributes) Notes() terra.StringValue {
	return terra.ReferenceAsString(a.ref.Append("notes"))
}

// Oauth2PermissionScopeIds returns a reference to field oauth2_permission_scope_ids of azuread_application.
func (a dataApplicationAttributes) Oauth2PermissionScopeIds() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](a.ref.Append("oauth2_permission_scope_ids"))
}

// Oauth2PostResponseRequired returns a reference to field oauth2_post_response_required of azuread_application.
func (a dataApplicationAttributes) Oauth2PostResponseRequired() terra.BoolValue {
	return terra.ReferenceAsBool(a.ref.Append("oauth2_post_response_required"))
}

// ObjectId returns a reference to field object_id of azuread_application.
func (a dataApplicationAttributes) ObjectId() terra.StringValue {
	return terra.ReferenceAsString(a.ref.Append("object_id"))
}

// Owners returns a reference to field owners of azuread_application.
func (a dataApplicationAttributes) Owners() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](a.ref.Append("owners"))
}

// PrivacyStatementUrl returns a reference to field privacy_statement_url of azuread_application.
func (a dataApplicationAttributes) PrivacyStatementUrl() terra.StringValue {
	return terra.ReferenceAsString(a.ref.Append("privacy_statement_url"))
}

// PublisherDomain returns a reference to field publisher_domain of azuread_application.
func (a dataApplicationAttributes) PublisherDomain() terra.StringValue {
	return terra.ReferenceAsString(a.ref.Append("publisher_domain"))
}

// ServiceManagementReference returns a reference to field service_management_reference of azuread_application.
func (a dataApplicationAttributes) ServiceManagementReference() terra.StringValue {
	return terra.ReferenceAsString(a.ref.Append("service_management_reference"))
}

// SignInAudience returns a reference to field sign_in_audience of azuread_application.
func (a dataApplicationAttributes) SignInAudience() terra.StringValue {
	return terra.ReferenceAsString(a.ref.Append("sign_in_audience"))
}

// SupportUrl returns a reference to field support_url of azuread_application.
func (a dataApplicationAttributes) SupportUrl() terra.StringValue {
	return terra.ReferenceAsString(a.ref.Append("support_url"))
}

// Tags returns a reference to field tags of azuread_application.
func (a dataApplicationAttributes) Tags() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](a.ref.Append("tags"))
}

// TermsOfServiceUrl returns a reference to field terms_of_service_url of azuread_application.
func (a dataApplicationAttributes) TermsOfServiceUrl() terra.StringValue {
	return terra.ReferenceAsString(a.ref.Append("terms_of_service_url"))
}

func (a dataApplicationAttributes) Api() terra.ListValue[dataapplication.ApiAttributes] {
	return terra.ReferenceAsList[dataapplication.ApiAttributes](a.ref.Append("api"))
}

func (a dataApplicationAttributes) AppRoles() terra.ListValue[dataapplication.AppRolesAttributes] {
	return terra.ReferenceAsList[dataapplication.AppRolesAttributes](a.ref.Append("app_roles"))
}

func (a dataApplicationAttributes) FeatureTags() terra.ListValue[dataapplication.FeatureTagsAttributes] {
	return terra.ReferenceAsList[dataapplication.FeatureTagsAttributes](a.ref.Append("feature_tags"))
}

func (a dataApplicationAttributes) OptionalClaims() terra.ListValue[dataapplication.OptionalClaimsAttributes] {
	return terra.ReferenceAsList[dataapplication.OptionalClaimsAttributes](a.ref.Append("optional_claims"))
}

func (a dataApplicationAttributes) PublicClient() terra.ListValue[dataapplication.PublicClientAttributes] {
	return terra.ReferenceAsList[dataapplication.PublicClientAttributes](a.ref.Append("public_client"))
}

func (a dataApplicationAttributes) RequiredResourceAccess() terra.ListValue[dataapplication.RequiredResourceAccessAttributes] {
	return terra.ReferenceAsList[dataapplication.RequiredResourceAccessAttributes](a.ref.Append("required_resource_access"))
}

func (a dataApplicationAttributes) SinglePageApplication() terra.ListValue[dataapplication.SinglePageApplicationAttributes] {
	return terra.ReferenceAsList[dataapplication.SinglePageApplicationAttributes](a.ref.Append("single_page_application"))
}

func (a dataApplicationAttributes) Web() terra.ListValue[dataapplication.WebAttributes] {
	return terra.ReferenceAsList[dataapplication.WebAttributes](a.ref.Append("web"))
}

func (a dataApplicationAttributes) Timeouts() dataapplication.TimeoutsAttributes {
	return terra.ReferenceAsSingle[dataapplication.TimeoutsAttributes](a.ref.Append("timeouts"))
}
