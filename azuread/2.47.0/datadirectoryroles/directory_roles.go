// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package datadirectoryroles

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type Roles struct{}

type Timeouts struct {
	// Read: string, optional
	Read terra.StringValue `hcl:"read,attr"`
}

type RolesAttributes struct {
	ref terra.Reference
}

func (r RolesAttributes) InternalRef() (terra.Reference, error) {
	return r.ref, nil
}

func (r RolesAttributes) InternalWithRef(ref terra.Reference) RolesAttributes {
	return RolesAttributes{ref: ref}
}

func (r RolesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return r.ref.InternalTokens()
}

func (r RolesAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(r.ref.Append("description"))
}

func (r RolesAttributes) DisplayName() terra.StringValue {
	return terra.ReferenceAsString(r.ref.Append("display_name"))
}

func (r RolesAttributes) ObjectId() terra.StringValue {
	return terra.ReferenceAsString(r.ref.Append("object_id"))
}

func (r RolesAttributes) TemplateId() terra.StringValue {
	return terra.ReferenceAsString(r.ref.Append("template_id"))
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Read() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("read"))
}

type RolesState struct {
	Description string `json:"description"`
	DisplayName string `json:"display_name"`
	ObjectId    string `json:"object_id"`
	TemplateId  string `json:"template_id"`
}

type TimeoutsState struct {
	Read string `json:"read"`
}
