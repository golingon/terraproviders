// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azuread

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	applicationregistration "github.com/golingon/terraproviders/azuread/2.47.0/applicationregistration"
	"io"
)

// NewApplicationRegistration creates a new instance of [ApplicationRegistration].
func NewApplicationRegistration(name string, args ApplicationRegistrationArgs) *ApplicationRegistration {
	return &ApplicationRegistration{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*ApplicationRegistration)(nil)

// ApplicationRegistration represents the Terraform resource azuread_application_registration.
type ApplicationRegistration struct {
	Name      string
	Args      ApplicationRegistrationArgs
	state     *applicationRegistrationState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [ApplicationRegistration].
func (ar *ApplicationRegistration) Type() string {
	return "azuread_application_registration"
}

// LocalName returns the local name for [ApplicationRegistration].
func (ar *ApplicationRegistration) LocalName() string {
	return ar.Name
}

// Configuration returns the configuration (args) for [ApplicationRegistration].
func (ar *ApplicationRegistration) Configuration() interface{} {
	return ar.Args
}

// DependOn is used for other resources to depend on [ApplicationRegistration].
func (ar *ApplicationRegistration) DependOn() terra.Reference {
	return terra.ReferenceResource(ar)
}

// Dependencies returns the list of resources [ApplicationRegistration] depends_on.
func (ar *ApplicationRegistration) Dependencies() terra.Dependencies {
	return ar.DependsOn
}

// LifecycleManagement returns the lifecycle block for [ApplicationRegistration].
func (ar *ApplicationRegistration) LifecycleManagement() *terra.Lifecycle {
	return ar.Lifecycle
}

// Attributes returns the attributes for [ApplicationRegistration].
func (ar *ApplicationRegistration) Attributes() applicationRegistrationAttributes {
	return applicationRegistrationAttributes{ref: terra.ReferenceResource(ar)}
}

// ImportState imports the given attribute values into [ApplicationRegistration]'s state.
func (ar *ApplicationRegistration) ImportState(av io.Reader) error {
	ar.state = &applicationRegistrationState{}
	if err := json.NewDecoder(av).Decode(ar.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", ar.Type(), ar.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [ApplicationRegistration] has state.
func (ar *ApplicationRegistration) State() (*applicationRegistrationState, bool) {
	return ar.state, ar.state != nil
}

// StateMust returns the state for [ApplicationRegistration]. Panics if the state is nil.
func (ar *ApplicationRegistration) StateMust() *applicationRegistrationState {
	if ar.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", ar.Type(), ar.LocalName()))
	}
	return ar.state
}

// ApplicationRegistrationArgs contains the configurations for azuread_application_registration.
type ApplicationRegistrationArgs struct {
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// DisplayName: string, required
	DisplayName terra.StringValue `hcl:"display_name,attr" validate:"required"`
	// GroupMembershipClaims: set of string, optional
	GroupMembershipClaims terra.SetValue[terra.StringValue] `hcl:"group_membership_claims,attr"`
	// HomepageUrl: string, optional
	HomepageUrl terra.StringValue `hcl:"homepage_url,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// ImplicitAccessTokenIssuanceEnabled: bool, optional
	ImplicitAccessTokenIssuanceEnabled terra.BoolValue `hcl:"implicit_access_token_issuance_enabled,attr"`
	// ImplicitIdTokenIssuanceEnabled: bool, optional
	ImplicitIdTokenIssuanceEnabled terra.BoolValue `hcl:"implicit_id_token_issuance_enabled,attr"`
	// LogoutUrl: string, optional
	LogoutUrl terra.StringValue `hcl:"logout_url,attr"`
	// MarketingUrl: string, optional
	MarketingUrl terra.StringValue `hcl:"marketing_url,attr"`
	// Notes: string, optional
	Notes terra.StringValue `hcl:"notes,attr"`
	// PrivacyStatementUrl: string, optional
	PrivacyStatementUrl terra.StringValue `hcl:"privacy_statement_url,attr"`
	// RequestedAccessTokenVersion: number, optional
	RequestedAccessTokenVersion terra.NumberValue `hcl:"requested_access_token_version,attr"`
	// ServiceManagementReference: string, optional
	ServiceManagementReference terra.StringValue `hcl:"service_management_reference,attr"`
	// SignInAudience: string, optional
	SignInAudience terra.StringValue `hcl:"sign_in_audience,attr"`
	// SupportUrl: string, optional
	SupportUrl terra.StringValue `hcl:"support_url,attr"`
	// TermsOfServiceUrl: string, optional
	TermsOfServiceUrl terra.StringValue `hcl:"terms_of_service_url,attr"`
	// Timeouts: optional
	Timeouts *applicationregistration.Timeouts `hcl:"timeouts,block"`
}
type applicationRegistrationAttributes struct {
	ref terra.Reference
}

// ClientId returns a reference to field client_id of azuread_application_registration.
func (ar applicationRegistrationAttributes) ClientId() terra.StringValue {
	return terra.ReferenceAsString(ar.ref.Append("client_id"))
}

// Description returns a reference to field description of azuread_application_registration.
func (ar applicationRegistrationAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(ar.ref.Append("description"))
}

// DisabledByMicrosoft returns a reference to field disabled_by_microsoft of azuread_application_registration.
func (ar applicationRegistrationAttributes) DisabledByMicrosoft() terra.StringValue {
	return terra.ReferenceAsString(ar.ref.Append("disabled_by_microsoft"))
}

// DisplayName returns a reference to field display_name of azuread_application_registration.
func (ar applicationRegistrationAttributes) DisplayName() terra.StringValue {
	return terra.ReferenceAsString(ar.ref.Append("display_name"))
}

// GroupMembershipClaims returns a reference to field group_membership_claims of azuread_application_registration.
func (ar applicationRegistrationAttributes) GroupMembershipClaims() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ar.ref.Append("group_membership_claims"))
}

// HomepageUrl returns a reference to field homepage_url of azuread_application_registration.
func (ar applicationRegistrationAttributes) HomepageUrl() terra.StringValue {
	return terra.ReferenceAsString(ar.ref.Append("homepage_url"))
}

// Id returns a reference to field id of azuread_application_registration.
func (ar applicationRegistrationAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(ar.ref.Append("id"))
}

// ImplicitAccessTokenIssuanceEnabled returns a reference to field implicit_access_token_issuance_enabled of azuread_application_registration.
func (ar applicationRegistrationAttributes) ImplicitAccessTokenIssuanceEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(ar.ref.Append("implicit_access_token_issuance_enabled"))
}

// ImplicitIdTokenIssuanceEnabled returns a reference to field implicit_id_token_issuance_enabled of azuread_application_registration.
func (ar applicationRegistrationAttributes) ImplicitIdTokenIssuanceEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(ar.ref.Append("implicit_id_token_issuance_enabled"))
}

// LogoutUrl returns a reference to field logout_url of azuread_application_registration.
func (ar applicationRegistrationAttributes) LogoutUrl() terra.StringValue {
	return terra.ReferenceAsString(ar.ref.Append("logout_url"))
}

// MarketingUrl returns a reference to field marketing_url of azuread_application_registration.
func (ar applicationRegistrationAttributes) MarketingUrl() terra.StringValue {
	return terra.ReferenceAsString(ar.ref.Append("marketing_url"))
}

// Notes returns a reference to field notes of azuread_application_registration.
func (ar applicationRegistrationAttributes) Notes() terra.StringValue {
	return terra.ReferenceAsString(ar.ref.Append("notes"))
}

// ObjectId returns a reference to field object_id of azuread_application_registration.
func (ar applicationRegistrationAttributes) ObjectId() terra.StringValue {
	return terra.ReferenceAsString(ar.ref.Append("object_id"))
}

// PrivacyStatementUrl returns a reference to field privacy_statement_url of azuread_application_registration.
func (ar applicationRegistrationAttributes) PrivacyStatementUrl() terra.StringValue {
	return terra.ReferenceAsString(ar.ref.Append("privacy_statement_url"))
}

// PublisherDomain returns a reference to field publisher_domain of azuread_application_registration.
func (ar applicationRegistrationAttributes) PublisherDomain() terra.StringValue {
	return terra.ReferenceAsString(ar.ref.Append("publisher_domain"))
}

// RequestedAccessTokenVersion returns a reference to field requested_access_token_version of azuread_application_registration.
func (ar applicationRegistrationAttributes) RequestedAccessTokenVersion() terra.NumberValue {
	return terra.ReferenceAsNumber(ar.ref.Append("requested_access_token_version"))
}

// ServiceManagementReference returns a reference to field service_management_reference of azuread_application_registration.
func (ar applicationRegistrationAttributes) ServiceManagementReference() terra.StringValue {
	return terra.ReferenceAsString(ar.ref.Append("service_management_reference"))
}

// SignInAudience returns a reference to field sign_in_audience of azuread_application_registration.
func (ar applicationRegistrationAttributes) SignInAudience() terra.StringValue {
	return terra.ReferenceAsString(ar.ref.Append("sign_in_audience"))
}

// SupportUrl returns a reference to field support_url of azuread_application_registration.
func (ar applicationRegistrationAttributes) SupportUrl() terra.StringValue {
	return terra.ReferenceAsString(ar.ref.Append("support_url"))
}

// TermsOfServiceUrl returns a reference to field terms_of_service_url of azuread_application_registration.
func (ar applicationRegistrationAttributes) TermsOfServiceUrl() terra.StringValue {
	return terra.ReferenceAsString(ar.ref.Append("terms_of_service_url"))
}

func (ar applicationRegistrationAttributes) Timeouts() applicationregistration.TimeoutsAttributes {
	return terra.ReferenceAsSingle[applicationregistration.TimeoutsAttributes](ar.ref.Append("timeouts"))
}

type applicationRegistrationState struct {
	ClientId                           string                                 `json:"client_id"`
	Description                        string                                 `json:"description"`
	DisabledByMicrosoft                string                                 `json:"disabled_by_microsoft"`
	DisplayName                        string                                 `json:"display_name"`
	GroupMembershipClaims              []string                               `json:"group_membership_claims"`
	HomepageUrl                        string                                 `json:"homepage_url"`
	Id                                 string                                 `json:"id"`
	ImplicitAccessTokenIssuanceEnabled bool                                   `json:"implicit_access_token_issuance_enabled"`
	ImplicitIdTokenIssuanceEnabled     bool                                   `json:"implicit_id_token_issuance_enabled"`
	LogoutUrl                          string                                 `json:"logout_url"`
	MarketingUrl                       string                                 `json:"marketing_url"`
	Notes                              string                                 `json:"notes"`
	ObjectId                           string                                 `json:"object_id"`
	PrivacyStatementUrl                string                                 `json:"privacy_statement_url"`
	PublisherDomain                    string                                 `json:"publisher_domain"`
	RequestedAccessTokenVersion        float64                                `json:"requested_access_token_version"`
	ServiceManagementReference         string                                 `json:"service_management_reference"`
	SignInAudience                     string                                 `json:"sign_in_audience"`
	SupportUrl                         string                                 `json:"support_url"`
	TermsOfServiceUrl                  string                                 `json:"terms_of_service_url"`
	Timeouts                           *applicationregistration.TimeoutsState `json:"timeouts"`
}
