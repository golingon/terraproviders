// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azuread

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	applicationfallbackpublicclient "github.com/golingon/terraproviders/azuread/2.47.0/applicationfallbackpublicclient"
	"io"
)

// NewApplicationFallbackPublicClient creates a new instance of [ApplicationFallbackPublicClient].
func NewApplicationFallbackPublicClient(name string, args ApplicationFallbackPublicClientArgs) *ApplicationFallbackPublicClient {
	return &ApplicationFallbackPublicClient{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*ApplicationFallbackPublicClient)(nil)

// ApplicationFallbackPublicClient represents the Terraform resource azuread_application_fallback_public_client.
type ApplicationFallbackPublicClient struct {
	Name      string
	Args      ApplicationFallbackPublicClientArgs
	state     *applicationFallbackPublicClientState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [ApplicationFallbackPublicClient].
func (afpc *ApplicationFallbackPublicClient) Type() string {
	return "azuread_application_fallback_public_client"
}

// LocalName returns the local name for [ApplicationFallbackPublicClient].
func (afpc *ApplicationFallbackPublicClient) LocalName() string {
	return afpc.Name
}

// Configuration returns the configuration (args) for [ApplicationFallbackPublicClient].
func (afpc *ApplicationFallbackPublicClient) Configuration() interface{} {
	return afpc.Args
}

// DependOn is used for other resources to depend on [ApplicationFallbackPublicClient].
func (afpc *ApplicationFallbackPublicClient) DependOn() terra.Reference {
	return terra.ReferenceResource(afpc)
}

// Dependencies returns the list of resources [ApplicationFallbackPublicClient] depends_on.
func (afpc *ApplicationFallbackPublicClient) Dependencies() terra.Dependencies {
	return afpc.DependsOn
}

// LifecycleManagement returns the lifecycle block for [ApplicationFallbackPublicClient].
func (afpc *ApplicationFallbackPublicClient) LifecycleManagement() *terra.Lifecycle {
	return afpc.Lifecycle
}

// Attributes returns the attributes for [ApplicationFallbackPublicClient].
func (afpc *ApplicationFallbackPublicClient) Attributes() applicationFallbackPublicClientAttributes {
	return applicationFallbackPublicClientAttributes{ref: terra.ReferenceResource(afpc)}
}

// ImportState imports the given attribute values into [ApplicationFallbackPublicClient]'s state.
func (afpc *ApplicationFallbackPublicClient) ImportState(av io.Reader) error {
	afpc.state = &applicationFallbackPublicClientState{}
	if err := json.NewDecoder(av).Decode(afpc.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", afpc.Type(), afpc.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [ApplicationFallbackPublicClient] has state.
func (afpc *ApplicationFallbackPublicClient) State() (*applicationFallbackPublicClientState, bool) {
	return afpc.state, afpc.state != nil
}

// StateMust returns the state for [ApplicationFallbackPublicClient]. Panics if the state is nil.
func (afpc *ApplicationFallbackPublicClient) StateMust() *applicationFallbackPublicClientState {
	if afpc.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", afpc.Type(), afpc.LocalName()))
	}
	return afpc.state
}

// ApplicationFallbackPublicClientArgs contains the configurations for azuread_application_fallback_public_client.
type ApplicationFallbackPublicClientArgs struct {
	// ApplicationId: string, required
	ApplicationId terra.StringValue `hcl:"application_id,attr" validate:"required"`
	// Enabled: bool, optional
	Enabled terra.BoolValue `hcl:"enabled,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Timeouts: optional
	Timeouts *applicationfallbackpublicclient.Timeouts `hcl:"timeouts,block"`
}
type applicationFallbackPublicClientAttributes struct {
	ref terra.Reference
}

// ApplicationId returns a reference to field application_id of azuread_application_fallback_public_client.
func (afpc applicationFallbackPublicClientAttributes) ApplicationId() terra.StringValue {
	return terra.ReferenceAsString(afpc.ref.Append("application_id"))
}

// Enabled returns a reference to field enabled of azuread_application_fallback_public_client.
func (afpc applicationFallbackPublicClientAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceAsBool(afpc.ref.Append("enabled"))
}

// Id returns a reference to field id of azuread_application_fallback_public_client.
func (afpc applicationFallbackPublicClientAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(afpc.ref.Append("id"))
}

func (afpc applicationFallbackPublicClientAttributes) Timeouts() applicationfallbackpublicclient.TimeoutsAttributes {
	return terra.ReferenceAsSingle[applicationfallbackpublicclient.TimeoutsAttributes](afpc.ref.Append("timeouts"))
}

type applicationFallbackPublicClientState struct {
	ApplicationId string                                         `json:"application_id"`
	Enabled       bool                                           `json:"enabled"`
	Id            string                                         `json:"id"`
	Timeouts      *applicationfallbackpublicclient.TimeoutsState `json:"timeouts"`
}
