// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azuread

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	applicationknownclients "github.com/golingon/terraproviders/azuread/2.47.0/applicationknownclients"
	"io"
)

// NewApplicationKnownClients creates a new instance of [ApplicationKnownClients].
func NewApplicationKnownClients(name string, args ApplicationKnownClientsArgs) *ApplicationKnownClients {
	return &ApplicationKnownClients{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*ApplicationKnownClients)(nil)

// ApplicationKnownClients represents the Terraform resource azuread_application_known_clients.
type ApplicationKnownClients struct {
	Name      string
	Args      ApplicationKnownClientsArgs
	state     *applicationKnownClientsState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [ApplicationKnownClients].
func (akc *ApplicationKnownClients) Type() string {
	return "azuread_application_known_clients"
}

// LocalName returns the local name for [ApplicationKnownClients].
func (akc *ApplicationKnownClients) LocalName() string {
	return akc.Name
}

// Configuration returns the configuration (args) for [ApplicationKnownClients].
func (akc *ApplicationKnownClients) Configuration() interface{} {
	return akc.Args
}

// DependOn is used for other resources to depend on [ApplicationKnownClients].
func (akc *ApplicationKnownClients) DependOn() terra.Reference {
	return terra.ReferenceResource(akc)
}

// Dependencies returns the list of resources [ApplicationKnownClients] depends_on.
func (akc *ApplicationKnownClients) Dependencies() terra.Dependencies {
	return akc.DependsOn
}

// LifecycleManagement returns the lifecycle block for [ApplicationKnownClients].
func (akc *ApplicationKnownClients) LifecycleManagement() *terra.Lifecycle {
	return akc.Lifecycle
}

// Attributes returns the attributes for [ApplicationKnownClients].
func (akc *ApplicationKnownClients) Attributes() applicationKnownClientsAttributes {
	return applicationKnownClientsAttributes{ref: terra.ReferenceResource(akc)}
}

// ImportState imports the given attribute values into [ApplicationKnownClients]'s state.
func (akc *ApplicationKnownClients) ImportState(av io.Reader) error {
	akc.state = &applicationKnownClientsState{}
	if err := json.NewDecoder(av).Decode(akc.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", akc.Type(), akc.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [ApplicationKnownClients] has state.
func (akc *ApplicationKnownClients) State() (*applicationKnownClientsState, bool) {
	return akc.state, akc.state != nil
}

// StateMust returns the state for [ApplicationKnownClients]. Panics if the state is nil.
func (akc *ApplicationKnownClients) StateMust() *applicationKnownClientsState {
	if akc.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", akc.Type(), akc.LocalName()))
	}
	return akc.state
}

// ApplicationKnownClientsArgs contains the configurations for azuread_application_known_clients.
type ApplicationKnownClientsArgs struct {
	// ApplicationId: string, required
	ApplicationId terra.StringValue `hcl:"application_id,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// KnownClientIds: set of string, required
	KnownClientIds terra.SetValue[terra.StringValue] `hcl:"known_client_ids,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *applicationknownclients.Timeouts `hcl:"timeouts,block"`
}
type applicationKnownClientsAttributes struct {
	ref terra.Reference
}

// ApplicationId returns a reference to field application_id of azuread_application_known_clients.
func (akc applicationKnownClientsAttributes) ApplicationId() terra.StringValue {
	return terra.ReferenceAsString(akc.ref.Append("application_id"))
}

// Id returns a reference to field id of azuread_application_known_clients.
func (akc applicationKnownClientsAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(akc.ref.Append("id"))
}

// KnownClientIds returns a reference to field known_client_ids of azuread_application_known_clients.
func (akc applicationKnownClientsAttributes) KnownClientIds() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](akc.ref.Append("known_client_ids"))
}

func (akc applicationKnownClientsAttributes) Timeouts() applicationknownclients.TimeoutsAttributes {
	return terra.ReferenceAsSingle[applicationknownclients.TimeoutsAttributes](akc.ref.Append("timeouts"))
}

type applicationKnownClientsState struct {
	ApplicationId  string                                 `json:"application_id"`
	Id             string                                 `json:"id"`
	KnownClientIds []string                               `json:"known_client_ids"`
	Timeouts       *applicationknownclients.TimeoutsState `json:"timeouts"`
}
