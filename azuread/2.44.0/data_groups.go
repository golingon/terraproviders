// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azuread

import (
	datagroups "github.com/golingon/terraproviders/azuread/2.44.0/datagroups"
	"github.com/volvo-cars/lingon/pkg/terra"
)

// NewDataGroups creates a new instance of [DataGroups].
func NewDataGroups(name string, args DataGroupsArgs) *DataGroups {
	return &DataGroups{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataGroups)(nil)

// DataGroups represents the Terraform data resource azuread_groups.
type DataGroups struct {
	Name string
	Args DataGroupsArgs
}

// DataSource returns the Terraform object type for [DataGroups].
func (g *DataGroups) DataSource() string {
	return "azuread_groups"
}

// LocalName returns the local name for [DataGroups].
func (g *DataGroups) LocalName() string {
	return g.Name
}

// Configuration returns the configuration (args) for [DataGroups].
func (g *DataGroups) Configuration() interface{} {
	return g.Args
}

// Attributes returns the attributes for [DataGroups].
func (g *DataGroups) Attributes() dataGroupsAttributes {
	return dataGroupsAttributes{ref: terra.ReferenceDataResource(g)}
}

// DataGroupsArgs contains the configurations for azuread_groups.
type DataGroupsArgs struct {
	// DisplayNamePrefix: string, optional
	DisplayNamePrefix terra.StringValue `hcl:"display_name_prefix,attr"`
	// DisplayNames: list of string, optional
	DisplayNames terra.ListValue[terra.StringValue] `hcl:"display_names,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// IgnoreMissing: bool, optional
	IgnoreMissing terra.BoolValue `hcl:"ignore_missing,attr"`
	// MailEnabled: bool, optional
	MailEnabled terra.BoolValue `hcl:"mail_enabled,attr"`
	// ObjectIds: list of string, optional
	ObjectIds terra.ListValue[terra.StringValue] `hcl:"object_ids,attr"`
	// ReturnAll: bool, optional
	ReturnAll terra.BoolValue `hcl:"return_all,attr"`
	// SecurityEnabled: bool, optional
	SecurityEnabled terra.BoolValue `hcl:"security_enabled,attr"`
	// Timeouts: optional
	Timeouts *datagroups.Timeouts `hcl:"timeouts,block"`
}
type dataGroupsAttributes struct {
	ref terra.Reference
}

// DisplayNamePrefix returns a reference to field display_name_prefix of azuread_groups.
func (g dataGroupsAttributes) DisplayNamePrefix() terra.StringValue {
	return terra.ReferenceAsString(g.ref.Append("display_name_prefix"))
}

// DisplayNames returns a reference to field display_names of azuread_groups.
func (g dataGroupsAttributes) DisplayNames() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](g.ref.Append("display_names"))
}

// Id returns a reference to field id of azuread_groups.
func (g dataGroupsAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(g.ref.Append("id"))
}

// IgnoreMissing returns a reference to field ignore_missing of azuread_groups.
func (g dataGroupsAttributes) IgnoreMissing() terra.BoolValue {
	return terra.ReferenceAsBool(g.ref.Append("ignore_missing"))
}

// MailEnabled returns a reference to field mail_enabled of azuread_groups.
func (g dataGroupsAttributes) MailEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(g.ref.Append("mail_enabled"))
}

// ObjectIds returns a reference to field object_ids of azuread_groups.
func (g dataGroupsAttributes) ObjectIds() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](g.ref.Append("object_ids"))
}

// ReturnAll returns a reference to field return_all of azuread_groups.
func (g dataGroupsAttributes) ReturnAll() terra.BoolValue {
	return terra.ReferenceAsBool(g.ref.Append("return_all"))
}

// SecurityEnabled returns a reference to field security_enabled of azuread_groups.
func (g dataGroupsAttributes) SecurityEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(g.ref.Append("security_enabled"))
}

func (g dataGroupsAttributes) Timeouts() datagroups.TimeoutsAttributes {
	return terra.ReferenceAsSingle[datagroups.TimeoutsAttributes](g.ref.Append("timeouts"))
}
