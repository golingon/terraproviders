// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package azuread

import (
	dataapplicationtemplate "github.com/golingon/terraproviders/azuread/2.38.0/dataapplicationtemplate"
	"github.com/volvo-cars/lingon/pkg/terra"
)

// NewDataApplicationTemplate creates a new instance of [DataApplicationTemplate].
func NewDataApplicationTemplate(name string, args DataApplicationTemplateArgs) *DataApplicationTemplate {
	return &DataApplicationTemplate{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataApplicationTemplate)(nil)

// DataApplicationTemplate represents the Terraform data resource azuread_application_template.
type DataApplicationTemplate struct {
	Name string
	Args DataApplicationTemplateArgs
}

// DataSource returns the Terraform object type for [DataApplicationTemplate].
func (at *DataApplicationTemplate) DataSource() string {
	return "azuread_application_template"
}

// LocalName returns the local name for [DataApplicationTemplate].
func (at *DataApplicationTemplate) LocalName() string {
	return at.Name
}

// Configuration returns the configuration (args) for [DataApplicationTemplate].
func (at *DataApplicationTemplate) Configuration() interface{} {
	return at.Args
}

// Attributes returns the attributes for [DataApplicationTemplate].
func (at *DataApplicationTemplate) Attributes() dataApplicationTemplateAttributes {
	return dataApplicationTemplateAttributes{ref: terra.ReferenceDataResource(at)}
}

// DataApplicationTemplateArgs contains the configurations for azuread_application_template.
type DataApplicationTemplateArgs struct {
	// DisplayName: string, optional
	DisplayName terra.StringValue `hcl:"display_name,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// TemplateId: string, optional
	TemplateId terra.StringValue `hcl:"template_id,attr"`
	// Timeouts: optional
	Timeouts *dataapplicationtemplate.Timeouts `hcl:"timeouts,block"`
}
type dataApplicationTemplateAttributes struct {
	ref terra.Reference
}

// Categories returns a reference to field categories of azuread_application_template.
func (at dataApplicationTemplateAttributes) Categories() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](at.ref.Append("categories"))
}

// DisplayName returns a reference to field display_name of azuread_application_template.
func (at dataApplicationTemplateAttributes) DisplayName() terra.StringValue {
	return terra.ReferenceAsString(at.ref.Append("display_name"))
}

// HomepageUrl returns a reference to field homepage_url of azuread_application_template.
func (at dataApplicationTemplateAttributes) HomepageUrl() terra.StringValue {
	return terra.ReferenceAsString(at.ref.Append("homepage_url"))
}

// Id returns a reference to field id of azuread_application_template.
func (at dataApplicationTemplateAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(at.ref.Append("id"))
}

// LogoUrl returns a reference to field logo_url of azuread_application_template.
func (at dataApplicationTemplateAttributes) LogoUrl() terra.StringValue {
	return terra.ReferenceAsString(at.ref.Append("logo_url"))
}

// Publisher returns a reference to field publisher of azuread_application_template.
func (at dataApplicationTemplateAttributes) Publisher() terra.StringValue {
	return terra.ReferenceAsString(at.ref.Append("publisher"))
}

// SupportedProvisioningTypes returns a reference to field supported_provisioning_types of azuread_application_template.
func (at dataApplicationTemplateAttributes) SupportedProvisioningTypes() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](at.ref.Append("supported_provisioning_types"))
}

// SupportedSingleSignOnModes returns a reference to field supported_single_sign_on_modes of azuread_application_template.
func (at dataApplicationTemplateAttributes) SupportedSingleSignOnModes() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](at.ref.Append("supported_single_sign_on_modes"))
}

// TemplateId returns a reference to field template_id of azuread_application_template.
func (at dataApplicationTemplateAttributes) TemplateId() terra.StringValue {
	return terra.ReferenceAsString(at.ref.Append("template_id"))
}

func (at dataApplicationTemplateAttributes) Timeouts() dataapplicationtemplate.TimeoutsAttributes {
	return terra.ReferenceAsSingle[dataapplicationtemplate.TimeoutsAttributes](at.ref.Append("timeouts"))
}
