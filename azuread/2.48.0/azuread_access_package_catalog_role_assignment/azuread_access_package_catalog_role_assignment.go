// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azuread_access_package_catalog_role_assignment

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azuread_access_package_catalog_role_assignment.
type Resource struct {
	Name      string
	Args      Args
	state     *azureadAccessPackageCatalogRoleAssignmentState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (aapcra *Resource) Type() string {
	return "azuread_access_package_catalog_role_assignment"
}

// LocalName returns the local name for [Resource].
func (aapcra *Resource) LocalName() string {
	return aapcra.Name
}

// Configuration returns the configuration (args) for [Resource].
func (aapcra *Resource) Configuration() interface{} {
	return aapcra.Args
}

// DependOn is used for other resources to depend on [Resource].
func (aapcra *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(aapcra)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (aapcra *Resource) Dependencies() terra.Dependencies {
	return aapcra.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (aapcra *Resource) LifecycleManagement() *terra.Lifecycle {
	return aapcra.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (aapcra *Resource) Attributes() azureadAccessPackageCatalogRoleAssignmentAttributes {
	return azureadAccessPackageCatalogRoleAssignmentAttributes{ref: terra.ReferenceResource(aapcra)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (aapcra *Resource) ImportState(state io.Reader) error {
	aapcra.state = &azureadAccessPackageCatalogRoleAssignmentState{}
	if err := json.NewDecoder(state).Decode(aapcra.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", aapcra.Type(), aapcra.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (aapcra *Resource) State() (*azureadAccessPackageCatalogRoleAssignmentState, bool) {
	return aapcra.state, aapcra.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (aapcra *Resource) StateMust() *azureadAccessPackageCatalogRoleAssignmentState {
	if aapcra.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", aapcra.Type(), aapcra.LocalName()))
	}
	return aapcra.state
}

// Args contains the configurations for azuread_access_package_catalog_role_assignment.
type Args struct {
	// CatalogId: string, required
	CatalogId terra.StringValue `hcl:"catalog_id,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// PrincipalObjectId: string, required
	PrincipalObjectId terra.StringValue `hcl:"principal_object_id,attr" validate:"required"`
	// RoleId: string, required
	RoleId terra.StringValue `hcl:"role_id,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azureadAccessPackageCatalogRoleAssignmentAttributes struct {
	ref terra.Reference
}

// CatalogId returns a reference to field catalog_id of azuread_access_package_catalog_role_assignment.
func (aapcra azureadAccessPackageCatalogRoleAssignmentAttributes) CatalogId() terra.StringValue {
	return terra.ReferenceAsString(aapcra.ref.Append("catalog_id"))
}

// Id returns a reference to field id of azuread_access_package_catalog_role_assignment.
func (aapcra azureadAccessPackageCatalogRoleAssignmentAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aapcra.ref.Append("id"))
}

// PrincipalObjectId returns a reference to field principal_object_id of azuread_access_package_catalog_role_assignment.
func (aapcra azureadAccessPackageCatalogRoleAssignmentAttributes) PrincipalObjectId() terra.StringValue {
	return terra.ReferenceAsString(aapcra.ref.Append("principal_object_id"))
}

// RoleId returns a reference to field role_id of azuread_access_package_catalog_role_assignment.
func (aapcra azureadAccessPackageCatalogRoleAssignmentAttributes) RoleId() terra.StringValue {
	return terra.ReferenceAsString(aapcra.ref.Append("role_id"))
}

func (aapcra azureadAccessPackageCatalogRoleAssignmentAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](aapcra.ref.Append("timeouts"))
}

type azureadAccessPackageCatalogRoleAssignmentState struct {
	CatalogId         string         `json:"catalog_id"`
	Id                string         `json:"id"`
	PrincipalObjectId string         `json:"principal_object_id"`
	RoleId            string         `json:"role_id"`
	Timeouts          *TimeoutsState `json:"timeouts"`
}
