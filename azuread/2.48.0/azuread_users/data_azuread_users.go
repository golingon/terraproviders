// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azuread_users

import "github.com/golingon/lingon/pkg/terra"

// Data creates a new instance of [DataSource].
func Data(name string, args DataArgs) *DataSource {
	return &DataSource{
		Args: args,
		Name: name,
	}
}

var _ terra.DataSource = (*DataSource)(nil)

// DataSource represents the Terraform data resource azuread_users.
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (au *DataSource) DataSource() string {
	return "azuread_users"
}

// LocalName returns the local name for [DataSource].
func (au *DataSource) LocalName() string {
	return au.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (au *DataSource) Configuration() interface{} {
	return au.Args
}

// Attributes returns the attributes for [DataSource].
func (au *DataSource) Attributes() dataAzureadUsersAttributes {
	return dataAzureadUsersAttributes{ref: terra.ReferenceDataSource(au)}
}

// DataArgs contains the configurations for azuread_users.
type DataArgs struct {
	// EmployeeIds: list of string, optional
	EmployeeIds terra.ListValue[terra.StringValue] `hcl:"employee_ids,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// IgnoreMissing: bool, optional
	IgnoreMissing terra.BoolValue `hcl:"ignore_missing,attr"`
	// MailNicknames: list of string, optional
	MailNicknames terra.ListValue[terra.StringValue] `hcl:"mail_nicknames,attr"`
	// ObjectIds: list of string, optional
	ObjectIds terra.ListValue[terra.StringValue] `hcl:"object_ids,attr"`
	// ReturnAll: bool, optional
	ReturnAll terra.BoolValue `hcl:"return_all,attr"`
	// UserPrincipalNames: list of string, optional
	UserPrincipalNames terra.ListValue[terra.StringValue] `hcl:"user_principal_names,attr"`
	// Timeouts: optional
	Timeouts *DataTimeouts `hcl:"timeouts,block"`
}

type dataAzureadUsersAttributes struct {
	ref terra.Reference
}

// EmployeeIds returns a reference to field employee_ids of azuread_users.
func (au dataAzureadUsersAttributes) EmployeeIds() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](au.ref.Append("employee_ids"))
}

// Id returns a reference to field id of azuread_users.
func (au dataAzureadUsersAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(au.ref.Append("id"))
}

// IgnoreMissing returns a reference to field ignore_missing of azuread_users.
func (au dataAzureadUsersAttributes) IgnoreMissing() terra.BoolValue {
	return terra.ReferenceAsBool(au.ref.Append("ignore_missing"))
}

// MailNicknames returns a reference to field mail_nicknames of azuread_users.
func (au dataAzureadUsersAttributes) MailNicknames() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](au.ref.Append("mail_nicknames"))
}

// ObjectIds returns a reference to field object_ids of azuread_users.
func (au dataAzureadUsersAttributes) ObjectIds() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](au.ref.Append("object_ids"))
}

// ReturnAll returns a reference to field return_all of azuread_users.
func (au dataAzureadUsersAttributes) ReturnAll() terra.BoolValue {
	return terra.ReferenceAsBool(au.ref.Append("return_all"))
}

// UserPrincipalNames returns a reference to field user_principal_names of azuread_users.
func (au dataAzureadUsersAttributes) UserPrincipalNames() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](au.ref.Append("user_principal_names"))
}

func (au dataAzureadUsersAttributes) Users() terra.ListValue[DataUsersAttributes] {
	return terra.ReferenceAsList[DataUsersAttributes](au.ref.Append("users"))
}

func (au dataAzureadUsersAttributes) Timeouts() DataTimeoutsAttributes {
	return terra.ReferenceAsSingle[DataTimeoutsAttributes](au.ref.Append("timeouts"))
}
