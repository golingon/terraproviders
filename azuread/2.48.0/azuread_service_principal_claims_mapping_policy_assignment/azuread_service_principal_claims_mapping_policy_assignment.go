// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azuread_service_principal_claims_mapping_policy_assignment

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azuread_service_principal_claims_mapping_policy_assignment.
type Resource struct {
	Name      string
	Args      Args
	state     *azureadServicePrincipalClaimsMappingPolicyAssignmentState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (aspcmpa *Resource) Type() string {
	return "azuread_service_principal_claims_mapping_policy_assignment"
}

// LocalName returns the local name for [Resource].
func (aspcmpa *Resource) LocalName() string {
	return aspcmpa.Name
}

// Configuration returns the configuration (args) for [Resource].
func (aspcmpa *Resource) Configuration() interface{} {
	return aspcmpa.Args
}

// DependOn is used for other resources to depend on [Resource].
func (aspcmpa *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(aspcmpa)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (aspcmpa *Resource) Dependencies() terra.Dependencies {
	return aspcmpa.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (aspcmpa *Resource) LifecycleManagement() *terra.Lifecycle {
	return aspcmpa.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (aspcmpa *Resource) Attributes() azureadServicePrincipalClaimsMappingPolicyAssignmentAttributes {
	return azureadServicePrincipalClaimsMappingPolicyAssignmentAttributes{ref: terra.ReferenceResource(aspcmpa)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (aspcmpa *Resource) ImportState(state io.Reader) error {
	aspcmpa.state = &azureadServicePrincipalClaimsMappingPolicyAssignmentState{}
	if err := json.NewDecoder(state).Decode(aspcmpa.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", aspcmpa.Type(), aspcmpa.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (aspcmpa *Resource) State() (*azureadServicePrincipalClaimsMappingPolicyAssignmentState, bool) {
	return aspcmpa.state, aspcmpa.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (aspcmpa *Resource) StateMust() *azureadServicePrincipalClaimsMappingPolicyAssignmentState {
	if aspcmpa.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", aspcmpa.Type(), aspcmpa.LocalName()))
	}
	return aspcmpa.state
}

// Args contains the configurations for azuread_service_principal_claims_mapping_policy_assignment.
type Args struct {
	// ClaimsMappingPolicyId: string, required
	ClaimsMappingPolicyId terra.StringValue `hcl:"claims_mapping_policy_id,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// ServicePrincipalId: string, required
	ServicePrincipalId terra.StringValue `hcl:"service_principal_id,attr" validate:"required"`
}

type azureadServicePrincipalClaimsMappingPolicyAssignmentAttributes struct {
	ref terra.Reference
}

// ClaimsMappingPolicyId returns a reference to field claims_mapping_policy_id of azuread_service_principal_claims_mapping_policy_assignment.
func (aspcmpa azureadServicePrincipalClaimsMappingPolicyAssignmentAttributes) ClaimsMappingPolicyId() terra.StringValue {
	return terra.ReferenceAsString(aspcmpa.ref.Append("claims_mapping_policy_id"))
}

// Id returns a reference to field id of azuread_service_principal_claims_mapping_policy_assignment.
func (aspcmpa azureadServicePrincipalClaimsMappingPolicyAssignmentAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aspcmpa.ref.Append("id"))
}

// ServicePrincipalId returns a reference to field service_principal_id of azuread_service_principal_claims_mapping_policy_assignment.
func (aspcmpa azureadServicePrincipalClaimsMappingPolicyAssignmentAttributes) ServicePrincipalId() terra.StringValue {
	return terra.ReferenceAsString(aspcmpa.ref.Append("service_principal_id"))
}

type azureadServicePrincipalClaimsMappingPolicyAssignmentState struct {
	ClaimsMappingPolicyId string `json:"claims_mapping_policy_id"`
	Id                    string `json:"id"`
	ServicePrincipalId    string `json:"service_principal_id"`
}
