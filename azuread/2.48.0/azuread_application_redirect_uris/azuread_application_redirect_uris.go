// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azuread_application_redirect_uris

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azuread_application_redirect_uris.
type Resource struct {
	Name      string
	Args      Args
	state     *azureadApplicationRedirectUrisState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (aaru *Resource) Type() string {
	return "azuread_application_redirect_uris"
}

// LocalName returns the local name for [Resource].
func (aaru *Resource) LocalName() string {
	return aaru.Name
}

// Configuration returns the configuration (args) for [Resource].
func (aaru *Resource) Configuration() interface{} {
	return aaru.Args
}

// DependOn is used for other resources to depend on [Resource].
func (aaru *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(aaru)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (aaru *Resource) Dependencies() terra.Dependencies {
	return aaru.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (aaru *Resource) LifecycleManagement() *terra.Lifecycle {
	return aaru.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (aaru *Resource) Attributes() azureadApplicationRedirectUrisAttributes {
	return azureadApplicationRedirectUrisAttributes{ref: terra.ReferenceResource(aaru)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (aaru *Resource) ImportState(state io.Reader) error {
	aaru.state = &azureadApplicationRedirectUrisState{}
	if err := json.NewDecoder(state).Decode(aaru.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", aaru.Type(), aaru.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (aaru *Resource) State() (*azureadApplicationRedirectUrisState, bool) {
	return aaru.state, aaru.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (aaru *Resource) StateMust() *azureadApplicationRedirectUrisState {
	if aaru.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", aaru.Type(), aaru.LocalName()))
	}
	return aaru.state
}

// Args contains the configurations for azuread_application_redirect_uris.
type Args struct {
	// ApplicationId: string, required
	ApplicationId terra.StringValue `hcl:"application_id,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// RedirectUris: set of string, required
	RedirectUris terra.SetValue[terra.StringValue] `hcl:"redirect_uris,attr" validate:"required"`
	// Type: string, required
	Type terra.StringValue `hcl:"type,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azureadApplicationRedirectUrisAttributes struct {
	ref terra.Reference
}

// ApplicationId returns a reference to field application_id of azuread_application_redirect_uris.
func (aaru azureadApplicationRedirectUrisAttributes) ApplicationId() terra.StringValue {
	return terra.ReferenceAsString(aaru.ref.Append("application_id"))
}

// Id returns a reference to field id of azuread_application_redirect_uris.
func (aaru azureadApplicationRedirectUrisAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aaru.ref.Append("id"))
}

// RedirectUris returns a reference to field redirect_uris of azuread_application_redirect_uris.
func (aaru azureadApplicationRedirectUrisAttributes) RedirectUris() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](aaru.ref.Append("redirect_uris"))
}

// Type returns a reference to field type of azuread_application_redirect_uris.
func (aaru azureadApplicationRedirectUrisAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(aaru.ref.Append("type"))
}

func (aaru azureadApplicationRedirectUrisAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](aaru.ref.Append("timeouts"))
}

type azureadApplicationRedirectUrisState struct {
	ApplicationId string         `json:"application_id"`
	Id            string         `json:"id"`
	RedirectUris  []string       `json:"redirect_uris"`
	Type          string         `json:"type"`
	Timeouts      *TimeoutsState `json:"timeouts"`
}
