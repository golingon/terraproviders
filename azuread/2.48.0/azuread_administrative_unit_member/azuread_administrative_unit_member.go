// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azuread_administrative_unit_member

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azuread_administrative_unit_member.
type Resource struct {
	Name      string
	Args      Args
	state     *azureadAdministrativeUnitMemberState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (aaum *Resource) Type() string {
	return "azuread_administrative_unit_member"
}

// LocalName returns the local name for [Resource].
func (aaum *Resource) LocalName() string {
	return aaum.Name
}

// Configuration returns the configuration (args) for [Resource].
func (aaum *Resource) Configuration() interface{} {
	return aaum.Args
}

// DependOn is used for other resources to depend on [Resource].
func (aaum *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(aaum)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (aaum *Resource) Dependencies() terra.Dependencies {
	return aaum.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (aaum *Resource) LifecycleManagement() *terra.Lifecycle {
	return aaum.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (aaum *Resource) Attributes() azureadAdministrativeUnitMemberAttributes {
	return azureadAdministrativeUnitMemberAttributes{ref: terra.ReferenceResource(aaum)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (aaum *Resource) ImportState(state io.Reader) error {
	aaum.state = &azureadAdministrativeUnitMemberState{}
	if err := json.NewDecoder(state).Decode(aaum.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", aaum.Type(), aaum.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (aaum *Resource) State() (*azureadAdministrativeUnitMemberState, bool) {
	return aaum.state, aaum.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (aaum *Resource) StateMust() *azureadAdministrativeUnitMemberState {
	if aaum.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", aaum.Type(), aaum.LocalName()))
	}
	return aaum.state
}

// Args contains the configurations for azuread_administrative_unit_member.
type Args struct {
	// AdministrativeUnitObjectId: string, optional
	AdministrativeUnitObjectId terra.StringValue `hcl:"administrative_unit_object_id,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// MemberObjectId: string, optional
	MemberObjectId terra.StringValue `hcl:"member_object_id,attr"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azureadAdministrativeUnitMemberAttributes struct {
	ref terra.Reference
}

// AdministrativeUnitObjectId returns a reference to field administrative_unit_object_id of azuread_administrative_unit_member.
func (aaum azureadAdministrativeUnitMemberAttributes) AdministrativeUnitObjectId() terra.StringValue {
	return terra.ReferenceAsString(aaum.ref.Append("administrative_unit_object_id"))
}

// Id returns a reference to field id of azuread_administrative_unit_member.
func (aaum azureadAdministrativeUnitMemberAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aaum.ref.Append("id"))
}

// MemberObjectId returns a reference to field member_object_id of azuread_administrative_unit_member.
func (aaum azureadAdministrativeUnitMemberAttributes) MemberObjectId() terra.StringValue {
	return terra.ReferenceAsString(aaum.ref.Append("member_object_id"))
}

func (aaum azureadAdministrativeUnitMemberAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](aaum.ref.Append("timeouts"))
}

type azureadAdministrativeUnitMemberState struct {
	AdministrativeUnitObjectId string         `json:"administrative_unit_object_id"`
	Id                         string         `json:"id"`
	MemberObjectId             string         `json:"member_object_id"`
	Timeouts                   *TimeoutsState `json:"timeouts"`
}
