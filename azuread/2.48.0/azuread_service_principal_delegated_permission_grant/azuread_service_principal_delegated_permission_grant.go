// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azuread_service_principal_delegated_permission_grant

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azuread_service_principal_delegated_permission_grant.
type Resource struct {
	Name      string
	Args      Args
	state     *azureadServicePrincipalDelegatedPermissionGrantState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (aspdpg *Resource) Type() string {
	return "azuread_service_principal_delegated_permission_grant"
}

// LocalName returns the local name for [Resource].
func (aspdpg *Resource) LocalName() string {
	return aspdpg.Name
}

// Configuration returns the configuration (args) for [Resource].
func (aspdpg *Resource) Configuration() interface{} {
	return aspdpg.Args
}

// DependOn is used for other resources to depend on [Resource].
func (aspdpg *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(aspdpg)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (aspdpg *Resource) Dependencies() terra.Dependencies {
	return aspdpg.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (aspdpg *Resource) LifecycleManagement() *terra.Lifecycle {
	return aspdpg.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (aspdpg *Resource) Attributes() azureadServicePrincipalDelegatedPermissionGrantAttributes {
	return azureadServicePrincipalDelegatedPermissionGrantAttributes{ref: terra.ReferenceResource(aspdpg)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (aspdpg *Resource) ImportState(state io.Reader) error {
	aspdpg.state = &azureadServicePrincipalDelegatedPermissionGrantState{}
	if err := json.NewDecoder(state).Decode(aspdpg.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", aspdpg.Type(), aspdpg.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (aspdpg *Resource) State() (*azureadServicePrincipalDelegatedPermissionGrantState, bool) {
	return aspdpg.state, aspdpg.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (aspdpg *Resource) StateMust() *azureadServicePrincipalDelegatedPermissionGrantState {
	if aspdpg.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", aspdpg.Type(), aspdpg.LocalName()))
	}
	return aspdpg.state
}

// Args contains the configurations for azuread_service_principal_delegated_permission_grant.
type Args struct {
	// ClaimValues: set of string, required
	ClaimValues terra.SetValue[terra.StringValue] `hcl:"claim_values,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// ResourceServicePrincipalObjectId: string, required
	ResourceServicePrincipalObjectId terra.StringValue `hcl:"resource_service_principal_object_id,attr" validate:"required"`
	// ServicePrincipalObjectId: string, required
	ServicePrincipalObjectId terra.StringValue `hcl:"service_principal_object_id,attr" validate:"required"`
	// UserObjectId: string, optional
	UserObjectId terra.StringValue `hcl:"user_object_id,attr"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azureadServicePrincipalDelegatedPermissionGrantAttributes struct {
	ref terra.Reference
}

// ClaimValues returns a reference to field claim_values of azuread_service_principal_delegated_permission_grant.
func (aspdpg azureadServicePrincipalDelegatedPermissionGrantAttributes) ClaimValues() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](aspdpg.ref.Append("claim_values"))
}

// Id returns a reference to field id of azuread_service_principal_delegated_permission_grant.
func (aspdpg azureadServicePrincipalDelegatedPermissionGrantAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aspdpg.ref.Append("id"))
}

// ResourceServicePrincipalObjectId returns a reference to field resource_service_principal_object_id of azuread_service_principal_delegated_permission_grant.
func (aspdpg azureadServicePrincipalDelegatedPermissionGrantAttributes) ResourceServicePrincipalObjectId() terra.StringValue {
	return terra.ReferenceAsString(aspdpg.ref.Append("resource_service_principal_object_id"))
}

// ServicePrincipalObjectId returns a reference to field service_principal_object_id of azuread_service_principal_delegated_permission_grant.
func (aspdpg azureadServicePrincipalDelegatedPermissionGrantAttributes) ServicePrincipalObjectId() terra.StringValue {
	return terra.ReferenceAsString(aspdpg.ref.Append("service_principal_object_id"))
}

// UserObjectId returns a reference to field user_object_id of azuread_service_principal_delegated_permission_grant.
func (aspdpg azureadServicePrincipalDelegatedPermissionGrantAttributes) UserObjectId() terra.StringValue {
	return terra.ReferenceAsString(aspdpg.ref.Append("user_object_id"))
}

func (aspdpg azureadServicePrincipalDelegatedPermissionGrantAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](aspdpg.ref.Append("timeouts"))
}

type azureadServicePrincipalDelegatedPermissionGrantState struct {
	ClaimValues                      []string       `json:"claim_values"`
	Id                               string         `json:"id"`
	ResourceServicePrincipalObjectId string         `json:"resource_service_principal_object_id"`
	ServicePrincipalObjectId         string         `json:"service_principal_object_id"`
	UserObjectId                     string         `json:"user_object_id"`
	Timeouts                         *TimeoutsState `json:"timeouts"`
}
