// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azuread_application_registration

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azuread_application_registration.
type Resource struct {
	Name      string
	Args      Args
	state     *azureadApplicationRegistrationState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (aar *Resource) Type() string {
	return "azuread_application_registration"
}

// LocalName returns the local name for [Resource].
func (aar *Resource) LocalName() string {
	return aar.Name
}

// Configuration returns the configuration (args) for [Resource].
func (aar *Resource) Configuration() interface{} {
	return aar.Args
}

// DependOn is used for other resources to depend on [Resource].
func (aar *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(aar)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (aar *Resource) Dependencies() terra.Dependencies {
	return aar.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (aar *Resource) LifecycleManagement() *terra.Lifecycle {
	return aar.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (aar *Resource) Attributes() azureadApplicationRegistrationAttributes {
	return azureadApplicationRegistrationAttributes{ref: terra.ReferenceResource(aar)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (aar *Resource) ImportState(state io.Reader) error {
	aar.state = &azureadApplicationRegistrationState{}
	if err := json.NewDecoder(state).Decode(aar.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", aar.Type(), aar.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (aar *Resource) State() (*azureadApplicationRegistrationState, bool) {
	return aar.state, aar.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (aar *Resource) StateMust() *azureadApplicationRegistrationState {
	if aar.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", aar.Type(), aar.LocalName()))
	}
	return aar.state
}

// Args contains the configurations for azuread_application_registration.
type Args struct {
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// DisplayName: string, required
	DisplayName terra.StringValue `hcl:"display_name,attr" validate:"required"`
	// GroupMembershipClaims: set of string, optional
	GroupMembershipClaims terra.SetValue[terra.StringValue] `hcl:"group_membership_claims,attr"`
	// HomepageUrl: string, optional
	HomepageUrl terra.StringValue `hcl:"homepage_url,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// ImplicitAccessTokenIssuanceEnabled: bool, optional
	ImplicitAccessTokenIssuanceEnabled terra.BoolValue `hcl:"implicit_access_token_issuance_enabled,attr"`
	// ImplicitIdTokenIssuanceEnabled: bool, optional
	ImplicitIdTokenIssuanceEnabled terra.BoolValue `hcl:"implicit_id_token_issuance_enabled,attr"`
	// LogoutUrl: string, optional
	LogoutUrl terra.StringValue `hcl:"logout_url,attr"`
	// MarketingUrl: string, optional
	MarketingUrl terra.StringValue `hcl:"marketing_url,attr"`
	// Notes: string, optional
	Notes terra.StringValue `hcl:"notes,attr"`
	// PrivacyStatementUrl: string, optional
	PrivacyStatementUrl terra.StringValue `hcl:"privacy_statement_url,attr"`
	// RequestedAccessTokenVersion: number, optional
	RequestedAccessTokenVersion terra.NumberValue `hcl:"requested_access_token_version,attr"`
	// ServiceManagementReference: string, optional
	ServiceManagementReference terra.StringValue `hcl:"service_management_reference,attr"`
	// SignInAudience: string, optional
	SignInAudience terra.StringValue `hcl:"sign_in_audience,attr"`
	// SupportUrl: string, optional
	SupportUrl terra.StringValue `hcl:"support_url,attr"`
	// TermsOfServiceUrl: string, optional
	TermsOfServiceUrl terra.StringValue `hcl:"terms_of_service_url,attr"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azureadApplicationRegistrationAttributes struct {
	ref terra.Reference
}

// ClientId returns a reference to field client_id of azuread_application_registration.
func (aar azureadApplicationRegistrationAttributes) ClientId() terra.StringValue {
	return terra.ReferenceAsString(aar.ref.Append("client_id"))
}

// Description returns a reference to field description of azuread_application_registration.
func (aar azureadApplicationRegistrationAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(aar.ref.Append("description"))
}

// DisabledByMicrosoft returns a reference to field disabled_by_microsoft of azuread_application_registration.
func (aar azureadApplicationRegistrationAttributes) DisabledByMicrosoft() terra.StringValue {
	return terra.ReferenceAsString(aar.ref.Append("disabled_by_microsoft"))
}

// DisplayName returns a reference to field display_name of azuread_application_registration.
func (aar azureadApplicationRegistrationAttributes) DisplayName() terra.StringValue {
	return terra.ReferenceAsString(aar.ref.Append("display_name"))
}

// GroupMembershipClaims returns a reference to field group_membership_claims of azuread_application_registration.
func (aar azureadApplicationRegistrationAttributes) GroupMembershipClaims() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](aar.ref.Append("group_membership_claims"))
}

// HomepageUrl returns a reference to field homepage_url of azuread_application_registration.
func (aar azureadApplicationRegistrationAttributes) HomepageUrl() terra.StringValue {
	return terra.ReferenceAsString(aar.ref.Append("homepage_url"))
}

// Id returns a reference to field id of azuread_application_registration.
func (aar azureadApplicationRegistrationAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aar.ref.Append("id"))
}

// ImplicitAccessTokenIssuanceEnabled returns a reference to field implicit_access_token_issuance_enabled of azuread_application_registration.
func (aar azureadApplicationRegistrationAttributes) ImplicitAccessTokenIssuanceEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(aar.ref.Append("implicit_access_token_issuance_enabled"))
}

// ImplicitIdTokenIssuanceEnabled returns a reference to field implicit_id_token_issuance_enabled of azuread_application_registration.
func (aar azureadApplicationRegistrationAttributes) ImplicitIdTokenIssuanceEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(aar.ref.Append("implicit_id_token_issuance_enabled"))
}

// LogoutUrl returns a reference to field logout_url of azuread_application_registration.
func (aar azureadApplicationRegistrationAttributes) LogoutUrl() terra.StringValue {
	return terra.ReferenceAsString(aar.ref.Append("logout_url"))
}

// MarketingUrl returns a reference to field marketing_url of azuread_application_registration.
func (aar azureadApplicationRegistrationAttributes) MarketingUrl() terra.StringValue {
	return terra.ReferenceAsString(aar.ref.Append("marketing_url"))
}

// Notes returns a reference to field notes of azuread_application_registration.
func (aar azureadApplicationRegistrationAttributes) Notes() terra.StringValue {
	return terra.ReferenceAsString(aar.ref.Append("notes"))
}

// ObjectId returns a reference to field object_id of azuread_application_registration.
func (aar azureadApplicationRegistrationAttributes) ObjectId() terra.StringValue {
	return terra.ReferenceAsString(aar.ref.Append("object_id"))
}

// PrivacyStatementUrl returns a reference to field privacy_statement_url of azuread_application_registration.
func (aar azureadApplicationRegistrationAttributes) PrivacyStatementUrl() terra.StringValue {
	return terra.ReferenceAsString(aar.ref.Append("privacy_statement_url"))
}

// PublisherDomain returns a reference to field publisher_domain of azuread_application_registration.
func (aar azureadApplicationRegistrationAttributes) PublisherDomain() terra.StringValue {
	return terra.ReferenceAsString(aar.ref.Append("publisher_domain"))
}

// RequestedAccessTokenVersion returns a reference to field requested_access_token_version of azuread_application_registration.
func (aar azureadApplicationRegistrationAttributes) RequestedAccessTokenVersion() terra.NumberValue {
	return terra.ReferenceAsNumber(aar.ref.Append("requested_access_token_version"))
}

// ServiceManagementReference returns a reference to field service_management_reference of azuread_application_registration.
func (aar azureadApplicationRegistrationAttributes) ServiceManagementReference() terra.StringValue {
	return terra.ReferenceAsString(aar.ref.Append("service_management_reference"))
}

// SignInAudience returns a reference to field sign_in_audience of azuread_application_registration.
func (aar azureadApplicationRegistrationAttributes) SignInAudience() terra.StringValue {
	return terra.ReferenceAsString(aar.ref.Append("sign_in_audience"))
}

// SupportUrl returns a reference to field support_url of azuread_application_registration.
func (aar azureadApplicationRegistrationAttributes) SupportUrl() terra.StringValue {
	return terra.ReferenceAsString(aar.ref.Append("support_url"))
}

// TermsOfServiceUrl returns a reference to field terms_of_service_url of azuread_application_registration.
func (aar azureadApplicationRegistrationAttributes) TermsOfServiceUrl() terra.StringValue {
	return terra.ReferenceAsString(aar.ref.Append("terms_of_service_url"))
}

func (aar azureadApplicationRegistrationAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](aar.ref.Append("timeouts"))
}

type azureadApplicationRegistrationState struct {
	ClientId                           string         `json:"client_id"`
	Description                        string         `json:"description"`
	DisabledByMicrosoft                string         `json:"disabled_by_microsoft"`
	DisplayName                        string         `json:"display_name"`
	GroupMembershipClaims              []string       `json:"group_membership_claims"`
	HomepageUrl                        string         `json:"homepage_url"`
	Id                                 string         `json:"id"`
	ImplicitAccessTokenIssuanceEnabled bool           `json:"implicit_access_token_issuance_enabled"`
	ImplicitIdTokenIssuanceEnabled     bool           `json:"implicit_id_token_issuance_enabled"`
	LogoutUrl                          string         `json:"logout_url"`
	MarketingUrl                       string         `json:"marketing_url"`
	Notes                              string         `json:"notes"`
	ObjectId                           string         `json:"object_id"`
	PrivacyStatementUrl                string         `json:"privacy_statement_url"`
	PublisherDomain                    string         `json:"publisher_domain"`
	RequestedAccessTokenVersion        float64        `json:"requested_access_token_version"`
	ServiceManagementReference         string         `json:"service_management_reference"`
	SignInAudience                     string         `json:"sign_in_audience"`
	SupportUrl                         string         `json:"support_url"`
	TermsOfServiceUrl                  string         `json:"terms_of_service_url"`
	Timeouts                           *TimeoutsState `json:"timeouts"`
}
