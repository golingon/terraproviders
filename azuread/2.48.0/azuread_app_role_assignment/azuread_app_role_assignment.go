// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azuread_app_role_assignment

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azuread_app_role_assignment.
type Resource struct {
	Name      string
	Args      Args
	state     *azureadAppRoleAssignmentState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (aara *Resource) Type() string {
	return "azuread_app_role_assignment"
}

// LocalName returns the local name for [Resource].
func (aara *Resource) LocalName() string {
	return aara.Name
}

// Configuration returns the configuration (args) for [Resource].
func (aara *Resource) Configuration() interface{} {
	return aara.Args
}

// DependOn is used for other resources to depend on [Resource].
func (aara *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(aara)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (aara *Resource) Dependencies() terra.Dependencies {
	return aara.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (aara *Resource) LifecycleManagement() *terra.Lifecycle {
	return aara.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (aara *Resource) Attributes() azureadAppRoleAssignmentAttributes {
	return azureadAppRoleAssignmentAttributes{ref: terra.ReferenceResource(aara)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (aara *Resource) ImportState(state io.Reader) error {
	aara.state = &azureadAppRoleAssignmentState{}
	if err := json.NewDecoder(state).Decode(aara.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", aara.Type(), aara.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (aara *Resource) State() (*azureadAppRoleAssignmentState, bool) {
	return aara.state, aara.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (aara *Resource) StateMust() *azureadAppRoleAssignmentState {
	if aara.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", aara.Type(), aara.LocalName()))
	}
	return aara.state
}

// Args contains the configurations for azuread_app_role_assignment.
type Args struct {
	// AppRoleId: string, required
	AppRoleId terra.StringValue `hcl:"app_role_id,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// PrincipalObjectId: string, required
	PrincipalObjectId terra.StringValue `hcl:"principal_object_id,attr" validate:"required"`
	// ResourceObjectId: string, required
	ResourceObjectId terra.StringValue `hcl:"resource_object_id,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azureadAppRoleAssignmentAttributes struct {
	ref terra.Reference
}

// AppRoleId returns a reference to field app_role_id of azuread_app_role_assignment.
func (aara azureadAppRoleAssignmentAttributes) AppRoleId() terra.StringValue {
	return terra.ReferenceAsString(aara.ref.Append("app_role_id"))
}

// Id returns a reference to field id of azuread_app_role_assignment.
func (aara azureadAppRoleAssignmentAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aara.ref.Append("id"))
}

// PrincipalDisplayName returns a reference to field principal_display_name of azuread_app_role_assignment.
func (aara azureadAppRoleAssignmentAttributes) PrincipalDisplayName() terra.StringValue {
	return terra.ReferenceAsString(aara.ref.Append("principal_display_name"))
}

// PrincipalObjectId returns a reference to field principal_object_id of azuread_app_role_assignment.
func (aara azureadAppRoleAssignmentAttributes) PrincipalObjectId() terra.StringValue {
	return terra.ReferenceAsString(aara.ref.Append("principal_object_id"))
}

// PrincipalType returns a reference to field principal_type of azuread_app_role_assignment.
func (aara azureadAppRoleAssignmentAttributes) PrincipalType() terra.StringValue {
	return terra.ReferenceAsString(aara.ref.Append("principal_type"))
}

// ResourceDisplayName returns a reference to field resource_display_name of azuread_app_role_assignment.
func (aara azureadAppRoleAssignmentAttributes) ResourceDisplayName() terra.StringValue {
	return terra.ReferenceAsString(aara.ref.Append("resource_display_name"))
}

// ResourceObjectId returns a reference to field resource_object_id of azuread_app_role_assignment.
func (aara azureadAppRoleAssignmentAttributes) ResourceObjectId() terra.StringValue {
	return terra.ReferenceAsString(aara.ref.Append("resource_object_id"))
}

func (aara azureadAppRoleAssignmentAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](aara.ref.Append("timeouts"))
}

type azureadAppRoleAssignmentState struct {
	AppRoleId            string         `json:"app_role_id"`
	Id                   string         `json:"id"`
	PrincipalDisplayName string         `json:"principal_display_name"`
	PrincipalObjectId    string         `json:"principal_object_id"`
	PrincipalType        string         `json:"principal_type"`
	ResourceDisplayName  string         `json:"resource_display_name"`
	ResourceObjectId     string         `json:"resource_object_id"`
	Timeouts             *TimeoutsState `json:"timeouts"`
}
