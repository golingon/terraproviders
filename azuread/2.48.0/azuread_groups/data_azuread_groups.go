// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azuread_groups

import "github.com/golingon/lingon/pkg/terra"

// Data creates a new instance of [DataSource].
func Data(name string, args DataArgs) *DataSource {
	return &DataSource{
		Args: args,
		Name: name,
	}
}

var _ terra.DataSource = (*DataSource)(nil)

// DataSource represents the Terraform data resource azuread_groups.
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (ag *DataSource) DataSource() string {
	return "azuread_groups"
}

// LocalName returns the local name for [DataSource].
func (ag *DataSource) LocalName() string {
	return ag.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (ag *DataSource) Configuration() interface{} {
	return ag.Args
}

// Attributes returns the attributes for [DataSource].
func (ag *DataSource) Attributes() dataAzureadGroupsAttributes {
	return dataAzureadGroupsAttributes{ref: terra.ReferenceDataSource(ag)}
}

// DataArgs contains the configurations for azuread_groups.
type DataArgs struct {
	// DisplayNamePrefix: string, optional
	DisplayNamePrefix terra.StringValue `hcl:"display_name_prefix,attr"`
	// DisplayNames: list of string, optional
	DisplayNames terra.ListValue[terra.StringValue] `hcl:"display_names,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// IgnoreMissing: bool, optional
	IgnoreMissing terra.BoolValue `hcl:"ignore_missing,attr"`
	// MailEnabled: bool, optional
	MailEnabled terra.BoolValue `hcl:"mail_enabled,attr"`
	// ObjectIds: list of string, optional
	ObjectIds terra.ListValue[terra.StringValue] `hcl:"object_ids,attr"`
	// ReturnAll: bool, optional
	ReturnAll terra.BoolValue `hcl:"return_all,attr"`
	// SecurityEnabled: bool, optional
	SecurityEnabled terra.BoolValue `hcl:"security_enabled,attr"`
	// Timeouts: optional
	Timeouts *DataTimeouts `hcl:"timeouts,block"`
}

type dataAzureadGroupsAttributes struct {
	ref terra.Reference
}

// DisplayNamePrefix returns a reference to field display_name_prefix of azuread_groups.
func (ag dataAzureadGroupsAttributes) DisplayNamePrefix() terra.StringValue {
	return terra.ReferenceAsString(ag.ref.Append("display_name_prefix"))
}

// DisplayNames returns a reference to field display_names of azuread_groups.
func (ag dataAzureadGroupsAttributes) DisplayNames() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](ag.ref.Append("display_names"))
}

// Id returns a reference to field id of azuread_groups.
func (ag dataAzureadGroupsAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(ag.ref.Append("id"))
}

// IgnoreMissing returns a reference to field ignore_missing of azuread_groups.
func (ag dataAzureadGroupsAttributes) IgnoreMissing() terra.BoolValue {
	return terra.ReferenceAsBool(ag.ref.Append("ignore_missing"))
}

// MailEnabled returns a reference to field mail_enabled of azuread_groups.
func (ag dataAzureadGroupsAttributes) MailEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(ag.ref.Append("mail_enabled"))
}

// ObjectIds returns a reference to field object_ids of azuread_groups.
func (ag dataAzureadGroupsAttributes) ObjectIds() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](ag.ref.Append("object_ids"))
}

// ReturnAll returns a reference to field return_all of azuread_groups.
func (ag dataAzureadGroupsAttributes) ReturnAll() terra.BoolValue {
	return terra.ReferenceAsBool(ag.ref.Append("return_all"))
}

// SecurityEnabled returns a reference to field security_enabled of azuread_groups.
func (ag dataAzureadGroupsAttributes) SecurityEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(ag.ref.Append("security_enabled"))
}

func (ag dataAzureadGroupsAttributes) Timeouts() DataTimeoutsAttributes {
	return terra.ReferenceAsSingle[DataTimeoutsAttributes](ag.ref.Append("timeouts"))
}
