// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azuread_application

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type Api struct {
	// KnownClientApplications: set of string, optional
	KnownClientApplications terra.SetValue[terra.StringValue] `hcl:"known_client_applications,attr"`
	// MappedClaimsEnabled: bool, optional
	MappedClaimsEnabled terra.BoolValue `hcl:"mapped_claims_enabled,attr"`
	// RequestedAccessTokenVersion: number, optional
	RequestedAccessTokenVersion terra.NumberValue `hcl:"requested_access_token_version,attr"`
	// ApiOauth2PermissionScope: min=0
	Oauth2PermissionScope []ApiOauth2PermissionScope `hcl:"oauth2_permission_scope,block" validate:"min=0"`
}

type ApiOauth2PermissionScope struct {
	// AdminConsentDescription: string, optional
	AdminConsentDescription terra.StringValue `hcl:"admin_consent_description,attr"`
	// AdminConsentDisplayName: string, optional
	AdminConsentDisplayName terra.StringValue `hcl:"admin_consent_display_name,attr"`
	// Enabled: bool, optional
	Enabled terra.BoolValue `hcl:"enabled,attr"`
	// Id: string, required
	Id terra.StringValue `hcl:"id,attr" validate:"required"`
	// Type: string, optional
	Type terra.StringValue `hcl:"type,attr"`
	// UserConsentDescription: string, optional
	UserConsentDescription terra.StringValue `hcl:"user_consent_description,attr"`
	// UserConsentDisplayName: string, optional
	UserConsentDisplayName terra.StringValue `hcl:"user_consent_display_name,attr"`
	// Value: string, optional
	Value terra.StringValue `hcl:"value,attr"`
}

type AppRole struct {
	// AllowedMemberTypes: set of string, required
	AllowedMemberTypes terra.SetValue[terra.StringValue] `hcl:"allowed_member_types,attr" validate:"required"`
	// Description: string, required
	Description terra.StringValue `hcl:"description,attr" validate:"required"`
	// DisplayName: string, required
	DisplayName terra.StringValue `hcl:"display_name,attr" validate:"required"`
	// Enabled: bool, optional
	Enabled terra.BoolValue `hcl:"enabled,attr"`
	// Id: string, required
	Id terra.StringValue `hcl:"id,attr" validate:"required"`
	// Value: string, optional
	Value terra.StringValue `hcl:"value,attr"`
}

type FeatureTags struct {
	// CustomSingleSignOn: bool, optional
	CustomSingleSignOn terra.BoolValue `hcl:"custom_single_sign_on,attr"`
	// Enterprise: bool, optional
	Enterprise terra.BoolValue `hcl:"enterprise,attr"`
	// Gallery: bool, optional
	Gallery terra.BoolValue `hcl:"gallery,attr"`
	// Hide: bool, optional
	Hide terra.BoolValue `hcl:"hide,attr"`
}

type OptionalClaims struct {
	// OptionalClaimsAccessToken: min=0
	AccessToken []OptionalClaimsAccessToken `hcl:"access_token,block" validate:"min=0"`
	// OptionalClaimsIdToken: min=0
	IdToken []OptionalClaimsIdToken `hcl:"id_token,block" validate:"min=0"`
	// OptionalClaimsSaml2Token: min=0
	Saml2Token []OptionalClaimsSaml2Token `hcl:"saml2_token,block" validate:"min=0"`
}

type OptionalClaimsAccessToken struct {
	// AdditionalProperties: list of string, optional
	AdditionalProperties terra.ListValue[terra.StringValue] `hcl:"additional_properties,attr"`
	// Essential: bool, optional
	Essential terra.BoolValue `hcl:"essential,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Source: string, optional
	Source terra.StringValue `hcl:"source,attr"`
}

type OptionalClaimsIdToken struct {
	// AdditionalProperties: list of string, optional
	AdditionalProperties terra.ListValue[terra.StringValue] `hcl:"additional_properties,attr"`
	// Essential: bool, optional
	Essential terra.BoolValue `hcl:"essential,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Source: string, optional
	Source terra.StringValue `hcl:"source,attr"`
}

type OptionalClaimsSaml2Token struct {
	// AdditionalProperties: list of string, optional
	AdditionalProperties terra.ListValue[terra.StringValue] `hcl:"additional_properties,attr"`
	// Essential: bool, optional
	Essential terra.BoolValue `hcl:"essential,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Source: string, optional
	Source terra.StringValue `hcl:"source,attr"`
}

type PublicClient struct {
	// RedirectUris: set of string, optional
	RedirectUris terra.SetValue[terra.StringValue] `hcl:"redirect_uris,attr"`
}

type RequiredResourceAccess struct {
	// ResourceAppId: string, required
	ResourceAppId terra.StringValue `hcl:"resource_app_id,attr" validate:"required"`
	// RequiredResourceAccessResourceAccess: min=1
	ResourceAccess []RequiredResourceAccessResourceAccess `hcl:"resource_access,block" validate:"min=1"`
}

type RequiredResourceAccessResourceAccess struct {
	// Id: string, required
	Id terra.StringValue `hcl:"id,attr" validate:"required"`
	// Type: string, required
	Type terra.StringValue `hcl:"type,attr" validate:"required"`
}

type SinglePageApplication struct {
	// RedirectUris: set of string, optional
	RedirectUris terra.SetValue[terra.StringValue] `hcl:"redirect_uris,attr"`
}

type Timeouts struct {
	// Create: string, optional
	Create terra.StringValue `hcl:"create,attr"`
	// Delete: string, optional
	Delete terra.StringValue `hcl:"delete,attr"`
	// Read: string, optional
	Read terra.StringValue `hcl:"read,attr"`
	// Update: string, optional
	Update terra.StringValue `hcl:"update,attr"`
}

type Web struct {
	// HomepageUrl: string, optional
	HomepageUrl terra.StringValue `hcl:"homepage_url,attr"`
	// LogoutUrl: string, optional
	LogoutUrl terra.StringValue `hcl:"logout_url,attr"`
	// RedirectUris: set of string, optional
	RedirectUris terra.SetValue[terra.StringValue] `hcl:"redirect_uris,attr"`
	// WebImplicitGrant: optional
	ImplicitGrant *WebImplicitGrant `hcl:"implicit_grant,block"`
}

type WebImplicitGrant struct {
	// AccessTokenIssuanceEnabled: bool, optional
	AccessTokenIssuanceEnabled terra.BoolValue `hcl:"access_token_issuance_enabled,attr"`
	// IdTokenIssuanceEnabled: bool, optional
	IdTokenIssuanceEnabled terra.BoolValue `hcl:"id_token_issuance_enabled,attr"`
}

type ApiAttributes struct {
	ref terra.Reference
}

func (a ApiAttributes) InternalRef() (terra.Reference, error) {
	return a.ref, nil
}

func (a ApiAttributes) InternalWithRef(ref terra.Reference) ApiAttributes {
	return ApiAttributes{ref: ref}
}

func (a ApiAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return a.ref.InternalTokens()
}

func (a ApiAttributes) KnownClientApplications() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](a.ref.Append("known_client_applications"))
}

func (a ApiAttributes) MappedClaimsEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(a.ref.Append("mapped_claims_enabled"))
}

func (a ApiAttributes) RequestedAccessTokenVersion() terra.NumberValue {
	return terra.ReferenceAsNumber(a.ref.Append("requested_access_token_version"))
}

func (a ApiAttributes) Oauth2PermissionScope() terra.SetValue[ApiOauth2PermissionScopeAttributes] {
	return terra.ReferenceAsSet[ApiOauth2PermissionScopeAttributes](a.ref.Append("oauth2_permission_scope"))
}

type ApiOauth2PermissionScopeAttributes struct {
	ref terra.Reference
}

func (ops ApiOauth2PermissionScopeAttributes) InternalRef() (terra.Reference, error) {
	return ops.ref, nil
}

func (ops ApiOauth2PermissionScopeAttributes) InternalWithRef(ref terra.Reference) ApiOauth2PermissionScopeAttributes {
	return ApiOauth2PermissionScopeAttributes{ref: ref}
}

func (ops ApiOauth2PermissionScopeAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ops.ref.InternalTokens()
}

func (ops ApiOauth2PermissionScopeAttributes) AdminConsentDescription() terra.StringValue {
	return terra.ReferenceAsString(ops.ref.Append("admin_consent_description"))
}

func (ops ApiOauth2PermissionScopeAttributes) AdminConsentDisplayName() terra.StringValue {
	return terra.ReferenceAsString(ops.ref.Append("admin_consent_display_name"))
}

func (ops ApiOauth2PermissionScopeAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceAsBool(ops.ref.Append("enabled"))
}

func (ops ApiOauth2PermissionScopeAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(ops.ref.Append("id"))
}

func (ops ApiOauth2PermissionScopeAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(ops.ref.Append("type"))
}

func (ops ApiOauth2PermissionScopeAttributes) UserConsentDescription() terra.StringValue {
	return terra.ReferenceAsString(ops.ref.Append("user_consent_description"))
}

func (ops ApiOauth2PermissionScopeAttributes) UserConsentDisplayName() terra.StringValue {
	return terra.ReferenceAsString(ops.ref.Append("user_consent_display_name"))
}

func (ops ApiOauth2PermissionScopeAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(ops.ref.Append("value"))
}

type AppRoleAttributes struct {
	ref terra.Reference
}

func (ar AppRoleAttributes) InternalRef() (terra.Reference, error) {
	return ar.ref, nil
}

func (ar AppRoleAttributes) InternalWithRef(ref terra.Reference) AppRoleAttributes {
	return AppRoleAttributes{ref: ref}
}

func (ar AppRoleAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ar.ref.InternalTokens()
}

func (ar AppRoleAttributes) AllowedMemberTypes() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ar.ref.Append("allowed_member_types"))
}

func (ar AppRoleAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(ar.ref.Append("description"))
}

func (ar AppRoleAttributes) DisplayName() terra.StringValue {
	return terra.ReferenceAsString(ar.ref.Append("display_name"))
}

func (ar AppRoleAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceAsBool(ar.ref.Append("enabled"))
}

func (ar AppRoleAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(ar.ref.Append("id"))
}

func (ar AppRoleAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(ar.ref.Append("value"))
}

type FeatureTagsAttributes struct {
	ref terra.Reference
}

func (ft FeatureTagsAttributes) InternalRef() (terra.Reference, error) {
	return ft.ref, nil
}

func (ft FeatureTagsAttributes) InternalWithRef(ref terra.Reference) FeatureTagsAttributes {
	return FeatureTagsAttributes{ref: ref}
}

func (ft FeatureTagsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ft.ref.InternalTokens()
}

func (ft FeatureTagsAttributes) CustomSingleSignOn() terra.BoolValue {
	return terra.ReferenceAsBool(ft.ref.Append("custom_single_sign_on"))
}

func (ft FeatureTagsAttributes) Enterprise() terra.BoolValue {
	return terra.ReferenceAsBool(ft.ref.Append("enterprise"))
}

func (ft FeatureTagsAttributes) Gallery() terra.BoolValue {
	return terra.ReferenceAsBool(ft.ref.Append("gallery"))
}

func (ft FeatureTagsAttributes) Hide() terra.BoolValue {
	return terra.ReferenceAsBool(ft.ref.Append("hide"))
}

type OptionalClaimsAttributes struct {
	ref terra.Reference
}

func (oc OptionalClaimsAttributes) InternalRef() (terra.Reference, error) {
	return oc.ref, nil
}

func (oc OptionalClaimsAttributes) InternalWithRef(ref terra.Reference) OptionalClaimsAttributes {
	return OptionalClaimsAttributes{ref: ref}
}

func (oc OptionalClaimsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return oc.ref.InternalTokens()
}

func (oc OptionalClaimsAttributes) AccessToken() terra.ListValue[OptionalClaimsAccessTokenAttributes] {
	return terra.ReferenceAsList[OptionalClaimsAccessTokenAttributes](oc.ref.Append("access_token"))
}

func (oc OptionalClaimsAttributes) IdToken() terra.ListValue[OptionalClaimsIdTokenAttributes] {
	return terra.ReferenceAsList[OptionalClaimsIdTokenAttributes](oc.ref.Append("id_token"))
}

func (oc OptionalClaimsAttributes) Saml2Token() terra.ListValue[OptionalClaimsSaml2TokenAttributes] {
	return terra.ReferenceAsList[OptionalClaimsSaml2TokenAttributes](oc.ref.Append("saml2_token"))
}

type OptionalClaimsAccessTokenAttributes struct {
	ref terra.Reference
}

func (at OptionalClaimsAccessTokenAttributes) InternalRef() (terra.Reference, error) {
	return at.ref, nil
}

func (at OptionalClaimsAccessTokenAttributes) InternalWithRef(ref terra.Reference) OptionalClaimsAccessTokenAttributes {
	return OptionalClaimsAccessTokenAttributes{ref: ref}
}

func (at OptionalClaimsAccessTokenAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return at.ref.InternalTokens()
}

func (at OptionalClaimsAccessTokenAttributes) AdditionalProperties() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](at.ref.Append("additional_properties"))
}

func (at OptionalClaimsAccessTokenAttributes) Essential() terra.BoolValue {
	return terra.ReferenceAsBool(at.ref.Append("essential"))
}

func (at OptionalClaimsAccessTokenAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(at.ref.Append("name"))
}

func (at OptionalClaimsAccessTokenAttributes) Source() terra.StringValue {
	return terra.ReferenceAsString(at.ref.Append("source"))
}

type OptionalClaimsIdTokenAttributes struct {
	ref terra.Reference
}

func (it OptionalClaimsIdTokenAttributes) InternalRef() (terra.Reference, error) {
	return it.ref, nil
}

func (it OptionalClaimsIdTokenAttributes) InternalWithRef(ref terra.Reference) OptionalClaimsIdTokenAttributes {
	return OptionalClaimsIdTokenAttributes{ref: ref}
}

func (it OptionalClaimsIdTokenAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return it.ref.InternalTokens()
}

func (it OptionalClaimsIdTokenAttributes) AdditionalProperties() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](it.ref.Append("additional_properties"))
}

func (it OptionalClaimsIdTokenAttributes) Essential() terra.BoolValue {
	return terra.ReferenceAsBool(it.ref.Append("essential"))
}

func (it OptionalClaimsIdTokenAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(it.ref.Append("name"))
}

func (it OptionalClaimsIdTokenAttributes) Source() terra.StringValue {
	return terra.ReferenceAsString(it.ref.Append("source"))
}

type OptionalClaimsSaml2TokenAttributes struct {
	ref terra.Reference
}

func (st OptionalClaimsSaml2TokenAttributes) InternalRef() (terra.Reference, error) {
	return st.ref, nil
}

func (st OptionalClaimsSaml2TokenAttributes) InternalWithRef(ref terra.Reference) OptionalClaimsSaml2TokenAttributes {
	return OptionalClaimsSaml2TokenAttributes{ref: ref}
}

func (st OptionalClaimsSaml2TokenAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return st.ref.InternalTokens()
}

func (st OptionalClaimsSaml2TokenAttributes) AdditionalProperties() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](st.ref.Append("additional_properties"))
}

func (st OptionalClaimsSaml2TokenAttributes) Essential() terra.BoolValue {
	return terra.ReferenceAsBool(st.ref.Append("essential"))
}

func (st OptionalClaimsSaml2TokenAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(st.ref.Append("name"))
}

func (st OptionalClaimsSaml2TokenAttributes) Source() terra.StringValue {
	return terra.ReferenceAsString(st.ref.Append("source"))
}

type PublicClientAttributes struct {
	ref terra.Reference
}

func (pc PublicClientAttributes) InternalRef() (terra.Reference, error) {
	return pc.ref, nil
}

func (pc PublicClientAttributes) InternalWithRef(ref terra.Reference) PublicClientAttributes {
	return PublicClientAttributes{ref: ref}
}

func (pc PublicClientAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return pc.ref.InternalTokens()
}

func (pc PublicClientAttributes) RedirectUris() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](pc.ref.Append("redirect_uris"))
}

type RequiredResourceAccessAttributes struct {
	ref terra.Reference
}

func (rra RequiredResourceAccessAttributes) InternalRef() (terra.Reference, error) {
	return rra.ref, nil
}

func (rra RequiredResourceAccessAttributes) InternalWithRef(ref terra.Reference) RequiredResourceAccessAttributes {
	return RequiredResourceAccessAttributes{ref: ref}
}

func (rra RequiredResourceAccessAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rra.ref.InternalTokens()
}

func (rra RequiredResourceAccessAttributes) ResourceAppId() terra.StringValue {
	return terra.ReferenceAsString(rra.ref.Append("resource_app_id"))
}

func (rra RequiredResourceAccessAttributes) ResourceAccess() terra.ListValue[RequiredResourceAccessResourceAccessAttributes] {
	return terra.ReferenceAsList[RequiredResourceAccessResourceAccessAttributes](rra.ref.Append("resource_access"))
}

type RequiredResourceAccessResourceAccessAttributes struct {
	ref terra.Reference
}

func (ra RequiredResourceAccessResourceAccessAttributes) InternalRef() (terra.Reference, error) {
	return ra.ref, nil
}

func (ra RequiredResourceAccessResourceAccessAttributes) InternalWithRef(ref terra.Reference) RequiredResourceAccessResourceAccessAttributes {
	return RequiredResourceAccessResourceAccessAttributes{ref: ref}
}

func (ra RequiredResourceAccessResourceAccessAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ra.ref.InternalTokens()
}

func (ra RequiredResourceAccessResourceAccessAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(ra.ref.Append("id"))
}

func (ra RequiredResourceAccessResourceAccessAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(ra.ref.Append("type"))
}

type SinglePageApplicationAttributes struct {
	ref terra.Reference
}

func (spa SinglePageApplicationAttributes) InternalRef() (terra.Reference, error) {
	return spa.ref, nil
}

func (spa SinglePageApplicationAttributes) InternalWithRef(ref terra.Reference) SinglePageApplicationAttributes {
	return SinglePageApplicationAttributes{ref: ref}
}

func (spa SinglePageApplicationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return spa.ref.InternalTokens()
}

func (spa SinglePageApplicationAttributes) RedirectUris() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](spa.ref.Append("redirect_uris"))
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("create"))
}

func (t TimeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("delete"))
}

func (t TimeoutsAttributes) Read() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("read"))
}

func (t TimeoutsAttributes) Update() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("update"))
}

type WebAttributes struct {
	ref terra.Reference
}

func (w WebAttributes) InternalRef() (terra.Reference, error) {
	return w.ref, nil
}

func (w WebAttributes) InternalWithRef(ref terra.Reference) WebAttributes {
	return WebAttributes{ref: ref}
}

func (w WebAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return w.ref.InternalTokens()
}

func (w WebAttributes) HomepageUrl() terra.StringValue {
	return terra.ReferenceAsString(w.ref.Append("homepage_url"))
}

func (w WebAttributes) LogoutUrl() terra.StringValue {
	return terra.ReferenceAsString(w.ref.Append("logout_url"))
}

func (w WebAttributes) RedirectUris() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](w.ref.Append("redirect_uris"))
}

func (w WebAttributes) ImplicitGrant() terra.ListValue[WebImplicitGrantAttributes] {
	return terra.ReferenceAsList[WebImplicitGrantAttributes](w.ref.Append("implicit_grant"))
}

type WebImplicitGrantAttributes struct {
	ref terra.Reference
}

func (ig WebImplicitGrantAttributes) InternalRef() (terra.Reference, error) {
	return ig.ref, nil
}

func (ig WebImplicitGrantAttributes) InternalWithRef(ref terra.Reference) WebImplicitGrantAttributes {
	return WebImplicitGrantAttributes{ref: ref}
}

func (ig WebImplicitGrantAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ig.ref.InternalTokens()
}

func (ig WebImplicitGrantAttributes) AccessTokenIssuanceEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(ig.ref.Append("access_token_issuance_enabled"))
}

func (ig WebImplicitGrantAttributes) IdTokenIssuanceEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(ig.ref.Append("id_token_issuance_enabled"))
}

type ApiState struct {
	KnownClientApplications     []string                        `json:"known_client_applications"`
	MappedClaimsEnabled         bool                            `json:"mapped_claims_enabled"`
	RequestedAccessTokenVersion float64                         `json:"requested_access_token_version"`
	Oauth2PermissionScope       []ApiOauth2PermissionScopeState `json:"oauth2_permission_scope"`
}

type ApiOauth2PermissionScopeState struct {
	AdminConsentDescription string `json:"admin_consent_description"`
	AdminConsentDisplayName string `json:"admin_consent_display_name"`
	Enabled                 bool   `json:"enabled"`
	Id                      string `json:"id"`
	Type                    string `json:"type"`
	UserConsentDescription  string `json:"user_consent_description"`
	UserConsentDisplayName  string `json:"user_consent_display_name"`
	Value                   string `json:"value"`
}

type AppRoleState struct {
	AllowedMemberTypes []string `json:"allowed_member_types"`
	Description        string   `json:"description"`
	DisplayName        string   `json:"display_name"`
	Enabled            bool     `json:"enabled"`
	Id                 string   `json:"id"`
	Value              string   `json:"value"`
}

type FeatureTagsState struct {
	CustomSingleSignOn bool `json:"custom_single_sign_on"`
	Enterprise         bool `json:"enterprise"`
	Gallery            bool `json:"gallery"`
	Hide               bool `json:"hide"`
}

type OptionalClaimsState struct {
	AccessToken []OptionalClaimsAccessTokenState `json:"access_token"`
	IdToken     []OptionalClaimsIdTokenState     `json:"id_token"`
	Saml2Token  []OptionalClaimsSaml2TokenState  `json:"saml2_token"`
}

type OptionalClaimsAccessTokenState struct {
	AdditionalProperties []string `json:"additional_properties"`
	Essential            bool     `json:"essential"`
	Name                 string   `json:"name"`
	Source               string   `json:"source"`
}

type OptionalClaimsIdTokenState struct {
	AdditionalProperties []string `json:"additional_properties"`
	Essential            bool     `json:"essential"`
	Name                 string   `json:"name"`
	Source               string   `json:"source"`
}

type OptionalClaimsSaml2TokenState struct {
	AdditionalProperties []string `json:"additional_properties"`
	Essential            bool     `json:"essential"`
	Name                 string   `json:"name"`
	Source               string   `json:"source"`
}

type PublicClientState struct {
	RedirectUris []string `json:"redirect_uris"`
}

type RequiredResourceAccessState struct {
	ResourceAppId  string                                      `json:"resource_app_id"`
	ResourceAccess []RequiredResourceAccessResourceAccessState `json:"resource_access"`
}

type RequiredResourceAccessResourceAccessState struct {
	Id   string `json:"id"`
	Type string `json:"type"`
}

type SinglePageApplicationState struct {
	RedirectUris []string `json:"redirect_uris"`
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
	Read   string `json:"read"`
	Update string `json:"update"`
}

type WebState struct {
	HomepageUrl   string                  `json:"homepage_url"`
	LogoutUrl     string                  `json:"logout_url"`
	RedirectUris  []string                `json:"redirect_uris"`
	ImplicitGrant []WebImplicitGrantState `json:"implicit_grant"`
}

type WebImplicitGrantState struct {
	AccessTokenIssuanceEnabled bool `json:"access_token_issuance_enabled"`
	IdTokenIssuanceEnabled     bool `json:"id_token_issuance_enabled"`
}
