// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azuread_domains

import "github.com/golingon/lingon/pkg/terra"

// Data creates a new instance of [DataSource].
func Data(name string, args DataArgs) *DataSource {
	return &DataSource{
		Args: args,
		Name: name,
	}
}

var _ terra.DataSource = (*DataSource)(nil)

// DataSource represents the Terraform data resource azuread_domains.
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (ad *DataSource) DataSource() string {
	return "azuread_domains"
}

// LocalName returns the local name for [DataSource].
func (ad *DataSource) LocalName() string {
	return ad.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (ad *DataSource) Configuration() interface{} {
	return ad.Args
}

// Attributes returns the attributes for [DataSource].
func (ad *DataSource) Attributes() dataAzureadDomainsAttributes {
	return dataAzureadDomainsAttributes{ref: terra.ReferenceDataSource(ad)}
}

// DataArgs contains the configurations for azuread_domains.
type DataArgs struct {
	// AdminManaged: bool, optional
	AdminManaged terra.BoolValue `hcl:"admin_managed,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// IncludeUnverified: bool, optional
	IncludeUnverified terra.BoolValue `hcl:"include_unverified,attr"`
	// OnlyDefault: bool, optional
	OnlyDefault terra.BoolValue `hcl:"only_default,attr"`
	// OnlyInitial: bool, optional
	OnlyInitial terra.BoolValue `hcl:"only_initial,attr"`
	// OnlyRoot: bool, optional
	OnlyRoot terra.BoolValue `hcl:"only_root,attr"`
	// SupportsServices: list of string, optional
	SupportsServices terra.ListValue[terra.StringValue] `hcl:"supports_services,attr"`
	// Timeouts: optional
	Timeouts *DataTimeouts `hcl:"timeouts,block"`
}

type dataAzureadDomainsAttributes struct {
	ref terra.Reference
}

// AdminManaged returns a reference to field admin_managed of azuread_domains.
func (ad dataAzureadDomainsAttributes) AdminManaged() terra.BoolValue {
	return terra.ReferenceAsBool(ad.ref.Append("admin_managed"))
}

// Id returns a reference to field id of azuread_domains.
func (ad dataAzureadDomainsAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(ad.ref.Append("id"))
}

// IncludeUnverified returns a reference to field include_unverified of azuread_domains.
func (ad dataAzureadDomainsAttributes) IncludeUnverified() terra.BoolValue {
	return terra.ReferenceAsBool(ad.ref.Append("include_unverified"))
}

// OnlyDefault returns a reference to field only_default of azuread_domains.
func (ad dataAzureadDomainsAttributes) OnlyDefault() terra.BoolValue {
	return terra.ReferenceAsBool(ad.ref.Append("only_default"))
}

// OnlyInitial returns a reference to field only_initial of azuread_domains.
func (ad dataAzureadDomainsAttributes) OnlyInitial() terra.BoolValue {
	return terra.ReferenceAsBool(ad.ref.Append("only_initial"))
}

// OnlyRoot returns a reference to field only_root of azuread_domains.
func (ad dataAzureadDomainsAttributes) OnlyRoot() terra.BoolValue {
	return terra.ReferenceAsBool(ad.ref.Append("only_root"))
}

// SupportsServices returns a reference to field supports_services of azuread_domains.
func (ad dataAzureadDomainsAttributes) SupportsServices() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](ad.ref.Append("supports_services"))
}

func (ad dataAzureadDomainsAttributes) Domains() terra.ListValue[DataDomainsAttributes] {
	return terra.ReferenceAsList[DataDomainsAttributes](ad.ref.Append("domains"))
}

func (ad dataAzureadDomainsAttributes) Timeouts() DataTimeoutsAttributes {
	return terra.ReferenceAsSingle[DataTimeoutsAttributes](ad.ref.Append("timeouts"))
}
