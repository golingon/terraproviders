// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azuread_application_federated_identity_credential

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azuread_application_federated_identity_credential.
type Resource struct {
	Name      string
	Args      Args
	state     *azureadApplicationFederatedIdentityCredentialState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (aafic *Resource) Type() string {
	return "azuread_application_federated_identity_credential"
}

// LocalName returns the local name for [Resource].
func (aafic *Resource) LocalName() string {
	return aafic.Name
}

// Configuration returns the configuration (args) for [Resource].
func (aafic *Resource) Configuration() interface{} {
	return aafic.Args
}

// DependOn is used for other resources to depend on [Resource].
func (aafic *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(aafic)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (aafic *Resource) Dependencies() terra.Dependencies {
	return aafic.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (aafic *Resource) LifecycleManagement() *terra.Lifecycle {
	return aafic.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (aafic *Resource) Attributes() azureadApplicationFederatedIdentityCredentialAttributes {
	return azureadApplicationFederatedIdentityCredentialAttributes{ref: terra.ReferenceResource(aafic)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (aafic *Resource) ImportState(state io.Reader) error {
	aafic.state = &azureadApplicationFederatedIdentityCredentialState{}
	if err := json.NewDecoder(state).Decode(aafic.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", aafic.Type(), aafic.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (aafic *Resource) State() (*azureadApplicationFederatedIdentityCredentialState, bool) {
	return aafic.state, aafic.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (aafic *Resource) StateMust() *azureadApplicationFederatedIdentityCredentialState {
	if aafic.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", aafic.Type(), aafic.LocalName()))
	}
	return aafic.state
}

// Args contains the configurations for azuread_application_federated_identity_credential.
type Args struct {
	// ApplicationId: string, optional
	ApplicationId terra.StringValue `hcl:"application_id,attr"`
	// ApplicationObjectId: string, optional
	ApplicationObjectId terra.StringValue `hcl:"application_object_id,attr"`
	// Audiences: list of string, required
	Audiences terra.ListValue[terra.StringValue] `hcl:"audiences,attr" validate:"required"`
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// DisplayName: string, required
	DisplayName terra.StringValue `hcl:"display_name,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Issuer: string, required
	Issuer terra.StringValue `hcl:"issuer,attr" validate:"required"`
	// Subject: string, required
	Subject terra.StringValue `hcl:"subject,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azureadApplicationFederatedIdentityCredentialAttributes struct {
	ref terra.Reference
}

// ApplicationId returns a reference to field application_id of azuread_application_federated_identity_credential.
func (aafic azureadApplicationFederatedIdentityCredentialAttributes) ApplicationId() terra.StringValue {
	return terra.ReferenceAsString(aafic.ref.Append("application_id"))
}

// ApplicationObjectId returns a reference to field application_object_id of azuread_application_federated_identity_credential.
func (aafic azureadApplicationFederatedIdentityCredentialAttributes) ApplicationObjectId() terra.StringValue {
	return terra.ReferenceAsString(aafic.ref.Append("application_object_id"))
}

// Audiences returns a reference to field audiences of azuread_application_federated_identity_credential.
func (aafic azureadApplicationFederatedIdentityCredentialAttributes) Audiences() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](aafic.ref.Append("audiences"))
}

// CredentialId returns a reference to field credential_id of azuread_application_federated_identity_credential.
func (aafic azureadApplicationFederatedIdentityCredentialAttributes) CredentialId() terra.StringValue {
	return terra.ReferenceAsString(aafic.ref.Append("credential_id"))
}

// Description returns a reference to field description of azuread_application_federated_identity_credential.
func (aafic azureadApplicationFederatedIdentityCredentialAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(aafic.ref.Append("description"))
}

// DisplayName returns a reference to field display_name of azuread_application_federated_identity_credential.
func (aafic azureadApplicationFederatedIdentityCredentialAttributes) DisplayName() terra.StringValue {
	return terra.ReferenceAsString(aafic.ref.Append("display_name"))
}

// Id returns a reference to field id of azuread_application_federated_identity_credential.
func (aafic azureadApplicationFederatedIdentityCredentialAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aafic.ref.Append("id"))
}

// Issuer returns a reference to field issuer of azuread_application_federated_identity_credential.
func (aafic azureadApplicationFederatedIdentityCredentialAttributes) Issuer() terra.StringValue {
	return terra.ReferenceAsString(aafic.ref.Append("issuer"))
}

// Subject returns a reference to field subject of azuread_application_federated_identity_credential.
func (aafic azureadApplicationFederatedIdentityCredentialAttributes) Subject() terra.StringValue {
	return terra.ReferenceAsString(aafic.ref.Append("subject"))
}

func (aafic azureadApplicationFederatedIdentityCredentialAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](aafic.ref.Append("timeouts"))
}

type azureadApplicationFederatedIdentityCredentialState struct {
	ApplicationId       string         `json:"application_id"`
	ApplicationObjectId string         `json:"application_object_id"`
	Audiences           []string       `json:"audiences"`
	CredentialId        string         `json:"credential_id"`
	Description         string         `json:"description"`
	DisplayName         string         `json:"display_name"`
	Id                  string         `json:"id"`
	Issuer              string         `json:"issuer"`
	Subject             string         `json:"subject"`
	Timeouts            *TimeoutsState `json:"timeouts"`
}
