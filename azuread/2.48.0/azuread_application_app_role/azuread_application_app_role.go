// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azuread_application_app_role

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azuread_application_app_role.
type Resource struct {
	Name      string
	Args      Args
	state     *azureadApplicationAppRoleState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (aaar *Resource) Type() string {
	return "azuread_application_app_role"
}

// LocalName returns the local name for [Resource].
func (aaar *Resource) LocalName() string {
	return aaar.Name
}

// Configuration returns the configuration (args) for [Resource].
func (aaar *Resource) Configuration() interface{} {
	return aaar.Args
}

// DependOn is used for other resources to depend on [Resource].
func (aaar *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(aaar)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (aaar *Resource) Dependencies() terra.Dependencies {
	return aaar.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (aaar *Resource) LifecycleManagement() *terra.Lifecycle {
	return aaar.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (aaar *Resource) Attributes() azureadApplicationAppRoleAttributes {
	return azureadApplicationAppRoleAttributes{ref: terra.ReferenceResource(aaar)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (aaar *Resource) ImportState(state io.Reader) error {
	aaar.state = &azureadApplicationAppRoleState{}
	if err := json.NewDecoder(state).Decode(aaar.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", aaar.Type(), aaar.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (aaar *Resource) State() (*azureadApplicationAppRoleState, bool) {
	return aaar.state, aaar.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (aaar *Resource) StateMust() *azureadApplicationAppRoleState {
	if aaar.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", aaar.Type(), aaar.LocalName()))
	}
	return aaar.state
}

// Args contains the configurations for azuread_application_app_role.
type Args struct {
	// AllowedMemberTypes: set of string, required
	AllowedMemberTypes terra.SetValue[terra.StringValue] `hcl:"allowed_member_types,attr" validate:"required"`
	// ApplicationId: string, required
	ApplicationId terra.StringValue `hcl:"application_id,attr" validate:"required"`
	// Description: string, required
	Description terra.StringValue `hcl:"description,attr" validate:"required"`
	// DisplayName: string, required
	DisplayName terra.StringValue `hcl:"display_name,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// RoleId: string, required
	RoleId terra.StringValue `hcl:"role_id,attr" validate:"required"`
	// Value: string, optional
	Value terra.StringValue `hcl:"value,attr"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azureadApplicationAppRoleAttributes struct {
	ref terra.Reference
}

// AllowedMemberTypes returns a reference to field allowed_member_types of azuread_application_app_role.
func (aaar azureadApplicationAppRoleAttributes) AllowedMemberTypes() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](aaar.ref.Append("allowed_member_types"))
}

// ApplicationId returns a reference to field application_id of azuread_application_app_role.
func (aaar azureadApplicationAppRoleAttributes) ApplicationId() terra.StringValue {
	return terra.ReferenceAsString(aaar.ref.Append("application_id"))
}

// Description returns a reference to field description of azuread_application_app_role.
func (aaar azureadApplicationAppRoleAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(aaar.ref.Append("description"))
}

// DisplayName returns a reference to field display_name of azuread_application_app_role.
func (aaar azureadApplicationAppRoleAttributes) DisplayName() terra.StringValue {
	return terra.ReferenceAsString(aaar.ref.Append("display_name"))
}

// Id returns a reference to field id of azuread_application_app_role.
func (aaar azureadApplicationAppRoleAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aaar.ref.Append("id"))
}

// RoleId returns a reference to field role_id of azuread_application_app_role.
func (aaar azureadApplicationAppRoleAttributes) RoleId() terra.StringValue {
	return terra.ReferenceAsString(aaar.ref.Append("role_id"))
}

// Value returns a reference to field value of azuread_application_app_role.
func (aaar azureadApplicationAppRoleAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(aaar.ref.Append("value"))
}

func (aaar azureadApplicationAppRoleAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](aaar.ref.Append("timeouts"))
}

type azureadApplicationAppRoleState struct {
	AllowedMemberTypes []string       `json:"allowed_member_types"`
	ApplicationId      string         `json:"application_id"`
	Description        string         `json:"description"`
	DisplayName        string         `json:"display_name"`
	Id                 string         `json:"id"`
	RoleId             string         `json:"role_id"`
	Value              string         `json:"value"`
	Timeouts           *TimeoutsState `json:"timeouts"`
}
