// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azuread_access_package_resource_package_association

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource azuread_access_package_resource_package_association.
type Resource struct {
	Name      string
	Args      Args
	state     *azureadAccessPackageResourcePackageAssociationState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (aaprpa *Resource) Type() string {
	return "azuread_access_package_resource_package_association"
}

// LocalName returns the local name for [Resource].
func (aaprpa *Resource) LocalName() string {
	return aaprpa.Name
}

// Configuration returns the configuration (args) for [Resource].
func (aaprpa *Resource) Configuration() interface{} {
	return aaprpa.Args
}

// DependOn is used for other resources to depend on [Resource].
func (aaprpa *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(aaprpa)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (aaprpa *Resource) Dependencies() terra.Dependencies {
	return aaprpa.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (aaprpa *Resource) LifecycleManagement() *terra.Lifecycle {
	return aaprpa.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (aaprpa *Resource) Attributes() azureadAccessPackageResourcePackageAssociationAttributes {
	return azureadAccessPackageResourcePackageAssociationAttributes{ref: terra.ReferenceResource(aaprpa)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (aaprpa *Resource) ImportState(state io.Reader) error {
	aaprpa.state = &azureadAccessPackageResourcePackageAssociationState{}
	if err := json.NewDecoder(state).Decode(aaprpa.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", aaprpa.Type(), aaprpa.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (aaprpa *Resource) State() (*azureadAccessPackageResourcePackageAssociationState, bool) {
	return aaprpa.state, aaprpa.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (aaprpa *Resource) StateMust() *azureadAccessPackageResourcePackageAssociationState {
	if aaprpa.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", aaprpa.Type(), aaprpa.LocalName()))
	}
	return aaprpa.state
}

// Args contains the configurations for azuread_access_package_resource_package_association.
type Args struct {
	// AccessPackageId: string, required
	AccessPackageId terra.StringValue `hcl:"access_package_id,attr" validate:"required"`
	// AccessType: string, optional
	AccessType terra.StringValue `hcl:"access_type,attr"`
	// CatalogResourceAssociationId: string, required
	CatalogResourceAssociationId terra.StringValue `hcl:"catalog_resource_association_id,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type azureadAccessPackageResourcePackageAssociationAttributes struct {
	ref terra.Reference
}

// AccessPackageId returns a reference to field access_package_id of azuread_access_package_resource_package_association.
func (aaprpa azureadAccessPackageResourcePackageAssociationAttributes) AccessPackageId() terra.StringValue {
	return terra.ReferenceAsString(aaprpa.ref.Append("access_package_id"))
}

// AccessType returns a reference to field access_type of azuread_access_package_resource_package_association.
func (aaprpa azureadAccessPackageResourcePackageAssociationAttributes) AccessType() terra.StringValue {
	return terra.ReferenceAsString(aaprpa.ref.Append("access_type"))
}

// CatalogResourceAssociationId returns a reference to field catalog_resource_association_id of azuread_access_package_resource_package_association.
func (aaprpa azureadAccessPackageResourcePackageAssociationAttributes) CatalogResourceAssociationId() terra.StringValue {
	return terra.ReferenceAsString(aaprpa.ref.Append("catalog_resource_association_id"))
}

// Id returns a reference to field id of azuread_access_package_resource_package_association.
func (aaprpa azureadAccessPackageResourcePackageAssociationAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aaprpa.ref.Append("id"))
}

func (aaprpa azureadAccessPackageResourcePackageAssociationAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](aaprpa.ref.Append("timeouts"))
}

type azureadAccessPackageResourcePackageAssociationState struct {
	AccessPackageId              string         `json:"access_package_id"`
	AccessType                   string         `json:"access_type"`
	CatalogResourceAssociationId string         `json:"catalog_resource_association_id"`
	Id                           string         `json:"id"`
	Timeouts                     *TimeoutsState `json:"timeouts"`
}
