// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azuread_named_location

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DataTimeouts struct {
	// Read: string, optional
	Read terra.StringValue `hcl:"read,attr"`
}

type DataCountryAttributes struct {
	ref terra.Reference
}

func (c DataCountryAttributes) InternalRef() (terra.Reference, error) {
	return c.ref, nil
}

func (c DataCountryAttributes) InternalWithRef(ref terra.Reference) DataCountryAttributes {
	return DataCountryAttributes{ref: ref}
}

func (c DataCountryAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return c.ref.InternalTokens()
}

func (c DataCountryAttributes) CountriesAndRegions() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](c.ref.Append("countries_and_regions"))
}

func (c DataCountryAttributes) IncludeUnknownCountriesAndRegions() terra.BoolValue {
	return terra.ReferenceAsBool(c.ref.Append("include_unknown_countries_and_regions"))
}

type DataIpAttributes struct {
	ref terra.Reference
}

func (i DataIpAttributes) InternalRef() (terra.Reference, error) {
	return i.ref, nil
}

func (i DataIpAttributes) InternalWithRef(ref terra.Reference) DataIpAttributes {
	return DataIpAttributes{ref: ref}
}

func (i DataIpAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return i.ref.InternalTokens()
}

func (i DataIpAttributes) IpRanges() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](i.ref.Append("ip_ranges"))
}

func (i DataIpAttributes) Trusted() terra.BoolValue {
	return terra.ReferenceAsBool(i.ref.Append("trusted"))
}

type DataTimeoutsAttributes struct {
	ref terra.Reference
}

func (t DataTimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t DataTimeoutsAttributes) InternalWithRef(ref terra.Reference) DataTimeoutsAttributes {
	return DataTimeoutsAttributes{ref: ref}
}

func (t DataTimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t DataTimeoutsAttributes) Read() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("read"))
}

type DataCountryState struct {
	CountriesAndRegions               []string `json:"countries_and_regions"`
	IncludeUnknownCountriesAndRegions bool     `json:"include_unknown_countries_and_regions"`
}

type DataIpState struct {
	IpRanges []string `json:"ip_ranges"`
	Trusted  bool     `json:"trusted"`
}

type DataTimeoutsState struct {
	Read string `json:"read"`
}
