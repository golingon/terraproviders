// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package azuread_application_template

import "github.com/golingon/lingon/pkg/terra"

// Data creates a new instance of [DataSource].
func Data(name string, args DataArgs) *DataSource {
	return &DataSource{
		Args: args,
		Name: name,
	}
}

var _ terra.DataSource = (*DataSource)(nil)

// DataSource represents the Terraform data resource azuread_application_template.
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (aat *DataSource) DataSource() string {
	return "azuread_application_template"
}

// LocalName returns the local name for [DataSource].
func (aat *DataSource) LocalName() string {
	return aat.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (aat *DataSource) Configuration() interface{} {
	return aat.Args
}

// Attributes returns the attributes for [DataSource].
func (aat *DataSource) Attributes() dataAzureadApplicationTemplateAttributes {
	return dataAzureadApplicationTemplateAttributes{ref: terra.ReferenceDataSource(aat)}
}

// DataArgs contains the configurations for azuread_application_template.
type DataArgs struct {
	// DisplayName: string, optional
	DisplayName terra.StringValue `hcl:"display_name,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// TemplateId: string, optional
	TemplateId terra.StringValue `hcl:"template_id,attr"`
	// Timeouts: optional
	Timeouts *DataTimeouts `hcl:"timeouts,block"`
}

type dataAzureadApplicationTemplateAttributes struct {
	ref terra.Reference
}

// Categories returns a reference to field categories of azuread_application_template.
func (aat dataAzureadApplicationTemplateAttributes) Categories() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](aat.ref.Append("categories"))
}

// DisplayName returns a reference to field display_name of azuread_application_template.
func (aat dataAzureadApplicationTemplateAttributes) DisplayName() terra.StringValue {
	return terra.ReferenceAsString(aat.ref.Append("display_name"))
}

// HomepageUrl returns a reference to field homepage_url of azuread_application_template.
func (aat dataAzureadApplicationTemplateAttributes) HomepageUrl() terra.StringValue {
	return terra.ReferenceAsString(aat.ref.Append("homepage_url"))
}

// Id returns a reference to field id of azuread_application_template.
func (aat dataAzureadApplicationTemplateAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aat.ref.Append("id"))
}

// LogoUrl returns a reference to field logo_url of azuread_application_template.
func (aat dataAzureadApplicationTemplateAttributes) LogoUrl() terra.StringValue {
	return terra.ReferenceAsString(aat.ref.Append("logo_url"))
}

// Publisher returns a reference to field publisher of azuread_application_template.
func (aat dataAzureadApplicationTemplateAttributes) Publisher() terra.StringValue {
	return terra.ReferenceAsString(aat.ref.Append("publisher"))
}

// SupportedProvisioningTypes returns a reference to field supported_provisioning_types of azuread_application_template.
func (aat dataAzureadApplicationTemplateAttributes) SupportedProvisioningTypes() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](aat.ref.Append("supported_provisioning_types"))
}

// SupportedSingleSignOnModes returns a reference to field supported_single_sign_on_modes of azuread_application_template.
func (aat dataAzureadApplicationTemplateAttributes) SupportedSingleSignOnModes() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](aat.ref.Append("supported_single_sign_on_modes"))
}

// TemplateId returns a reference to field template_id of azuread_application_template.
func (aat dataAzureadApplicationTemplateAttributes) TemplateId() terra.StringValue {
	return terra.ReferenceAsString(aat.ref.Append("template_id"))
}

func (aat dataAzureadApplicationTemplateAttributes) Timeouts() DataTimeoutsAttributes {
	return terra.ReferenceAsSingle[DataTimeoutsAttributes](aat.ref.Append("timeouts"))
}
