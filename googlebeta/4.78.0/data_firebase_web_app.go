// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package googlebeta

import "github.com/volvo-cars/lingon/pkg/terra"

// NewDataFirebaseWebApp creates a new instance of [DataFirebaseWebApp].
func NewDataFirebaseWebApp(name string, args DataFirebaseWebAppArgs) *DataFirebaseWebApp {
	return &DataFirebaseWebApp{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataFirebaseWebApp)(nil)

// DataFirebaseWebApp represents the Terraform data resource google_firebase_web_app.
type DataFirebaseWebApp struct {
	Name string
	Args DataFirebaseWebAppArgs
}

// DataSource returns the Terraform object type for [DataFirebaseWebApp].
func (fwa *DataFirebaseWebApp) DataSource() string {
	return "google_firebase_web_app"
}

// LocalName returns the local name for [DataFirebaseWebApp].
func (fwa *DataFirebaseWebApp) LocalName() string {
	return fwa.Name
}

// Configuration returns the configuration (args) for [DataFirebaseWebApp].
func (fwa *DataFirebaseWebApp) Configuration() interface{} {
	return fwa.Args
}

// Attributes returns the attributes for [DataFirebaseWebApp].
func (fwa *DataFirebaseWebApp) Attributes() dataFirebaseWebAppAttributes {
	return dataFirebaseWebAppAttributes{ref: terra.ReferenceDataResource(fwa)}
}

// DataFirebaseWebAppArgs contains the configurations for google_firebase_web_app.
type DataFirebaseWebAppArgs struct {
	// AppId: string, required
	AppId terra.StringValue `hcl:"app_id,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
}
type dataFirebaseWebAppAttributes struct {
	ref terra.Reference
}

// AppId returns a reference to field app_id of google_firebase_web_app.
func (fwa dataFirebaseWebAppAttributes) AppId() terra.StringValue {
	return terra.ReferenceAsString(fwa.ref.Append("app_id"))
}

// AppUrls returns a reference to field app_urls of google_firebase_web_app.
func (fwa dataFirebaseWebAppAttributes) AppUrls() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](fwa.ref.Append("app_urls"))
}

// DeletionPolicy returns a reference to field deletion_policy of google_firebase_web_app.
func (fwa dataFirebaseWebAppAttributes) DeletionPolicy() terra.StringValue {
	return terra.ReferenceAsString(fwa.ref.Append("deletion_policy"))
}

// DisplayName returns a reference to field display_name of google_firebase_web_app.
func (fwa dataFirebaseWebAppAttributes) DisplayName() terra.StringValue {
	return terra.ReferenceAsString(fwa.ref.Append("display_name"))
}

// Id returns a reference to field id of google_firebase_web_app.
func (fwa dataFirebaseWebAppAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(fwa.ref.Append("id"))
}

// Name returns a reference to field name of google_firebase_web_app.
func (fwa dataFirebaseWebAppAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(fwa.ref.Append("name"))
}

// Project returns a reference to field project of google_firebase_web_app.
func (fwa dataFirebaseWebAppAttributes) Project() terra.StringValue {
	return terra.ReferenceAsString(fwa.ref.Append("project"))
}
