// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package googlebeta

import (
	"encoding/json"
	"fmt"
	gkehubmembershiprbacrolebinding "github.com/golingon/terraproviders/googlebeta/4.80.0/gkehubmembershiprbacrolebinding"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

// NewGkeHubMembershipRbacRoleBinding creates a new instance of [GkeHubMembershipRbacRoleBinding].
func NewGkeHubMembershipRbacRoleBinding(name string, args GkeHubMembershipRbacRoleBindingArgs) *GkeHubMembershipRbacRoleBinding {
	return &GkeHubMembershipRbacRoleBinding{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*GkeHubMembershipRbacRoleBinding)(nil)

// GkeHubMembershipRbacRoleBinding represents the Terraform resource google_gke_hub_membership_rbac_role_binding.
type GkeHubMembershipRbacRoleBinding struct {
	Name      string
	Args      GkeHubMembershipRbacRoleBindingArgs
	state     *gkeHubMembershipRbacRoleBindingState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [GkeHubMembershipRbacRoleBinding].
func (ghmrrb *GkeHubMembershipRbacRoleBinding) Type() string {
	return "google_gke_hub_membership_rbac_role_binding"
}

// LocalName returns the local name for [GkeHubMembershipRbacRoleBinding].
func (ghmrrb *GkeHubMembershipRbacRoleBinding) LocalName() string {
	return ghmrrb.Name
}

// Configuration returns the configuration (args) for [GkeHubMembershipRbacRoleBinding].
func (ghmrrb *GkeHubMembershipRbacRoleBinding) Configuration() interface{} {
	return ghmrrb.Args
}

// DependOn is used for other resources to depend on [GkeHubMembershipRbacRoleBinding].
func (ghmrrb *GkeHubMembershipRbacRoleBinding) DependOn() terra.Reference {
	return terra.ReferenceResource(ghmrrb)
}

// Dependencies returns the list of resources [GkeHubMembershipRbacRoleBinding] depends_on.
func (ghmrrb *GkeHubMembershipRbacRoleBinding) Dependencies() terra.Dependencies {
	return ghmrrb.DependsOn
}

// LifecycleManagement returns the lifecycle block for [GkeHubMembershipRbacRoleBinding].
func (ghmrrb *GkeHubMembershipRbacRoleBinding) LifecycleManagement() *terra.Lifecycle {
	return ghmrrb.Lifecycle
}

// Attributes returns the attributes for [GkeHubMembershipRbacRoleBinding].
func (ghmrrb *GkeHubMembershipRbacRoleBinding) Attributes() gkeHubMembershipRbacRoleBindingAttributes {
	return gkeHubMembershipRbacRoleBindingAttributes{ref: terra.ReferenceResource(ghmrrb)}
}

// ImportState imports the given attribute values into [GkeHubMembershipRbacRoleBinding]'s state.
func (ghmrrb *GkeHubMembershipRbacRoleBinding) ImportState(av io.Reader) error {
	ghmrrb.state = &gkeHubMembershipRbacRoleBindingState{}
	if err := json.NewDecoder(av).Decode(ghmrrb.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", ghmrrb.Type(), ghmrrb.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [GkeHubMembershipRbacRoleBinding] has state.
func (ghmrrb *GkeHubMembershipRbacRoleBinding) State() (*gkeHubMembershipRbacRoleBindingState, bool) {
	return ghmrrb.state, ghmrrb.state != nil
}

// StateMust returns the state for [GkeHubMembershipRbacRoleBinding]. Panics if the state is nil.
func (ghmrrb *GkeHubMembershipRbacRoleBinding) StateMust() *gkeHubMembershipRbacRoleBindingState {
	if ghmrrb.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", ghmrrb.Type(), ghmrrb.LocalName()))
	}
	return ghmrrb.state
}

// GkeHubMembershipRbacRoleBindingArgs contains the configurations for google_gke_hub_membership_rbac_role_binding.
type GkeHubMembershipRbacRoleBindingArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Location: string, required
	Location terra.StringValue `hcl:"location,attr" validate:"required"`
	// MembershipId: string, required
	MembershipId terra.StringValue `hcl:"membership_id,attr" validate:"required"`
	// MembershipRbacRoleBindingId: string, required
	MembershipRbacRoleBindingId terra.StringValue `hcl:"membership_rbac_role_binding_id,attr" validate:"required"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
	// User: string, required
	User terra.StringValue `hcl:"user,attr" validate:"required"`
	// State: min=0
	State []gkehubmembershiprbacrolebinding.State `hcl:"state,block" validate:"min=0"`
	// Role: required
	Role *gkehubmembershiprbacrolebinding.Role `hcl:"role,block" validate:"required"`
	// Timeouts: optional
	Timeouts *gkehubmembershiprbacrolebinding.Timeouts `hcl:"timeouts,block"`
}
type gkeHubMembershipRbacRoleBindingAttributes struct {
	ref terra.Reference
}

// CreateTime returns a reference to field create_time of google_gke_hub_membership_rbac_role_binding.
func (ghmrrb gkeHubMembershipRbacRoleBindingAttributes) CreateTime() terra.StringValue {
	return terra.ReferenceAsString(ghmrrb.ref.Append("create_time"))
}

// DeleteTime returns a reference to field delete_time of google_gke_hub_membership_rbac_role_binding.
func (ghmrrb gkeHubMembershipRbacRoleBindingAttributes) DeleteTime() terra.StringValue {
	return terra.ReferenceAsString(ghmrrb.ref.Append("delete_time"))
}

// Id returns a reference to field id of google_gke_hub_membership_rbac_role_binding.
func (ghmrrb gkeHubMembershipRbacRoleBindingAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(ghmrrb.ref.Append("id"))
}

// Location returns a reference to field location of google_gke_hub_membership_rbac_role_binding.
func (ghmrrb gkeHubMembershipRbacRoleBindingAttributes) Location() terra.StringValue {
	return terra.ReferenceAsString(ghmrrb.ref.Append("location"))
}

// MembershipId returns a reference to field membership_id of google_gke_hub_membership_rbac_role_binding.
func (ghmrrb gkeHubMembershipRbacRoleBindingAttributes) MembershipId() terra.StringValue {
	return terra.ReferenceAsString(ghmrrb.ref.Append("membership_id"))
}

// MembershipRbacRoleBindingId returns a reference to field membership_rbac_role_binding_id of google_gke_hub_membership_rbac_role_binding.
func (ghmrrb gkeHubMembershipRbacRoleBindingAttributes) MembershipRbacRoleBindingId() terra.StringValue {
	return terra.ReferenceAsString(ghmrrb.ref.Append("membership_rbac_role_binding_id"))
}

// Name returns a reference to field name of google_gke_hub_membership_rbac_role_binding.
func (ghmrrb gkeHubMembershipRbacRoleBindingAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(ghmrrb.ref.Append("name"))
}

// Project returns a reference to field project of google_gke_hub_membership_rbac_role_binding.
func (ghmrrb gkeHubMembershipRbacRoleBindingAttributes) Project() terra.StringValue {
	return terra.ReferenceAsString(ghmrrb.ref.Append("project"))
}

// Uid returns a reference to field uid of google_gke_hub_membership_rbac_role_binding.
func (ghmrrb gkeHubMembershipRbacRoleBindingAttributes) Uid() terra.StringValue {
	return terra.ReferenceAsString(ghmrrb.ref.Append("uid"))
}

// UpdateTime returns a reference to field update_time of google_gke_hub_membership_rbac_role_binding.
func (ghmrrb gkeHubMembershipRbacRoleBindingAttributes) UpdateTime() terra.StringValue {
	return terra.ReferenceAsString(ghmrrb.ref.Append("update_time"))
}

// User returns a reference to field user of google_gke_hub_membership_rbac_role_binding.
func (ghmrrb gkeHubMembershipRbacRoleBindingAttributes) User() terra.StringValue {
	return terra.ReferenceAsString(ghmrrb.ref.Append("user"))
}

func (ghmrrb gkeHubMembershipRbacRoleBindingAttributes) State() terra.ListValue[gkehubmembershiprbacrolebinding.StateAttributes] {
	return terra.ReferenceAsList[gkehubmembershiprbacrolebinding.StateAttributes](ghmrrb.ref.Append("state"))
}

func (ghmrrb gkeHubMembershipRbacRoleBindingAttributes) Role() terra.ListValue[gkehubmembershiprbacrolebinding.RoleAttributes] {
	return terra.ReferenceAsList[gkehubmembershiprbacrolebinding.RoleAttributes](ghmrrb.ref.Append("role"))
}

func (ghmrrb gkeHubMembershipRbacRoleBindingAttributes) Timeouts() gkehubmembershiprbacrolebinding.TimeoutsAttributes {
	return terra.ReferenceAsSingle[gkehubmembershiprbacrolebinding.TimeoutsAttributes](ghmrrb.ref.Append("timeouts"))
}

type gkeHubMembershipRbacRoleBindingState struct {
	CreateTime                  string                                         `json:"create_time"`
	DeleteTime                  string                                         `json:"delete_time"`
	Id                          string                                         `json:"id"`
	Location                    string                                         `json:"location"`
	MembershipId                string                                         `json:"membership_id"`
	MembershipRbacRoleBindingId string                                         `json:"membership_rbac_role_binding_id"`
	Name                        string                                         `json:"name"`
	Project                     string                                         `json:"project"`
	Uid                         string                                         `json:"uid"`
	UpdateTime                  string                                         `json:"update_time"`
	User                        string                                         `json:"user"`
	State                       []gkehubmembershiprbacrolebinding.StateState   `json:"state"`
	Role                        []gkehubmembershiprbacrolebinding.RoleState    `json:"role"`
	Timeouts                    *gkehubmembershiprbacrolebinding.TimeoutsState `json:"timeouts"`
}
