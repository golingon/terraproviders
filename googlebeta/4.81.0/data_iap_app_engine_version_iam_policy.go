// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package googlebeta

import "github.com/volvo-cars/lingon/pkg/terra"

// NewDataIapAppEngineVersionIamPolicy creates a new instance of [DataIapAppEngineVersionIamPolicy].
func NewDataIapAppEngineVersionIamPolicy(name string, args DataIapAppEngineVersionIamPolicyArgs) *DataIapAppEngineVersionIamPolicy {
	return &DataIapAppEngineVersionIamPolicy{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataIapAppEngineVersionIamPolicy)(nil)

// DataIapAppEngineVersionIamPolicy represents the Terraform data resource google_iap_app_engine_version_iam_policy.
type DataIapAppEngineVersionIamPolicy struct {
	Name string
	Args DataIapAppEngineVersionIamPolicyArgs
}

// DataSource returns the Terraform object type for [DataIapAppEngineVersionIamPolicy].
func (iaevip *DataIapAppEngineVersionIamPolicy) DataSource() string {
	return "google_iap_app_engine_version_iam_policy"
}

// LocalName returns the local name for [DataIapAppEngineVersionIamPolicy].
func (iaevip *DataIapAppEngineVersionIamPolicy) LocalName() string {
	return iaevip.Name
}

// Configuration returns the configuration (args) for [DataIapAppEngineVersionIamPolicy].
func (iaevip *DataIapAppEngineVersionIamPolicy) Configuration() interface{} {
	return iaevip.Args
}

// Attributes returns the attributes for [DataIapAppEngineVersionIamPolicy].
func (iaevip *DataIapAppEngineVersionIamPolicy) Attributes() dataIapAppEngineVersionIamPolicyAttributes {
	return dataIapAppEngineVersionIamPolicyAttributes{ref: terra.ReferenceDataResource(iaevip)}
}

// DataIapAppEngineVersionIamPolicyArgs contains the configurations for google_iap_app_engine_version_iam_policy.
type DataIapAppEngineVersionIamPolicyArgs struct {
	// AppId: string, required
	AppId terra.StringValue `hcl:"app_id,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
	// Service: string, required
	Service terra.StringValue `hcl:"service,attr" validate:"required"`
	// VersionId: string, required
	VersionId terra.StringValue `hcl:"version_id,attr" validate:"required"`
}
type dataIapAppEngineVersionIamPolicyAttributes struct {
	ref terra.Reference
}

// AppId returns a reference to field app_id of google_iap_app_engine_version_iam_policy.
func (iaevip dataIapAppEngineVersionIamPolicyAttributes) AppId() terra.StringValue {
	return terra.ReferenceAsString(iaevip.ref.Append("app_id"))
}

// Etag returns a reference to field etag of google_iap_app_engine_version_iam_policy.
func (iaevip dataIapAppEngineVersionIamPolicyAttributes) Etag() terra.StringValue {
	return terra.ReferenceAsString(iaevip.ref.Append("etag"))
}

// Id returns a reference to field id of google_iap_app_engine_version_iam_policy.
func (iaevip dataIapAppEngineVersionIamPolicyAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(iaevip.ref.Append("id"))
}

// PolicyData returns a reference to field policy_data of google_iap_app_engine_version_iam_policy.
func (iaevip dataIapAppEngineVersionIamPolicyAttributes) PolicyData() terra.StringValue {
	return terra.ReferenceAsString(iaevip.ref.Append("policy_data"))
}

// Project returns a reference to field project of google_iap_app_engine_version_iam_policy.
func (iaevip dataIapAppEngineVersionIamPolicyAttributes) Project() terra.StringValue {
	return terra.ReferenceAsString(iaevip.ref.Append("project"))
}

// Service returns a reference to field service of google_iap_app_engine_version_iam_policy.
func (iaevip dataIapAppEngineVersionIamPolicyAttributes) Service() terra.StringValue {
	return terra.ReferenceAsString(iaevip.ref.Append("service"))
}

// VersionId returns a reference to field version_id of google_iap_app_engine_version_iam_policy.
func (iaevip dataIapAppEngineVersionIamPolicyAttributes) VersionId() terra.StringValue {
	return terra.ReferenceAsString(iaevip.ref.Append("version_id"))
}
