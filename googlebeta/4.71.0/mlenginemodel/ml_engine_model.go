// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package mlenginemodel

import (
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
	terra "github.com/volvo-cars/lingon/pkg/terra"
)

type DefaultVersion struct {
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
}

type Timeouts struct {
	// Create: string, optional
	Create terra.StringValue `hcl:"create,attr"`
	// Delete: string, optional
	Delete terra.StringValue `hcl:"delete,attr"`
}

type DefaultVersionAttributes struct {
	ref terra.Reference
}

func (dv DefaultVersionAttributes) InternalRef() (terra.Reference, error) {
	return dv.ref, nil
}

func (dv DefaultVersionAttributes) InternalWithRef(ref terra.Reference) DefaultVersionAttributes {
	return DefaultVersionAttributes{ref: ref}
}

func (dv DefaultVersionAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dv.ref.InternalTokens()
}

func (dv DefaultVersionAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(dv.ref.Append("name"))
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("create"))
}

func (t TimeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("delete"))
}

type DefaultVersionState struct {
	Name string `json:"name"`
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
}
