// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package googlebeta

import (
	"encoding/json"
	"fmt"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

// NewHealthcareFhirStoreIamPolicy creates a new instance of [HealthcareFhirStoreIamPolicy].
func NewHealthcareFhirStoreIamPolicy(name string, args HealthcareFhirStoreIamPolicyArgs) *HealthcareFhirStoreIamPolicy {
	return &HealthcareFhirStoreIamPolicy{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*HealthcareFhirStoreIamPolicy)(nil)

// HealthcareFhirStoreIamPolicy represents the Terraform resource google_healthcare_fhir_store_iam_policy.
type HealthcareFhirStoreIamPolicy struct {
	Name      string
	Args      HealthcareFhirStoreIamPolicyArgs
	state     *healthcareFhirStoreIamPolicyState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [HealthcareFhirStoreIamPolicy].
func (hfsip *HealthcareFhirStoreIamPolicy) Type() string {
	return "google_healthcare_fhir_store_iam_policy"
}

// LocalName returns the local name for [HealthcareFhirStoreIamPolicy].
func (hfsip *HealthcareFhirStoreIamPolicy) LocalName() string {
	return hfsip.Name
}

// Configuration returns the configuration (args) for [HealthcareFhirStoreIamPolicy].
func (hfsip *HealthcareFhirStoreIamPolicy) Configuration() interface{} {
	return hfsip.Args
}

// DependOn is used for other resources to depend on [HealthcareFhirStoreIamPolicy].
func (hfsip *HealthcareFhirStoreIamPolicy) DependOn() terra.Reference {
	return terra.ReferenceResource(hfsip)
}

// Dependencies returns the list of resources [HealthcareFhirStoreIamPolicy] depends_on.
func (hfsip *HealthcareFhirStoreIamPolicy) Dependencies() terra.Dependencies {
	return hfsip.DependsOn
}

// LifecycleManagement returns the lifecycle block for [HealthcareFhirStoreIamPolicy].
func (hfsip *HealthcareFhirStoreIamPolicy) LifecycleManagement() *terra.Lifecycle {
	return hfsip.Lifecycle
}

// Attributes returns the attributes for [HealthcareFhirStoreIamPolicy].
func (hfsip *HealthcareFhirStoreIamPolicy) Attributes() healthcareFhirStoreIamPolicyAttributes {
	return healthcareFhirStoreIamPolicyAttributes{ref: terra.ReferenceResource(hfsip)}
}

// ImportState imports the given attribute values into [HealthcareFhirStoreIamPolicy]'s state.
func (hfsip *HealthcareFhirStoreIamPolicy) ImportState(av io.Reader) error {
	hfsip.state = &healthcareFhirStoreIamPolicyState{}
	if err := json.NewDecoder(av).Decode(hfsip.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", hfsip.Type(), hfsip.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [HealthcareFhirStoreIamPolicy] has state.
func (hfsip *HealthcareFhirStoreIamPolicy) State() (*healthcareFhirStoreIamPolicyState, bool) {
	return hfsip.state, hfsip.state != nil
}

// StateMust returns the state for [HealthcareFhirStoreIamPolicy]. Panics if the state is nil.
func (hfsip *HealthcareFhirStoreIamPolicy) StateMust() *healthcareFhirStoreIamPolicyState {
	if hfsip.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", hfsip.Type(), hfsip.LocalName()))
	}
	return hfsip.state
}

// HealthcareFhirStoreIamPolicyArgs contains the configurations for google_healthcare_fhir_store_iam_policy.
type HealthcareFhirStoreIamPolicyArgs struct {
	// FhirStoreId: string, required
	FhirStoreId terra.StringValue `hcl:"fhir_store_id,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// PolicyData: string, required
	PolicyData terra.StringValue `hcl:"policy_data,attr" validate:"required"`
}
type healthcareFhirStoreIamPolicyAttributes struct {
	ref terra.Reference
}

// Etag returns a reference to field etag of google_healthcare_fhir_store_iam_policy.
func (hfsip healthcareFhirStoreIamPolicyAttributes) Etag() terra.StringValue {
	return terra.ReferenceAsString(hfsip.ref.Append("etag"))
}

// FhirStoreId returns a reference to field fhir_store_id of google_healthcare_fhir_store_iam_policy.
func (hfsip healthcareFhirStoreIamPolicyAttributes) FhirStoreId() terra.StringValue {
	return terra.ReferenceAsString(hfsip.ref.Append("fhir_store_id"))
}

// Id returns a reference to field id of google_healthcare_fhir_store_iam_policy.
func (hfsip healthcareFhirStoreIamPolicyAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(hfsip.ref.Append("id"))
}

// PolicyData returns a reference to field policy_data of google_healthcare_fhir_store_iam_policy.
func (hfsip healthcareFhirStoreIamPolicyAttributes) PolicyData() terra.StringValue {
	return terra.ReferenceAsString(hfsip.ref.Append("policy_data"))
}

type healthcareFhirStoreIamPolicyState struct {
	Etag        string `json:"etag"`
	FhirStoreId string `json:"fhir_store_id"`
	Id          string `json:"id"`
	PolicyData  string `json:"policy_data"`
}
