// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package dataprocmetastorefederation

import (
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
	terra "github.com/volvo-cars/lingon/pkg/terra"
)

type BackendMetastores struct {
	// MetastoreType: string, required
	MetastoreType terra.StringValue `hcl:"metastore_type,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Rank: string, required
	Rank terra.StringValue `hcl:"rank,attr" validate:"required"`
}

type Timeouts struct {
	// Create: string, optional
	Create terra.StringValue `hcl:"create,attr"`
	// Delete: string, optional
	Delete terra.StringValue `hcl:"delete,attr"`
	// Update: string, optional
	Update terra.StringValue `hcl:"update,attr"`
}

type BackendMetastoresAttributes struct {
	ref terra.Reference
}

func (bm BackendMetastoresAttributes) InternalRef() (terra.Reference, error) {
	return bm.ref, nil
}

func (bm BackendMetastoresAttributes) InternalWithRef(ref terra.Reference) BackendMetastoresAttributes {
	return BackendMetastoresAttributes{ref: ref}
}

func (bm BackendMetastoresAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return bm.ref.InternalTokens()
}

func (bm BackendMetastoresAttributes) MetastoreType() terra.StringValue {
	return terra.ReferenceAsString(bm.ref.Append("metastore_type"))
}

func (bm BackendMetastoresAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(bm.ref.Append("name"))
}

func (bm BackendMetastoresAttributes) Rank() terra.StringValue {
	return terra.ReferenceAsString(bm.ref.Append("rank"))
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("create"))
}

func (t TimeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("delete"))
}

func (t TimeoutsAttributes) Update() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("update"))
}

type BackendMetastoresState struct {
	MetastoreType string `json:"metastore_type"`
	Name          string `json:"name"`
	Rank          string `json:"rank"`
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
	Update string `json:"update"`
}
