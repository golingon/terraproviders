// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package googlebeta

import (
	"encoding/json"
	"fmt"
	backupdrmanagementserver "github.com/golingon/terraproviders/googlebeta/5.1.0/backupdrmanagementserver"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

// NewBackupDrManagementServer creates a new instance of [BackupDrManagementServer].
func NewBackupDrManagementServer(name string, args BackupDrManagementServerArgs) *BackupDrManagementServer {
	return &BackupDrManagementServer{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*BackupDrManagementServer)(nil)

// BackupDrManagementServer represents the Terraform resource google_backup_dr_management_server.
type BackupDrManagementServer struct {
	Name      string
	Args      BackupDrManagementServerArgs
	state     *backupDrManagementServerState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [BackupDrManagementServer].
func (bdms *BackupDrManagementServer) Type() string {
	return "google_backup_dr_management_server"
}

// LocalName returns the local name for [BackupDrManagementServer].
func (bdms *BackupDrManagementServer) LocalName() string {
	return bdms.Name
}

// Configuration returns the configuration (args) for [BackupDrManagementServer].
func (bdms *BackupDrManagementServer) Configuration() interface{} {
	return bdms.Args
}

// DependOn is used for other resources to depend on [BackupDrManagementServer].
func (bdms *BackupDrManagementServer) DependOn() terra.Reference {
	return terra.ReferenceResource(bdms)
}

// Dependencies returns the list of resources [BackupDrManagementServer] depends_on.
func (bdms *BackupDrManagementServer) Dependencies() terra.Dependencies {
	return bdms.DependsOn
}

// LifecycleManagement returns the lifecycle block for [BackupDrManagementServer].
func (bdms *BackupDrManagementServer) LifecycleManagement() *terra.Lifecycle {
	return bdms.Lifecycle
}

// Attributes returns the attributes for [BackupDrManagementServer].
func (bdms *BackupDrManagementServer) Attributes() backupDrManagementServerAttributes {
	return backupDrManagementServerAttributes{ref: terra.ReferenceResource(bdms)}
}

// ImportState imports the given attribute values into [BackupDrManagementServer]'s state.
func (bdms *BackupDrManagementServer) ImportState(av io.Reader) error {
	bdms.state = &backupDrManagementServerState{}
	if err := json.NewDecoder(av).Decode(bdms.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", bdms.Type(), bdms.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [BackupDrManagementServer] has state.
func (bdms *BackupDrManagementServer) State() (*backupDrManagementServerState, bool) {
	return bdms.state, bdms.state != nil
}

// StateMust returns the state for [BackupDrManagementServer]. Panics if the state is nil.
func (bdms *BackupDrManagementServer) StateMust() *backupDrManagementServerState {
	if bdms.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", bdms.Type(), bdms.LocalName()))
	}
	return bdms.state
}

// BackupDrManagementServerArgs contains the configurations for google_backup_dr_management_server.
type BackupDrManagementServerArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Location: string, required
	Location terra.StringValue `hcl:"location,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
	// Type: string, optional
	Type terra.StringValue `hcl:"type,attr"`
	// ManagementUri: min=0
	ManagementUri []backupdrmanagementserver.ManagementUri `hcl:"management_uri,block" validate:"min=0"`
	// Networks: min=1
	Networks []backupdrmanagementserver.Networks `hcl:"networks,block" validate:"min=1"`
	// Timeouts: optional
	Timeouts *backupdrmanagementserver.Timeouts `hcl:"timeouts,block"`
}
type backupDrManagementServerAttributes struct {
	ref terra.Reference
}

// Id returns a reference to field id of google_backup_dr_management_server.
func (bdms backupDrManagementServerAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(bdms.ref.Append("id"))
}

// Location returns a reference to field location of google_backup_dr_management_server.
func (bdms backupDrManagementServerAttributes) Location() terra.StringValue {
	return terra.ReferenceAsString(bdms.ref.Append("location"))
}

// Name returns a reference to field name of google_backup_dr_management_server.
func (bdms backupDrManagementServerAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(bdms.ref.Append("name"))
}

// Oauth2ClientId returns a reference to field oauth2_client_id of google_backup_dr_management_server.
func (bdms backupDrManagementServerAttributes) Oauth2ClientId() terra.StringValue {
	return terra.ReferenceAsString(bdms.ref.Append("oauth2_client_id"))
}

// Project returns a reference to field project of google_backup_dr_management_server.
func (bdms backupDrManagementServerAttributes) Project() terra.StringValue {
	return terra.ReferenceAsString(bdms.ref.Append("project"))
}

// Type returns a reference to field type of google_backup_dr_management_server.
func (bdms backupDrManagementServerAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(bdms.ref.Append("type"))
}

func (bdms backupDrManagementServerAttributes) ManagementUri() terra.ListValue[backupdrmanagementserver.ManagementUriAttributes] {
	return terra.ReferenceAsList[backupdrmanagementserver.ManagementUriAttributes](bdms.ref.Append("management_uri"))
}

func (bdms backupDrManagementServerAttributes) Networks() terra.ListValue[backupdrmanagementserver.NetworksAttributes] {
	return terra.ReferenceAsList[backupdrmanagementserver.NetworksAttributes](bdms.ref.Append("networks"))
}

func (bdms backupDrManagementServerAttributes) Timeouts() backupdrmanagementserver.TimeoutsAttributes {
	return terra.ReferenceAsSingle[backupdrmanagementserver.TimeoutsAttributes](bdms.ref.Append("timeouts"))
}

type backupDrManagementServerState struct {
	Id             string                                        `json:"id"`
	Location       string                                        `json:"location"`
	Name           string                                        `json:"name"`
	Oauth2ClientId string                                        `json:"oauth2_client_id"`
	Project        string                                        `json:"project"`
	Type           string                                        `json:"type"`
	ManagementUri  []backupdrmanagementserver.ManagementUriState `json:"management_uri"`
	Networks       []backupdrmanagementserver.NetworksState      `json:"networks"`
	Timeouts       *backupdrmanagementserver.TimeoutsState       `json:"timeouts"`
}
