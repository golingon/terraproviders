// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package googlebeta

import "github.com/volvo-cars/lingon/pkg/terra"

// NewDataDataCatalogTagTemplateIamPolicy creates a new instance of [DataDataCatalogTagTemplateIamPolicy].
func NewDataDataCatalogTagTemplateIamPolicy(name string, args DataDataCatalogTagTemplateIamPolicyArgs) *DataDataCatalogTagTemplateIamPolicy {
	return &DataDataCatalogTagTemplateIamPolicy{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataDataCatalogTagTemplateIamPolicy)(nil)

// DataDataCatalogTagTemplateIamPolicy represents the Terraform data resource google_data_catalog_tag_template_iam_policy.
type DataDataCatalogTagTemplateIamPolicy struct {
	Name string
	Args DataDataCatalogTagTemplateIamPolicyArgs
}

// DataSource returns the Terraform object type for [DataDataCatalogTagTemplateIamPolicy].
func (dcttip *DataDataCatalogTagTemplateIamPolicy) DataSource() string {
	return "google_data_catalog_tag_template_iam_policy"
}

// LocalName returns the local name for [DataDataCatalogTagTemplateIamPolicy].
func (dcttip *DataDataCatalogTagTemplateIamPolicy) LocalName() string {
	return dcttip.Name
}

// Configuration returns the configuration (args) for [DataDataCatalogTagTemplateIamPolicy].
func (dcttip *DataDataCatalogTagTemplateIamPolicy) Configuration() interface{} {
	return dcttip.Args
}

// Attributes returns the attributes for [DataDataCatalogTagTemplateIamPolicy].
func (dcttip *DataDataCatalogTagTemplateIamPolicy) Attributes() dataDataCatalogTagTemplateIamPolicyAttributes {
	return dataDataCatalogTagTemplateIamPolicyAttributes{ref: terra.ReferenceDataResource(dcttip)}
}

// DataDataCatalogTagTemplateIamPolicyArgs contains the configurations for google_data_catalog_tag_template_iam_policy.
type DataDataCatalogTagTemplateIamPolicyArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
	// Region: string, optional
	Region terra.StringValue `hcl:"region,attr"`
	// TagTemplate: string, required
	TagTemplate terra.StringValue `hcl:"tag_template,attr" validate:"required"`
}
type dataDataCatalogTagTemplateIamPolicyAttributes struct {
	ref terra.Reference
}

// Etag returns a reference to field etag of google_data_catalog_tag_template_iam_policy.
func (dcttip dataDataCatalogTagTemplateIamPolicyAttributes) Etag() terra.StringValue {
	return terra.ReferenceAsString(dcttip.ref.Append("etag"))
}

// Id returns a reference to field id of google_data_catalog_tag_template_iam_policy.
func (dcttip dataDataCatalogTagTemplateIamPolicyAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(dcttip.ref.Append("id"))
}

// PolicyData returns a reference to field policy_data of google_data_catalog_tag_template_iam_policy.
func (dcttip dataDataCatalogTagTemplateIamPolicyAttributes) PolicyData() terra.StringValue {
	return terra.ReferenceAsString(dcttip.ref.Append("policy_data"))
}

// Project returns a reference to field project of google_data_catalog_tag_template_iam_policy.
func (dcttip dataDataCatalogTagTemplateIamPolicyAttributes) Project() terra.StringValue {
	return terra.ReferenceAsString(dcttip.ref.Append("project"))
}

// Region returns a reference to field region of google_data_catalog_tag_template_iam_policy.
func (dcttip dataDataCatalogTagTemplateIamPolicyAttributes) Region() terra.StringValue {
	return terra.ReferenceAsString(dcttip.ref.Append("region"))
}

// TagTemplate returns a reference to field tag_template of google_data_catalog_tag_template_iam_policy.
func (dcttip dataDataCatalogTagTemplateIamPolicyAttributes) TagTemplate() terra.StringValue {
	return terra.ReferenceAsString(dcttip.ref.Append("tag_template"))
}
