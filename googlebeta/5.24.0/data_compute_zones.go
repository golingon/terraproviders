// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package googlebeta

import "github.com/golingon/lingon/pkg/terra"

// NewDataComputeZones creates a new instance of [DataComputeZones].
func NewDataComputeZones(name string, args DataComputeZonesArgs) *DataComputeZones {
	return &DataComputeZones{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataComputeZones)(nil)

// DataComputeZones represents the Terraform data resource google_compute_zones.
type DataComputeZones struct {
	Name string
	Args DataComputeZonesArgs
}

// DataSource returns the Terraform object type for [DataComputeZones].
func (cz *DataComputeZones) DataSource() string {
	return "google_compute_zones"
}

// LocalName returns the local name for [DataComputeZones].
func (cz *DataComputeZones) LocalName() string {
	return cz.Name
}

// Configuration returns the configuration (args) for [DataComputeZones].
func (cz *DataComputeZones) Configuration() interface{} {
	return cz.Args
}

// Attributes returns the attributes for [DataComputeZones].
func (cz *DataComputeZones) Attributes() dataComputeZonesAttributes {
	return dataComputeZonesAttributes{ref: terra.ReferenceDataResource(cz)}
}

// DataComputeZonesArgs contains the configurations for google_compute_zones.
type DataComputeZonesArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
	// Region: string, optional
	Region terra.StringValue `hcl:"region,attr"`
	// Status: string, optional
	Status terra.StringValue `hcl:"status,attr"`
}
type dataComputeZonesAttributes struct {
	ref terra.Reference
}

// Id returns a reference to field id of google_compute_zones.
func (cz dataComputeZonesAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(cz.ref.Append("id"))
}

// Names returns a reference to field names of google_compute_zones.
func (cz dataComputeZonesAttributes) Names() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](cz.ref.Append("names"))
}

// Project returns a reference to field project of google_compute_zones.
func (cz dataComputeZonesAttributes) Project() terra.StringValue {
	return terra.ReferenceAsString(cz.ref.Append("project"))
}

// Region returns a reference to field region of google_compute_zones.
func (cz dataComputeZonesAttributes) Region() terra.StringValue {
	return terra.ReferenceAsString(cz.ref.Append("region"))
}

// Status returns a reference to field status of google_compute_zones.
func (cz dataComputeZonesAttributes) Status() terra.StringValue {
	return terra.ReferenceAsString(cz.ref.Append("status"))
}
