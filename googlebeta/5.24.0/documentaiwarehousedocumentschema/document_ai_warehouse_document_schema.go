// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package documentaiwarehousedocumentschema

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type PropertyDefinitions struct {
	// DisplayName: string, optional
	DisplayName terra.StringValue `hcl:"display_name,attr"`
	// IsFilterable: bool, optional
	IsFilterable terra.BoolValue `hcl:"is_filterable,attr"`
	// IsMetadata: bool, optional
	IsMetadata terra.BoolValue `hcl:"is_metadata,attr"`
	// IsRepeatable: bool, optional
	IsRepeatable terra.BoolValue `hcl:"is_repeatable,attr"`
	// IsRequired: bool, optional
	IsRequired terra.BoolValue `hcl:"is_required,attr"`
	// IsSearchable: bool, optional
	IsSearchable terra.BoolValue `hcl:"is_searchable,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// RetrievalImportance: string, optional
	RetrievalImportance terra.StringValue `hcl:"retrieval_importance,attr"`
	// PropertyDefinitionsDateTimeTypeOptions: optional
	DateTimeTypeOptions *PropertyDefinitionsDateTimeTypeOptions `hcl:"date_time_type_options,block"`
	// PropertyDefinitionsEnumTypeOptions: optional
	EnumTypeOptions *PropertyDefinitionsEnumTypeOptions `hcl:"enum_type_options,block"`
	// PropertyDefinitionsFloatTypeOptions: optional
	FloatTypeOptions *PropertyDefinitionsFloatTypeOptions `hcl:"float_type_options,block"`
	// PropertyDefinitionsIntegerTypeOptions: optional
	IntegerTypeOptions *PropertyDefinitionsIntegerTypeOptions `hcl:"integer_type_options,block"`
	// PropertyDefinitionsMapTypeOptions: optional
	MapTypeOptions *PropertyDefinitionsMapTypeOptions `hcl:"map_type_options,block"`
	// PropertyTypeOptions: optional
	PropertyTypeOptions *PropertyTypeOptions `hcl:"property_type_options,block"`
	// PropertyDefinitionsSchemaSources: min=0
	SchemaSources []PropertyDefinitionsSchemaSources `hcl:"schema_sources,block" validate:"min=0"`
	// PropertyDefinitionsTextTypeOptions: optional
	TextTypeOptions *PropertyDefinitionsTextTypeOptions `hcl:"text_type_options,block"`
	// PropertyDefinitionsTimestampTypeOptions: optional
	TimestampTypeOptions *PropertyDefinitionsTimestampTypeOptions `hcl:"timestamp_type_options,block"`
}

type PropertyDefinitionsDateTimeTypeOptions struct{}

type PropertyDefinitionsEnumTypeOptions struct {
	// PossibleValues: list of string, required
	PossibleValues terra.ListValue[terra.StringValue] `hcl:"possible_values,attr" validate:"required"`
	// ValidationCheckDisabled: bool, optional
	ValidationCheckDisabled terra.BoolValue `hcl:"validation_check_disabled,attr"`
}

type PropertyDefinitionsFloatTypeOptions struct{}

type PropertyDefinitionsIntegerTypeOptions struct{}

type PropertyDefinitionsMapTypeOptions struct{}

type PropertyTypeOptions struct {
	// PropertyTypeOptionsPropertyDefinitions: min=1
	PropertyDefinitions []PropertyTypeOptionsPropertyDefinitions `hcl:"property_definitions,block" validate:"min=1"`
}

type PropertyTypeOptionsPropertyDefinitions struct {
	// DisplayName: string, optional
	DisplayName terra.StringValue `hcl:"display_name,attr"`
	// IsFilterable: bool, optional
	IsFilterable terra.BoolValue `hcl:"is_filterable,attr"`
	// IsMetadata: bool, optional
	IsMetadata terra.BoolValue `hcl:"is_metadata,attr"`
	// IsRepeatable: bool, optional
	IsRepeatable terra.BoolValue `hcl:"is_repeatable,attr"`
	// IsRequired: bool, optional
	IsRequired terra.BoolValue `hcl:"is_required,attr"`
	// IsSearchable: bool, optional
	IsSearchable terra.BoolValue `hcl:"is_searchable,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// RetrievalImportance: string, optional
	RetrievalImportance terra.StringValue `hcl:"retrieval_importance,attr"`
	// PropertyTypeOptionsPropertyDefinitionsDateTimeTypeOptions: optional
	DateTimeTypeOptions *PropertyTypeOptionsPropertyDefinitionsDateTimeTypeOptions `hcl:"date_time_type_options,block"`
	// PropertyTypeOptionsPropertyDefinitionsEnumTypeOptions: optional
	EnumTypeOptions *PropertyTypeOptionsPropertyDefinitionsEnumTypeOptions `hcl:"enum_type_options,block"`
	// PropertyTypeOptionsPropertyDefinitionsFloatTypeOptions: optional
	FloatTypeOptions *PropertyTypeOptionsPropertyDefinitionsFloatTypeOptions `hcl:"float_type_options,block"`
	// PropertyTypeOptionsPropertyDefinitionsIntegerTypeOptions: optional
	IntegerTypeOptions *PropertyTypeOptionsPropertyDefinitionsIntegerTypeOptions `hcl:"integer_type_options,block"`
	// PropertyTypeOptionsPropertyDefinitionsMapTypeOptions: optional
	MapTypeOptions *PropertyTypeOptionsPropertyDefinitionsMapTypeOptions `hcl:"map_type_options,block"`
	// PropertyTypeOptionsPropertyDefinitionsSchemaSources: min=0
	SchemaSources []PropertyTypeOptionsPropertyDefinitionsSchemaSources `hcl:"schema_sources,block" validate:"min=0"`
	// PropertyTypeOptionsPropertyDefinitionsTextTypeOptions: optional
	TextTypeOptions *PropertyTypeOptionsPropertyDefinitionsTextTypeOptions `hcl:"text_type_options,block"`
	// PropertyTypeOptionsPropertyDefinitionsTimestampTypeOptions: optional
	TimestampTypeOptions *PropertyTypeOptionsPropertyDefinitionsTimestampTypeOptions `hcl:"timestamp_type_options,block"`
}

type PropertyTypeOptionsPropertyDefinitionsDateTimeTypeOptions struct{}

type PropertyTypeOptionsPropertyDefinitionsEnumTypeOptions struct {
	// PossibleValues: list of string, required
	PossibleValues terra.ListValue[terra.StringValue] `hcl:"possible_values,attr" validate:"required"`
	// ValidationCheckDisabled: bool, optional
	ValidationCheckDisabled terra.BoolValue `hcl:"validation_check_disabled,attr"`
}

type PropertyTypeOptionsPropertyDefinitionsFloatTypeOptions struct{}

type PropertyTypeOptionsPropertyDefinitionsIntegerTypeOptions struct{}

type PropertyTypeOptionsPropertyDefinitionsMapTypeOptions struct{}

type PropertyTypeOptionsPropertyDefinitionsSchemaSources struct {
	// Name: string, optional
	Name terra.StringValue `hcl:"name,attr"`
	// ProcessorType: string, optional
	ProcessorType terra.StringValue `hcl:"processor_type,attr"`
}

type PropertyTypeOptionsPropertyDefinitionsTextTypeOptions struct{}

type PropertyTypeOptionsPropertyDefinitionsTimestampTypeOptions struct{}

type PropertyDefinitionsSchemaSources struct {
	// Name: string, optional
	Name terra.StringValue `hcl:"name,attr"`
	// ProcessorType: string, optional
	ProcessorType terra.StringValue `hcl:"processor_type,attr"`
}

type PropertyDefinitionsTextTypeOptions struct{}

type PropertyDefinitionsTimestampTypeOptions struct{}

type Timeouts struct {
	// Create: string, optional
	Create terra.StringValue `hcl:"create,attr"`
	// Delete: string, optional
	Delete terra.StringValue `hcl:"delete,attr"`
}

type PropertyDefinitionsAttributes struct {
	ref terra.Reference
}

func (pd PropertyDefinitionsAttributes) InternalRef() (terra.Reference, error) {
	return pd.ref, nil
}

func (pd PropertyDefinitionsAttributes) InternalWithRef(ref terra.Reference) PropertyDefinitionsAttributes {
	return PropertyDefinitionsAttributes{ref: ref}
}

func (pd PropertyDefinitionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return pd.ref.InternalTokens()
}

func (pd PropertyDefinitionsAttributes) DisplayName() terra.StringValue {
	return terra.ReferenceAsString(pd.ref.Append("display_name"))
}

func (pd PropertyDefinitionsAttributes) IsFilterable() terra.BoolValue {
	return terra.ReferenceAsBool(pd.ref.Append("is_filterable"))
}

func (pd PropertyDefinitionsAttributes) IsMetadata() terra.BoolValue {
	return terra.ReferenceAsBool(pd.ref.Append("is_metadata"))
}

func (pd PropertyDefinitionsAttributes) IsRepeatable() terra.BoolValue {
	return terra.ReferenceAsBool(pd.ref.Append("is_repeatable"))
}

func (pd PropertyDefinitionsAttributes) IsRequired() terra.BoolValue {
	return terra.ReferenceAsBool(pd.ref.Append("is_required"))
}

func (pd PropertyDefinitionsAttributes) IsSearchable() terra.BoolValue {
	return terra.ReferenceAsBool(pd.ref.Append("is_searchable"))
}

func (pd PropertyDefinitionsAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(pd.ref.Append("name"))
}

func (pd PropertyDefinitionsAttributes) RetrievalImportance() terra.StringValue {
	return terra.ReferenceAsString(pd.ref.Append("retrieval_importance"))
}

func (pd PropertyDefinitionsAttributes) DateTimeTypeOptions() terra.ListValue[PropertyDefinitionsDateTimeTypeOptionsAttributes] {
	return terra.ReferenceAsList[PropertyDefinitionsDateTimeTypeOptionsAttributes](pd.ref.Append("date_time_type_options"))
}

func (pd PropertyDefinitionsAttributes) EnumTypeOptions() terra.ListValue[PropertyDefinitionsEnumTypeOptionsAttributes] {
	return terra.ReferenceAsList[PropertyDefinitionsEnumTypeOptionsAttributes](pd.ref.Append("enum_type_options"))
}

func (pd PropertyDefinitionsAttributes) FloatTypeOptions() terra.ListValue[PropertyDefinitionsFloatTypeOptionsAttributes] {
	return terra.ReferenceAsList[PropertyDefinitionsFloatTypeOptionsAttributes](pd.ref.Append("float_type_options"))
}

func (pd PropertyDefinitionsAttributes) IntegerTypeOptions() terra.ListValue[PropertyDefinitionsIntegerTypeOptionsAttributes] {
	return terra.ReferenceAsList[PropertyDefinitionsIntegerTypeOptionsAttributes](pd.ref.Append("integer_type_options"))
}

func (pd PropertyDefinitionsAttributes) MapTypeOptions() terra.ListValue[PropertyDefinitionsMapTypeOptionsAttributes] {
	return terra.ReferenceAsList[PropertyDefinitionsMapTypeOptionsAttributes](pd.ref.Append("map_type_options"))
}

func (pd PropertyDefinitionsAttributes) PropertyTypeOptions() terra.ListValue[PropertyTypeOptionsAttributes] {
	return terra.ReferenceAsList[PropertyTypeOptionsAttributes](pd.ref.Append("property_type_options"))
}

func (pd PropertyDefinitionsAttributes) SchemaSources() terra.ListValue[PropertyDefinitionsSchemaSourcesAttributes] {
	return terra.ReferenceAsList[PropertyDefinitionsSchemaSourcesAttributes](pd.ref.Append("schema_sources"))
}

func (pd PropertyDefinitionsAttributes) TextTypeOptions() terra.ListValue[PropertyDefinitionsTextTypeOptionsAttributes] {
	return terra.ReferenceAsList[PropertyDefinitionsTextTypeOptionsAttributes](pd.ref.Append("text_type_options"))
}

func (pd PropertyDefinitionsAttributes) TimestampTypeOptions() terra.ListValue[PropertyDefinitionsTimestampTypeOptionsAttributes] {
	return terra.ReferenceAsList[PropertyDefinitionsTimestampTypeOptionsAttributes](pd.ref.Append("timestamp_type_options"))
}

type PropertyDefinitionsDateTimeTypeOptionsAttributes struct {
	ref terra.Reference
}

func (dtto PropertyDefinitionsDateTimeTypeOptionsAttributes) InternalRef() (terra.Reference, error) {
	return dtto.ref, nil
}

func (dtto PropertyDefinitionsDateTimeTypeOptionsAttributes) InternalWithRef(ref terra.Reference) PropertyDefinitionsDateTimeTypeOptionsAttributes {
	return PropertyDefinitionsDateTimeTypeOptionsAttributes{ref: ref}
}

func (dtto PropertyDefinitionsDateTimeTypeOptionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dtto.ref.InternalTokens()
}

type PropertyDefinitionsEnumTypeOptionsAttributes struct {
	ref terra.Reference
}

func (eto PropertyDefinitionsEnumTypeOptionsAttributes) InternalRef() (terra.Reference, error) {
	return eto.ref, nil
}

func (eto PropertyDefinitionsEnumTypeOptionsAttributes) InternalWithRef(ref terra.Reference) PropertyDefinitionsEnumTypeOptionsAttributes {
	return PropertyDefinitionsEnumTypeOptionsAttributes{ref: ref}
}

func (eto PropertyDefinitionsEnumTypeOptionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return eto.ref.InternalTokens()
}

func (eto PropertyDefinitionsEnumTypeOptionsAttributes) PossibleValues() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](eto.ref.Append("possible_values"))
}

func (eto PropertyDefinitionsEnumTypeOptionsAttributes) ValidationCheckDisabled() terra.BoolValue {
	return terra.ReferenceAsBool(eto.ref.Append("validation_check_disabled"))
}

type PropertyDefinitionsFloatTypeOptionsAttributes struct {
	ref terra.Reference
}

func (fto PropertyDefinitionsFloatTypeOptionsAttributes) InternalRef() (terra.Reference, error) {
	return fto.ref, nil
}

func (fto PropertyDefinitionsFloatTypeOptionsAttributes) InternalWithRef(ref terra.Reference) PropertyDefinitionsFloatTypeOptionsAttributes {
	return PropertyDefinitionsFloatTypeOptionsAttributes{ref: ref}
}

func (fto PropertyDefinitionsFloatTypeOptionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return fto.ref.InternalTokens()
}

type PropertyDefinitionsIntegerTypeOptionsAttributes struct {
	ref terra.Reference
}

func (ito PropertyDefinitionsIntegerTypeOptionsAttributes) InternalRef() (terra.Reference, error) {
	return ito.ref, nil
}

func (ito PropertyDefinitionsIntegerTypeOptionsAttributes) InternalWithRef(ref terra.Reference) PropertyDefinitionsIntegerTypeOptionsAttributes {
	return PropertyDefinitionsIntegerTypeOptionsAttributes{ref: ref}
}

func (ito PropertyDefinitionsIntegerTypeOptionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ito.ref.InternalTokens()
}

type PropertyDefinitionsMapTypeOptionsAttributes struct {
	ref terra.Reference
}

func (mto PropertyDefinitionsMapTypeOptionsAttributes) InternalRef() (terra.Reference, error) {
	return mto.ref, nil
}

func (mto PropertyDefinitionsMapTypeOptionsAttributes) InternalWithRef(ref terra.Reference) PropertyDefinitionsMapTypeOptionsAttributes {
	return PropertyDefinitionsMapTypeOptionsAttributes{ref: ref}
}

func (mto PropertyDefinitionsMapTypeOptionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return mto.ref.InternalTokens()
}

type PropertyTypeOptionsAttributes struct {
	ref terra.Reference
}

func (pto PropertyTypeOptionsAttributes) InternalRef() (terra.Reference, error) {
	return pto.ref, nil
}

func (pto PropertyTypeOptionsAttributes) InternalWithRef(ref terra.Reference) PropertyTypeOptionsAttributes {
	return PropertyTypeOptionsAttributes{ref: ref}
}

func (pto PropertyTypeOptionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return pto.ref.InternalTokens()
}

func (pto PropertyTypeOptionsAttributes) PropertyDefinitions() terra.ListValue[PropertyTypeOptionsPropertyDefinitionsAttributes] {
	return terra.ReferenceAsList[PropertyTypeOptionsPropertyDefinitionsAttributes](pto.ref.Append("property_definitions"))
}

type PropertyTypeOptionsPropertyDefinitionsAttributes struct {
	ref terra.Reference
}

func (pd PropertyTypeOptionsPropertyDefinitionsAttributes) InternalRef() (terra.Reference, error) {
	return pd.ref, nil
}

func (pd PropertyTypeOptionsPropertyDefinitionsAttributes) InternalWithRef(ref terra.Reference) PropertyTypeOptionsPropertyDefinitionsAttributes {
	return PropertyTypeOptionsPropertyDefinitionsAttributes{ref: ref}
}

func (pd PropertyTypeOptionsPropertyDefinitionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return pd.ref.InternalTokens()
}

func (pd PropertyTypeOptionsPropertyDefinitionsAttributes) DisplayName() terra.StringValue {
	return terra.ReferenceAsString(pd.ref.Append("display_name"))
}

func (pd PropertyTypeOptionsPropertyDefinitionsAttributes) IsFilterable() terra.BoolValue {
	return terra.ReferenceAsBool(pd.ref.Append("is_filterable"))
}

func (pd PropertyTypeOptionsPropertyDefinitionsAttributes) IsMetadata() terra.BoolValue {
	return terra.ReferenceAsBool(pd.ref.Append("is_metadata"))
}

func (pd PropertyTypeOptionsPropertyDefinitionsAttributes) IsRepeatable() terra.BoolValue {
	return terra.ReferenceAsBool(pd.ref.Append("is_repeatable"))
}

func (pd PropertyTypeOptionsPropertyDefinitionsAttributes) IsRequired() terra.BoolValue {
	return terra.ReferenceAsBool(pd.ref.Append("is_required"))
}

func (pd PropertyTypeOptionsPropertyDefinitionsAttributes) IsSearchable() terra.BoolValue {
	return terra.ReferenceAsBool(pd.ref.Append("is_searchable"))
}

func (pd PropertyTypeOptionsPropertyDefinitionsAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(pd.ref.Append("name"))
}

func (pd PropertyTypeOptionsPropertyDefinitionsAttributes) RetrievalImportance() terra.StringValue {
	return terra.ReferenceAsString(pd.ref.Append("retrieval_importance"))
}

func (pd PropertyTypeOptionsPropertyDefinitionsAttributes) DateTimeTypeOptions() terra.ListValue[PropertyTypeOptionsPropertyDefinitionsDateTimeTypeOptionsAttributes] {
	return terra.ReferenceAsList[PropertyTypeOptionsPropertyDefinitionsDateTimeTypeOptionsAttributes](pd.ref.Append("date_time_type_options"))
}

func (pd PropertyTypeOptionsPropertyDefinitionsAttributes) EnumTypeOptions() terra.ListValue[PropertyTypeOptionsPropertyDefinitionsEnumTypeOptionsAttributes] {
	return terra.ReferenceAsList[PropertyTypeOptionsPropertyDefinitionsEnumTypeOptionsAttributes](pd.ref.Append("enum_type_options"))
}

func (pd PropertyTypeOptionsPropertyDefinitionsAttributes) FloatTypeOptions() terra.ListValue[PropertyTypeOptionsPropertyDefinitionsFloatTypeOptionsAttributes] {
	return terra.ReferenceAsList[PropertyTypeOptionsPropertyDefinitionsFloatTypeOptionsAttributes](pd.ref.Append("float_type_options"))
}

func (pd PropertyTypeOptionsPropertyDefinitionsAttributes) IntegerTypeOptions() terra.ListValue[PropertyTypeOptionsPropertyDefinitionsIntegerTypeOptionsAttributes] {
	return terra.ReferenceAsList[PropertyTypeOptionsPropertyDefinitionsIntegerTypeOptionsAttributes](pd.ref.Append("integer_type_options"))
}

func (pd PropertyTypeOptionsPropertyDefinitionsAttributes) MapTypeOptions() terra.ListValue[PropertyTypeOptionsPropertyDefinitionsMapTypeOptionsAttributes] {
	return terra.ReferenceAsList[PropertyTypeOptionsPropertyDefinitionsMapTypeOptionsAttributes](pd.ref.Append("map_type_options"))
}

func (pd PropertyTypeOptionsPropertyDefinitionsAttributes) SchemaSources() terra.ListValue[PropertyTypeOptionsPropertyDefinitionsSchemaSourcesAttributes] {
	return terra.ReferenceAsList[PropertyTypeOptionsPropertyDefinitionsSchemaSourcesAttributes](pd.ref.Append("schema_sources"))
}

func (pd PropertyTypeOptionsPropertyDefinitionsAttributes) TextTypeOptions() terra.ListValue[PropertyTypeOptionsPropertyDefinitionsTextTypeOptionsAttributes] {
	return terra.ReferenceAsList[PropertyTypeOptionsPropertyDefinitionsTextTypeOptionsAttributes](pd.ref.Append("text_type_options"))
}

func (pd PropertyTypeOptionsPropertyDefinitionsAttributes) TimestampTypeOptions() terra.ListValue[PropertyTypeOptionsPropertyDefinitionsTimestampTypeOptionsAttributes] {
	return terra.ReferenceAsList[PropertyTypeOptionsPropertyDefinitionsTimestampTypeOptionsAttributes](pd.ref.Append("timestamp_type_options"))
}

type PropertyTypeOptionsPropertyDefinitionsDateTimeTypeOptionsAttributes struct {
	ref terra.Reference
}

func (dtto PropertyTypeOptionsPropertyDefinitionsDateTimeTypeOptionsAttributes) InternalRef() (terra.Reference, error) {
	return dtto.ref, nil
}

func (dtto PropertyTypeOptionsPropertyDefinitionsDateTimeTypeOptionsAttributes) InternalWithRef(ref terra.Reference) PropertyTypeOptionsPropertyDefinitionsDateTimeTypeOptionsAttributes {
	return PropertyTypeOptionsPropertyDefinitionsDateTimeTypeOptionsAttributes{ref: ref}
}

func (dtto PropertyTypeOptionsPropertyDefinitionsDateTimeTypeOptionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dtto.ref.InternalTokens()
}

type PropertyTypeOptionsPropertyDefinitionsEnumTypeOptionsAttributes struct {
	ref terra.Reference
}

func (eto PropertyTypeOptionsPropertyDefinitionsEnumTypeOptionsAttributes) InternalRef() (terra.Reference, error) {
	return eto.ref, nil
}

func (eto PropertyTypeOptionsPropertyDefinitionsEnumTypeOptionsAttributes) InternalWithRef(ref terra.Reference) PropertyTypeOptionsPropertyDefinitionsEnumTypeOptionsAttributes {
	return PropertyTypeOptionsPropertyDefinitionsEnumTypeOptionsAttributes{ref: ref}
}

func (eto PropertyTypeOptionsPropertyDefinitionsEnumTypeOptionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return eto.ref.InternalTokens()
}

func (eto PropertyTypeOptionsPropertyDefinitionsEnumTypeOptionsAttributes) PossibleValues() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](eto.ref.Append("possible_values"))
}

func (eto PropertyTypeOptionsPropertyDefinitionsEnumTypeOptionsAttributes) ValidationCheckDisabled() terra.BoolValue {
	return terra.ReferenceAsBool(eto.ref.Append("validation_check_disabled"))
}

type PropertyTypeOptionsPropertyDefinitionsFloatTypeOptionsAttributes struct {
	ref terra.Reference
}

func (fto PropertyTypeOptionsPropertyDefinitionsFloatTypeOptionsAttributes) InternalRef() (terra.Reference, error) {
	return fto.ref, nil
}

func (fto PropertyTypeOptionsPropertyDefinitionsFloatTypeOptionsAttributes) InternalWithRef(ref terra.Reference) PropertyTypeOptionsPropertyDefinitionsFloatTypeOptionsAttributes {
	return PropertyTypeOptionsPropertyDefinitionsFloatTypeOptionsAttributes{ref: ref}
}

func (fto PropertyTypeOptionsPropertyDefinitionsFloatTypeOptionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return fto.ref.InternalTokens()
}

type PropertyTypeOptionsPropertyDefinitionsIntegerTypeOptionsAttributes struct {
	ref terra.Reference
}

func (ito PropertyTypeOptionsPropertyDefinitionsIntegerTypeOptionsAttributes) InternalRef() (terra.Reference, error) {
	return ito.ref, nil
}

func (ito PropertyTypeOptionsPropertyDefinitionsIntegerTypeOptionsAttributes) InternalWithRef(ref terra.Reference) PropertyTypeOptionsPropertyDefinitionsIntegerTypeOptionsAttributes {
	return PropertyTypeOptionsPropertyDefinitionsIntegerTypeOptionsAttributes{ref: ref}
}

func (ito PropertyTypeOptionsPropertyDefinitionsIntegerTypeOptionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ito.ref.InternalTokens()
}

type PropertyTypeOptionsPropertyDefinitionsMapTypeOptionsAttributes struct {
	ref terra.Reference
}

func (mto PropertyTypeOptionsPropertyDefinitionsMapTypeOptionsAttributes) InternalRef() (terra.Reference, error) {
	return mto.ref, nil
}

func (mto PropertyTypeOptionsPropertyDefinitionsMapTypeOptionsAttributes) InternalWithRef(ref terra.Reference) PropertyTypeOptionsPropertyDefinitionsMapTypeOptionsAttributes {
	return PropertyTypeOptionsPropertyDefinitionsMapTypeOptionsAttributes{ref: ref}
}

func (mto PropertyTypeOptionsPropertyDefinitionsMapTypeOptionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return mto.ref.InternalTokens()
}

type PropertyTypeOptionsPropertyDefinitionsSchemaSourcesAttributes struct {
	ref terra.Reference
}

func (ss PropertyTypeOptionsPropertyDefinitionsSchemaSourcesAttributes) InternalRef() (terra.Reference, error) {
	return ss.ref, nil
}

func (ss PropertyTypeOptionsPropertyDefinitionsSchemaSourcesAttributes) InternalWithRef(ref terra.Reference) PropertyTypeOptionsPropertyDefinitionsSchemaSourcesAttributes {
	return PropertyTypeOptionsPropertyDefinitionsSchemaSourcesAttributes{ref: ref}
}

func (ss PropertyTypeOptionsPropertyDefinitionsSchemaSourcesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ss.ref.InternalTokens()
}

func (ss PropertyTypeOptionsPropertyDefinitionsSchemaSourcesAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(ss.ref.Append("name"))
}

func (ss PropertyTypeOptionsPropertyDefinitionsSchemaSourcesAttributes) ProcessorType() terra.StringValue {
	return terra.ReferenceAsString(ss.ref.Append("processor_type"))
}

type PropertyTypeOptionsPropertyDefinitionsTextTypeOptionsAttributes struct {
	ref terra.Reference
}

func (tto PropertyTypeOptionsPropertyDefinitionsTextTypeOptionsAttributes) InternalRef() (terra.Reference, error) {
	return tto.ref, nil
}

func (tto PropertyTypeOptionsPropertyDefinitionsTextTypeOptionsAttributes) InternalWithRef(ref terra.Reference) PropertyTypeOptionsPropertyDefinitionsTextTypeOptionsAttributes {
	return PropertyTypeOptionsPropertyDefinitionsTextTypeOptionsAttributes{ref: ref}
}

func (tto PropertyTypeOptionsPropertyDefinitionsTextTypeOptionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return tto.ref.InternalTokens()
}

type PropertyTypeOptionsPropertyDefinitionsTimestampTypeOptionsAttributes struct {
	ref terra.Reference
}

func (tto PropertyTypeOptionsPropertyDefinitionsTimestampTypeOptionsAttributes) InternalRef() (terra.Reference, error) {
	return tto.ref, nil
}

func (tto PropertyTypeOptionsPropertyDefinitionsTimestampTypeOptionsAttributes) InternalWithRef(ref terra.Reference) PropertyTypeOptionsPropertyDefinitionsTimestampTypeOptionsAttributes {
	return PropertyTypeOptionsPropertyDefinitionsTimestampTypeOptionsAttributes{ref: ref}
}

func (tto PropertyTypeOptionsPropertyDefinitionsTimestampTypeOptionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return tto.ref.InternalTokens()
}

type PropertyDefinitionsSchemaSourcesAttributes struct {
	ref terra.Reference
}

func (ss PropertyDefinitionsSchemaSourcesAttributes) InternalRef() (terra.Reference, error) {
	return ss.ref, nil
}

func (ss PropertyDefinitionsSchemaSourcesAttributes) InternalWithRef(ref terra.Reference) PropertyDefinitionsSchemaSourcesAttributes {
	return PropertyDefinitionsSchemaSourcesAttributes{ref: ref}
}

func (ss PropertyDefinitionsSchemaSourcesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ss.ref.InternalTokens()
}

func (ss PropertyDefinitionsSchemaSourcesAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(ss.ref.Append("name"))
}

func (ss PropertyDefinitionsSchemaSourcesAttributes) ProcessorType() terra.StringValue {
	return terra.ReferenceAsString(ss.ref.Append("processor_type"))
}

type PropertyDefinitionsTextTypeOptionsAttributes struct {
	ref terra.Reference
}

func (tto PropertyDefinitionsTextTypeOptionsAttributes) InternalRef() (terra.Reference, error) {
	return tto.ref, nil
}

func (tto PropertyDefinitionsTextTypeOptionsAttributes) InternalWithRef(ref terra.Reference) PropertyDefinitionsTextTypeOptionsAttributes {
	return PropertyDefinitionsTextTypeOptionsAttributes{ref: ref}
}

func (tto PropertyDefinitionsTextTypeOptionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return tto.ref.InternalTokens()
}

type PropertyDefinitionsTimestampTypeOptionsAttributes struct {
	ref terra.Reference
}

func (tto PropertyDefinitionsTimestampTypeOptionsAttributes) InternalRef() (terra.Reference, error) {
	return tto.ref, nil
}

func (tto PropertyDefinitionsTimestampTypeOptionsAttributes) InternalWithRef(ref terra.Reference) PropertyDefinitionsTimestampTypeOptionsAttributes {
	return PropertyDefinitionsTimestampTypeOptionsAttributes{ref: ref}
}

func (tto PropertyDefinitionsTimestampTypeOptionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return tto.ref.InternalTokens()
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("create"))
}

func (t TimeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("delete"))
}

type PropertyDefinitionsState struct {
	DisplayName          string                                         `json:"display_name"`
	IsFilterable         bool                                           `json:"is_filterable"`
	IsMetadata           bool                                           `json:"is_metadata"`
	IsRepeatable         bool                                           `json:"is_repeatable"`
	IsRequired           bool                                           `json:"is_required"`
	IsSearchable         bool                                           `json:"is_searchable"`
	Name                 string                                         `json:"name"`
	RetrievalImportance  string                                         `json:"retrieval_importance"`
	DateTimeTypeOptions  []PropertyDefinitionsDateTimeTypeOptionsState  `json:"date_time_type_options"`
	EnumTypeOptions      []PropertyDefinitionsEnumTypeOptionsState      `json:"enum_type_options"`
	FloatTypeOptions     []PropertyDefinitionsFloatTypeOptionsState     `json:"float_type_options"`
	IntegerTypeOptions   []PropertyDefinitionsIntegerTypeOptionsState   `json:"integer_type_options"`
	MapTypeOptions       []PropertyDefinitionsMapTypeOptionsState       `json:"map_type_options"`
	PropertyTypeOptions  []PropertyTypeOptionsState                     `json:"property_type_options"`
	SchemaSources        []PropertyDefinitionsSchemaSourcesState        `json:"schema_sources"`
	TextTypeOptions      []PropertyDefinitionsTextTypeOptionsState      `json:"text_type_options"`
	TimestampTypeOptions []PropertyDefinitionsTimestampTypeOptionsState `json:"timestamp_type_options"`
}

type PropertyDefinitionsDateTimeTypeOptionsState struct{}

type PropertyDefinitionsEnumTypeOptionsState struct {
	PossibleValues          []string `json:"possible_values"`
	ValidationCheckDisabled bool     `json:"validation_check_disabled"`
}

type PropertyDefinitionsFloatTypeOptionsState struct{}

type PropertyDefinitionsIntegerTypeOptionsState struct{}

type PropertyDefinitionsMapTypeOptionsState struct{}

type PropertyTypeOptionsState struct {
	PropertyDefinitions []PropertyTypeOptionsPropertyDefinitionsState `json:"property_definitions"`
}

type PropertyTypeOptionsPropertyDefinitionsState struct {
	DisplayName          string                                                            `json:"display_name"`
	IsFilterable         bool                                                              `json:"is_filterable"`
	IsMetadata           bool                                                              `json:"is_metadata"`
	IsRepeatable         bool                                                              `json:"is_repeatable"`
	IsRequired           bool                                                              `json:"is_required"`
	IsSearchable         bool                                                              `json:"is_searchable"`
	Name                 string                                                            `json:"name"`
	RetrievalImportance  string                                                            `json:"retrieval_importance"`
	DateTimeTypeOptions  []PropertyTypeOptionsPropertyDefinitionsDateTimeTypeOptionsState  `json:"date_time_type_options"`
	EnumTypeOptions      []PropertyTypeOptionsPropertyDefinitionsEnumTypeOptionsState      `json:"enum_type_options"`
	FloatTypeOptions     []PropertyTypeOptionsPropertyDefinitionsFloatTypeOptionsState     `json:"float_type_options"`
	IntegerTypeOptions   []PropertyTypeOptionsPropertyDefinitionsIntegerTypeOptionsState   `json:"integer_type_options"`
	MapTypeOptions       []PropertyTypeOptionsPropertyDefinitionsMapTypeOptionsState       `json:"map_type_options"`
	SchemaSources        []PropertyTypeOptionsPropertyDefinitionsSchemaSourcesState        `json:"schema_sources"`
	TextTypeOptions      []PropertyTypeOptionsPropertyDefinitionsTextTypeOptionsState      `json:"text_type_options"`
	TimestampTypeOptions []PropertyTypeOptionsPropertyDefinitionsTimestampTypeOptionsState `json:"timestamp_type_options"`
}

type PropertyTypeOptionsPropertyDefinitionsDateTimeTypeOptionsState struct{}

type PropertyTypeOptionsPropertyDefinitionsEnumTypeOptionsState struct {
	PossibleValues          []string `json:"possible_values"`
	ValidationCheckDisabled bool     `json:"validation_check_disabled"`
}

type PropertyTypeOptionsPropertyDefinitionsFloatTypeOptionsState struct{}

type PropertyTypeOptionsPropertyDefinitionsIntegerTypeOptionsState struct{}

type PropertyTypeOptionsPropertyDefinitionsMapTypeOptionsState struct{}

type PropertyTypeOptionsPropertyDefinitionsSchemaSourcesState struct {
	Name          string `json:"name"`
	ProcessorType string `json:"processor_type"`
}

type PropertyTypeOptionsPropertyDefinitionsTextTypeOptionsState struct{}

type PropertyTypeOptionsPropertyDefinitionsTimestampTypeOptionsState struct{}

type PropertyDefinitionsSchemaSourcesState struct {
	Name          string `json:"name"`
	ProcessorType string `json:"processor_type"`
}

type PropertyDefinitionsTextTypeOptionsState struct{}

type PropertyDefinitionsTimestampTypeOptionsState struct{}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
}
