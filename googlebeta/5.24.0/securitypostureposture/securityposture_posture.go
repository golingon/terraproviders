// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package securitypostureposture

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type PolicySets struct {
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// PolicySetId: string, required
	PolicySetId terra.StringValue `hcl:"policy_set_id,attr" validate:"required"`
	// Policies: min=1
	Policies []Policies `hcl:"policies,block" validate:"min=1"`
}

type Policies struct {
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// PolicyId: string, required
	PolicyId terra.StringValue `hcl:"policy_id,attr" validate:"required"`
	// ComplianceStandards: min=0
	ComplianceStandards []ComplianceStandards `hcl:"compliance_standards,block" validate:"min=0"`
	// Constraint: required
	Constraint *Constraint `hcl:"constraint,block" validate:"required"`
}

type ComplianceStandards struct {
	// Control: string, optional
	Control terra.StringValue `hcl:"control,attr"`
	// Standard: string, optional
	Standard terra.StringValue `hcl:"standard,attr"`
}

type Constraint struct {
	// OrgPolicyConstraint: optional
	OrgPolicyConstraint *OrgPolicyConstraint `hcl:"org_policy_constraint,block"`
	// OrgPolicyConstraintCustom: optional
	OrgPolicyConstraintCustom *OrgPolicyConstraintCustom `hcl:"org_policy_constraint_custom,block"`
	// SecurityHealthAnalyticsCustomModule: optional
	SecurityHealthAnalyticsCustomModule *SecurityHealthAnalyticsCustomModule `hcl:"security_health_analytics_custom_module,block"`
	// SecurityHealthAnalyticsModule: optional
	SecurityHealthAnalyticsModule *SecurityHealthAnalyticsModule `hcl:"security_health_analytics_module,block"`
}

type OrgPolicyConstraint struct {
	// CannedConstraintId: string, required
	CannedConstraintId terra.StringValue `hcl:"canned_constraint_id,attr" validate:"required"`
	// OrgPolicyConstraintPolicyRules: min=1
	PolicyRules []OrgPolicyConstraintPolicyRules `hcl:"policy_rules,block" validate:"min=1"`
}

type OrgPolicyConstraintPolicyRules struct {
	// AllowAll: bool, optional
	AllowAll terra.BoolValue `hcl:"allow_all,attr"`
	// DenyAll: bool, optional
	DenyAll terra.BoolValue `hcl:"deny_all,attr"`
	// Enforce: bool, optional
	Enforce terra.BoolValue `hcl:"enforce,attr"`
	// OrgPolicyConstraintPolicyRulesCondition: optional
	Condition *OrgPolicyConstraintPolicyRulesCondition `hcl:"condition,block"`
	// OrgPolicyConstraintPolicyRulesValues: optional
	Values *OrgPolicyConstraintPolicyRulesValues `hcl:"values,block"`
}

type OrgPolicyConstraintPolicyRulesCondition struct {
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// Expression: string, required
	Expression terra.StringValue `hcl:"expression,attr" validate:"required"`
	// Location: string, optional
	Location terra.StringValue `hcl:"location,attr"`
	// Title: string, optional
	Title terra.StringValue `hcl:"title,attr"`
}

type OrgPolicyConstraintPolicyRulesValues struct {
	// AllowedValues: list of string, optional
	AllowedValues terra.ListValue[terra.StringValue] `hcl:"allowed_values,attr"`
	// DeniedValues: list of string, optional
	DeniedValues terra.ListValue[terra.StringValue] `hcl:"denied_values,attr"`
}

type OrgPolicyConstraintCustom struct {
	// CustomConstraint: optional
	CustomConstraint *CustomConstraint `hcl:"custom_constraint,block"`
	// OrgPolicyConstraintCustomPolicyRules: min=1
	PolicyRules []OrgPolicyConstraintCustomPolicyRules `hcl:"policy_rules,block" validate:"min=1"`
}

type CustomConstraint struct {
	// ActionType: string, required
	ActionType terra.StringValue `hcl:"action_type,attr" validate:"required"`
	// Condition: string, required
	Condition terra.StringValue `hcl:"condition,attr" validate:"required"`
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// DisplayName: string, optional
	DisplayName terra.StringValue `hcl:"display_name,attr"`
	// MethodTypes: list of string, required
	MethodTypes terra.ListValue[terra.StringValue] `hcl:"method_types,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// ResourceTypes: list of string, required
	ResourceTypes terra.ListValue[terra.StringValue] `hcl:"resource_types,attr" validate:"required"`
}

type OrgPolicyConstraintCustomPolicyRules struct {
	// AllowAll: bool, optional
	AllowAll terra.BoolValue `hcl:"allow_all,attr"`
	// DenyAll: bool, optional
	DenyAll terra.BoolValue `hcl:"deny_all,attr"`
	// Enforce: bool, optional
	Enforce terra.BoolValue `hcl:"enforce,attr"`
	// OrgPolicyConstraintCustomPolicyRulesCondition: optional
	Condition *OrgPolicyConstraintCustomPolicyRulesCondition `hcl:"condition,block"`
	// OrgPolicyConstraintCustomPolicyRulesValues: optional
	Values *OrgPolicyConstraintCustomPolicyRulesValues `hcl:"values,block"`
}

type OrgPolicyConstraintCustomPolicyRulesCondition struct {
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// Expression: string, required
	Expression terra.StringValue `hcl:"expression,attr" validate:"required"`
	// Location: string, optional
	Location terra.StringValue `hcl:"location,attr"`
	// Title: string, optional
	Title terra.StringValue `hcl:"title,attr"`
}

type OrgPolicyConstraintCustomPolicyRulesValues struct {
	// AllowedValues: list of string, optional
	AllowedValues terra.ListValue[terra.StringValue] `hcl:"allowed_values,attr"`
	// DeniedValues: list of string, optional
	DeniedValues terra.ListValue[terra.StringValue] `hcl:"denied_values,attr"`
}

type SecurityHealthAnalyticsCustomModule struct {
	// DisplayName: string, optional
	DisplayName terra.StringValue `hcl:"display_name,attr"`
	// ModuleEnablementState: string, optional
	ModuleEnablementState terra.StringValue `hcl:"module_enablement_state,attr"`
	// Config: required
	Config *Config `hcl:"config,block" validate:"required"`
}

type Config struct {
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// Recommendation: string, optional
	Recommendation terra.StringValue `hcl:"recommendation,attr"`
	// Severity: string, required
	Severity terra.StringValue `hcl:"severity,attr" validate:"required"`
	// CustomOutput: optional
	CustomOutput *CustomOutput `hcl:"custom_output,block"`
	// Predicate: required
	Predicate *Predicate `hcl:"predicate,block" validate:"required"`
	// ResourceSelector: required
	ResourceSelector *ResourceSelector `hcl:"resource_selector,block" validate:"required"`
}

type CustomOutput struct {
	// Properties: min=0
	Properties []Properties `hcl:"properties,block" validate:"min=0"`
}

type Properties struct {
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// ValueExpression: optional
	ValueExpression *ValueExpression `hcl:"value_expression,block"`
}

type ValueExpression struct {
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// Expression: string, required
	Expression terra.StringValue `hcl:"expression,attr" validate:"required"`
	// Location: string, optional
	Location terra.StringValue `hcl:"location,attr"`
	// Title: string, optional
	Title terra.StringValue `hcl:"title,attr"`
}

type Predicate struct {
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// Expression: string, required
	Expression terra.StringValue `hcl:"expression,attr" validate:"required"`
	// Location: string, optional
	Location terra.StringValue `hcl:"location,attr"`
	// Title: string, optional
	Title terra.StringValue `hcl:"title,attr"`
}

type ResourceSelector struct {
	// ResourceTypes: list of string, required
	ResourceTypes terra.ListValue[terra.StringValue] `hcl:"resource_types,attr" validate:"required"`
}

type SecurityHealthAnalyticsModule struct {
	// ModuleEnablementState: string, optional
	ModuleEnablementState terra.StringValue `hcl:"module_enablement_state,attr"`
	// ModuleName: string, required
	ModuleName terra.StringValue `hcl:"module_name,attr" validate:"required"`
}

type Timeouts struct {
	// Create: string, optional
	Create terra.StringValue `hcl:"create,attr"`
	// Delete: string, optional
	Delete terra.StringValue `hcl:"delete,attr"`
	// Update: string, optional
	Update terra.StringValue `hcl:"update,attr"`
}

type PolicySetsAttributes struct {
	ref terra.Reference
}

func (ps PolicySetsAttributes) InternalRef() (terra.Reference, error) {
	return ps.ref, nil
}

func (ps PolicySetsAttributes) InternalWithRef(ref terra.Reference) PolicySetsAttributes {
	return PolicySetsAttributes{ref: ref}
}

func (ps PolicySetsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ps.ref.InternalTokens()
}

func (ps PolicySetsAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(ps.ref.Append("description"))
}

func (ps PolicySetsAttributes) PolicySetId() terra.StringValue {
	return terra.ReferenceAsString(ps.ref.Append("policy_set_id"))
}

func (ps PolicySetsAttributes) Policies() terra.ListValue[PoliciesAttributes] {
	return terra.ReferenceAsList[PoliciesAttributes](ps.ref.Append("policies"))
}

type PoliciesAttributes struct {
	ref terra.Reference
}

func (p PoliciesAttributes) InternalRef() (terra.Reference, error) {
	return p.ref, nil
}

func (p PoliciesAttributes) InternalWithRef(ref terra.Reference) PoliciesAttributes {
	return PoliciesAttributes{ref: ref}
}

func (p PoliciesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return p.ref.InternalTokens()
}

func (p PoliciesAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(p.ref.Append("description"))
}

func (p PoliciesAttributes) PolicyId() terra.StringValue {
	return terra.ReferenceAsString(p.ref.Append("policy_id"))
}

func (p PoliciesAttributes) ComplianceStandards() terra.ListValue[ComplianceStandardsAttributes] {
	return terra.ReferenceAsList[ComplianceStandardsAttributes](p.ref.Append("compliance_standards"))
}

func (p PoliciesAttributes) Constraint() terra.ListValue[ConstraintAttributes] {
	return terra.ReferenceAsList[ConstraintAttributes](p.ref.Append("constraint"))
}

type ComplianceStandardsAttributes struct {
	ref terra.Reference
}

func (cs ComplianceStandardsAttributes) InternalRef() (terra.Reference, error) {
	return cs.ref, nil
}

func (cs ComplianceStandardsAttributes) InternalWithRef(ref terra.Reference) ComplianceStandardsAttributes {
	return ComplianceStandardsAttributes{ref: ref}
}

func (cs ComplianceStandardsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cs.ref.InternalTokens()
}

func (cs ComplianceStandardsAttributes) Control() terra.StringValue {
	return terra.ReferenceAsString(cs.ref.Append("control"))
}

func (cs ComplianceStandardsAttributes) Standard() terra.StringValue {
	return terra.ReferenceAsString(cs.ref.Append("standard"))
}

type ConstraintAttributes struct {
	ref terra.Reference
}

func (c ConstraintAttributes) InternalRef() (terra.Reference, error) {
	return c.ref, nil
}

func (c ConstraintAttributes) InternalWithRef(ref terra.Reference) ConstraintAttributes {
	return ConstraintAttributes{ref: ref}
}

func (c ConstraintAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return c.ref.InternalTokens()
}

func (c ConstraintAttributes) OrgPolicyConstraint() terra.ListValue[OrgPolicyConstraintAttributes] {
	return terra.ReferenceAsList[OrgPolicyConstraintAttributes](c.ref.Append("org_policy_constraint"))
}

func (c ConstraintAttributes) OrgPolicyConstraintCustom() terra.ListValue[OrgPolicyConstraintCustomAttributes] {
	return terra.ReferenceAsList[OrgPolicyConstraintCustomAttributes](c.ref.Append("org_policy_constraint_custom"))
}

func (c ConstraintAttributes) SecurityHealthAnalyticsCustomModule() terra.ListValue[SecurityHealthAnalyticsCustomModuleAttributes] {
	return terra.ReferenceAsList[SecurityHealthAnalyticsCustomModuleAttributes](c.ref.Append("security_health_analytics_custom_module"))
}

func (c ConstraintAttributes) SecurityHealthAnalyticsModule() terra.ListValue[SecurityHealthAnalyticsModuleAttributes] {
	return terra.ReferenceAsList[SecurityHealthAnalyticsModuleAttributes](c.ref.Append("security_health_analytics_module"))
}

type OrgPolicyConstraintAttributes struct {
	ref terra.Reference
}

func (opc OrgPolicyConstraintAttributes) InternalRef() (terra.Reference, error) {
	return opc.ref, nil
}

func (opc OrgPolicyConstraintAttributes) InternalWithRef(ref terra.Reference) OrgPolicyConstraintAttributes {
	return OrgPolicyConstraintAttributes{ref: ref}
}

func (opc OrgPolicyConstraintAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return opc.ref.InternalTokens()
}

func (opc OrgPolicyConstraintAttributes) CannedConstraintId() terra.StringValue {
	return terra.ReferenceAsString(opc.ref.Append("canned_constraint_id"))
}

func (opc OrgPolicyConstraintAttributes) PolicyRules() terra.ListValue[OrgPolicyConstraintPolicyRulesAttributes] {
	return terra.ReferenceAsList[OrgPolicyConstraintPolicyRulesAttributes](opc.ref.Append("policy_rules"))
}

type OrgPolicyConstraintPolicyRulesAttributes struct {
	ref terra.Reference
}

func (pr OrgPolicyConstraintPolicyRulesAttributes) InternalRef() (terra.Reference, error) {
	return pr.ref, nil
}

func (pr OrgPolicyConstraintPolicyRulesAttributes) InternalWithRef(ref terra.Reference) OrgPolicyConstraintPolicyRulesAttributes {
	return OrgPolicyConstraintPolicyRulesAttributes{ref: ref}
}

func (pr OrgPolicyConstraintPolicyRulesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return pr.ref.InternalTokens()
}

func (pr OrgPolicyConstraintPolicyRulesAttributes) AllowAll() terra.BoolValue {
	return terra.ReferenceAsBool(pr.ref.Append("allow_all"))
}

func (pr OrgPolicyConstraintPolicyRulesAttributes) DenyAll() terra.BoolValue {
	return terra.ReferenceAsBool(pr.ref.Append("deny_all"))
}

func (pr OrgPolicyConstraintPolicyRulesAttributes) Enforce() terra.BoolValue {
	return terra.ReferenceAsBool(pr.ref.Append("enforce"))
}

func (pr OrgPolicyConstraintPolicyRulesAttributes) Condition() terra.ListValue[OrgPolicyConstraintPolicyRulesConditionAttributes] {
	return terra.ReferenceAsList[OrgPolicyConstraintPolicyRulesConditionAttributes](pr.ref.Append("condition"))
}

func (pr OrgPolicyConstraintPolicyRulesAttributes) Values() terra.ListValue[OrgPolicyConstraintPolicyRulesValuesAttributes] {
	return terra.ReferenceAsList[OrgPolicyConstraintPolicyRulesValuesAttributes](pr.ref.Append("values"))
}

type OrgPolicyConstraintPolicyRulesConditionAttributes struct {
	ref terra.Reference
}

func (c OrgPolicyConstraintPolicyRulesConditionAttributes) InternalRef() (terra.Reference, error) {
	return c.ref, nil
}

func (c OrgPolicyConstraintPolicyRulesConditionAttributes) InternalWithRef(ref terra.Reference) OrgPolicyConstraintPolicyRulesConditionAttributes {
	return OrgPolicyConstraintPolicyRulesConditionAttributes{ref: ref}
}

func (c OrgPolicyConstraintPolicyRulesConditionAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return c.ref.InternalTokens()
}

func (c OrgPolicyConstraintPolicyRulesConditionAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("description"))
}

func (c OrgPolicyConstraintPolicyRulesConditionAttributes) Expression() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("expression"))
}

func (c OrgPolicyConstraintPolicyRulesConditionAttributes) Location() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("location"))
}

func (c OrgPolicyConstraintPolicyRulesConditionAttributes) Title() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("title"))
}

type OrgPolicyConstraintPolicyRulesValuesAttributes struct {
	ref terra.Reference
}

func (v OrgPolicyConstraintPolicyRulesValuesAttributes) InternalRef() (terra.Reference, error) {
	return v.ref, nil
}

func (v OrgPolicyConstraintPolicyRulesValuesAttributes) InternalWithRef(ref terra.Reference) OrgPolicyConstraintPolicyRulesValuesAttributes {
	return OrgPolicyConstraintPolicyRulesValuesAttributes{ref: ref}
}

func (v OrgPolicyConstraintPolicyRulesValuesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return v.ref.InternalTokens()
}

func (v OrgPolicyConstraintPolicyRulesValuesAttributes) AllowedValues() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](v.ref.Append("allowed_values"))
}

func (v OrgPolicyConstraintPolicyRulesValuesAttributes) DeniedValues() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](v.ref.Append("denied_values"))
}

type OrgPolicyConstraintCustomAttributes struct {
	ref terra.Reference
}

func (opcc OrgPolicyConstraintCustomAttributes) InternalRef() (terra.Reference, error) {
	return opcc.ref, nil
}

func (opcc OrgPolicyConstraintCustomAttributes) InternalWithRef(ref terra.Reference) OrgPolicyConstraintCustomAttributes {
	return OrgPolicyConstraintCustomAttributes{ref: ref}
}

func (opcc OrgPolicyConstraintCustomAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return opcc.ref.InternalTokens()
}

func (opcc OrgPolicyConstraintCustomAttributes) CustomConstraint() terra.ListValue[CustomConstraintAttributes] {
	return terra.ReferenceAsList[CustomConstraintAttributes](opcc.ref.Append("custom_constraint"))
}

func (opcc OrgPolicyConstraintCustomAttributes) PolicyRules() terra.ListValue[OrgPolicyConstraintCustomPolicyRulesAttributes] {
	return terra.ReferenceAsList[OrgPolicyConstraintCustomPolicyRulesAttributes](opcc.ref.Append("policy_rules"))
}

type CustomConstraintAttributes struct {
	ref terra.Reference
}

func (cc CustomConstraintAttributes) InternalRef() (terra.Reference, error) {
	return cc.ref, nil
}

func (cc CustomConstraintAttributes) InternalWithRef(ref terra.Reference) CustomConstraintAttributes {
	return CustomConstraintAttributes{ref: ref}
}

func (cc CustomConstraintAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cc.ref.InternalTokens()
}

func (cc CustomConstraintAttributes) ActionType() terra.StringValue {
	return terra.ReferenceAsString(cc.ref.Append("action_type"))
}

func (cc CustomConstraintAttributes) Condition() terra.StringValue {
	return terra.ReferenceAsString(cc.ref.Append("condition"))
}

func (cc CustomConstraintAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(cc.ref.Append("description"))
}

func (cc CustomConstraintAttributes) DisplayName() terra.StringValue {
	return terra.ReferenceAsString(cc.ref.Append("display_name"))
}

func (cc CustomConstraintAttributes) MethodTypes() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](cc.ref.Append("method_types"))
}

func (cc CustomConstraintAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(cc.ref.Append("name"))
}

func (cc CustomConstraintAttributes) ResourceTypes() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](cc.ref.Append("resource_types"))
}

type OrgPolicyConstraintCustomPolicyRulesAttributes struct {
	ref terra.Reference
}

func (pr OrgPolicyConstraintCustomPolicyRulesAttributes) InternalRef() (terra.Reference, error) {
	return pr.ref, nil
}

func (pr OrgPolicyConstraintCustomPolicyRulesAttributes) InternalWithRef(ref terra.Reference) OrgPolicyConstraintCustomPolicyRulesAttributes {
	return OrgPolicyConstraintCustomPolicyRulesAttributes{ref: ref}
}

func (pr OrgPolicyConstraintCustomPolicyRulesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return pr.ref.InternalTokens()
}

func (pr OrgPolicyConstraintCustomPolicyRulesAttributes) AllowAll() terra.BoolValue {
	return terra.ReferenceAsBool(pr.ref.Append("allow_all"))
}

func (pr OrgPolicyConstraintCustomPolicyRulesAttributes) DenyAll() terra.BoolValue {
	return terra.ReferenceAsBool(pr.ref.Append("deny_all"))
}

func (pr OrgPolicyConstraintCustomPolicyRulesAttributes) Enforce() terra.BoolValue {
	return terra.ReferenceAsBool(pr.ref.Append("enforce"))
}

func (pr OrgPolicyConstraintCustomPolicyRulesAttributes) Condition() terra.ListValue[OrgPolicyConstraintCustomPolicyRulesConditionAttributes] {
	return terra.ReferenceAsList[OrgPolicyConstraintCustomPolicyRulesConditionAttributes](pr.ref.Append("condition"))
}

func (pr OrgPolicyConstraintCustomPolicyRulesAttributes) Values() terra.ListValue[OrgPolicyConstraintCustomPolicyRulesValuesAttributes] {
	return terra.ReferenceAsList[OrgPolicyConstraintCustomPolicyRulesValuesAttributes](pr.ref.Append("values"))
}

type OrgPolicyConstraintCustomPolicyRulesConditionAttributes struct {
	ref terra.Reference
}

func (c OrgPolicyConstraintCustomPolicyRulesConditionAttributes) InternalRef() (terra.Reference, error) {
	return c.ref, nil
}

func (c OrgPolicyConstraintCustomPolicyRulesConditionAttributes) InternalWithRef(ref terra.Reference) OrgPolicyConstraintCustomPolicyRulesConditionAttributes {
	return OrgPolicyConstraintCustomPolicyRulesConditionAttributes{ref: ref}
}

func (c OrgPolicyConstraintCustomPolicyRulesConditionAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return c.ref.InternalTokens()
}

func (c OrgPolicyConstraintCustomPolicyRulesConditionAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("description"))
}

func (c OrgPolicyConstraintCustomPolicyRulesConditionAttributes) Expression() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("expression"))
}

func (c OrgPolicyConstraintCustomPolicyRulesConditionAttributes) Location() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("location"))
}

func (c OrgPolicyConstraintCustomPolicyRulesConditionAttributes) Title() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("title"))
}

type OrgPolicyConstraintCustomPolicyRulesValuesAttributes struct {
	ref terra.Reference
}

func (v OrgPolicyConstraintCustomPolicyRulesValuesAttributes) InternalRef() (terra.Reference, error) {
	return v.ref, nil
}

func (v OrgPolicyConstraintCustomPolicyRulesValuesAttributes) InternalWithRef(ref terra.Reference) OrgPolicyConstraintCustomPolicyRulesValuesAttributes {
	return OrgPolicyConstraintCustomPolicyRulesValuesAttributes{ref: ref}
}

func (v OrgPolicyConstraintCustomPolicyRulesValuesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return v.ref.InternalTokens()
}

func (v OrgPolicyConstraintCustomPolicyRulesValuesAttributes) AllowedValues() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](v.ref.Append("allowed_values"))
}

func (v OrgPolicyConstraintCustomPolicyRulesValuesAttributes) DeniedValues() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](v.ref.Append("denied_values"))
}

type SecurityHealthAnalyticsCustomModuleAttributes struct {
	ref terra.Reference
}

func (shacm SecurityHealthAnalyticsCustomModuleAttributes) InternalRef() (terra.Reference, error) {
	return shacm.ref, nil
}

func (shacm SecurityHealthAnalyticsCustomModuleAttributes) InternalWithRef(ref terra.Reference) SecurityHealthAnalyticsCustomModuleAttributes {
	return SecurityHealthAnalyticsCustomModuleAttributes{ref: ref}
}

func (shacm SecurityHealthAnalyticsCustomModuleAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return shacm.ref.InternalTokens()
}

func (shacm SecurityHealthAnalyticsCustomModuleAttributes) DisplayName() terra.StringValue {
	return terra.ReferenceAsString(shacm.ref.Append("display_name"))
}

func (shacm SecurityHealthAnalyticsCustomModuleAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(shacm.ref.Append("id"))
}

func (shacm SecurityHealthAnalyticsCustomModuleAttributes) ModuleEnablementState() terra.StringValue {
	return terra.ReferenceAsString(shacm.ref.Append("module_enablement_state"))
}

func (shacm SecurityHealthAnalyticsCustomModuleAttributes) Config() terra.ListValue[ConfigAttributes] {
	return terra.ReferenceAsList[ConfigAttributes](shacm.ref.Append("config"))
}

type ConfigAttributes struct {
	ref terra.Reference
}

func (c ConfigAttributes) InternalRef() (terra.Reference, error) {
	return c.ref, nil
}

func (c ConfigAttributes) InternalWithRef(ref terra.Reference) ConfigAttributes {
	return ConfigAttributes{ref: ref}
}

func (c ConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return c.ref.InternalTokens()
}

func (c ConfigAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("description"))
}

func (c ConfigAttributes) Recommendation() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("recommendation"))
}

func (c ConfigAttributes) Severity() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("severity"))
}

func (c ConfigAttributes) CustomOutput() terra.ListValue[CustomOutputAttributes] {
	return terra.ReferenceAsList[CustomOutputAttributes](c.ref.Append("custom_output"))
}

func (c ConfigAttributes) Predicate() terra.ListValue[PredicateAttributes] {
	return terra.ReferenceAsList[PredicateAttributes](c.ref.Append("predicate"))
}

func (c ConfigAttributes) ResourceSelector() terra.ListValue[ResourceSelectorAttributes] {
	return terra.ReferenceAsList[ResourceSelectorAttributes](c.ref.Append("resource_selector"))
}

type CustomOutputAttributes struct {
	ref terra.Reference
}

func (co CustomOutputAttributes) InternalRef() (terra.Reference, error) {
	return co.ref, nil
}

func (co CustomOutputAttributes) InternalWithRef(ref terra.Reference) CustomOutputAttributes {
	return CustomOutputAttributes{ref: ref}
}

func (co CustomOutputAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return co.ref.InternalTokens()
}

func (co CustomOutputAttributes) Properties() terra.ListValue[PropertiesAttributes] {
	return terra.ReferenceAsList[PropertiesAttributes](co.ref.Append("properties"))
}

type PropertiesAttributes struct {
	ref terra.Reference
}

func (p PropertiesAttributes) InternalRef() (terra.Reference, error) {
	return p.ref, nil
}

func (p PropertiesAttributes) InternalWithRef(ref terra.Reference) PropertiesAttributes {
	return PropertiesAttributes{ref: ref}
}

func (p PropertiesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return p.ref.InternalTokens()
}

func (p PropertiesAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(p.ref.Append("name"))
}

func (p PropertiesAttributes) ValueExpression() terra.ListValue[ValueExpressionAttributes] {
	return terra.ReferenceAsList[ValueExpressionAttributes](p.ref.Append("value_expression"))
}

type ValueExpressionAttributes struct {
	ref terra.Reference
}

func (ve ValueExpressionAttributes) InternalRef() (terra.Reference, error) {
	return ve.ref, nil
}

func (ve ValueExpressionAttributes) InternalWithRef(ref terra.Reference) ValueExpressionAttributes {
	return ValueExpressionAttributes{ref: ref}
}

func (ve ValueExpressionAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ve.ref.InternalTokens()
}

func (ve ValueExpressionAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(ve.ref.Append("description"))
}

func (ve ValueExpressionAttributes) Expression() terra.StringValue {
	return terra.ReferenceAsString(ve.ref.Append("expression"))
}

func (ve ValueExpressionAttributes) Location() terra.StringValue {
	return terra.ReferenceAsString(ve.ref.Append("location"))
}

func (ve ValueExpressionAttributes) Title() terra.StringValue {
	return terra.ReferenceAsString(ve.ref.Append("title"))
}

type PredicateAttributes struct {
	ref terra.Reference
}

func (p PredicateAttributes) InternalRef() (terra.Reference, error) {
	return p.ref, nil
}

func (p PredicateAttributes) InternalWithRef(ref terra.Reference) PredicateAttributes {
	return PredicateAttributes{ref: ref}
}

func (p PredicateAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return p.ref.InternalTokens()
}

func (p PredicateAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(p.ref.Append("description"))
}

func (p PredicateAttributes) Expression() terra.StringValue {
	return terra.ReferenceAsString(p.ref.Append("expression"))
}

func (p PredicateAttributes) Location() terra.StringValue {
	return terra.ReferenceAsString(p.ref.Append("location"))
}

func (p PredicateAttributes) Title() terra.StringValue {
	return terra.ReferenceAsString(p.ref.Append("title"))
}

type ResourceSelectorAttributes struct {
	ref terra.Reference
}

func (rs ResourceSelectorAttributes) InternalRef() (terra.Reference, error) {
	return rs.ref, nil
}

func (rs ResourceSelectorAttributes) InternalWithRef(ref terra.Reference) ResourceSelectorAttributes {
	return ResourceSelectorAttributes{ref: ref}
}

func (rs ResourceSelectorAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rs.ref.InternalTokens()
}

func (rs ResourceSelectorAttributes) ResourceTypes() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](rs.ref.Append("resource_types"))
}

type SecurityHealthAnalyticsModuleAttributes struct {
	ref terra.Reference
}

func (sham SecurityHealthAnalyticsModuleAttributes) InternalRef() (terra.Reference, error) {
	return sham.ref, nil
}

func (sham SecurityHealthAnalyticsModuleAttributes) InternalWithRef(ref terra.Reference) SecurityHealthAnalyticsModuleAttributes {
	return SecurityHealthAnalyticsModuleAttributes{ref: ref}
}

func (sham SecurityHealthAnalyticsModuleAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sham.ref.InternalTokens()
}

func (sham SecurityHealthAnalyticsModuleAttributes) ModuleEnablementState() terra.StringValue {
	return terra.ReferenceAsString(sham.ref.Append("module_enablement_state"))
}

func (sham SecurityHealthAnalyticsModuleAttributes) ModuleName() terra.StringValue {
	return terra.ReferenceAsString(sham.ref.Append("module_name"))
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("create"))
}

func (t TimeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("delete"))
}

func (t TimeoutsAttributes) Update() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("update"))
}

type PolicySetsState struct {
	Description string          `json:"description"`
	PolicySetId string          `json:"policy_set_id"`
	Policies    []PoliciesState `json:"policies"`
}

type PoliciesState struct {
	Description         string                     `json:"description"`
	PolicyId            string                     `json:"policy_id"`
	ComplianceStandards []ComplianceStandardsState `json:"compliance_standards"`
	Constraint          []ConstraintState          `json:"constraint"`
}

type ComplianceStandardsState struct {
	Control  string `json:"control"`
	Standard string `json:"standard"`
}

type ConstraintState struct {
	OrgPolicyConstraint                 []OrgPolicyConstraintState                 `json:"org_policy_constraint"`
	OrgPolicyConstraintCustom           []OrgPolicyConstraintCustomState           `json:"org_policy_constraint_custom"`
	SecurityHealthAnalyticsCustomModule []SecurityHealthAnalyticsCustomModuleState `json:"security_health_analytics_custom_module"`
	SecurityHealthAnalyticsModule       []SecurityHealthAnalyticsModuleState       `json:"security_health_analytics_module"`
}

type OrgPolicyConstraintState struct {
	CannedConstraintId string                                `json:"canned_constraint_id"`
	PolicyRules        []OrgPolicyConstraintPolicyRulesState `json:"policy_rules"`
}

type OrgPolicyConstraintPolicyRulesState struct {
	AllowAll  bool                                           `json:"allow_all"`
	DenyAll   bool                                           `json:"deny_all"`
	Enforce   bool                                           `json:"enforce"`
	Condition []OrgPolicyConstraintPolicyRulesConditionState `json:"condition"`
	Values    []OrgPolicyConstraintPolicyRulesValuesState    `json:"values"`
}

type OrgPolicyConstraintPolicyRulesConditionState struct {
	Description string `json:"description"`
	Expression  string `json:"expression"`
	Location    string `json:"location"`
	Title       string `json:"title"`
}

type OrgPolicyConstraintPolicyRulesValuesState struct {
	AllowedValues []string `json:"allowed_values"`
	DeniedValues  []string `json:"denied_values"`
}

type OrgPolicyConstraintCustomState struct {
	CustomConstraint []CustomConstraintState                     `json:"custom_constraint"`
	PolicyRules      []OrgPolicyConstraintCustomPolicyRulesState `json:"policy_rules"`
}

type CustomConstraintState struct {
	ActionType    string   `json:"action_type"`
	Condition     string   `json:"condition"`
	Description   string   `json:"description"`
	DisplayName   string   `json:"display_name"`
	MethodTypes   []string `json:"method_types"`
	Name          string   `json:"name"`
	ResourceTypes []string `json:"resource_types"`
}

type OrgPolicyConstraintCustomPolicyRulesState struct {
	AllowAll  bool                                                 `json:"allow_all"`
	DenyAll   bool                                                 `json:"deny_all"`
	Enforce   bool                                                 `json:"enforce"`
	Condition []OrgPolicyConstraintCustomPolicyRulesConditionState `json:"condition"`
	Values    []OrgPolicyConstraintCustomPolicyRulesValuesState    `json:"values"`
}

type OrgPolicyConstraintCustomPolicyRulesConditionState struct {
	Description string `json:"description"`
	Expression  string `json:"expression"`
	Location    string `json:"location"`
	Title       string `json:"title"`
}

type OrgPolicyConstraintCustomPolicyRulesValuesState struct {
	AllowedValues []string `json:"allowed_values"`
	DeniedValues  []string `json:"denied_values"`
}

type SecurityHealthAnalyticsCustomModuleState struct {
	DisplayName           string        `json:"display_name"`
	Id                    string        `json:"id"`
	ModuleEnablementState string        `json:"module_enablement_state"`
	Config                []ConfigState `json:"config"`
}

type ConfigState struct {
	Description      string                  `json:"description"`
	Recommendation   string                  `json:"recommendation"`
	Severity         string                  `json:"severity"`
	CustomOutput     []CustomOutputState     `json:"custom_output"`
	Predicate        []PredicateState        `json:"predicate"`
	ResourceSelector []ResourceSelectorState `json:"resource_selector"`
}

type CustomOutputState struct {
	Properties []PropertiesState `json:"properties"`
}

type PropertiesState struct {
	Name            string                 `json:"name"`
	ValueExpression []ValueExpressionState `json:"value_expression"`
}

type ValueExpressionState struct {
	Description string `json:"description"`
	Expression  string `json:"expression"`
	Location    string `json:"location"`
	Title       string `json:"title"`
}

type PredicateState struct {
	Description string `json:"description"`
	Expression  string `json:"expression"`
	Location    string `json:"location"`
	Title       string `json:"title"`
}

type ResourceSelectorState struct {
	ResourceTypes []string `json:"resource_types"`
}

type SecurityHealthAnalyticsModuleState struct {
	ModuleEnablementState string `json:"module_enablement_state"`
	ModuleName            string `json:"module_name"`
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
	Update string `json:"update"`
}
