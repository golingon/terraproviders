// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package googlebeta

import (
	"github.com/golingon/lingon/pkg/terra"
	dataapphubdiscoveredworkload "github.com/golingon/terraproviders/googlebeta/5.24.0/dataapphubdiscoveredworkload"
)

// NewDataApphubDiscoveredWorkload creates a new instance of [DataApphubDiscoveredWorkload].
func NewDataApphubDiscoveredWorkload(name string, args DataApphubDiscoveredWorkloadArgs) *DataApphubDiscoveredWorkload {
	return &DataApphubDiscoveredWorkload{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataApphubDiscoveredWorkload)(nil)

// DataApphubDiscoveredWorkload represents the Terraform data resource google_apphub_discovered_workload.
type DataApphubDiscoveredWorkload struct {
	Name string
	Args DataApphubDiscoveredWorkloadArgs
}

// DataSource returns the Terraform object type for [DataApphubDiscoveredWorkload].
func (adw *DataApphubDiscoveredWorkload) DataSource() string {
	return "google_apphub_discovered_workload"
}

// LocalName returns the local name for [DataApphubDiscoveredWorkload].
func (adw *DataApphubDiscoveredWorkload) LocalName() string {
	return adw.Name
}

// Configuration returns the configuration (args) for [DataApphubDiscoveredWorkload].
func (adw *DataApphubDiscoveredWorkload) Configuration() interface{} {
	return adw.Args
}

// Attributes returns the attributes for [DataApphubDiscoveredWorkload].
func (adw *DataApphubDiscoveredWorkload) Attributes() dataApphubDiscoveredWorkloadAttributes {
	return dataApphubDiscoveredWorkloadAttributes{ref: terra.ReferenceDataResource(adw)}
}

// DataApphubDiscoveredWorkloadArgs contains the configurations for google_apphub_discovered_workload.
type DataApphubDiscoveredWorkloadArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Location: string, required
	Location terra.StringValue `hcl:"location,attr" validate:"required"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
	// WorkloadUri: string, required
	WorkloadUri terra.StringValue `hcl:"workload_uri,attr" validate:"required"`
	// WorkloadProperties: min=0
	WorkloadProperties []dataapphubdiscoveredworkload.WorkloadProperties `hcl:"workload_properties,block" validate:"min=0"`
	// WorkloadReference: min=0
	WorkloadReference []dataapphubdiscoveredworkload.WorkloadReference `hcl:"workload_reference,block" validate:"min=0"`
}
type dataApphubDiscoveredWorkloadAttributes struct {
	ref terra.Reference
}

// Id returns a reference to field id of google_apphub_discovered_workload.
func (adw dataApphubDiscoveredWorkloadAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(adw.ref.Append("id"))
}

// Location returns a reference to field location of google_apphub_discovered_workload.
func (adw dataApphubDiscoveredWorkloadAttributes) Location() terra.StringValue {
	return terra.ReferenceAsString(adw.ref.Append("location"))
}

// Name returns a reference to field name of google_apphub_discovered_workload.
func (adw dataApphubDiscoveredWorkloadAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(adw.ref.Append("name"))
}

// Project returns a reference to field project of google_apphub_discovered_workload.
func (adw dataApphubDiscoveredWorkloadAttributes) Project() terra.StringValue {
	return terra.ReferenceAsString(adw.ref.Append("project"))
}

// WorkloadUri returns a reference to field workload_uri of google_apphub_discovered_workload.
func (adw dataApphubDiscoveredWorkloadAttributes) WorkloadUri() terra.StringValue {
	return terra.ReferenceAsString(adw.ref.Append("workload_uri"))
}

func (adw dataApphubDiscoveredWorkloadAttributes) WorkloadProperties() terra.ListValue[dataapphubdiscoveredworkload.WorkloadPropertiesAttributes] {
	return terra.ReferenceAsList[dataapphubdiscoveredworkload.WorkloadPropertiesAttributes](adw.ref.Append("workload_properties"))
}

func (adw dataApphubDiscoveredWorkloadAttributes) WorkloadReference() terra.ListValue[dataapphubdiscoveredworkload.WorkloadReferenceAttributes] {
	return terra.ReferenceAsList[dataapphubdiscoveredworkload.WorkloadReferenceAttributes](adw.ref.Append("workload_reference"))
}
