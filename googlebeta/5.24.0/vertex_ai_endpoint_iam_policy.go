// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package googlebeta

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// NewVertexAiEndpointIamPolicy creates a new instance of [VertexAiEndpointIamPolicy].
func NewVertexAiEndpointIamPolicy(name string, args VertexAiEndpointIamPolicyArgs) *VertexAiEndpointIamPolicy {
	return &VertexAiEndpointIamPolicy{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*VertexAiEndpointIamPolicy)(nil)

// VertexAiEndpointIamPolicy represents the Terraform resource google_vertex_ai_endpoint_iam_policy.
type VertexAiEndpointIamPolicy struct {
	Name      string
	Args      VertexAiEndpointIamPolicyArgs
	state     *vertexAiEndpointIamPolicyState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [VertexAiEndpointIamPolicy].
func (vaeip *VertexAiEndpointIamPolicy) Type() string {
	return "google_vertex_ai_endpoint_iam_policy"
}

// LocalName returns the local name for [VertexAiEndpointIamPolicy].
func (vaeip *VertexAiEndpointIamPolicy) LocalName() string {
	return vaeip.Name
}

// Configuration returns the configuration (args) for [VertexAiEndpointIamPolicy].
func (vaeip *VertexAiEndpointIamPolicy) Configuration() interface{} {
	return vaeip.Args
}

// DependOn is used for other resources to depend on [VertexAiEndpointIamPolicy].
func (vaeip *VertexAiEndpointIamPolicy) DependOn() terra.Reference {
	return terra.ReferenceResource(vaeip)
}

// Dependencies returns the list of resources [VertexAiEndpointIamPolicy] depends_on.
func (vaeip *VertexAiEndpointIamPolicy) Dependencies() terra.Dependencies {
	return vaeip.DependsOn
}

// LifecycleManagement returns the lifecycle block for [VertexAiEndpointIamPolicy].
func (vaeip *VertexAiEndpointIamPolicy) LifecycleManagement() *terra.Lifecycle {
	return vaeip.Lifecycle
}

// Attributes returns the attributes for [VertexAiEndpointIamPolicy].
func (vaeip *VertexAiEndpointIamPolicy) Attributes() vertexAiEndpointIamPolicyAttributes {
	return vertexAiEndpointIamPolicyAttributes{ref: terra.ReferenceResource(vaeip)}
}

// ImportState imports the given attribute values into [VertexAiEndpointIamPolicy]'s state.
func (vaeip *VertexAiEndpointIamPolicy) ImportState(av io.Reader) error {
	vaeip.state = &vertexAiEndpointIamPolicyState{}
	if err := json.NewDecoder(av).Decode(vaeip.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", vaeip.Type(), vaeip.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [VertexAiEndpointIamPolicy] has state.
func (vaeip *VertexAiEndpointIamPolicy) State() (*vertexAiEndpointIamPolicyState, bool) {
	return vaeip.state, vaeip.state != nil
}

// StateMust returns the state for [VertexAiEndpointIamPolicy]. Panics if the state is nil.
func (vaeip *VertexAiEndpointIamPolicy) StateMust() *vertexAiEndpointIamPolicyState {
	if vaeip.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", vaeip.Type(), vaeip.LocalName()))
	}
	return vaeip.state
}

// VertexAiEndpointIamPolicyArgs contains the configurations for google_vertex_ai_endpoint_iam_policy.
type VertexAiEndpointIamPolicyArgs struct {
	// Endpoint: string, required
	Endpoint terra.StringValue `hcl:"endpoint,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Location: string, optional
	Location terra.StringValue `hcl:"location,attr"`
	// PolicyData: string, required
	PolicyData terra.StringValue `hcl:"policy_data,attr" validate:"required"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
}
type vertexAiEndpointIamPolicyAttributes struct {
	ref terra.Reference
}

// Endpoint returns a reference to field endpoint of google_vertex_ai_endpoint_iam_policy.
func (vaeip vertexAiEndpointIamPolicyAttributes) Endpoint() terra.StringValue {
	return terra.ReferenceAsString(vaeip.ref.Append("endpoint"))
}

// Etag returns a reference to field etag of google_vertex_ai_endpoint_iam_policy.
func (vaeip vertexAiEndpointIamPolicyAttributes) Etag() terra.StringValue {
	return terra.ReferenceAsString(vaeip.ref.Append("etag"))
}

// Id returns a reference to field id of google_vertex_ai_endpoint_iam_policy.
func (vaeip vertexAiEndpointIamPolicyAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(vaeip.ref.Append("id"))
}

// Location returns a reference to field location of google_vertex_ai_endpoint_iam_policy.
func (vaeip vertexAiEndpointIamPolicyAttributes) Location() terra.StringValue {
	return terra.ReferenceAsString(vaeip.ref.Append("location"))
}

// PolicyData returns a reference to field policy_data of google_vertex_ai_endpoint_iam_policy.
func (vaeip vertexAiEndpointIamPolicyAttributes) PolicyData() terra.StringValue {
	return terra.ReferenceAsString(vaeip.ref.Append("policy_data"))
}

// Project returns a reference to field project of google_vertex_ai_endpoint_iam_policy.
func (vaeip vertexAiEndpointIamPolicyAttributes) Project() terra.StringValue {
	return terra.ReferenceAsString(vaeip.ref.Append("project"))
}

type vertexAiEndpointIamPolicyState struct {
	Endpoint   string `json:"endpoint"`
	Etag       string `json:"etag"`
	Id         string `json:"id"`
	Location   string `json:"location"`
	PolicyData string `json:"policy_data"`
	Project    string `json:"project"`
}
