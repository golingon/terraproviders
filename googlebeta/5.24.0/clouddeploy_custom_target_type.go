// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package googlebeta

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	clouddeploycustomtargettype "github.com/golingon/terraproviders/googlebeta/5.24.0/clouddeploycustomtargettype"
	"io"
)

// NewClouddeployCustomTargetType creates a new instance of [ClouddeployCustomTargetType].
func NewClouddeployCustomTargetType(name string, args ClouddeployCustomTargetTypeArgs) *ClouddeployCustomTargetType {
	return &ClouddeployCustomTargetType{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*ClouddeployCustomTargetType)(nil)

// ClouddeployCustomTargetType represents the Terraform resource google_clouddeploy_custom_target_type.
type ClouddeployCustomTargetType struct {
	Name      string
	Args      ClouddeployCustomTargetTypeArgs
	state     *clouddeployCustomTargetTypeState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [ClouddeployCustomTargetType].
func (cctt *ClouddeployCustomTargetType) Type() string {
	return "google_clouddeploy_custom_target_type"
}

// LocalName returns the local name for [ClouddeployCustomTargetType].
func (cctt *ClouddeployCustomTargetType) LocalName() string {
	return cctt.Name
}

// Configuration returns the configuration (args) for [ClouddeployCustomTargetType].
func (cctt *ClouddeployCustomTargetType) Configuration() interface{} {
	return cctt.Args
}

// DependOn is used for other resources to depend on [ClouddeployCustomTargetType].
func (cctt *ClouddeployCustomTargetType) DependOn() terra.Reference {
	return terra.ReferenceResource(cctt)
}

// Dependencies returns the list of resources [ClouddeployCustomTargetType] depends_on.
func (cctt *ClouddeployCustomTargetType) Dependencies() terra.Dependencies {
	return cctt.DependsOn
}

// LifecycleManagement returns the lifecycle block for [ClouddeployCustomTargetType].
func (cctt *ClouddeployCustomTargetType) LifecycleManagement() *terra.Lifecycle {
	return cctt.Lifecycle
}

// Attributes returns the attributes for [ClouddeployCustomTargetType].
func (cctt *ClouddeployCustomTargetType) Attributes() clouddeployCustomTargetTypeAttributes {
	return clouddeployCustomTargetTypeAttributes{ref: terra.ReferenceResource(cctt)}
}

// ImportState imports the given attribute values into [ClouddeployCustomTargetType]'s state.
func (cctt *ClouddeployCustomTargetType) ImportState(av io.Reader) error {
	cctt.state = &clouddeployCustomTargetTypeState{}
	if err := json.NewDecoder(av).Decode(cctt.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", cctt.Type(), cctt.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [ClouddeployCustomTargetType] has state.
func (cctt *ClouddeployCustomTargetType) State() (*clouddeployCustomTargetTypeState, bool) {
	return cctt.state, cctt.state != nil
}

// StateMust returns the state for [ClouddeployCustomTargetType]. Panics if the state is nil.
func (cctt *ClouddeployCustomTargetType) StateMust() *clouddeployCustomTargetTypeState {
	if cctt.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", cctt.Type(), cctt.LocalName()))
	}
	return cctt.state
}

// ClouddeployCustomTargetTypeArgs contains the configurations for google_clouddeploy_custom_target_type.
type ClouddeployCustomTargetTypeArgs struct {
	// Annotations: map of string, optional
	Annotations terra.MapValue[terra.StringValue] `hcl:"annotations,attr"`
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Labels: map of string, optional
	Labels terra.MapValue[terra.StringValue] `hcl:"labels,attr"`
	// Location: string, required
	Location terra.StringValue `hcl:"location,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
	// CustomActions: optional
	CustomActions *clouddeploycustomtargettype.CustomActions `hcl:"custom_actions,block"`
	// Timeouts: optional
	Timeouts *clouddeploycustomtargettype.Timeouts `hcl:"timeouts,block"`
}
type clouddeployCustomTargetTypeAttributes struct {
	ref terra.Reference
}

// Annotations returns a reference to field annotations of google_clouddeploy_custom_target_type.
func (cctt clouddeployCustomTargetTypeAttributes) Annotations() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](cctt.ref.Append("annotations"))
}

// CreateTime returns a reference to field create_time of google_clouddeploy_custom_target_type.
func (cctt clouddeployCustomTargetTypeAttributes) CreateTime() terra.StringValue {
	return terra.ReferenceAsString(cctt.ref.Append("create_time"))
}

// CustomTargetTypeId returns a reference to field custom_target_type_id of google_clouddeploy_custom_target_type.
func (cctt clouddeployCustomTargetTypeAttributes) CustomTargetTypeId() terra.StringValue {
	return terra.ReferenceAsString(cctt.ref.Append("custom_target_type_id"))
}

// Description returns a reference to field description of google_clouddeploy_custom_target_type.
func (cctt clouddeployCustomTargetTypeAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(cctt.ref.Append("description"))
}

// EffectiveAnnotations returns a reference to field effective_annotations of google_clouddeploy_custom_target_type.
func (cctt clouddeployCustomTargetTypeAttributes) EffectiveAnnotations() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](cctt.ref.Append("effective_annotations"))
}

// EffectiveLabels returns a reference to field effective_labels of google_clouddeploy_custom_target_type.
func (cctt clouddeployCustomTargetTypeAttributes) EffectiveLabels() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](cctt.ref.Append("effective_labels"))
}

// Etag returns a reference to field etag of google_clouddeploy_custom_target_type.
func (cctt clouddeployCustomTargetTypeAttributes) Etag() terra.StringValue {
	return terra.ReferenceAsString(cctt.ref.Append("etag"))
}

// Id returns a reference to field id of google_clouddeploy_custom_target_type.
func (cctt clouddeployCustomTargetTypeAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(cctt.ref.Append("id"))
}

// Labels returns a reference to field labels of google_clouddeploy_custom_target_type.
func (cctt clouddeployCustomTargetTypeAttributes) Labels() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](cctt.ref.Append("labels"))
}

// Location returns a reference to field location of google_clouddeploy_custom_target_type.
func (cctt clouddeployCustomTargetTypeAttributes) Location() terra.StringValue {
	return terra.ReferenceAsString(cctt.ref.Append("location"))
}

// Name returns a reference to field name of google_clouddeploy_custom_target_type.
func (cctt clouddeployCustomTargetTypeAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(cctt.ref.Append("name"))
}

// Project returns a reference to field project of google_clouddeploy_custom_target_type.
func (cctt clouddeployCustomTargetTypeAttributes) Project() terra.StringValue {
	return terra.ReferenceAsString(cctt.ref.Append("project"))
}

// TerraformLabels returns a reference to field terraform_labels of google_clouddeploy_custom_target_type.
func (cctt clouddeployCustomTargetTypeAttributes) TerraformLabels() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](cctt.ref.Append("terraform_labels"))
}

// Uid returns a reference to field uid of google_clouddeploy_custom_target_type.
func (cctt clouddeployCustomTargetTypeAttributes) Uid() terra.StringValue {
	return terra.ReferenceAsString(cctt.ref.Append("uid"))
}

// UpdateTime returns a reference to field update_time of google_clouddeploy_custom_target_type.
func (cctt clouddeployCustomTargetTypeAttributes) UpdateTime() terra.StringValue {
	return terra.ReferenceAsString(cctt.ref.Append("update_time"))
}

func (cctt clouddeployCustomTargetTypeAttributes) CustomActions() terra.ListValue[clouddeploycustomtargettype.CustomActionsAttributes] {
	return terra.ReferenceAsList[clouddeploycustomtargettype.CustomActionsAttributes](cctt.ref.Append("custom_actions"))
}

func (cctt clouddeployCustomTargetTypeAttributes) Timeouts() clouddeploycustomtargettype.TimeoutsAttributes {
	return terra.ReferenceAsSingle[clouddeploycustomtargettype.TimeoutsAttributes](cctt.ref.Append("timeouts"))
}

type clouddeployCustomTargetTypeState struct {
	Annotations          map[string]string                                `json:"annotations"`
	CreateTime           string                                           `json:"create_time"`
	CustomTargetTypeId   string                                           `json:"custom_target_type_id"`
	Description          string                                           `json:"description"`
	EffectiveAnnotations map[string]string                                `json:"effective_annotations"`
	EffectiveLabels      map[string]string                                `json:"effective_labels"`
	Etag                 string                                           `json:"etag"`
	Id                   string                                           `json:"id"`
	Labels               map[string]string                                `json:"labels"`
	Location             string                                           `json:"location"`
	Name                 string                                           `json:"name"`
	Project              string                                           `json:"project"`
	TerraformLabels      map[string]string                                `json:"terraform_labels"`
	Uid                  string                                           `json:"uid"`
	UpdateTime           string                                           `json:"update_time"`
	CustomActions        []clouddeploycustomtargettype.CustomActionsState `json:"custom_actions"`
	Timeouts             *clouddeploycustomtargettype.TimeoutsState       `json:"timeouts"`
}
