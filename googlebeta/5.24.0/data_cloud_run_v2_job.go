// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package googlebeta

import (
	"github.com/golingon/lingon/pkg/terra"
	datacloudrunv2job "github.com/golingon/terraproviders/googlebeta/5.24.0/datacloudrunv2job"
)

// NewDataCloudRunV2Job creates a new instance of [DataCloudRunV2Job].
func NewDataCloudRunV2Job(name string, args DataCloudRunV2JobArgs) *DataCloudRunV2Job {
	return &DataCloudRunV2Job{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataCloudRunV2Job)(nil)

// DataCloudRunV2Job represents the Terraform data resource google_cloud_run_v2_job.
type DataCloudRunV2Job struct {
	Name string
	Args DataCloudRunV2JobArgs
}

// DataSource returns the Terraform object type for [DataCloudRunV2Job].
func (crvj *DataCloudRunV2Job) DataSource() string {
	return "google_cloud_run_v2_job"
}

// LocalName returns the local name for [DataCloudRunV2Job].
func (crvj *DataCloudRunV2Job) LocalName() string {
	return crvj.Name
}

// Configuration returns the configuration (args) for [DataCloudRunV2Job].
func (crvj *DataCloudRunV2Job) Configuration() interface{} {
	return crvj.Args
}

// Attributes returns the attributes for [DataCloudRunV2Job].
func (crvj *DataCloudRunV2Job) Attributes() dataCloudRunV2JobAttributes {
	return dataCloudRunV2JobAttributes{ref: terra.ReferenceDataResource(crvj)}
}

// DataCloudRunV2JobArgs contains the configurations for google_cloud_run_v2_job.
type DataCloudRunV2JobArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Location: string, optional
	Location terra.StringValue `hcl:"location,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
	// BinaryAuthorization: min=0
	BinaryAuthorization []datacloudrunv2job.BinaryAuthorization `hcl:"binary_authorization,block" validate:"min=0"`
	// Conditions: min=0
	Conditions []datacloudrunv2job.Conditions `hcl:"conditions,block" validate:"min=0"`
	// LatestCreatedExecution: min=0
	LatestCreatedExecution []datacloudrunv2job.LatestCreatedExecution `hcl:"latest_created_execution,block" validate:"min=0"`
	// Template: min=0
	Template []datacloudrunv2job.Template `hcl:"template,block" validate:"min=0"`
	// TerminalCondition: min=0
	TerminalCondition []datacloudrunv2job.TerminalCondition `hcl:"terminal_condition,block" validate:"min=0"`
}
type dataCloudRunV2JobAttributes struct {
	ref terra.Reference
}

// Annotations returns a reference to field annotations of google_cloud_run_v2_job.
func (crvj dataCloudRunV2JobAttributes) Annotations() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](crvj.ref.Append("annotations"))
}

// Client returns a reference to field client of google_cloud_run_v2_job.
func (crvj dataCloudRunV2JobAttributes) Client() terra.StringValue {
	return terra.ReferenceAsString(crvj.ref.Append("client"))
}

// ClientVersion returns a reference to field client_version of google_cloud_run_v2_job.
func (crvj dataCloudRunV2JobAttributes) ClientVersion() terra.StringValue {
	return terra.ReferenceAsString(crvj.ref.Append("client_version"))
}

// CreateTime returns a reference to field create_time of google_cloud_run_v2_job.
func (crvj dataCloudRunV2JobAttributes) CreateTime() terra.StringValue {
	return terra.ReferenceAsString(crvj.ref.Append("create_time"))
}

// Creator returns a reference to field creator of google_cloud_run_v2_job.
func (crvj dataCloudRunV2JobAttributes) Creator() terra.StringValue {
	return terra.ReferenceAsString(crvj.ref.Append("creator"))
}

// DeleteTime returns a reference to field delete_time of google_cloud_run_v2_job.
func (crvj dataCloudRunV2JobAttributes) DeleteTime() terra.StringValue {
	return terra.ReferenceAsString(crvj.ref.Append("delete_time"))
}

// EffectiveAnnotations returns a reference to field effective_annotations of google_cloud_run_v2_job.
func (crvj dataCloudRunV2JobAttributes) EffectiveAnnotations() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](crvj.ref.Append("effective_annotations"))
}

// EffectiveLabels returns a reference to field effective_labels of google_cloud_run_v2_job.
func (crvj dataCloudRunV2JobAttributes) EffectiveLabels() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](crvj.ref.Append("effective_labels"))
}

// Etag returns a reference to field etag of google_cloud_run_v2_job.
func (crvj dataCloudRunV2JobAttributes) Etag() terra.StringValue {
	return terra.ReferenceAsString(crvj.ref.Append("etag"))
}

// ExecutionCount returns a reference to field execution_count of google_cloud_run_v2_job.
func (crvj dataCloudRunV2JobAttributes) ExecutionCount() terra.NumberValue {
	return terra.ReferenceAsNumber(crvj.ref.Append("execution_count"))
}

// ExpireTime returns a reference to field expire_time of google_cloud_run_v2_job.
func (crvj dataCloudRunV2JobAttributes) ExpireTime() terra.StringValue {
	return terra.ReferenceAsString(crvj.ref.Append("expire_time"))
}

// Generation returns a reference to field generation of google_cloud_run_v2_job.
func (crvj dataCloudRunV2JobAttributes) Generation() terra.StringValue {
	return terra.ReferenceAsString(crvj.ref.Append("generation"))
}

// Id returns a reference to field id of google_cloud_run_v2_job.
func (crvj dataCloudRunV2JobAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(crvj.ref.Append("id"))
}

// Labels returns a reference to field labels of google_cloud_run_v2_job.
func (crvj dataCloudRunV2JobAttributes) Labels() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](crvj.ref.Append("labels"))
}

// LastModifier returns a reference to field last_modifier of google_cloud_run_v2_job.
func (crvj dataCloudRunV2JobAttributes) LastModifier() terra.StringValue {
	return terra.ReferenceAsString(crvj.ref.Append("last_modifier"))
}

// LaunchStage returns a reference to field launch_stage of google_cloud_run_v2_job.
func (crvj dataCloudRunV2JobAttributes) LaunchStage() terra.StringValue {
	return terra.ReferenceAsString(crvj.ref.Append("launch_stage"))
}

// Location returns a reference to field location of google_cloud_run_v2_job.
func (crvj dataCloudRunV2JobAttributes) Location() terra.StringValue {
	return terra.ReferenceAsString(crvj.ref.Append("location"))
}

// Name returns a reference to field name of google_cloud_run_v2_job.
func (crvj dataCloudRunV2JobAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(crvj.ref.Append("name"))
}

// ObservedGeneration returns a reference to field observed_generation of google_cloud_run_v2_job.
func (crvj dataCloudRunV2JobAttributes) ObservedGeneration() terra.StringValue {
	return terra.ReferenceAsString(crvj.ref.Append("observed_generation"))
}

// Project returns a reference to field project of google_cloud_run_v2_job.
func (crvj dataCloudRunV2JobAttributes) Project() terra.StringValue {
	return terra.ReferenceAsString(crvj.ref.Append("project"))
}

// Reconciling returns a reference to field reconciling of google_cloud_run_v2_job.
func (crvj dataCloudRunV2JobAttributes) Reconciling() terra.BoolValue {
	return terra.ReferenceAsBool(crvj.ref.Append("reconciling"))
}

// TerraformLabels returns a reference to field terraform_labels of google_cloud_run_v2_job.
func (crvj dataCloudRunV2JobAttributes) TerraformLabels() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](crvj.ref.Append("terraform_labels"))
}

// Uid returns a reference to field uid of google_cloud_run_v2_job.
func (crvj dataCloudRunV2JobAttributes) Uid() terra.StringValue {
	return terra.ReferenceAsString(crvj.ref.Append("uid"))
}

// UpdateTime returns a reference to field update_time of google_cloud_run_v2_job.
func (crvj dataCloudRunV2JobAttributes) UpdateTime() terra.StringValue {
	return terra.ReferenceAsString(crvj.ref.Append("update_time"))
}

func (crvj dataCloudRunV2JobAttributes) BinaryAuthorization() terra.ListValue[datacloudrunv2job.BinaryAuthorizationAttributes] {
	return terra.ReferenceAsList[datacloudrunv2job.BinaryAuthorizationAttributes](crvj.ref.Append("binary_authorization"))
}

func (crvj dataCloudRunV2JobAttributes) Conditions() terra.ListValue[datacloudrunv2job.ConditionsAttributes] {
	return terra.ReferenceAsList[datacloudrunv2job.ConditionsAttributes](crvj.ref.Append("conditions"))
}

func (crvj dataCloudRunV2JobAttributes) LatestCreatedExecution() terra.ListValue[datacloudrunv2job.LatestCreatedExecutionAttributes] {
	return terra.ReferenceAsList[datacloudrunv2job.LatestCreatedExecutionAttributes](crvj.ref.Append("latest_created_execution"))
}

func (crvj dataCloudRunV2JobAttributes) Template() terra.ListValue[datacloudrunv2job.TemplateAttributes] {
	return terra.ReferenceAsList[datacloudrunv2job.TemplateAttributes](crvj.ref.Append("template"))
}

func (crvj dataCloudRunV2JobAttributes) TerminalCondition() terra.ListValue[datacloudrunv2job.TerminalConditionAttributes] {
	return terra.ReferenceAsList[datacloudrunv2job.TerminalConditionAttributes](crvj.ref.Append("terminal_condition"))
}
