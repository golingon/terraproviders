// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package googlebeta

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	integrationconnectorsendpointattachment "github.com/golingon/terraproviders/googlebeta/5.24.0/integrationconnectorsendpointattachment"
	"io"
)

// NewIntegrationConnectorsEndpointAttachment creates a new instance of [IntegrationConnectorsEndpointAttachment].
func NewIntegrationConnectorsEndpointAttachment(name string, args IntegrationConnectorsEndpointAttachmentArgs) *IntegrationConnectorsEndpointAttachment {
	return &IntegrationConnectorsEndpointAttachment{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*IntegrationConnectorsEndpointAttachment)(nil)

// IntegrationConnectorsEndpointAttachment represents the Terraform resource google_integration_connectors_endpoint_attachment.
type IntegrationConnectorsEndpointAttachment struct {
	Name      string
	Args      IntegrationConnectorsEndpointAttachmentArgs
	state     *integrationConnectorsEndpointAttachmentState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [IntegrationConnectorsEndpointAttachment].
func (icea *IntegrationConnectorsEndpointAttachment) Type() string {
	return "google_integration_connectors_endpoint_attachment"
}

// LocalName returns the local name for [IntegrationConnectorsEndpointAttachment].
func (icea *IntegrationConnectorsEndpointAttachment) LocalName() string {
	return icea.Name
}

// Configuration returns the configuration (args) for [IntegrationConnectorsEndpointAttachment].
func (icea *IntegrationConnectorsEndpointAttachment) Configuration() interface{} {
	return icea.Args
}

// DependOn is used for other resources to depend on [IntegrationConnectorsEndpointAttachment].
func (icea *IntegrationConnectorsEndpointAttachment) DependOn() terra.Reference {
	return terra.ReferenceResource(icea)
}

// Dependencies returns the list of resources [IntegrationConnectorsEndpointAttachment] depends_on.
func (icea *IntegrationConnectorsEndpointAttachment) Dependencies() terra.Dependencies {
	return icea.DependsOn
}

// LifecycleManagement returns the lifecycle block for [IntegrationConnectorsEndpointAttachment].
func (icea *IntegrationConnectorsEndpointAttachment) LifecycleManagement() *terra.Lifecycle {
	return icea.Lifecycle
}

// Attributes returns the attributes for [IntegrationConnectorsEndpointAttachment].
func (icea *IntegrationConnectorsEndpointAttachment) Attributes() integrationConnectorsEndpointAttachmentAttributes {
	return integrationConnectorsEndpointAttachmentAttributes{ref: terra.ReferenceResource(icea)}
}

// ImportState imports the given attribute values into [IntegrationConnectorsEndpointAttachment]'s state.
func (icea *IntegrationConnectorsEndpointAttachment) ImportState(av io.Reader) error {
	icea.state = &integrationConnectorsEndpointAttachmentState{}
	if err := json.NewDecoder(av).Decode(icea.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", icea.Type(), icea.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [IntegrationConnectorsEndpointAttachment] has state.
func (icea *IntegrationConnectorsEndpointAttachment) State() (*integrationConnectorsEndpointAttachmentState, bool) {
	return icea.state, icea.state != nil
}

// StateMust returns the state for [IntegrationConnectorsEndpointAttachment]. Panics if the state is nil.
func (icea *IntegrationConnectorsEndpointAttachment) StateMust() *integrationConnectorsEndpointAttachmentState {
	if icea.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", icea.Type(), icea.LocalName()))
	}
	return icea.state
}

// IntegrationConnectorsEndpointAttachmentArgs contains the configurations for google_integration_connectors_endpoint_attachment.
type IntegrationConnectorsEndpointAttachmentArgs struct {
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Labels: map of string, optional
	Labels terra.MapValue[terra.StringValue] `hcl:"labels,attr"`
	// Location: string, required
	Location terra.StringValue `hcl:"location,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
	// ServiceAttachment: string, required
	ServiceAttachment terra.StringValue `hcl:"service_attachment,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *integrationconnectorsendpointattachment.Timeouts `hcl:"timeouts,block"`
}
type integrationConnectorsEndpointAttachmentAttributes struct {
	ref terra.Reference
}

// CreateTime returns a reference to field create_time of google_integration_connectors_endpoint_attachment.
func (icea integrationConnectorsEndpointAttachmentAttributes) CreateTime() terra.StringValue {
	return terra.ReferenceAsString(icea.ref.Append("create_time"))
}

// Description returns a reference to field description of google_integration_connectors_endpoint_attachment.
func (icea integrationConnectorsEndpointAttachmentAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(icea.ref.Append("description"))
}

// EffectiveLabels returns a reference to field effective_labels of google_integration_connectors_endpoint_attachment.
func (icea integrationConnectorsEndpointAttachmentAttributes) EffectiveLabels() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](icea.ref.Append("effective_labels"))
}

// EndpointIp returns a reference to field endpoint_ip of google_integration_connectors_endpoint_attachment.
func (icea integrationConnectorsEndpointAttachmentAttributes) EndpointIp() terra.StringValue {
	return terra.ReferenceAsString(icea.ref.Append("endpoint_ip"))
}

// Id returns a reference to field id of google_integration_connectors_endpoint_attachment.
func (icea integrationConnectorsEndpointAttachmentAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(icea.ref.Append("id"))
}

// Labels returns a reference to field labels of google_integration_connectors_endpoint_attachment.
func (icea integrationConnectorsEndpointAttachmentAttributes) Labels() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](icea.ref.Append("labels"))
}

// Location returns a reference to field location of google_integration_connectors_endpoint_attachment.
func (icea integrationConnectorsEndpointAttachmentAttributes) Location() terra.StringValue {
	return terra.ReferenceAsString(icea.ref.Append("location"))
}

// Name returns a reference to field name of google_integration_connectors_endpoint_attachment.
func (icea integrationConnectorsEndpointAttachmentAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(icea.ref.Append("name"))
}

// Project returns a reference to field project of google_integration_connectors_endpoint_attachment.
func (icea integrationConnectorsEndpointAttachmentAttributes) Project() terra.StringValue {
	return terra.ReferenceAsString(icea.ref.Append("project"))
}

// ServiceAttachment returns a reference to field service_attachment of google_integration_connectors_endpoint_attachment.
func (icea integrationConnectorsEndpointAttachmentAttributes) ServiceAttachment() terra.StringValue {
	return terra.ReferenceAsString(icea.ref.Append("service_attachment"))
}

// TerraformLabels returns a reference to field terraform_labels of google_integration_connectors_endpoint_attachment.
func (icea integrationConnectorsEndpointAttachmentAttributes) TerraformLabels() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](icea.ref.Append("terraform_labels"))
}

// UpdateTime returns a reference to field update_time of google_integration_connectors_endpoint_attachment.
func (icea integrationConnectorsEndpointAttachmentAttributes) UpdateTime() terra.StringValue {
	return terra.ReferenceAsString(icea.ref.Append("update_time"))
}

func (icea integrationConnectorsEndpointAttachmentAttributes) Timeouts() integrationconnectorsendpointattachment.TimeoutsAttributes {
	return terra.ReferenceAsSingle[integrationconnectorsendpointattachment.TimeoutsAttributes](icea.ref.Append("timeouts"))
}

type integrationConnectorsEndpointAttachmentState struct {
	CreateTime        string                                                 `json:"create_time"`
	Description       string                                                 `json:"description"`
	EffectiveLabels   map[string]string                                      `json:"effective_labels"`
	EndpointIp        string                                                 `json:"endpoint_ip"`
	Id                string                                                 `json:"id"`
	Labels            map[string]string                                      `json:"labels"`
	Location          string                                                 `json:"location"`
	Name              string                                                 `json:"name"`
	Project           string                                                 `json:"project"`
	ServiceAttachment string                                                 `json:"service_attachment"`
	TerraformLabels   map[string]string                                      `json:"terraform_labels"`
	UpdateTime        string                                                 `json:"update_time"`
	Timeouts          *integrationconnectorsendpointattachment.TimeoutsState `json:"timeouts"`
}
