// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package googlebeta

import "github.com/golingon/lingon/pkg/terra"

// NewDataSecretManagerSecretVersion creates a new instance of [DataSecretManagerSecretVersion].
func NewDataSecretManagerSecretVersion(name string, args DataSecretManagerSecretVersionArgs) *DataSecretManagerSecretVersion {
	return &DataSecretManagerSecretVersion{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataSecretManagerSecretVersion)(nil)

// DataSecretManagerSecretVersion represents the Terraform data resource google_secret_manager_secret_version.
type DataSecretManagerSecretVersion struct {
	Name string
	Args DataSecretManagerSecretVersionArgs
}

// DataSource returns the Terraform object type for [DataSecretManagerSecretVersion].
func (smsv *DataSecretManagerSecretVersion) DataSource() string {
	return "google_secret_manager_secret_version"
}

// LocalName returns the local name for [DataSecretManagerSecretVersion].
func (smsv *DataSecretManagerSecretVersion) LocalName() string {
	return smsv.Name
}

// Configuration returns the configuration (args) for [DataSecretManagerSecretVersion].
func (smsv *DataSecretManagerSecretVersion) Configuration() interface{} {
	return smsv.Args
}

// Attributes returns the attributes for [DataSecretManagerSecretVersion].
func (smsv *DataSecretManagerSecretVersion) Attributes() dataSecretManagerSecretVersionAttributes {
	return dataSecretManagerSecretVersionAttributes{ref: terra.ReferenceDataResource(smsv)}
}

// DataSecretManagerSecretVersionArgs contains the configurations for google_secret_manager_secret_version.
type DataSecretManagerSecretVersionArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
	// Secret: string, required
	Secret terra.StringValue `hcl:"secret,attr" validate:"required"`
	// Version: string, optional
	Version terra.StringValue `hcl:"version,attr"`
}
type dataSecretManagerSecretVersionAttributes struct {
	ref terra.Reference
}

// CreateTime returns a reference to field create_time of google_secret_manager_secret_version.
func (smsv dataSecretManagerSecretVersionAttributes) CreateTime() terra.StringValue {
	return terra.ReferenceAsString(smsv.ref.Append("create_time"))
}

// DestroyTime returns a reference to field destroy_time of google_secret_manager_secret_version.
func (smsv dataSecretManagerSecretVersionAttributes) DestroyTime() terra.StringValue {
	return terra.ReferenceAsString(smsv.ref.Append("destroy_time"))
}

// Enabled returns a reference to field enabled of google_secret_manager_secret_version.
func (smsv dataSecretManagerSecretVersionAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceAsBool(smsv.ref.Append("enabled"))
}

// Id returns a reference to field id of google_secret_manager_secret_version.
func (smsv dataSecretManagerSecretVersionAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(smsv.ref.Append("id"))
}

// Name returns a reference to field name of google_secret_manager_secret_version.
func (smsv dataSecretManagerSecretVersionAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(smsv.ref.Append("name"))
}

// Project returns a reference to field project of google_secret_manager_secret_version.
func (smsv dataSecretManagerSecretVersionAttributes) Project() terra.StringValue {
	return terra.ReferenceAsString(smsv.ref.Append("project"))
}

// Secret returns a reference to field secret of google_secret_manager_secret_version.
func (smsv dataSecretManagerSecretVersionAttributes) Secret() terra.StringValue {
	return terra.ReferenceAsString(smsv.ref.Append("secret"))
}

// SecretData returns a reference to field secret_data of google_secret_manager_secret_version.
func (smsv dataSecretManagerSecretVersionAttributes) SecretData() terra.StringValue {
	return terra.ReferenceAsString(smsv.ref.Append("secret_data"))
}

// Version returns a reference to field version of google_secret_manager_secret_version.
func (smsv dataSecretManagerSecretVersionAttributes) Version() terra.StringValue {
	return terra.ReferenceAsString(smsv.ref.Append("version"))
}
