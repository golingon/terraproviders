// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package googlebeta

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// NewIapTunnelDestGroupIamPolicy creates a new instance of [IapTunnelDestGroupIamPolicy].
func NewIapTunnelDestGroupIamPolicy(name string, args IapTunnelDestGroupIamPolicyArgs) *IapTunnelDestGroupIamPolicy {
	return &IapTunnelDestGroupIamPolicy{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*IapTunnelDestGroupIamPolicy)(nil)

// IapTunnelDestGroupIamPolicy represents the Terraform resource google_iap_tunnel_dest_group_iam_policy.
type IapTunnelDestGroupIamPolicy struct {
	Name      string
	Args      IapTunnelDestGroupIamPolicyArgs
	state     *iapTunnelDestGroupIamPolicyState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [IapTunnelDestGroupIamPolicy].
func (itdgip *IapTunnelDestGroupIamPolicy) Type() string {
	return "google_iap_tunnel_dest_group_iam_policy"
}

// LocalName returns the local name for [IapTunnelDestGroupIamPolicy].
func (itdgip *IapTunnelDestGroupIamPolicy) LocalName() string {
	return itdgip.Name
}

// Configuration returns the configuration (args) for [IapTunnelDestGroupIamPolicy].
func (itdgip *IapTunnelDestGroupIamPolicy) Configuration() interface{} {
	return itdgip.Args
}

// DependOn is used for other resources to depend on [IapTunnelDestGroupIamPolicy].
func (itdgip *IapTunnelDestGroupIamPolicy) DependOn() terra.Reference {
	return terra.ReferenceResource(itdgip)
}

// Dependencies returns the list of resources [IapTunnelDestGroupIamPolicy] depends_on.
func (itdgip *IapTunnelDestGroupIamPolicy) Dependencies() terra.Dependencies {
	return itdgip.DependsOn
}

// LifecycleManagement returns the lifecycle block for [IapTunnelDestGroupIamPolicy].
func (itdgip *IapTunnelDestGroupIamPolicy) LifecycleManagement() *terra.Lifecycle {
	return itdgip.Lifecycle
}

// Attributes returns the attributes for [IapTunnelDestGroupIamPolicy].
func (itdgip *IapTunnelDestGroupIamPolicy) Attributes() iapTunnelDestGroupIamPolicyAttributes {
	return iapTunnelDestGroupIamPolicyAttributes{ref: terra.ReferenceResource(itdgip)}
}

// ImportState imports the given attribute values into [IapTunnelDestGroupIamPolicy]'s state.
func (itdgip *IapTunnelDestGroupIamPolicy) ImportState(av io.Reader) error {
	itdgip.state = &iapTunnelDestGroupIamPolicyState{}
	if err := json.NewDecoder(av).Decode(itdgip.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", itdgip.Type(), itdgip.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [IapTunnelDestGroupIamPolicy] has state.
func (itdgip *IapTunnelDestGroupIamPolicy) State() (*iapTunnelDestGroupIamPolicyState, bool) {
	return itdgip.state, itdgip.state != nil
}

// StateMust returns the state for [IapTunnelDestGroupIamPolicy]. Panics if the state is nil.
func (itdgip *IapTunnelDestGroupIamPolicy) StateMust() *iapTunnelDestGroupIamPolicyState {
	if itdgip.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", itdgip.Type(), itdgip.LocalName()))
	}
	return itdgip.state
}

// IapTunnelDestGroupIamPolicyArgs contains the configurations for google_iap_tunnel_dest_group_iam_policy.
type IapTunnelDestGroupIamPolicyArgs struct {
	// DestGroup: string, required
	DestGroup terra.StringValue `hcl:"dest_group,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// PolicyData: string, required
	PolicyData terra.StringValue `hcl:"policy_data,attr" validate:"required"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
	// Region: string, optional
	Region terra.StringValue `hcl:"region,attr"`
}
type iapTunnelDestGroupIamPolicyAttributes struct {
	ref terra.Reference
}

// DestGroup returns a reference to field dest_group of google_iap_tunnel_dest_group_iam_policy.
func (itdgip iapTunnelDestGroupIamPolicyAttributes) DestGroup() terra.StringValue {
	return terra.ReferenceAsString(itdgip.ref.Append("dest_group"))
}

// Etag returns a reference to field etag of google_iap_tunnel_dest_group_iam_policy.
func (itdgip iapTunnelDestGroupIamPolicyAttributes) Etag() terra.StringValue {
	return terra.ReferenceAsString(itdgip.ref.Append("etag"))
}

// Id returns a reference to field id of google_iap_tunnel_dest_group_iam_policy.
func (itdgip iapTunnelDestGroupIamPolicyAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(itdgip.ref.Append("id"))
}

// PolicyData returns a reference to field policy_data of google_iap_tunnel_dest_group_iam_policy.
func (itdgip iapTunnelDestGroupIamPolicyAttributes) PolicyData() terra.StringValue {
	return terra.ReferenceAsString(itdgip.ref.Append("policy_data"))
}

// Project returns a reference to field project of google_iap_tunnel_dest_group_iam_policy.
func (itdgip iapTunnelDestGroupIamPolicyAttributes) Project() terra.StringValue {
	return terra.ReferenceAsString(itdgip.ref.Append("project"))
}

// Region returns a reference to field region of google_iap_tunnel_dest_group_iam_policy.
func (itdgip iapTunnelDestGroupIamPolicyAttributes) Region() terra.StringValue {
	return terra.ReferenceAsString(itdgip.ref.Append("region"))
}

type iapTunnelDestGroupIamPolicyState struct {
	DestGroup  string `json:"dest_group"`
	Etag       string `json:"etag"`
	Id         string `json:"id"`
	PolicyData string `json:"policy_data"`
	Project    string `json:"project"`
	Region     string `json:"region"`
}
