// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package googlebeta

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	vmwareengineexternalaccessrule "github.com/golingon/terraproviders/googlebeta/5.24.0/vmwareengineexternalaccessrule"
	"io"
)

// NewVmwareengineExternalAccessRule creates a new instance of [VmwareengineExternalAccessRule].
func NewVmwareengineExternalAccessRule(name string, args VmwareengineExternalAccessRuleArgs) *VmwareengineExternalAccessRule {
	return &VmwareengineExternalAccessRule{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*VmwareengineExternalAccessRule)(nil)

// VmwareengineExternalAccessRule represents the Terraform resource google_vmwareengine_external_access_rule.
type VmwareengineExternalAccessRule struct {
	Name      string
	Args      VmwareengineExternalAccessRuleArgs
	state     *vmwareengineExternalAccessRuleState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [VmwareengineExternalAccessRule].
func (vear *VmwareengineExternalAccessRule) Type() string {
	return "google_vmwareengine_external_access_rule"
}

// LocalName returns the local name for [VmwareengineExternalAccessRule].
func (vear *VmwareengineExternalAccessRule) LocalName() string {
	return vear.Name
}

// Configuration returns the configuration (args) for [VmwareengineExternalAccessRule].
func (vear *VmwareengineExternalAccessRule) Configuration() interface{} {
	return vear.Args
}

// DependOn is used for other resources to depend on [VmwareengineExternalAccessRule].
func (vear *VmwareengineExternalAccessRule) DependOn() terra.Reference {
	return terra.ReferenceResource(vear)
}

// Dependencies returns the list of resources [VmwareengineExternalAccessRule] depends_on.
func (vear *VmwareengineExternalAccessRule) Dependencies() terra.Dependencies {
	return vear.DependsOn
}

// LifecycleManagement returns the lifecycle block for [VmwareengineExternalAccessRule].
func (vear *VmwareengineExternalAccessRule) LifecycleManagement() *terra.Lifecycle {
	return vear.Lifecycle
}

// Attributes returns the attributes for [VmwareengineExternalAccessRule].
func (vear *VmwareengineExternalAccessRule) Attributes() vmwareengineExternalAccessRuleAttributes {
	return vmwareengineExternalAccessRuleAttributes{ref: terra.ReferenceResource(vear)}
}

// ImportState imports the given attribute values into [VmwareengineExternalAccessRule]'s state.
func (vear *VmwareengineExternalAccessRule) ImportState(av io.Reader) error {
	vear.state = &vmwareengineExternalAccessRuleState{}
	if err := json.NewDecoder(av).Decode(vear.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", vear.Type(), vear.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [VmwareengineExternalAccessRule] has state.
func (vear *VmwareengineExternalAccessRule) State() (*vmwareengineExternalAccessRuleState, bool) {
	return vear.state, vear.state != nil
}

// StateMust returns the state for [VmwareengineExternalAccessRule]. Panics if the state is nil.
func (vear *VmwareengineExternalAccessRule) StateMust() *vmwareengineExternalAccessRuleState {
	if vear.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", vear.Type(), vear.LocalName()))
	}
	return vear.state
}

// VmwareengineExternalAccessRuleArgs contains the configurations for google_vmwareengine_external_access_rule.
type VmwareengineExternalAccessRuleArgs struct {
	// Action: string, required
	Action terra.StringValue `hcl:"action,attr" validate:"required"`
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// DestinationPorts: list of string, required
	DestinationPorts terra.ListValue[terra.StringValue] `hcl:"destination_ports,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// IpProtocol: string, required
	IpProtocol terra.StringValue `hcl:"ip_protocol,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Parent: string, required
	Parent terra.StringValue `hcl:"parent,attr" validate:"required"`
	// Priority: number, required
	Priority terra.NumberValue `hcl:"priority,attr" validate:"required"`
	// SourcePorts: list of string, required
	SourcePorts terra.ListValue[terra.StringValue] `hcl:"source_ports,attr" validate:"required"`
	// DestinationIpRanges: min=1
	DestinationIpRanges []vmwareengineexternalaccessrule.DestinationIpRanges `hcl:"destination_ip_ranges,block" validate:"min=1"`
	// SourceIpRanges: min=1
	SourceIpRanges []vmwareengineexternalaccessrule.SourceIpRanges `hcl:"source_ip_ranges,block" validate:"min=1"`
	// Timeouts: optional
	Timeouts *vmwareengineexternalaccessrule.Timeouts `hcl:"timeouts,block"`
}
type vmwareengineExternalAccessRuleAttributes struct {
	ref terra.Reference
}

// Action returns a reference to field action of google_vmwareengine_external_access_rule.
func (vear vmwareengineExternalAccessRuleAttributes) Action() terra.StringValue {
	return terra.ReferenceAsString(vear.ref.Append("action"))
}

// CreateTime returns a reference to field create_time of google_vmwareengine_external_access_rule.
func (vear vmwareengineExternalAccessRuleAttributes) CreateTime() terra.StringValue {
	return terra.ReferenceAsString(vear.ref.Append("create_time"))
}

// Description returns a reference to field description of google_vmwareengine_external_access_rule.
func (vear vmwareengineExternalAccessRuleAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(vear.ref.Append("description"))
}

// DestinationPorts returns a reference to field destination_ports of google_vmwareengine_external_access_rule.
func (vear vmwareengineExternalAccessRuleAttributes) DestinationPorts() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](vear.ref.Append("destination_ports"))
}

// Id returns a reference to field id of google_vmwareengine_external_access_rule.
func (vear vmwareengineExternalAccessRuleAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(vear.ref.Append("id"))
}

// IpProtocol returns a reference to field ip_protocol of google_vmwareengine_external_access_rule.
func (vear vmwareengineExternalAccessRuleAttributes) IpProtocol() terra.StringValue {
	return terra.ReferenceAsString(vear.ref.Append("ip_protocol"))
}

// Name returns a reference to field name of google_vmwareengine_external_access_rule.
func (vear vmwareengineExternalAccessRuleAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(vear.ref.Append("name"))
}

// Parent returns a reference to field parent of google_vmwareengine_external_access_rule.
func (vear vmwareengineExternalAccessRuleAttributes) Parent() terra.StringValue {
	return terra.ReferenceAsString(vear.ref.Append("parent"))
}

// Priority returns a reference to field priority of google_vmwareengine_external_access_rule.
func (vear vmwareengineExternalAccessRuleAttributes) Priority() terra.NumberValue {
	return terra.ReferenceAsNumber(vear.ref.Append("priority"))
}

// SourcePorts returns a reference to field source_ports of google_vmwareengine_external_access_rule.
func (vear vmwareengineExternalAccessRuleAttributes) SourcePorts() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](vear.ref.Append("source_ports"))
}

// State returns a reference to field state of google_vmwareengine_external_access_rule.
func (vear vmwareengineExternalAccessRuleAttributes) State() terra.StringValue {
	return terra.ReferenceAsString(vear.ref.Append("state"))
}

// Uid returns a reference to field uid of google_vmwareengine_external_access_rule.
func (vear vmwareengineExternalAccessRuleAttributes) Uid() terra.StringValue {
	return terra.ReferenceAsString(vear.ref.Append("uid"))
}

// UpdateTime returns a reference to field update_time of google_vmwareengine_external_access_rule.
func (vear vmwareengineExternalAccessRuleAttributes) UpdateTime() terra.StringValue {
	return terra.ReferenceAsString(vear.ref.Append("update_time"))
}

func (vear vmwareengineExternalAccessRuleAttributes) DestinationIpRanges() terra.ListValue[vmwareengineexternalaccessrule.DestinationIpRangesAttributes] {
	return terra.ReferenceAsList[vmwareengineexternalaccessrule.DestinationIpRangesAttributes](vear.ref.Append("destination_ip_ranges"))
}

func (vear vmwareengineExternalAccessRuleAttributes) SourceIpRanges() terra.ListValue[vmwareengineexternalaccessrule.SourceIpRangesAttributes] {
	return terra.ReferenceAsList[vmwareengineexternalaccessrule.SourceIpRangesAttributes](vear.ref.Append("source_ip_ranges"))
}

func (vear vmwareengineExternalAccessRuleAttributes) Timeouts() vmwareengineexternalaccessrule.TimeoutsAttributes {
	return terra.ReferenceAsSingle[vmwareengineexternalaccessrule.TimeoutsAttributes](vear.ref.Append("timeouts"))
}

type vmwareengineExternalAccessRuleState struct {
	Action              string                                                    `json:"action"`
	CreateTime          string                                                    `json:"create_time"`
	Description         string                                                    `json:"description"`
	DestinationPorts    []string                                                  `json:"destination_ports"`
	Id                  string                                                    `json:"id"`
	IpProtocol          string                                                    `json:"ip_protocol"`
	Name                string                                                    `json:"name"`
	Parent              string                                                    `json:"parent"`
	Priority            float64                                                   `json:"priority"`
	SourcePorts         []string                                                  `json:"source_ports"`
	State               string                                                    `json:"state"`
	Uid                 string                                                    `json:"uid"`
	UpdateTime          string                                                    `json:"update_time"`
	DestinationIpRanges []vmwareengineexternalaccessrule.DestinationIpRangesState `json:"destination_ip_ranges"`
	SourceIpRanges      []vmwareengineexternalaccessrule.SourceIpRangesState      `json:"source_ip_ranges"`
	Timeouts            *vmwareengineexternalaccessrule.TimeoutsState             `json:"timeouts"`
}
