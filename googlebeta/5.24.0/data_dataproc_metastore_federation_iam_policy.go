// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package googlebeta

import "github.com/golingon/lingon/pkg/terra"

// NewDataDataprocMetastoreFederationIamPolicy creates a new instance of [DataDataprocMetastoreFederationIamPolicy].
func NewDataDataprocMetastoreFederationIamPolicy(name string, args DataDataprocMetastoreFederationIamPolicyArgs) *DataDataprocMetastoreFederationIamPolicy {
	return &DataDataprocMetastoreFederationIamPolicy{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataDataprocMetastoreFederationIamPolicy)(nil)

// DataDataprocMetastoreFederationIamPolicy represents the Terraform data resource google_dataproc_metastore_federation_iam_policy.
type DataDataprocMetastoreFederationIamPolicy struct {
	Name string
	Args DataDataprocMetastoreFederationIamPolicyArgs
}

// DataSource returns the Terraform object type for [DataDataprocMetastoreFederationIamPolicy].
func (dmfip *DataDataprocMetastoreFederationIamPolicy) DataSource() string {
	return "google_dataproc_metastore_federation_iam_policy"
}

// LocalName returns the local name for [DataDataprocMetastoreFederationIamPolicy].
func (dmfip *DataDataprocMetastoreFederationIamPolicy) LocalName() string {
	return dmfip.Name
}

// Configuration returns the configuration (args) for [DataDataprocMetastoreFederationIamPolicy].
func (dmfip *DataDataprocMetastoreFederationIamPolicy) Configuration() interface{} {
	return dmfip.Args
}

// Attributes returns the attributes for [DataDataprocMetastoreFederationIamPolicy].
func (dmfip *DataDataprocMetastoreFederationIamPolicy) Attributes() dataDataprocMetastoreFederationIamPolicyAttributes {
	return dataDataprocMetastoreFederationIamPolicyAttributes{ref: terra.ReferenceDataResource(dmfip)}
}

// DataDataprocMetastoreFederationIamPolicyArgs contains the configurations for google_dataproc_metastore_federation_iam_policy.
type DataDataprocMetastoreFederationIamPolicyArgs struct {
	// FederationId: string, required
	FederationId terra.StringValue `hcl:"federation_id,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Location: string, optional
	Location terra.StringValue `hcl:"location,attr"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
}
type dataDataprocMetastoreFederationIamPolicyAttributes struct {
	ref terra.Reference
}

// Etag returns a reference to field etag of google_dataproc_metastore_federation_iam_policy.
func (dmfip dataDataprocMetastoreFederationIamPolicyAttributes) Etag() terra.StringValue {
	return terra.ReferenceAsString(dmfip.ref.Append("etag"))
}

// FederationId returns a reference to field federation_id of google_dataproc_metastore_federation_iam_policy.
func (dmfip dataDataprocMetastoreFederationIamPolicyAttributes) FederationId() terra.StringValue {
	return terra.ReferenceAsString(dmfip.ref.Append("federation_id"))
}

// Id returns a reference to field id of google_dataproc_metastore_federation_iam_policy.
func (dmfip dataDataprocMetastoreFederationIamPolicyAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(dmfip.ref.Append("id"))
}

// Location returns a reference to field location of google_dataproc_metastore_federation_iam_policy.
func (dmfip dataDataprocMetastoreFederationIamPolicyAttributes) Location() terra.StringValue {
	return terra.ReferenceAsString(dmfip.ref.Append("location"))
}

// PolicyData returns a reference to field policy_data of google_dataproc_metastore_federation_iam_policy.
func (dmfip dataDataprocMetastoreFederationIamPolicyAttributes) PolicyData() terra.StringValue {
	return terra.ReferenceAsString(dmfip.ref.Append("policy_data"))
}

// Project returns a reference to field project of google_dataproc_metastore_federation_iam_policy.
func (dmfip dataDataprocMetastoreFederationIamPolicyAttributes) Project() terra.StringValue {
	return terra.ReferenceAsString(dmfip.ref.Append("project"))
}
