// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package googlebeta

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// NewServiceDirectoryNamespaceIamPolicy creates a new instance of [ServiceDirectoryNamespaceIamPolicy].
func NewServiceDirectoryNamespaceIamPolicy(name string, args ServiceDirectoryNamespaceIamPolicyArgs) *ServiceDirectoryNamespaceIamPolicy {
	return &ServiceDirectoryNamespaceIamPolicy{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*ServiceDirectoryNamespaceIamPolicy)(nil)

// ServiceDirectoryNamespaceIamPolicy represents the Terraform resource google_service_directory_namespace_iam_policy.
type ServiceDirectoryNamespaceIamPolicy struct {
	Name      string
	Args      ServiceDirectoryNamespaceIamPolicyArgs
	state     *serviceDirectoryNamespaceIamPolicyState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [ServiceDirectoryNamespaceIamPolicy].
func (sdnip *ServiceDirectoryNamespaceIamPolicy) Type() string {
	return "google_service_directory_namespace_iam_policy"
}

// LocalName returns the local name for [ServiceDirectoryNamespaceIamPolicy].
func (sdnip *ServiceDirectoryNamespaceIamPolicy) LocalName() string {
	return sdnip.Name
}

// Configuration returns the configuration (args) for [ServiceDirectoryNamespaceIamPolicy].
func (sdnip *ServiceDirectoryNamespaceIamPolicy) Configuration() interface{} {
	return sdnip.Args
}

// DependOn is used for other resources to depend on [ServiceDirectoryNamespaceIamPolicy].
func (sdnip *ServiceDirectoryNamespaceIamPolicy) DependOn() terra.Reference {
	return terra.ReferenceResource(sdnip)
}

// Dependencies returns the list of resources [ServiceDirectoryNamespaceIamPolicy] depends_on.
func (sdnip *ServiceDirectoryNamespaceIamPolicy) Dependencies() terra.Dependencies {
	return sdnip.DependsOn
}

// LifecycleManagement returns the lifecycle block for [ServiceDirectoryNamespaceIamPolicy].
func (sdnip *ServiceDirectoryNamespaceIamPolicy) LifecycleManagement() *terra.Lifecycle {
	return sdnip.Lifecycle
}

// Attributes returns the attributes for [ServiceDirectoryNamespaceIamPolicy].
func (sdnip *ServiceDirectoryNamespaceIamPolicy) Attributes() serviceDirectoryNamespaceIamPolicyAttributes {
	return serviceDirectoryNamespaceIamPolicyAttributes{ref: terra.ReferenceResource(sdnip)}
}

// ImportState imports the given attribute values into [ServiceDirectoryNamespaceIamPolicy]'s state.
func (sdnip *ServiceDirectoryNamespaceIamPolicy) ImportState(av io.Reader) error {
	sdnip.state = &serviceDirectoryNamespaceIamPolicyState{}
	if err := json.NewDecoder(av).Decode(sdnip.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", sdnip.Type(), sdnip.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [ServiceDirectoryNamespaceIamPolicy] has state.
func (sdnip *ServiceDirectoryNamespaceIamPolicy) State() (*serviceDirectoryNamespaceIamPolicyState, bool) {
	return sdnip.state, sdnip.state != nil
}

// StateMust returns the state for [ServiceDirectoryNamespaceIamPolicy]. Panics if the state is nil.
func (sdnip *ServiceDirectoryNamespaceIamPolicy) StateMust() *serviceDirectoryNamespaceIamPolicyState {
	if sdnip.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", sdnip.Type(), sdnip.LocalName()))
	}
	return sdnip.state
}

// ServiceDirectoryNamespaceIamPolicyArgs contains the configurations for google_service_directory_namespace_iam_policy.
type ServiceDirectoryNamespaceIamPolicyArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// PolicyData: string, required
	PolicyData terra.StringValue `hcl:"policy_data,attr" validate:"required"`
}
type serviceDirectoryNamespaceIamPolicyAttributes struct {
	ref terra.Reference
}

// Etag returns a reference to field etag of google_service_directory_namespace_iam_policy.
func (sdnip serviceDirectoryNamespaceIamPolicyAttributes) Etag() terra.StringValue {
	return terra.ReferenceAsString(sdnip.ref.Append("etag"))
}

// Id returns a reference to field id of google_service_directory_namespace_iam_policy.
func (sdnip serviceDirectoryNamespaceIamPolicyAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(sdnip.ref.Append("id"))
}

// Name returns a reference to field name of google_service_directory_namespace_iam_policy.
func (sdnip serviceDirectoryNamespaceIamPolicyAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(sdnip.ref.Append("name"))
}

// PolicyData returns a reference to field policy_data of google_service_directory_namespace_iam_policy.
func (sdnip serviceDirectoryNamespaceIamPolicyAttributes) PolicyData() terra.StringValue {
	return terra.ReferenceAsString(sdnip.ref.Append("policy_data"))
}

type serviceDirectoryNamespaceIamPolicyState struct {
	Etag       string `json:"etag"`
	Id         string `json:"id"`
	Name       string `json:"name"`
	PolicyData string `json:"policy_data"`
}
