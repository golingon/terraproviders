// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package googlebeta

import "github.com/golingon/lingon/pkg/terra"

// NewDataCloudfunctions2FunctionIamPolicy creates a new instance of [DataCloudfunctions2FunctionIamPolicy].
func NewDataCloudfunctions2FunctionIamPolicy(name string, args DataCloudfunctions2FunctionIamPolicyArgs) *DataCloudfunctions2FunctionIamPolicy {
	return &DataCloudfunctions2FunctionIamPolicy{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataCloudfunctions2FunctionIamPolicy)(nil)

// DataCloudfunctions2FunctionIamPolicy represents the Terraform data resource google_cloudfunctions2_function_iam_policy.
type DataCloudfunctions2FunctionIamPolicy struct {
	Name string
	Args DataCloudfunctions2FunctionIamPolicyArgs
}

// DataSource returns the Terraform object type for [DataCloudfunctions2FunctionIamPolicy].
func (cfip *DataCloudfunctions2FunctionIamPolicy) DataSource() string {
	return "google_cloudfunctions2_function_iam_policy"
}

// LocalName returns the local name for [DataCloudfunctions2FunctionIamPolicy].
func (cfip *DataCloudfunctions2FunctionIamPolicy) LocalName() string {
	return cfip.Name
}

// Configuration returns the configuration (args) for [DataCloudfunctions2FunctionIamPolicy].
func (cfip *DataCloudfunctions2FunctionIamPolicy) Configuration() interface{} {
	return cfip.Args
}

// Attributes returns the attributes for [DataCloudfunctions2FunctionIamPolicy].
func (cfip *DataCloudfunctions2FunctionIamPolicy) Attributes() dataCloudfunctions2FunctionIamPolicyAttributes {
	return dataCloudfunctions2FunctionIamPolicyAttributes{ref: terra.ReferenceDataResource(cfip)}
}

// DataCloudfunctions2FunctionIamPolicyArgs contains the configurations for google_cloudfunctions2_function_iam_policy.
type DataCloudfunctions2FunctionIamPolicyArgs struct {
	// CloudFunction: string, required
	CloudFunction terra.StringValue `hcl:"cloud_function,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Location: string, optional
	Location terra.StringValue `hcl:"location,attr"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
}
type dataCloudfunctions2FunctionIamPolicyAttributes struct {
	ref terra.Reference
}

// CloudFunction returns a reference to field cloud_function of google_cloudfunctions2_function_iam_policy.
func (cfip dataCloudfunctions2FunctionIamPolicyAttributes) CloudFunction() terra.StringValue {
	return terra.ReferenceAsString(cfip.ref.Append("cloud_function"))
}

// Etag returns a reference to field etag of google_cloudfunctions2_function_iam_policy.
func (cfip dataCloudfunctions2FunctionIamPolicyAttributes) Etag() terra.StringValue {
	return terra.ReferenceAsString(cfip.ref.Append("etag"))
}

// Id returns a reference to field id of google_cloudfunctions2_function_iam_policy.
func (cfip dataCloudfunctions2FunctionIamPolicyAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(cfip.ref.Append("id"))
}

// Location returns a reference to field location of google_cloudfunctions2_function_iam_policy.
func (cfip dataCloudfunctions2FunctionIamPolicyAttributes) Location() terra.StringValue {
	return terra.ReferenceAsString(cfip.ref.Append("location"))
}

// PolicyData returns a reference to field policy_data of google_cloudfunctions2_function_iam_policy.
func (cfip dataCloudfunctions2FunctionIamPolicyAttributes) PolicyData() terra.StringValue {
	return terra.ReferenceAsString(cfip.ref.Append("policy_data"))
}

// Project returns a reference to field project of google_cloudfunctions2_function_iam_policy.
func (cfip dataCloudfunctions2FunctionIamPolicyAttributes) Project() terra.StringValue {
	return terra.ReferenceAsString(cfip.ref.Append("project"))
}
