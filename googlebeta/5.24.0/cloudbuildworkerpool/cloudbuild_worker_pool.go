// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package cloudbuildworkerpool

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type NetworkConfig struct {
	// PeeredNetwork: string, required
	PeeredNetwork terra.StringValue `hcl:"peered_network,attr" validate:"required"`
	// PeeredNetworkIpRange: string, optional
	PeeredNetworkIpRange terra.StringValue `hcl:"peered_network_ip_range,attr"`
}

type Timeouts struct {
	// Create: string, optional
	Create terra.StringValue `hcl:"create,attr"`
	// Delete: string, optional
	Delete terra.StringValue `hcl:"delete,attr"`
	// Update: string, optional
	Update terra.StringValue `hcl:"update,attr"`
}

type WorkerConfig struct {
	// DiskSizeGb: number, optional
	DiskSizeGb terra.NumberValue `hcl:"disk_size_gb,attr"`
	// MachineType: string, optional
	MachineType terra.StringValue `hcl:"machine_type,attr"`
	// NoExternalIp: bool, optional
	NoExternalIp terra.BoolValue `hcl:"no_external_ip,attr"`
}

type NetworkConfigAttributes struct {
	ref terra.Reference
}

func (nc NetworkConfigAttributes) InternalRef() (terra.Reference, error) {
	return nc.ref, nil
}

func (nc NetworkConfigAttributes) InternalWithRef(ref terra.Reference) NetworkConfigAttributes {
	return NetworkConfigAttributes{ref: ref}
}

func (nc NetworkConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return nc.ref.InternalTokens()
}

func (nc NetworkConfigAttributes) PeeredNetwork() terra.StringValue {
	return terra.ReferenceAsString(nc.ref.Append("peered_network"))
}

func (nc NetworkConfigAttributes) PeeredNetworkIpRange() terra.StringValue {
	return terra.ReferenceAsString(nc.ref.Append("peered_network_ip_range"))
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("create"))
}

func (t TimeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("delete"))
}

func (t TimeoutsAttributes) Update() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("update"))
}

type WorkerConfigAttributes struct {
	ref terra.Reference
}

func (wc WorkerConfigAttributes) InternalRef() (terra.Reference, error) {
	return wc.ref, nil
}

func (wc WorkerConfigAttributes) InternalWithRef(ref terra.Reference) WorkerConfigAttributes {
	return WorkerConfigAttributes{ref: ref}
}

func (wc WorkerConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return wc.ref.InternalTokens()
}

func (wc WorkerConfigAttributes) DiskSizeGb() terra.NumberValue {
	return terra.ReferenceAsNumber(wc.ref.Append("disk_size_gb"))
}

func (wc WorkerConfigAttributes) MachineType() terra.StringValue {
	return terra.ReferenceAsString(wc.ref.Append("machine_type"))
}

func (wc WorkerConfigAttributes) NoExternalIp() terra.BoolValue {
	return terra.ReferenceAsBool(wc.ref.Append("no_external_ip"))
}

type NetworkConfigState struct {
	PeeredNetwork        string `json:"peered_network"`
	PeeredNetworkIpRange string `json:"peered_network_ip_range"`
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
	Update string `json:"update"`
}

type WorkerConfigState struct {
	DiskSizeGb   float64 `json:"disk_size_gb"`
	MachineType  string  `json:"machine_type"`
	NoExternalIp bool    `json:"no_external_ip"`
}
