// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package googlebeta

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	vertexaiendpointiammember "github.com/golingon/terraproviders/googlebeta/5.24.0/vertexaiendpointiammember"
	"io"
)

// NewVertexAiEndpointIamMember creates a new instance of [VertexAiEndpointIamMember].
func NewVertexAiEndpointIamMember(name string, args VertexAiEndpointIamMemberArgs) *VertexAiEndpointIamMember {
	return &VertexAiEndpointIamMember{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*VertexAiEndpointIamMember)(nil)

// VertexAiEndpointIamMember represents the Terraform resource google_vertex_ai_endpoint_iam_member.
type VertexAiEndpointIamMember struct {
	Name      string
	Args      VertexAiEndpointIamMemberArgs
	state     *vertexAiEndpointIamMemberState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [VertexAiEndpointIamMember].
func (vaeim *VertexAiEndpointIamMember) Type() string {
	return "google_vertex_ai_endpoint_iam_member"
}

// LocalName returns the local name for [VertexAiEndpointIamMember].
func (vaeim *VertexAiEndpointIamMember) LocalName() string {
	return vaeim.Name
}

// Configuration returns the configuration (args) for [VertexAiEndpointIamMember].
func (vaeim *VertexAiEndpointIamMember) Configuration() interface{} {
	return vaeim.Args
}

// DependOn is used for other resources to depend on [VertexAiEndpointIamMember].
func (vaeim *VertexAiEndpointIamMember) DependOn() terra.Reference {
	return terra.ReferenceResource(vaeim)
}

// Dependencies returns the list of resources [VertexAiEndpointIamMember] depends_on.
func (vaeim *VertexAiEndpointIamMember) Dependencies() terra.Dependencies {
	return vaeim.DependsOn
}

// LifecycleManagement returns the lifecycle block for [VertexAiEndpointIamMember].
func (vaeim *VertexAiEndpointIamMember) LifecycleManagement() *terra.Lifecycle {
	return vaeim.Lifecycle
}

// Attributes returns the attributes for [VertexAiEndpointIamMember].
func (vaeim *VertexAiEndpointIamMember) Attributes() vertexAiEndpointIamMemberAttributes {
	return vertexAiEndpointIamMemberAttributes{ref: terra.ReferenceResource(vaeim)}
}

// ImportState imports the given attribute values into [VertexAiEndpointIamMember]'s state.
func (vaeim *VertexAiEndpointIamMember) ImportState(av io.Reader) error {
	vaeim.state = &vertexAiEndpointIamMemberState{}
	if err := json.NewDecoder(av).Decode(vaeim.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", vaeim.Type(), vaeim.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [VertexAiEndpointIamMember] has state.
func (vaeim *VertexAiEndpointIamMember) State() (*vertexAiEndpointIamMemberState, bool) {
	return vaeim.state, vaeim.state != nil
}

// StateMust returns the state for [VertexAiEndpointIamMember]. Panics if the state is nil.
func (vaeim *VertexAiEndpointIamMember) StateMust() *vertexAiEndpointIamMemberState {
	if vaeim.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", vaeim.Type(), vaeim.LocalName()))
	}
	return vaeim.state
}

// VertexAiEndpointIamMemberArgs contains the configurations for google_vertex_ai_endpoint_iam_member.
type VertexAiEndpointIamMemberArgs struct {
	// Endpoint: string, required
	Endpoint terra.StringValue `hcl:"endpoint,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Location: string, optional
	Location terra.StringValue `hcl:"location,attr"`
	// Member: string, required
	Member terra.StringValue `hcl:"member,attr" validate:"required"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
	// Role: string, required
	Role terra.StringValue `hcl:"role,attr" validate:"required"`
	// Condition: optional
	Condition *vertexaiendpointiammember.Condition `hcl:"condition,block"`
}
type vertexAiEndpointIamMemberAttributes struct {
	ref terra.Reference
}

// Endpoint returns a reference to field endpoint of google_vertex_ai_endpoint_iam_member.
func (vaeim vertexAiEndpointIamMemberAttributes) Endpoint() terra.StringValue {
	return terra.ReferenceAsString(vaeim.ref.Append("endpoint"))
}

// Etag returns a reference to field etag of google_vertex_ai_endpoint_iam_member.
func (vaeim vertexAiEndpointIamMemberAttributes) Etag() terra.StringValue {
	return terra.ReferenceAsString(vaeim.ref.Append("etag"))
}

// Id returns a reference to field id of google_vertex_ai_endpoint_iam_member.
func (vaeim vertexAiEndpointIamMemberAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(vaeim.ref.Append("id"))
}

// Location returns a reference to field location of google_vertex_ai_endpoint_iam_member.
func (vaeim vertexAiEndpointIamMemberAttributes) Location() terra.StringValue {
	return terra.ReferenceAsString(vaeim.ref.Append("location"))
}

// Member returns a reference to field member of google_vertex_ai_endpoint_iam_member.
func (vaeim vertexAiEndpointIamMemberAttributes) Member() terra.StringValue {
	return terra.ReferenceAsString(vaeim.ref.Append("member"))
}

// Project returns a reference to field project of google_vertex_ai_endpoint_iam_member.
func (vaeim vertexAiEndpointIamMemberAttributes) Project() terra.StringValue {
	return terra.ReferenceAsString(vaeim.ref.Append("project"))
}

// Role returns a reference to field role of google_vertex_ai_endpoint_iam_member.
func (vaeim vertexAiEndpointIamMemberAttributes) Role() terra.StringValue {
	return terra.ReferenceAsString(vaeim.ref.Append("role"))
}

func (vaeim vertexAiEndpointIamMemberAttributes) Condition() terra.ListValue[vertexaiendpointiammember.ConditionAttributes] {
	return terra.ReferenceAsList[vertexaiendpointiammember.ConditionAttributes](vaeim.ref.Append("condition"))
}

type vertexAiEndpointIamMemberState struct {
	Endpoint  string                                     `json:"endpoint"`
	Etag      string                                     `json:"etag"`
	Id        string                                     `json:"id"`
	Location  string                                     `json:"location"`
	Member    string                                     `json:"member"`
	Project   string                                     `json:"project"`
	Role      string                                     `json:"role"`
	Condition []vertexaiendpointiammember.ConditionState `json:"condition"`
}
