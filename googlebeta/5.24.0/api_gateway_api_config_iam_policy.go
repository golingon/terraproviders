// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package googlebeta

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// NewApiGatewayApiConfigIamPolicy creates a new instance of [ApiGatewayApiConfigIamPolicy].
func NewApiGatewayApiConfigIamPolicy(name string, args ApiGatewayApiConfigIamPolicyArgs) *ApiGatewayApiConfigIamPolicy {
	return &ApiGatewayApiConfigIamPolicy{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*ApiGatewayApiConfigIamPolicy)(nil)

// ApiGatewayApiConfigIamPolicy represents the Terraform resource google_api_gateway_api_config_iam_policy.
type ApiGatewayApiConfigIamPolicy struct {
	Name      string
	Args      ApiGatewayApiConfigIamPolicyArgs
	state     *apiGatewayApiConfigIamPolicyState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [ApiGatewayApiConfigIamPolicy].
func (agacip *ApiGatewayApiConfigIamPolicy) Type() string {
	return "google_api_gateway_api_config_iam_policy"
}

// LocalName returns the local name for [ApiGatewayApiConfigIamPolicy].
func (agacip *ApiGatewayApiConfigIamPolicy) LocalName() string {
	return agacip.Name
}

// Configuration returns the configuration (args) for [ApiGatewayApiConfigIamPolicy].
func (agacip *ApiGatewayApiConfigIamPolicy) Configuration() interface{} {
	return agacip.Args
}

// DependOn is used for other resources to depend on [ApiGatewayApiConfigIamPolicy].
func (agacip *ApiGatewayApiConfigIamPolicy) DependOn() terra.Reference {
	return terra.ReferenceResource(agacip)
}

// Dependencies returns the list of resources [ApiGatewayApiConfigIamPolicy] depends_on.
func (agacip *ApiGatewayApiConfigIamPolicy) Dependencies() terra.Dependencies {
	return agacip.DependsOn
}

// LifecycleManagement returns the lifecycle block for [ApiGatewayApiConfigIamPolicy].
func (agacip *ApiGatewayApiConfigIamPolicy) LifecycleManagement() *terra.Lifecycle {
	return agacip.Lifecycle
}

// Attributes returns the attributes for [ApiGatewayApiConfigIamPolicy].
func (agacip *ApiGatewayApiConfigIamPolicy) Attributes() apiGatewayApiConfigIamPolicyAttributes {
	return apiGatewayApiConfigIamPolicyAttributes{ref: terra.ReferenceResource(agacip)}
}

// ImportState imports the given attribute values into [ApiGatewayApiConfigIamPolicy]'s state.
func (agacip *ApiGatewayApiConfigIamPolicy) ImportState(av io.Reader) error {
	agacip.state = &apiGatewayApiConfigIamPolicyState{}
	if err := json.NewDecoder(av).Decode(agacip.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", agacip.Type(), agacip.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [ApiGatewayApiConfigIamPolicy] has state.
func (agacip *ApiGatewayApiConfigIamPolicy) State() (*apiGatewayApiConfigIamPolicyState, bool) {
	return agacip.state, agacip.state != nil
}

// StateMust returns the state for [ApiGatewayApiConfigIamPolicy]. Panics if the state is nil.
func (agacip *ApiGatewayApiConfigIamPolicy) StateMust() *apiGatewayApiConfigIamPolicyState {
	if agacip.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", agacip.Type(), agacip.LocalName()))
	}
	return agacip.state
}

// ApiGatewayApiConfigIamPolicyArgs contains the configurations for google_api_gateway_api_config_iam_policy.
type ApiGatewayApiConfigIamPolicyArgs struct {
	// Api: string, required
	Api terra.StringValue `hcl:"api,attr" validate:"required"`
	// ApiConfig: string, required
	ApiConfig terra.StringValue `hcl:"api_config,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// PolicyData: string, required
	PolicyData terra.StringValue `hcl:"policy_data,attr" validate:"required"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
}
type apiGatewayApiConfigIamPolicyAttributes struct {
	ref terra.Reference
}

// Api returns a reference to field api of google_api_gateway_api_config_iam_policy.
func (agacip apiGatewayApiConfigIamPolicyAttributes) Api() terra.StringValue {
	return terra.ReferenceAsString(agacip.ref.Append("api"))
}

// ApiConfig returns a reference to field api_config of google_api_gateway_api_config_iam_policy.
func (agacip apiGatewayApiConfigIamPolicyAttributes) ApiConfig() terra.StringValue {
	return terra.ReferenceAsString(agacip.ref.Append("api_config"))
}

// Etag returns a reference to field etag of google_api_gateway_api_config_iam_policy.
func (agacip apiGatewayApiConfigIamPolicyAttributes) Etag() terra.StringValue {
	return terra.ReferenceAsString(agacip.ref.Append("etag"))
}

// Id returns a reference to field id of google_api_gateway_api_config_iam_policy.
func (agacip apiGatewayApiConfigIamPolicyAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(agacip.ref.Append("id"))
}

// PolicyData returns a reference to field policy_data of google_api_gateway_api_config_iam_policy.
func (agacip apiGatewayApiConfigIamPolicyAttributes) PolicyData() terra.StringValue {
	return terra.ReferenceAsString(agacip.ref.Append("policy_data"))
}

// Project returns a reference to field project of google_api_gateway_api_config_iam_policy.
func (agacip apiGatewayApiConfigIamPolicyAttributes) Project() terra.StringValue {
	return terra.ReferenceAsString(agacip.ref.Append("project"))
}

type apiGatewayApiConfigIamPolicyState struct {
	Api        string `json:"api"`
	ApiConfig  string `json:"api_config"`
	Etag       string `json:"etag"`
	Id         string `json:"id"`
	PolicyData string `json:"policy_data"`
	Project    string `json:"project"`
}
