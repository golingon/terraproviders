// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package dialogflowcxentitytype

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type Entities struct {
	// Synonyms: list of string, optional
	Synonyms terra.ListValue[terra.StringValue] `hcl:"synonyms,attr"`
	// Value: string, optional
	Value terra.StringValue `hcl:"value,attr"`
}

type ExcludedPhrases struct {
	// Value: string, optional
	Value terra.StringValue `hcl:"value,attr"`
}

type Timeouts struct {
	// Create: string, optional
	Create terra.StringValue `hcl:"create,attr"`
	// Delete: string, optional
	Delete terra.StringValue `hcl:"delete,attr"`
	// Update: string, optional
	Update terra.StringValue `hcl:"update,attr"`
}

type EntitiesAttributes struct {
	ref terra.Reference
}

func (e EntitiesAttributes) InternalRef() (terra.Reference, error) {
	return e.ref, nil
}

func (e EntitiesAttributes) InternalWithRef(ref terra.Reference) EntitiesAttributes {
	return EntitiesAttributes{ref: ref}
}

func (e EntitiesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return e.ref.InternalTokens()
}

func (e EntitiesAttributes) Synonyms() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](e.ref.Append("synonyms"))
}

func (e EntitiesAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("value"))
}

type ExcludedPhrasesAttributes struct {
	ref terra.Reference
}

func (ep ExcludedPhrasesAttributes) InternalRef() (terra.Reference, error) {
	return ep.ref, nil
}

func (ep ExcludedPhrasesAttributes) InternalWithRef(ref terra.Reference) ExcludedPhrasesAttributes {
	return ExcludedPhrasesAttributes{ref: ref}
}

func (ep ExcludedPhrasesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ep.ref.InternalTokens()
}

func (ep ExcludedPhrasesAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(ep.ref.Append("value"))
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("create"))
}

func (t TimeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("delete"))
}

func (t TimeoutsAttributes) Update() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("update"))
}

type EntitiesState struct {
	Synonyms []string `json:"synonyms"`
	Value    string   `json:"value"`
}

type ExcludedPhrasesState struct {
	Value string `json:"value"`
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
	Update string `json:"update"`
}
