// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package googlebeta

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// NewGkeBackupRestorePlanIamPolicy creates a new instance of [GkeBackupRestorePlanIamPolicy].
func NewGkeBackupRestorePlanIamPolicy(name string, args GkeBackupRestorePlanIamPolicyArgs) *GkeBackupRestorePlanIamPolicy {
	return &GkeBackupRestorePlanIamPolicy{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*GkeBackupRestorePlanIamPolicy)(nil)

// GkeBackupRestorePlanIamPolicy represents the Terraform resource google_gke_backup_restore_plan_iam_policy.
type GkeBackupRestorePlanIamPolicy struct {
	Name      string
	Args      GkeBackupRestorePlanIamPolicyArgs
	state     *gkeBackupRestorePlanIamPolicyState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [GkeBackupRestorePlanIamPolicy].
func (gbrpip *GkeBackupRestorePlanIamPolicy) Type() string {
	return "google_gke_backup_restore_plan_iam_policy"
}

// LocalName returns the local name for [GkeBackupRestorePlanIamPolicy].
func (gbrpip *GkeBackupRestorePlanIamPolicy) LocalName() string {
	return gbrpip.Name
}

// Configuration returns the configuration (args) for [GkeBackupRestorePlanIamPolicy].
func (gbrpip *GkeBackupRestorePlanIamPolicy) Configuration() interface{} {
	return gbrpip.Args
}

// DependOn is used for other resources to depend on [GkeBackupRestorePlanIamPolicy].
func (gbrpip *GkeBackupRestorePlanIamPolicy) DependOn() terra.Reference {
	return terra.ReferenceResource(gbrpip)
}

// Dependencies returns the list of resources [GkeBackupRestorePlanIamPolicy] depends_on.
func (gbrpip *GkeBackupRestorePlanIamPolicy) Dependencies() terra.Dependencies {
	return gbrpip.DependsOn
}

// LifecycleManagement returns the lifecycle block for [GkeBackupRestorePlanIamPolicy].
func (gbrpip *GkeBackupRestorePlanIamPolicy) LifecycleManagement() *terra.Lifecycle {
	return gbrpip.Lifecycle
}

// Attributes returns the attributes for [GkeBackupRestorePlanIamPolicy].
func (gbrpip *GkeBackupRestorePlanIamPolicy) Attributes() gkeBackupRestorePlanIamPolicyAttributes {
	return gkeBackupRestorePlanIamPolicyAttributes{ref: terra.ReferenceResource(gbrpip)}
}

// ImportState imports the given attribute values into [GkeBackupRestorePlanIamPolicy]'s state.
func (gbrpip *GkeBackupRestorePlanIamPolicy) ImportState(av io.Reader) error {
	gbrpip.state = &gkeBackupRestorePlanIamPolicyState{}
	if err := json.NewDecoder(av).Decode(gbrpip.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", gbrpip.Type(), gbrpip.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [GkeBackupRestorePlanIamPolicy] has state.
func (gbrpip *GkeBackupRestorePlanIamPolicy) State() (*gkeBackupRestorePlanIamPolicyState, bool) {
	return gbrpip.state, gbrpip.state != nil
}

// StateMust returns the state for [GkeBackupRestorePlanIamPolicy]. Panics if the state is nil.
func (gbrpip *GkeBackupRestorePlanIamPolicy) StateMust() *gkeBackupRestorePlanIamPolicyState {
	if gbrpip.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", gbrpip.Type(), gbrpip.LocalName()))
	}
	return gbrpip.state
}

// GkeBackupRestorePlanIamPolicyArgs contains the configurations for google_gke_backup_restore_plan_iam_policy.
type GkeBackupRestorePlanIamPolicyArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Location: string, optional
	Location terra.StringValue `hcl:"location,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// PolicyData: string, required
	PolicyData terra.StringValue `hcl:"policy_data,attr" validate:"required"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
}
type gkeBackupRestorePlanIamPolicyAttributes struct {
	ref terra.Reference
}

// Etag returns a reference to field etag of google_gke_backup_restore_plan_iam_policy.
func (gbrpip gkeBackupRestorePlanIamPolicyAttributes) Etag() terra.StringValue {
	return terra.ReferenceAsString(gbrpip.ref.Append("etag"))
}

// Id returns a reference to field id of google_gke_backup_restore_plan_iam_policy.
func (gbrpip gkeBackupRestorePlanIamPolicyAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(gbrpip.ref.Append("id"))
}

// Location returns a reference to field location of google_gke_backup_restore_plan_iam_policy.
func (gbrpip gkeBackupRestorePlanIamPolicyAttributes) Location() terra.StringValue {
	return terra.ReferenceAsString(gbrpip.ref.Append("location"))
}

// Name returns a reference to field name of google_gke_backup_restore_plan_iam_policy.
func (gbrpip gkeBackupRestorePlanIamPolicyAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(gbrpip.ref.Append("name"))
}

// PolicyData returns a reference to field policy_data of google_gke_backup_restore_plan_iam_policy.
func (gbrpip gkeBackupRestorePlanIamPolicyAttributes) PolicyData() terra.StringValue {
	return terra.ReferenceAsString(gbrpip.ref.Append("policy_data"))
}

// Project returns a reference to field project of google_gke_backup_restore_plan_iam_policy.
func (gbrpip gkeBackupRestorePlanIamPolicyAttributes) Project() terra.StringValue {
	return terra.ReferenceAsString(gbrpip.ref.Append("project"))
}

type gkeBackupRestorePlanIamPolicyState struct {
	Etag       string `json:"etag"`
	Id         string `json:"id"`
	Location   string `json:"location"`
	Name       string `json:"name"`
	PolicyData string `json:"policy_data"`
	Project    string `json:"project"`
}
