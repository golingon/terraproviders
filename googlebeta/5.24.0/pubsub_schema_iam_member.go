// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package googlebeta

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	pubsubschemaiammember "github.com/golingon/terraproviders/googlebeta/5.24.0/pubsubschemaiammember"
	"io"
)

// NewPubsubSchemaIamMember creates a new instance of [PubsubSchemaIamMember].
func NewPubsubSchemaIamMember(name string, args PubsubSchemaIamMemberArgs) *PubsubSchemaIamMember {
	return &PubsubSchemaIamMember{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*PubsubSchemaIamMember)(nil)

// PubsubSchemaIamMember represents the Terraform resource google_pubsub_schema_iam_member.
type PubsubSchemaIamMember struct {
	Name      string
	Args      PubsubSchemaIamMemberArgs
	state     *pubsubSchemaIamMemberState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [PubsubSchemaIamMember].
func (psim *PubsubSchemaIamMember) Type() string {
	return "google_pubsub_schema_iam_member"
}

// LocalName returns the local name for [PubsubSchemaIamMember].
func (psim *PubsubSchemaIamMember) LocalName() string {
	return psim.Name
}

// Configuration returns the configuration (args) for [PubsubSchemaIamMember].
func (psim *PubsubSchemaIamMember) Configuration() interface{} {
	return psim.Args
}

// DependOn is used for other resources to depend on [PubsubSchemaIamMember].
func (psim *PubsubSchemaIamMember) DependOn() terra.Reference {
	return terra.ReferenceResource(psim)
}

// Dependencies returns the list of resources [PubsubSchemaIamMember] depends_on.
func (psim *PubsubSchemaIamMember) Dependencies() terra.Dependencies {
	return psim.DependsOn
}

// LifecycleManagement returns the lifecycle block for [PubsubSchemaIamMember].
func (psim *PubsubSchemaIamMember) LifecycleManagement() *terra.Lifecycle {
	return psim.Lifecycle
}

// Attributes returns the attributes for [PubsubSchemaIamMember].
func (psim *PubsubSchemaIamMember) Attributes() pubsubSchemaIamMemberAttributes {
	return pubsubSchemaIamMemberAttributes{ref: terra.ReferenceResource(psim)}
}

// ImportState imports the given attribute values into [PubsubSchemaIamMember]'s state.
func (psim *PubsubSchemaIamMember) ImportState(av io.Reader) error {
	psim.state = &pubsubSchemaIamMemberState{}
	if err := json.NewDecoder(av).Decode(psim.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", psim.Type(), psim.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [PubsubSchemaIamMember] has state.
func (psim *PubsubSchemaIamMember) State() (*pubsubSchemaIamMemberState, bool) {
	return psim.state, psim.state != nil
}

// StateMust returns the state for [PubsubSchemaIamMember]. Panics if the state is nil.
func (psim *PubsubSchemaIamMember) StateMust() *pubsubSchemaIamMemberState {
	if psim.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", psim.Type(), psim.LocalName()))
	}
	return psim.state
}

// PubsubSchemaIamMemberArgs contains the configurations for google_pubsub_schema_iam_member.
type PubsubSchemaIamMemberArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Member: string, required
	Member terra.StringValue `hcl:"member,attr" validate:"required"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
	// Role: string, required
	Role terra.StringValue `hcl:"role,attr" validate:"required"`
	// Schema: string, required
	Schema terra.StringValue `hcl:"schema,attr" validate:"required"`
	// Condition: optional
	Condition *pubsubschemaiammember.Condition `hcl:"condition,block"`
}
type pubsubSchemaIamMemberAttributes struct {
	ref terra.Reference
}

// Etag returns a reference to field etag of google_pubsub_schema_iam_member.
func (psim pubsubSchemaIamMemberAttributes) Etag() terra.StringValue {
	return terra.ReferenceAsString(psim.ref.Append("etag"))
}

// Id returns a reference to field id of google_pubsub_schema_iam_member.
func (psim pubsubSchemaIamMemberAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(psim.ref.Append("id"))
}

// Member returns a reference to field member of google_pubsub_schema_iam_member.
func (psim pubsubSchemaIamMemberAttributes) Member() terra.StringValue {
	return terra.ReferenceAsString(psim.ref.Append("member"))
}

// Project returns a reference to field project of google_pubsub_schema_iam_member.
func (psim pubsubSchemaIamMemberAttributes) Project() terra.StringValue {
	return terra.ReferenceAsString(psim.ref.Append("project"))
}

// Role returns a reference to field role of google_pubsub_schema_iam_member.
func (psim pubsubSchemaIamMemberAttributes) Role() terra.StringValue {
	return terra.ReferenceAsString(psim.ref.Append("role"))
}

// Schema returns a reference to field schema of google_pubsub_schema_iam_member.
func (psim pubsubSchemaIamMemberAttributes) Schema() terra.StringValue {
	return terra.ReferenceAsString(psim.ref.Append("schema"))
}

func (psim pubsubSchemaIamMemberAttributes) Condition() terra.ListValue[pubsubschemaiammember.ConditionAttributes] {
	return terra.ReferenceAsList[pubsubschemaiammember.ConditionAttributes](psim.ref.Append("condition"))
}

type pubsubSchemaIamMemberState struct {
	Etag      string                                 `json:"etag"`
	Id        string                                 `json:"id"`
	Member    string                                 `json:"member"`
	Project   string                                 `json:"project"`
	Role      string                                 `json:"role"`
	Schema    string                                 `json:"schema"`
	Condition []pubsubschemaiammember.ConditionState `json:"condition"`
}
