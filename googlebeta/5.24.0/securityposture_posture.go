// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package googlebeta

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	securitypostureposture "github.com/golingon/terraproviders/googlebeta/5.24.0/securitypostureposture"
	"io"
)

// NewSecurityposturePosture creates a new instance of [SecurityposturePosture].
func NewSecurityposturePosture(name string, args SecurityposturePostureArgs) *SecurityposturePosture {
	return &SecurityposturePosture{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*SecurityposturePosture)(nil)

// SecurityposturePosture represents the Terraform resource google_securityposture_posture.
type SecurityposturePosture struct {
	Name      string
	Args      SecurityposturePostureArgs
	state     *securityposturePostureState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [SecurityposturePosture].
func (sp *SecurityposturePosture) Type() string {
	return "google_securityposture_posture"
}

// LocalName returns the local name for [SecurityposturePosture].
func (sp *SecurityposturePosture) LocalName() string {
	return sp.Name
}

// Configuration returns the configuration (args) for [SecurityposturePosture].
func (sp *SecurityposturePosture) Configuration() interface{} {
	return sp.Args
}

// DependOn is used for other resources to depend on [SecurityposturePosture].
func (sp *SecurityposturePosture) DependOn() terra.Reference {
	return terra.ReferenceResource(sp)
}

// Dependencies returns the list of resources [SecurityposturePosture] depends_on.
func (sp *SecurityposturePosture) Dependencies() terra.Dependencies {
	return sp.DependsOn
}

// LifecycleManagement returns the lifecycle block for [SecurityposturePosture].
func (sp *SecurityposturePosture) LifecycleManagement() *terra.Lifecycle {
	return sp.Lifecycle
}

// Attributes returns the attributes for [SecurityposturePosture].
func (sp *SecurityposturePosture) Attributes() securityposturePostureAttributes {
	return securityposturePostureAttributes{ref: terra.ReferenceResource(sp)}
}

// ImportState imports the given attribute values into [SecurityposturePosture]'s state.
func (sp *SecurityposturePosture) ImportState(av io.Reader) error {
	sp.state = &securityposturePostureState{}
	if err := json.NewDecoder(av).Decode(sp.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", sp.Type(), sp.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [SecurityposturePosture] has state.
func (sp *SecurityposturePosture) State() (*securityposturePostureState, bool) {
	return sp.state, sp.state != nil
}

// StateMust returns the state for [SecurityposturePosture]. Panics if the state is nil.
func (sp *SecurityposturePosture) StateMust() *securityposturePostureState {
	if sp.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", sp.Type(), sp.LocalName()))
	}
	return sp.state
}

// SecurityposturePostureArgs contains the configurations for google_securityposture_posture.
type SecurityposturePostureArgs struct {
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Location: string, required
	Location terra.StringValue `hcl:"location,attr" validate:"required"`
	// Parent: string, required
	Parent terra.StringValue `hcl:"parent,attr" validate:"required"`
	// PostureId: string, required
	PostureId terra.StringValue `hcl:"posture_id,attr" validate:"required"`
	// State: string, required
	State terra.StringValue `hcl:"state,attr" validate:"required"`
	// PolicySets: min=1
	PolicySets []securitypostureposture.PolicySets `hcl:"policy_sets,block" validate:"min=1"`
	// Timeouts: optional
	Timeouts *securitypostureposture.Timeouts `hcl:"timeouts,block"`
}
type securityposturePostureAttributes struct {
	ref terra.Reference
}

// CreateTime returns a reference to field create_time of google_securityposture_posture.
func (sp securityposturePostureAttributes) CreateTime() terra.StringValue {
	return terra.ReferenceAsString(sp.ref.Append("create_time"))
}

// Description returns a reference to field description of google_securityposture_posture.
func (sp securityposturePostureAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(sp.ref.Append("description"))
}

// Etag returns a reference to field etag of google_securityposture_posture.
func (sp securityposturePostureAttributes) Etag() terra.StringValue {
	return terra.ReferenceAsString(sp.ref.Append("etag"))
}

// Id returns a reference to field id of google_securityposture_posture.
func (sp securityposturePostureAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(sp.ref.Append("id"))
}

// Location returns a reference to field location of google_securityposture_posture.
func (sp securityposturePostureAttributes) Location() terra.StringValue {
	return terra.ReferenceAsString(sp.ref.Append("location"))
}

// Name returns a reference to field name of google_securityposture_posture.
func (sp securityposturePostureAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(sp.ref.Append("name"))
}

// Parent returns a reference to field parent of google_securityposture_posture.
func (sp securityposturePostureAttributes) Parent() terra.StringValue {
	return terra.ReferenceAsString(sp.ref.Append("parent"))
}

// PostureId returns a reference to field posture_id of google_securityposture_posture.
func (sp securityposturePostureAttributes) PostureId() terra.StringValue {
	return terra.ReferenceAsString(sp.ref.Append("posture_id"))
}

// Reconciling returns a reference to field reconciling of google_securityposture_posture.
func (sp securityposturePostureAttributes) Reconciling() terra.BoolValue {
	return terra.ReferenceAsBool(sp.ref.Append("reconciling"))
}

// RevisionId returns a reference to field revision_id of google_securityposture_posture.
func (sp securityposturePostureAttributes) RevisionId() terra.StringValue {
	return terra.ReferenceAsString(sp.ref.Append("revision_id"))
}

// State returns a reference to field state of google_securityposture_posture.
func (sp securityposturePostureAttributes) State() terra.StringValue {
	return terra.ReferenceAsString(sp.ref.Append("state"))
}

// UpdateTime returns a reference to field update_time of google_securityposture_posture.
func (sp securityposturePostureAttributes) UpdateTime() terra.StringValue {
	return terra.ReferenceAsString(sp.ref.Append("update_time"))
}

func (sp securityposturePostureAttributes) PolicySets() terra.ListValue[securitypostureposture.PolicySetsAttributes] {
	return terra.ReferenceAsList[securitypostureposture.PolicySetsAttributes](sp.ref.Append("policy_sets"))
}

func (sp securityposturePostureAttributes) Timeouts() securitypostureposture.TimeoutsAttributes {
	return terra.ReferenceAsSingle[securitypostureposture.TimeoutsAttributes](sp.ref.Append("timeouts"))
}

type securityposturePostureState struct {
	CreateTime  string                                   `json:"create_time"`
	Description string                                   `json:"description"`
	Etag        string                                   `json:"etag"`
	Id          string                                   `json:"id"`
	Location    string                                   `json:"location"`
	Name        string                                   `json:"name"`
	Parent      string                                   `json:"parent"`
	PostureId   string                                   `json:"posture_id"`
	Reconciling bool                                     `json:"reconciling"`
	RevisionId  string                                   `json:"revision_id"`
	State       string                                   `json:"state"`
	UpdateTime  string                                   `json:"update_time"`
	PolicySets  []securitypostureposture.PolicySetsState `json:"policy_sets"`
	Timeouts    *securitypostureposture.TimeoutsState    `json:"timeouts"`
}
