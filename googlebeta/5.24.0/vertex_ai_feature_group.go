// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package googlebeta

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	vertexaifeaturegroup "github.com/golingon/terraproviders/googlebeta/5.24.0/vertexaifeaturegroup"
	"io"
)

// NewVertexAiFeatureGroup creates a new instance of [VertexAiFeatureGroup].
func NewVertexAiFeatureGroup(name string, args VertexAiFeatureGroupArgs) *VertexAiFeatureGroup {
	return &VertexAiFeatureGroup{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*VertexAiFeatureGroup)(nil)

// VertexAiFeatureGroup represents the Terraform resource google_vertex_ai_feature_group.
type VertexAiFeatureGroup struct {
	Name      string
	Args      VertexAiFeatureGroupArgs
	state     *vertexAiFeatureGroupState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [VertexAiFeatureGroup].
func (vafg *VertexAiFeatureGroup) Type() string {
	return "google_vertex_ai_feature_group"
}

// LocalName returns the local name for [VertexAiFeatureGroup].
func (vafg *VertexAiFeatureGroup) LocalName() string {
	return vafg.Name
}

// Configuration returns the configuration (args) for [VertexAiFeatureGroup].
func (vafg *VertexAiFeatureGroup) Configuration() interface{} {
	return vafg.Args
}

// DependOn is used for other resources to depend on [VertexAiFeatureGroup].
func (vafg *VertexAiFeatureGroup) DependOn() terra.Reference {
	return terra.ReferenceResource(vafg)
}

// Dependencies returns the list of resources [VertexAiFeatureGroup] depends_on.
func (vafg *VertexAiFeatureGroup) Dependencies() terra.Dependencies {
	return vafg.DependsOn
}

// LifecycleManagement returns the lifecycle block for [VertexAiFeatureGroup].
func (vafg *VertexAiFeatureGroup) LifecycleManagement() *terra.Lifecycle {
	return vafg.Lifecycle
}

// Attributes returns the attributes for [VertexAiFeatureGroup].
func (vafg *VertexAiFeatureGroup) Attributes() vertexAiFeatureGroupAttributes {
	return vertexAiFeatureGroupAttributes{ref: terra.ReferenceResource(vafg)}
}

// ImportState imports the given attribute values into [VertexAiFeatureGroup]'s state.
func (vafg *VertexAiFeatureGroup) ImportState(av io.Reader) error {
	vafg.state = &vertexAiFeatureGroupState{}
	if err := json.NewDecoder(av).Decode(vafg.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", vafg.Type(), vafg.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [VertexAiFeatureGroup] has state.
func (vafg *VertexAiFeatureGroup) State() (*vertexAiFeatureGroupState, bool) {
	return vafg.state, vafg.state != nil
}

// StateMust returns the state for [VertexAiFeatureGroup]. Panics if the state is nil.
func (vafg *VertexAiFeatureGroup) StateMust() *vertexAiFeatureGroupState {
	if vafg.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", vafg.Type(), vafg.LocalName()))
	}
	return vafg.state
}

// VertexAiFeatureGroupArgs contains the configurations for google_vertex_ai_feature_group.
type VertexAiFeatureGroupArgs struct {
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Labels: map of string, optional
	Labels terra.MapValue[terra.StringValue] `hcl:"labels,attr"`
	// Name: string, optional
	Name terra.StringValue `hcl:"name,attr"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
	// Region: string, optional
	Region terra.StringValue `hcl:"region,attr"`
	// BigQuery: optional
	BigQuery *vertexaifeaturegroup.BigQuery `hcl:"big_query,block"`
	// Timeouts: optional
	Timeouts *vertexaifeaturegroup.Timeouts `hcl:"timeouts,block"`
}
type vertexAiFeatureGroupAttributes struct {
	ref terra.Reference
}

// CreateTime returns a reference to field create_time of google_vertex_ai_feature_group.
func (vafg vertexAiFeatureGroupAttributes) CreateTime() terra.StringValue {
	return terra.ReferenceAsString(vafg.ref.Append("create_time"))
}

// Description returns a reference to field description of google_vertex_ai_feature_group.
func (vafg vertexAiFeatureGroupAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(vafg.ref.Append("description"))
}

// EffectiveLabels returns a reference to field effective_labels of google_vertex_ai_feature_group.
func (vafg vertexAiFeatureGroupAttributes) EffectiveLabels() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](vafg.ref.Append("effective_labels"))
}

// Etag returns a reference to field etag of google_vertex_ai_feature_group.
func (vafg vertexAiFeatureGroupAttributes) Etag() terra.StringValue {
	return terra.ReferenceAsString(vafg.ref.Append("etag"))
}

// Id returns a reference to field id of google_vertex_ai_feature_group.
func (vafg vertexAiFeatureGroupAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(vafg.ref.Append("id"))
}

// Labels returns a reference to field labels of google_vertex_ai_feature_group.
func (vafg vertexAiFeatureGroupAttributes) Labels() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](vafg.ref.Append("labels"))
}

// Name returns a reference to field name of google_vertex_ai_feature_group.
func (vafg vertexAiFeatureGroupAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(vafg.ref.Append("name"))
}

// Project returns a reference to field project of google_vertex_ai_feature_group.
func (vafg vertexAiFeatureGroupAttributes) Project() terra.StringValue {
	return terra.ReferenceAsString(vafg.ref.Append("project"))
}

// Region returns a reference to field region of google_vertex_ai_feature_group.
func (vafg vertexAiFeatureGroupAttributes) Region() terra.StringValue {
	return terra.ReferenceAsString(vafg.ref.Append("region"))
}

// TerraformLabels returns a reference to field terraform_labels of google_vertex_ai_feature_group.
func (vafg vertexAiFeatureGroupAttributes) TerraformLabels() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](vafg.ref.Append("terraform_labels"))
}

// UpdateTime returns a reference to field update_time of google_vertex_ai_feature_group.
func (vafg vertexAiFeatureGroupAttributes) UpdateTime() terra.StringValue {
	return terra.ReferenceAsString(vafg.ref.Append("update_time"))
}

func (vafg vertexAiFeatureGroupAttributes) BigQuery() terra.ListValue[vertexaifeaturegroup.BigQueryAttributes] {
	return terra.ReferenceAsList[vertexaifeaturegroup.BigQueryAttributes](vafg.ref.Append("big_query"))
}

func (vafg vertexAiFeatureGroupAttributes) Timeouts() vertexaifeaturegroup.TimeoutsAttributes {
	return terra.ReferenceAsSingle[vertexaifeaturegroup.TimeoutsAttributes](vafg.ref.Append("timeouts"))
}

type vertexAiFeatureGroupState struct {
	CreateTime      string                               `json:"create_time"`
	Description     string                               `json:"description"`
	EffectiveLabels map[string]string                    `json:"effective_labels"`
	Etag            string                               `json:"etag"`
	Id              string                               `json:"id"`
	Labels          map[string]string                    `json:"labels"`
	Name            string                               `json:"name"`
	Project         string                               `json:"project"`
	Region          string                               `json:"region"`
	TerraformLabels map[string]string                    `json:"terraform_labels"`
	UpdateTime      string                               `json:"update_time"`
	BigQuery        []vertexaifeaturegroup.BigQueryState `json:"big_query"`
	Timeouts        *vertexaifeaturegroup.TimeoutsState  `json:"timeouts"`
}
