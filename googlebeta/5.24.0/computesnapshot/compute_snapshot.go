// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package computesnapshot

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type SnapshotEncryptionKey struct {
	// KmsKeySelfLink: string, optional
	KmsKeySelfLink terra.StringValue `hcl:"kms_key_self_link,attr"`
	// KmsKeyServiceAccount: string, optional
	KmsKeyServiceAccount terra.StringValue `hcl:"kms_key_service_account,attr"`
	// RawKey: string, optional
	RawKey terra.StringValue `hcl:"raw_key,attr"`
}

type SourceDiskEncryptionKey struct {
	// KmsKeyServiceAccount: string, optional
	KmsKeyServiceAccount terra.StringValue `hcl:"kms_key_service_account,attr"`
	// RawKey: string, optional
	RawKey terra.StringValue `hcl:"raw_key,attr"`
}

type Timeouts struct {
	// Create: string, optional
	Create terra.StringValue `hcl:"create,attr"`
	// Delete: string, optional
	Delete terra.StringValue `hcl:"delete,attr"`
	// Update: string, optional
	Update terra.StringValue `hcl:"update,attr"`
}

type SnapshotEncryptionKeyAttributes struct {
	ref terra.Reference
}

func (sek SnapshotEncryptionKeyAttributes) InternalRef() (terra.Reference, error) {
	return sek.ref, nil
}

func (sek SnapshotEncryptionKeyAttributes) InternalWithRef(ref terra.Reference) SnapshotEncryptionKeyAttributes {
	return SnapshotEncryptionKeyAttributes{ref: ref}
}

func (sek SnapshotEncryptionKeyAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sek.ref.InternalTokens()
}

func (sek SnapshotEncryptionKeyAttributes) KmsKeySelfLink() terra.StringValue {
	return terra.ReferenceAsString(sek.ref.Append("kms_key_self_link"))
}

func (sek SnapshotEncryptionKeyAttributes) KmsKeyServiceAccount() terra.StringValue {
	return terra.ReferenceAsString(sek.ref.Append("kms_key_service_account"))
}

func (sek SnapshotEncryptionKeyAttributes) RawKey() terra.StringValue {
	return terra.ReferenceAsString(sek.ref.Append("raw_key"))
}

func (sek SnapshotEncryptionKeyAttributes) Sha256() terra.StringValue {
	return terra.ReferenceAsString(sek.ref.Append("sha256"))
}

type SourceDiskEncryptionKeyAttributes struct {
	ref terra.Reference
}

func (sdek SourceDiskEncryptionKeyAttributes) InternalRef() (terra.Reference, error) {
	return sdek.ref, nil
}

func (sdek SourceDiskEncryptionKeyAttributes) InternalWithRef(ref terra.Reference) SourceDiskEncryptionKeyAttributes {
	return SourceDiskEncryptionKeyAttributes{ref: ref}
}

func (sdek SourceDiskEncryptionKeyAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sdek.ref.InternalTokens()
}

func (sdek SourceDiskEncryptionKeyAttributes) KmsKeyServiceAccount() terra.StringValue {
	return terra.ReferenceAsString(sdek.ref.Append("kms_key_service_account"))
}

func (sdek SourceDiskEncryptionKeyAttributes) RawKey() terra.StringValue {
	return terra.ReferenceAsString(sdek.ref.Append("raw_key"))
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("create"))
}

func (t TimeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("delete"))
}

func (t TimeoutsAttributes) Update() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("update"))
}

type SnapshotEncryptionKeyState struct {
	KmsKeySelfLink       string `json:"kms_key_self_link"`
	KmsKeyServiceAccount string `json:"kms_key_service_account"`
	RawKey               string `json:"raw_key"`
	Sha256               string `json:"sha256"`
}

type SourceDiskEncryptionKeyState struct {
	KmsKeyServiceAccount string `json:"kms_key_service_account"`
	RawKey               string `json:"raw_key"`
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
	Update string `json:"update"`
}
