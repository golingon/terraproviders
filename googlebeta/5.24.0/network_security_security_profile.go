// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package googlebeta

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	networksecuritysecurityprofile "github.com/golingon/terraproviders/googlebeta/5.24.0/networksecuritysecurityprofile"
	"io"
)

// NewNetworkSecuritySecurityProfile creates a new instance of [NetworkSecuritySecurityProfile].
func NewNetworkSecuritySecurityProfile(name string, args NetworkSecuritySecurityProfileArgs) *NetworkSecuritySecurityProfile {
	return &NetworkSecuritySecurityProfile{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*NetworkSecuritySecurityProfile)(nil)

// NetworkSecuritySecurityProfile represents the Terraform resource google_network_security_security_profile.
type NetworkSecuritySecurityProfile struct {
	Name      string
	Args      NetworkSecuritySecurityProfileArgs
	state     *networkSecuritySecurityProfileState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [NetworkSecuritySecurityProfile].
func (nssp *NetworkSecuritySecurityProfile) Type() string {
	return "google_network_security_security_profile"
}

// LocalName returns the local name for [NetworkSecuritySecurityProfile].
func (nssp *NetworkSecuritySecurityProfile) LocalName() string {
	return nssp.Name
}

// Configuration returns the configuration (args) for [NetworkSecuritySecurityProfile].
func (nssp *NetworkSecuritySecurityProfile) Configuration() interface{} {
	return nssp.Args
}

// DependOn is used for other resources to depend on [NetworkSecuritySecurityProfile].
func (nssp *NetworkSecuritySecurityProfile) DependOn() terra.Reference {
	return terra.ReferenceResource(nssp)
}

// Dependencies returns the list of resources [NetworkSecuritySecurityProfile] depends_on.
func (nssp *NetworkSecuritySecurityProfile) Dependencies() terra.Dependencies {
	return nssp.DependsOn
}

// LifecycleManagement returns the lifecycle block for [NetworkSecuritySecurityProfile].
func (nssp *NetworkSecuritySecurityProfile) LifecycleManagement() *terra.Lifecycle {
	return nssp.Lifecycle
}

// Attributes returns the attributes for [NetworkSecuritySecurityProfile].
func (nssp *NetworkSecuritySecurityProfile) Attributes() networkSecuritySecurityProfileAttributes {
	return networkSecuritySecurityProfileAttributes{ref: terra.ReferenceResource(nssp)}
}

// ImportState imports the given attribute values into [NetworkSecuritySecurityProfile]'s state.
func (nssp *NetworkSecuritySecurityProfile) ImportState(av io.Reader) error {
	nssp.state = &networkSecuritySecurityProfileState{}
	if err := json.NewDecoder(av).Decode(nssp.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", nssp.Type(), nssp.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [NetworkSecuritySecurityProfile] has state.
func (nssp *NetworkSecuritySecurityProfile) State() (*networkSecuritySecurityProfileState, bool) {
	return nssp.state, nssp.state != nil
}

// StateMust returns the state for [NetworkSecuritySecurityProfile]. Panics if the state is nil.
func (nssp *NetworkSecuritySecurityProfile) StateMust() *networkSecuritySecurityProfileState {
	if nssp.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", nssp.Type(), nssp.LocalName()))
	}
	return nssp.state
}

// NetworkSecuritySecurityProfileArgs contains the configurations for google_network_security_security_profile.
type NetworkSecuritySecurityProfileArgs struct {
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Labels: map of string, optional
	Labels terra.MapValue[terra.StringValue] `hcl:"labels,attr"`
	// Location: string, optional
	Location terra.StringValue `hcl:"location,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Parent: string, optional
	Parent terra.StringValue `hcl:"parent,attr"`
	// Type: string, required
	Type terra.StringValue `hcl:"type,attr" validate:"required"`
	// ThreatPreventionProfile: optional
	ThreatPreventionProfile *networksecuritysecurityprofile.ThreatPreventionProfile `hcl:"threat_prevention_profile,block"`
	// Timeouts: optional
	Timeouts *networksecuritysecurityprofile.Timeouts `hcl:"timeouts,block"`
}
type networkSecuritySecurityProfileAttributes struct {
	ref terra.Reference
}

// CreateTime returns a reference to field create_time of google_network_security_security_profile.
func (nssp networkSecuritySecurityProfileAttributes) CreateTime() terra.StringValue {
	return terra.ReferenceAsString(nssp.ref.Append("create_time"))
}

// Description returns a reference to field description of google_network_security_security_profile.
func (nssp networkSecuritySecurityProfileAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(nssp.ref.Append("description"))
}

// EffectiveLabels returns a reference to field effective_labels of google_network_security_security_profile.
func (nssp networkSecuritySecurityProfileAttributes) EffectiveLabels() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](nssp.ref.Append("effective_labels"))
}

// Etag returns a reference to field etag of google_network_security_security_profile.
func (nssp networkSecuritySecurityProfileAttributes) Etag() terra.StringValue {
	return terra.ReferenceAsString(nssp.ref.Append("etag"))
}

// Id returns a reference to field id of google_network_security_security_profile.
func (nssp networkSecuritySecurityProfileAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(nssp.ref.Append("id"))
}

// Labels returns a reference to field labels of google_network_security_security_profile.
func (nssp networkSecuritySecurityProfileAttributes) Labels() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](nssp.ref.Append("labels"))
}

// Location returns a reference to field location of google_network_security_security_profile.
func (nssp networkSecuritySecurityProfileAttributes) Location() terra.StringValue {
	return terra.ReferenceAsString(nssp.ref.Append("location"))
}

// Name returns a reference to field name of google_network_security_security_profile.
func (nssp networkSecuritySecurityProfileAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(nssp.ref.Append("name"))
}

// Parent returns a reference to field parent of google_network_security_security_profile.
func (nssp networkSecuritySecurityProfileAttributes) Parent() terra.StringValue {
	return terra.ReferenceAsString(nssp.ref.Append("parent"))
}

// SelfLink returns a reference to field self_link of google_network_security_security_profile.
func (nssp networkSecuritySecurityProfileAttributes) SelfLink() terra.StringValue {
	return terra.ReferenceAsString(nssp.ref.Append("self_link"))
}

// TerraformLabels returns a reference to field terraform_labels of google_network_security_security_profile.
func (nssp networkSecuritySecurityProfileAttributes) TerraformLabels() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](nssp.ref.Append("terraform_labels"))
}

// Type returns a reference to field type of google_network_security_security_profile.
func (nssp networkSecuritySecurityProfileAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(nssp.ref.Append("type"))
}

// UpdateTime returns a reference to field update_time of google_network_security_security_profile.
func (nssp networkSecuritySecurityProfileAttributes) UpdateTime() terra.StringValue {
	return terra.ReferenceAsString(nssp.ref.Append("update_time"))
}

func (nssp networkSecuritySecurityProfileAttributes) ThreatPreventionProfile() terra.ListValue[networksecuritysecurityprofile.ThreatPreventionProfileAttributes] {
	return terra.ReferenceAsList[networksecuritysecurityprofile.ThreatPreventionProfileAttributes](nssp.ref.Append("threat_prevention_profile"))
}

func (nssp networkSecuritySecurityProfileAttributes) Timeouts() networksecuritysecurityprofile.TimeoutsAttributes {
	return terra.ReferenceAsSingle[networksecuritysecurityprofile.TimeoutsAttributes](nssp.ref.Append("timeouts"))
}

type networkSecuritySecurityProfileState struct {
	CreateTime              string                                                        `json:"create_time"`
	Description             string                                                        `json:"description"`
	EffectiveLabels         map[string]string                                             `json:"effective_labels"`
	Etag                    string                                                        `json:"etag"`
	Id                      string                                                        `json:"id"`
	Labels                  map[string]string                                             `json:"labels"`
	Location                string                                                        `json:"location"`
	Name                    string                                                        `json:"name"`
	Parent                  string                                                        `json:"parent"`
	SelfLink                string                                                        `json:"self_link"`
	TerraformLabels         map[string]string                                             `json:"terraform_labels"`
	Type                    string                                                        `json:"type"`
	UpdateTime              string                                                        `json:"update_time"`
	ThreatPreventionProfile []networksecuritysecurityprofile.ThreatPreventionProfileState `json:"threat_prevention_profile"`
	Timeouts                *networksecuritysecurityprofile.TimeoutsState                 `json:"timeouts"`
}
