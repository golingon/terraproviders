// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package googlebeta

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// NewSecureSourceManagerInstanceIamPolicy creates a new instance of [SecureSourceManagerInstanceIamPolicy].
func NewSecureSourceManagerInstanceIamPolicy(name string, args SecureSourceManagerInstanceIamPolicyArgs) *SecureSourceManagerInstanceIamPolicy {
	return &SecureSourceManagerInstanceIamPolicy{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*SecureSourceManagerInstanceIamPolicy)(nil)

// SecureSourceManagerInstanceIamPolicy represents the Terraform resource google_secure_source_manager_instance_iam_policy.
type SecureSourceManagerInstanceIamPolicy struct {
	Name      string
	Args      SecureSourceManagerInstanceIamPolicyArgs
	state     *secureSourceManagerInstanceIamPolicyState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [SecureSourceManagerInstanceIamPolicy].
func (ssmiip *SecureSourceManagerInstanceIamPolicy) Type() string {
	return "google_secure_source_manager_instance_iam_policy"
}

// LocalName returns the local name for [SecureSourceManagerInstanceIamPolicy].
func (ssmiip *SecureSourceManagerInstanceIamPolicy) LocalName() string {
	return ssmiip.Name
}

// Configuration returns the configuration (args) for [SecureSourceManagerInstanceIamPolicy].
func (ssmiip *SecureSourceManagerInstanceIamPolicy) Configuration() interface{} {
	return ssmiip.Args
}

// DependOn is used for other resources to depend on [SecureSourceManagerInstanceIamPolicy].
func (ssmiip *SecureSourceManagerInstanceIamPolicy) DependOn() terra.Reference {
	return terra.ReferenceResource(ssmiip)
}

// Dependencies returns the list of resources [SecureSourceManagerInstanceIamPolicy] depends_on.
func (ssmiip *SecureSourceManagerInstanceIamPolicy) Dependencies() terra.Dependencies {
	return ssmiip.DependsOn
}

// LifecycleManagement returns the lifecycle block for [SecureSourceManagerInstanceIamPolicy].
func (ssmiip *SecureSourceManagerInstanceIamPolicy) LifecycleManagement() *terra.Lifecycle {
	return ssmiip.Lifecycle
}

// Attributes returns the attributes for [SecureSourceManagerInstanceIamPolicy].
func (ssmiip *SecureSourceManagerInstanceIamPolicy) Attributes() secureSourceManagerInstanceIamPolicyAttributes {
	return secureSourceManagerInstanceIamPolicyAttributes{ref: terra.ReferenceResource(ssmiip)}
}

// ImportState imports the given attribute values into [SecureSourceManagerInstanceIamPolicy]'s state.
func (ssmiip *SecureSourceManagerInstanceIamPolicy) ImportState(av io.Reader) error {
	ssmiip.state = &secureSourceManagerInstanceIamPolicyState{}
	if err := json.NewDecoder(av).Decode(ssmiip.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", ssmiip.Type(), ssmiip.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [SecureSourceManagerInstanceIamPolicy] has state.
func (ssmiip *SecureSourceManagerInstanceIamPolicy) State() (*secureSourceManagerInstanceIamPolicyState, bool) {
	return ssmiip.state, ssmiip.state != nil
}

// StateMust returns the state for [SecureSourceManagerInstanceIamPolicy]. Panics if the state is nil.
func (ssmiip *SecureSourceManagerInstanceIamPolicy) StateMust() *secureSourceManagerInstanceIamPolicyState {
	if ssmiip.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", ssmiip.Type(), ssmiip.LocalName()))
	}
	return ssmiip.state
}

// SecureSourceManagerInstanceIamPolicyArgs contains the configurations for google_secure_source_manager_instance_iam_policy.
type SecureSourceManagerInstanceIamPolicyArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// InstanceId: string, required
	InstanceId terra.StringValue `hcl:"instance_id,attr" validate:"required"`
	// Location: string, optional
	Location terra.StringValue `hcl:"location,attr"`
	// PolicyData: string, required
	PolicyData terra.StringValue `hcl:"policy_data,attr" validate:"required"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
}
type secureSourceManagerInstanceIamPolicyAttributes struct {
	ref terra.Reference
}

// Etag returns a reference to field etag of google_secure_source_manager_instance_iam_policy.
func (ssmiip secureSourceManagerInstanceIamPolicyAttributes) Etag() terra.StringValue {
	return terra.ReferenceAsString(ssmiip.ref.Append("etag"))
}

// Id returns a reference to field id of google_secure_source_manager_instance_iam_policy.
func (ssmiip secureSourceManagerInstanceIamPolicyAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(ssmiip.ref.Append("id"))
}

// InstanceId returns a reference to field instance_id of google_secure_source_manager_instance_iam_policy.
func (ssmiip secureSourceManagerInstanceIamPolicyAttributes) InstanceId() terra.StringValue {
	return terra.ReferenceAsString(ssmiip.ref.Append("instance_id"))
}

// Location returns a reference to field location of google_secure_source_manager_instance_iam_policy.
func (ssmiip secureSourceManagerInstanceIamPolicyAttributes) Location() terra.StringValue {
	return terra.ReferenceAsString(ssmiip.ref.Append("location"))
}

// PolicyData returns a reference to field policy_data of google_secure_source_manager_instance_iam_policy.
func (ssmiip secureSourceManagerInstanceIamPolicyAttributes) PolicyData() terra.StringValue {
	return terra.ReferenceAsString(ssmiip.ref.Append("policy_data"))
}

// Project returns a reference to field project of google_secure_source_manager_instance_iam_policy.
func (ssmiip secureSourceManagerInstanceIamPolicyAttributes) Project() terra.StringValue {
	return terra.ReferenceAsString(ssmiip.ref.Append("project"))
}

type secureSourceManagerInstanceIamPolicyState struct {
	Etag       string `json:"etag"`
	Id         string `json:"id"`
	InstanceId string `json:"instance_id"`
	Location   string `json:"location"`
	PolicyData string `json:"policy_data"`
	Project    string `json:"project"`
}
