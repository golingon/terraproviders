// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package googlebeta

import "github.com/golingon/lingon/pkg/terra"

// NewDataFirebaseWebAppConfig creates a new instance of [DataFirebaseWebAppConfig].
func NewDataFirebaseWebAppConfig(name string, args DataFirebaseWebAppConfigArgs) *DataFirebaseWebAppConfig {
	return &DataFirebaseWebAppConfig{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataFirebaseWebAppConfig)(nil)

// DataFirebaseWebAppConfig represents the Terraform data resource google_firebase_web_app_config.
type DataFirebaseWebAppConfig struct {
	Name string
	Args DataFirebaseWebAppConfigArgs
}

// DataSource returns the Terraform object type for [DataFirebaseWebAppConfig].
func (fwac *DataFirebaseWebAppConfig) DataSource() string {
	return "google_firebase_web_app_config"
}

// LocalName returns the local name for [DataFirebaseWebAppConfig].
func (fwac *DataFirebaseWebAppConfig) LocalName() string {
	return fwac.Name
}

// Configuration returns the configuration (args) for [DataFirebaseWebAppConfig].
func (fwac *DataFirebaseWebAppConfig) Configuration() interface{} {
	return fwac.Args
}

// Attributes returns the attributes for [DataFirebaseWebAppConfig].
func (fwac *DataFirebaseWebAppConfig) Attributes() dataFirebaseWebAppConfigAttributes {
	return dataFirebaseWebAppConfigAttributes{ref: terra.ReferenceDataResource(fwac)}
}

// DataFirebaseWebAppConfigArgs contains the configurations for google_firebase_web_app_config.
type DataFirebaseWebAppConfigArgs struct {
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
	// WebAppId: string, required
	WebAppId terra.StringValue `hcl:"web_app_id,attr" validate:"required"`
}
type dataFirebaseWebAppConfigAttributes struct {
	ref terra.Reference
}

// ApiKey returns a reference to field api_key of google_firebase_web_app_config.
func (fwac dataFirebaseWebAppConfigAttributes) ApiKey() terra.StringValue {
	return terra.ReferenceAsString(fwac.ref.Append("api_key"))
}

// AuthDomain returns a reference to field auth_domain of google_firebase_web_app_config.
func (fwac dataFirebaseWebAppConfigAttributes) AuthDomain() terra.StringValue {
	return terra.ReferenceAsString(fwac.ref.Append("auth_domain"))
}

// DatabaseUrl returns a reference to field database_url of google_firebase_web_app_config.
func (fwac dataFirebaseWebAppConfigAttributes) DatabaseUrl() terra.StringValue {
	return terra.ReferenceAsString(fwac.ref.Append("database_url"))
}

// Id returns a reference to field id of google_firebase_web_app_config.
func (fwac dataFirebaseWebAppConfigAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(fwac.ref.Append("id"))
}

// LocationId returns a reference to field location_id of google_firebase_web_app_config.
func (fwac dataFirebaseWebAppConfigAttributes) LocationId() terra.StringValue {
	return terra.ReferenceAsString(fwac.ref.Append("location_id"))
}

// MeasurementId returns a reference to field measurement_id of google_firebase_web_app_config.
func (fwac dataFirebaseWebAppConfigAttributes) MeasurementId() terra.StringValue {
	return terra.ReferenceAsString(fwac.ref.Append("measurement_id"))
}

// MessagingSenderId returns a reference to field messaging_sender_id of google_firebase_web_app_config.
func (fwac dataFirebaseWebAppConfigAttributes) MessagingSenderId() terra.StringValue {
	return terra.ReferenceAsString(fwac.ref.Append("messaging_sender_id"))
}

// Project returns a reference to field project of google_firebase_web_app_config.
func (fwac dataFirebaseWebAppConfigAttributes) Project() terra.StringValue {
	return terra.ReferenceAsString(fwac.ref.Append("project"))
}

// StorageBucket returns a reference to field storage_bucket of google_firebase_web_app_config.
func (fwac dataFirebaseWebAppConfigAttributes) StorageBucket() terra.StringValue {
	return terra.ReferenceAsString(fwac.ref.Append("storage_bucket"))
}

// WebAppId returns a reference to field web_app_id of google_firebase_web_app_config.
func (fwac dataFirebaseWebAppConfigAttributes) WebAppId() terra.StringValue {
	return terra.ReferenceAsString(fwac.ref.Append("web_app_id"))
}
