// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package googlebeta

import (
	"encoding/json"
	"fmt"
	appengineflexibleappversion "github.com/golingon/terraproviders/googlebeta/4.72.1/appengineflexibleappversion"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

// NewAppEngineFlexibleAppVersion creates a new instance of [AppEngineFlexibleAppVersion].
func NewAppEngineFlexibleAppVersion(name string, args AppEngineFlexibleAppVersionArgs) *AppEngineFlexibleAppVersion {
	return &AppEngineFlexibleAppVersion{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*AppEngineFlexibleAppVersion)(nil)

// AppEngineFlexibleAppVersion represents the Terraform resource google_app_engine_flexible_app_version.
type AppEngineFlexibleAppVersion struct {
	Name      string
	Args      AppEngineFlexibleAppVersionArgs
	state     *appEngineFlexibleAppVersionState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [AppEngineFlexibleAppVersion].
func (aefav *AppEngineFlexibleAppVersion) Type() string {
	return "google_app_engine_flexible_app_version"
}

// LocalName returns the local name for [AppEngineFlexibleAppVersion].
func (aefav *AppEngineFlexibleAppVersion) LocalName() string {
	return aefav.Name
}

// Configuration returns the configuration (args) for [AppEngineFlexibleAppVersion].
func (aefav *AppEngineFlexibleAppVersion) Configuration() interface{} {
	return aefav.Args
}

// DependOn is used for other resources to depend on [AppEngineFlexibleAppVersion].
func (aefav *AppEngineFlexibleAppVersion) DependOn() terra.Reference {
	return terra.ReferenceResource(aefav)
}

// Dependencies returns the list of resources [AppEngineFlexibleAppVersion] depends_on.
func (aefav *AppEngineFlexibleAppVersion) Dependencies() terra.Dependencies {
	return aefav.DependsOn
}

// LifecycleManagement returns the lifecycle block for [AppEngineFlexibleAppVersion].
func (aefav *AppEngineFlexibleAppVersion) LifecycleManagement() *terra.Lifecycle {
	return aefav.Lifecycle
}

// Attributes returns the attributes for [AppEngineFlexibleAppVersion].
func (aefav *AppEngineFlexibleAppVersion) Attributes() appEngineFlexibleAppVersionAttributes {
	return appEngineFlexibleAppVersionAttributes{ref: terra.ReferenceResource(aefav)}
}

// ImportState imports the given attribute values into [AppEngineFlexibleAppVersion]'s state.
func (aefav *AppEngineFlexibleAppVersion) ImportState(av io.Reader) error {
	aefav.state = &appEngineFlexibleAppVersionState{}
	if err := json.NewDecoder(av).Decode(aefav.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", aefav.Type(), aefav.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [AppEngineFlexibleAppVersion] has state.
func (aefav *AppEngineFlexibleAppVersion) State() (*appEngineFlexibleAppVersionState, bool) {
	return aefav.state, aefav.state != nil
}

// StateMust returns the state for [AppEngineFlexibleAppVersion]. Panics if the state is nil.
func (aefav *AppEngineFlexibleAppVersion) StateMust() *appEngineFlexibleAppVersionState {
	if aefav.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", aefav.Type(), aefav.LocalName()))
	}
	return aefav.state
}

// AppEngineFlexibleAppVersionArgs contains the configurations for google_app_engine_flexible_app_version.
type AppEngineFlexibleAppVersionArgs struct {
	// BetaSettings: map of string, optional
	BetaSettings terra.MapValue[terra.StringValue] `hcl:"beta_settings,attr"`
	// DefaultExpiration: string, optional
	DefaultExpiration terra.StringValue `hcl:"default_expiration,attr"`
	// DeleteServiceOnDestroy: bool, optional
	DeleteServiceOnDestroy terra.BoolValue `hcl:"delete_service_on_destroy,attr"`
	// EnvVariables: map of string, optional
	EnvVariables terra.MapValue[terra.StringValue] `hcl:"env_variables,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// InboundServices: set of string, optional
	InboundServices terra.SetValue[terra.StringValue] `hcl:"inbound_services,attr"`
	// InstanceClass: string, optional
	InstanceClass terra.StringValue `hcl:"instance_class,attr"`
	// NobuildFilesRegex: string, optional
	NobuildFilesRegex terra.StringValue `hcl:"nobuild_files_regex,attr"`
	// NoopOnDestroy: bool, optional
	NoopOnDestroy terra.BoolValue `hcl:"noop_on_destroy,attr"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
	// Runtime: string, required
	Runtime terra.StringValue `hcl:"runtime,attr" validate:"required"`
	// RuntimeApiVersion: string, optional
	RuntimeApiVersion terra.StringValue `hcl:"runtime_api_version,attr"`
	// RuntimeChannel: string, optional
	RuntimeChannel terra.StringValue `hcl:"runtime_channel,attr"`
	// RuntimeMainExecutablePath: string, optional
	RuntimeMainExecutablePath terra.StringValue `hcl:"runtime_main_executable_path,attr"`
	// Service: string, required
	Service terra.StringValue `hcl:"service,attr" validate:"required"`
	// ServiceAccount: string, optional
	ServiceAccount terra.StringValue `hcl:"service_account,attr"`
	// ServingStatus: string, optional
	ServingStatus terra.StringValue `hcl:"serving_status,attr"`
	// VersionId: string, optional
	VersionId terra.StringValue `hcl:"version_id,attr"`
	// ApiConfig: optional
	ApiConfig *appengineflexibleappversion.ApiConfig `hcl:"api_config,block"`
	// AutomaticScaling: optional
	AutomaticScaling *appengineflexibleappversion.AutomaticScaling `hcl:"automatic_scaling,block"`
	// Deployment: optional
	Deployment *appengineflexibleappversion.Deployment `hcl:"deployment,block"`
	// EndpointsApiService: optional
	EndpointsApiService *appengineflexibleappversion.EndpointsApiService `hcl:"endpoints_api_service,block"`
	// Entrypoint: optional
	Entrypoint *appengineflexibleappversion.Entrypoint `hcl:"entrypoint,block"`
	// Handlers: min=0
	Handlers []appengineflexibleappversion.Handlers `hcl:"handlers,block" validate:"min=0"`
	// LivenessCheck: required
	LivenessCheck *appengineflexibleappversion.LivenessCheck `hcl:"liveness_check,block" validate:"required"`
	// ManualScaling: optional
	ManualScaling *appengineflexibleappversion.ManualScaling `hcl:"manual_scaling,block"`
	// Network: optional
	Network *appengineflexibleappversion.Network `hcl:"network,block"`
	// ReadinessCheck: required
	ReadinessCheck *appengineflexibleappversion.ReadinessCheck `hcl:"readiness_check,block" validate:"required"`
	// Resources: optional
	Resources *appengineflexibleappversion.Resources `hcl:"resources,block"`
	// Timeouts: optional
	Timeouts *appengineflexibleappversion.Timeouts `hcl:"timeouts,block"`
	// VpcAccessConnector: optional
	VpcAccessConnector *appengineflexibleappversion.VpcAccessConnector `hcl:"vpc_access_connector,block"`
}
type appEngineFlexibleAppVersionAttributes struct {
	ref terra.Reference
}

// BetaSettings returns a reference to field beta_settings of google_app_engine_flexible_app_version.
func (aefav appEngineFlexibleAppVersionAttributes) BetaSettings() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](aefav.ref.Append("beta_settings"))
}

// DefaultExpiration returns a reference to field default_expiration of google_app_engine_flexible_app_version.
func (aefav appEngineFlexibleAppVersionAttributes) DefaultExpiration() terra.StringValue {
	return terra.ReferenceAsString(aefav.ref.Append("default_expiration"))
}

// DeleteServiceOnDestroy returns a reference to field delete_service_on_destroy of google_app_engine_flexible_app_version.
func (aefav appEngineFlexibleAppVersionAttributes) DeleteServiceOnDestroy() terra.BoolValue {
	return terra.ReferenceAsBool(aefav.ref.Append("delete_service_on_destroy"))
}

// EnvVariables returns a reference to field env_variables of google_app_engine_flexible_app_version.
func (aefav appEngineFlexibleAppVersionAttributes) EnvVariables() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](aefav.ref.Append("env_variables"))
}

// Id returns a reference to field id of google_app_engine_flexible_app_version.
func (aefav appEngineFlexibleAppVersionAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aefav.ref.Append("id"))
}

// InboundServices returns a reference to field inbound_services of google_app_engine_flexible_app_version.
func (aefav appEngineFlexibleAppVersionAttributes) InboundServices() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](aefav.ref.Append("inbound_services"))
}

// InstanceClass returns a reference to field instance_class of google_app_engine_flexible_app_version.
func (aefav appEngineFlexibleAppVersionAttributes) InstanceClass() terra.StringValue {
	return terra.ReferenceAsString(aefav.ref.Append("instance_class"))
}

// Name returns a reference to field name of google_app_engine_flexible_app_version.
func (aefav appEngineFlexibleAppVersionAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(aefav.ref.Append("name"))
}

// NobuildFilesRegex returns a reference to field nobuild_files_regex of google_app_engine_flexible_app_version.
func (aefav appEngineFlexibleAppVersionAttributes) NobuildFilesRegex() terra.StringValue {
	return terra.ReferenceAsString(aefav.ref.Append("nobuild_files_regex"))
}

// NoopOnDestroy returns a reference to field noop_on_destroy of google_app_engine_flexible_app_version.
func (aefav appEngineFlexibleAppVersionAttributes) NoopOnDestroy() terra.BoolValue {
	return terra.ReferenceAsBool(aefav.ref.Append("noop_on_destroy"))
}

// Project returns a reference to field project of google_app_engine_flexible_app_version.
func (aefav appEngineFlexibleAppVersionAttributes) Project() terra.StringValue {
	return terra.ReferenceAsString(aefav.ref.Append("project"))
}

// Runtime returns a reference to field runtime of google_app_engine_flexible_app_version.
func (aefav appEngineFlexibleAppVersionAttributes) Runtime() terra.StringValue {
	return terra.ReferenceAsString(aefav.ref.Append("runtime"))
}

// RuntimeApiVersion returns a reference to field runtime_api_version of google_app_engine_flexible_app_version.
func (aefav appEngineFlexibleAppVersionAttributes) RuntimeApiVersion() terra.StringValue {
	return terra.ReferenceAsString(aefav.ref.Append("runtime_api_version"))
}

// RuntimeChannel returns a reference to field runtime_channel of google_app_engine_flexible_app_version.
func (aefav appEngineFlexibleAppVersionAttributes) RuntimeChannel() terra.StringValue {
	return terra.ReferenceAsString(aefav.ref.Append("runtime_channel"))
}

// RuntimeMainExecutablePath returns a reference to field runtime_main_executable_path of google_app_engine_flexible_app_version.
func (aefav appEngineFlexibleAppVersionAttributes) RuntimeMainExecutablePath() terra.StringValue {
	return terra.ReferenceAsString(aefav.ref.Append("runtime_main_executable_path"))
}

// Service returns a reference to field service of google_app_engine_flexible_app_version.
func (aefav appEngineFlexibleAppVersionAttributes) Service() terra.StringValue {
	return terra.ReferenceAsString(aefav.ref.Append("service"))
}

// ServiceAccount returns a reference to field service_account of google_app_engine_flexible_app_version.
func (aefav appEngineFlexibleAppVersionAttributes) ServiceAccount() terra.StringValue {
	return terra.ReferenceAsString(aefav.ref.Append("service_account"))
}

// ServingStatus returns a reference to field serving_status of google_app_engine_flexible_app_version.
func (aefav appEngineFlexibleAppVersionAttributes) ServingStatus() terra.StringValue {
	return terra.ReferenceAsString(aefav.ref.Append("serving_status"))
}

// VersionId returns a reference to field version_id of google_app_engine_flexible_app_version.
func (aefav appEngineFlexibleAppVersionAttributes) VersionId() terra.StringValue {
	return terra.ReferenceAsString(aefav.ref.Append("version_id"))
}

func (aefav appEngineFlexibleAppVersionAttributes) ApiConfig() terra.ListValue[appengineflexibleappversion.ApiConfigAttributes] {
	return terra.ReferenceAsList[appengineflexibleappversion.ApiConfigAttributes](aefav.ref.Append("api_config"))
}

func (aefav appEngineFlexibleAppVersionAttributes) AutomaticScaling() terra.ListValue[appengineflexibleappversion.AutomaticScalingAttributes] {
	return terra.ReferenceAsList[appengineflexibleappversion.AutomaticScalingAttributes](aefav.ref.Append("automatic_scaling"))
}

func (aefav appEngineFlexibleAppVersionAttributes) Deployment() terra.ListValue[appengineflexibleappversion.DeploymentAttributes] {
	return terra.ReferenceAsList[appengineflexibleappversion.DeploymentAttributes](aefav.ref.Append("deployment"))
}

func (aefav appEngineFlexibleAppVersionAttributes) EndpointsApiService() terra.ListValue[appengineflexibleappversion.EndpointsApiServiceAttributes] {
	return terra.ReferenceAsList[appengineflexibleappversion.EndpointsApiServiceAttributes](aefav.ref.Append("endpoints_api_service"))
}

func (aefav appEngineFlexibleAppVersionAttributes) Entrypoint() terra.ListValue[appengineflexibleappversion.EntrypointAttributes] {
	return terra.ReferenceAsList[appengineflexibleappversion.EntrypointAttributes](aefav.ref.Append("entrypoint"))
}

func (aefav appEngineFlexibleAppVersionAttributes) Handlers() terra.ListValue[appengineflexibleappversion.HandlersAttributes] {
	return terra.ReferenceAsList[appengineflexibleappversion.HandlersAttributes](aefav.ref.Append("handlers"))
}

func (aefav appEngineFlexibleAppVersionAttributes) LivenessCheck() terra.ListValue[appengineflexibleappversion.LivenessCheckAttributes] {
	return terra.ReferenceAsList[appengineflexibleappversion.LivenessCheckAttributes](aefav.ref.Append("liveness_check"))
}

func (aefav appEngineFlexibleAppVersionAttributes) ManualScaling() terra.ListValue[appengineflexibleappversion.ManualScalingAttributes] {
	return terra.ReferenceAsList[appengineflexibleappversion.ManualScalingAttributes](aefav.ref.Append("manual_scaling"))
}

func (aefav appEngineFlexibleAppVersionAttributes) Network() terra.ListValue[appengineflexibleappversion.NetworkAttributes] {
	return terra.ReferenceAsList[appengineflexibleappversion.NetworkAttributes](aefav.ref.Append("network"))
}

func (aefav appEngineFlexibleAppVersionAttributes) ReadinessCheck() terra.ListValue[appengineflexibleappversion.ReadinessCheckAttributes] {
	return terra.ReferenceAsList[appengineflexibleappversion.ReadinessCheckAttributes](aefav.ref.Append("readiness_check"))
}

func (aefav appEngineFlexibleAppVersionAttributes) Resources() terra.ListValue[appengineflexibleappversion.ResourcesAttributes] {
	return terra.ReferenceAsList[appengineflexibleappversion.ResourcesAttributes](aefav.ref.Append("resources"))
}

func (aefav appEngineFlexibleAppVersionAttributes) Timeouts() appengineflexibleappversion.TimeoutsAttributes {
	return terra.ReferenceAsSingle[appengineflexibleappversion.TimeoutsAttributes](aefav.ref.Append("timeouts"))
}

func (aefav appEngineFlexibleAppVersionAttributes) VpcAccessConnector() terra.ListValue[appengineflexibleappversion.VpcAccessConnectorAttributes] {
	return terra.ReferenceAsList[appengineflexibleappversion.VpcAccessConnectorAttributes](aefav.ref.Append("vpc_access_connector"))
}

type appEngineFlexibleAppVersionState struct {
	BetaSettings              map[string]string                                      `json:"beta_settings"`
	DefaultExpiration         string                                                 `json:"default_expiration"`
	DeleteServiceOnDestroy    bool                                                   `json:"delete_service_on_destroy"`
	EnvVariables              map[string]string                                      `json:"env_variables"`
	Id                        string                                                 `json:"id"`
	InboundServices           []string                                               `json:"inbound_services"`
	InstanceClass             string                                                 `json:"instance_class"`
	Name                      string                                                 `json:"name"`
	NobuildFilesRegex         string                                                 `json:"nobuild_files_regex"`
	NoopOnDestroy             bool                                                   `json:"noop_on_destroy"`
	Project                   string                                                 `json:"project"`
	Runtime                   string                                                 `json:"runtime"`
	RuntimeApiVersion         string                                                 `json:"runtime_api_version"`
	RuntimeChannel            string                                                 `json:"runtime_channel"`
	RuntimeMainExecutablePath string                                                 `json:"runtime_main_executable_path"`
	Service                   string                                                 `json:"service"`
	ServiceAccount            string                                                 `json:"service_account"`
	ServingStatus             string                                                 `json:"serving_status"`
	VersionId                 string                                                 `json:"version_id"`
	ApiConfig                 []appengineflexibleappversion.ApiConfigState           `json:"api_config"`
	AutomaticScaling          []appengineflexibleappversion.AutomaticScalingState    `json:"automatic_scaling"`
	Deployment                []appengineflexibleappversion.DeploymentState          `json:"deployment"`
	EndpointsApiService       []appengineflexibleappversion.EndpointsApiServiceState `json:"endpoints_api_service"`
	Entrypoint                []appengineflexibleappversion.EntrypointState          `json:"entrypoint"`
	Handlers                  []appengineflexibleappversion.HandlersState            `json:"handlers"`
	LivenessCheck             []appengineflexibleappversion.LivenessCheckState       `json:"liveness_check"`
	ManualScaling             []appengineflexibleappversion.ManualScalingState       `json:"manual_scaling"`
	Network                   []appengineflexibleappversion.NetworkState             `json:"network"`
	ReadinessCheck            []appengineflexibleappversion.ReadinessCheckState      `json:"readiness_check"`
	Resources                 []appengineflexibleappversion.ResourcesState           `json:"resources"`
	Timeouts                  *appengineflexibleappversion.TimeoutsState             `json:"timeouts"`
	VpcAccessConnector        []appengineflexibleappversion.VpcAccessConnectorState  `json:"vpc_access_connector"`
}
