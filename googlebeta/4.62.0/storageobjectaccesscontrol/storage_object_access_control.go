// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package storageobjectaccesscontrol

import (
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
	terra "github.com/volvo-cars/lingon/pkg/terra"
)

type ProjectTeam struct{}

type Timeouts struct {
	// Create: string, optional
	Create terra.StringValue `hcl:"create,attr"`
	// Delete: string, optional
	Delete terra.StringValue `hcl:"delete,attr"`
	// Update: string, optional
	Update terra.StringValue `hcl:"update,attr"`
}

type ProjectTeamAttributes struct {
	ref terra.Reference
}

func (pt ProjectTeamAttributes) InternalRef() (terra.Reference, error) {
	return pt.ref, nil
}

func (pt ProjectTeamAttributes) InternalWithRef(ref terra.Reference) ProjectTeamAttributes {
	return ProjectTeamAttributes{ref: ref}
}

func (pt ProjectTeamAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return pt.ref.InternalTokens()
}

func (pt ProjectTeamAttributes) ProjectNumber() terra.StringValue {
	return terra.ReferenceAsString(pt.ref.Append("project_number"))
}

func (pt ProjectTeamAttributes) Team() terra.StringValue {
	return terra.ReferenceAsString(pt.ref.Append("team"))
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("create"))
}

func (t TimeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("delete"))
}

func (t TimeoutsAttributes) Update() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("update"))
}

type ProjectTeamState struct {
	ProjectNumber string `json:"project_number"`
	Team          string `json:"team"`
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
	Update string `json:"update"`
}
