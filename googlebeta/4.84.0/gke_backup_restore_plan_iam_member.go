// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package googlebeta

import (
	"encoding/json"
	"fmt"
	gkebackuprestoreplaniammember "github.com/golingon/terraproviders/googlebeta/4.84.0/gkebackuprestoreplaniammember"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

// NewGkeBackupRestorePlanIamMember creates a new instance of [GkeBackupRestorePlanIamMember].
func NewGkeBackupRestorePlanIamMember(name string, args GkeBackupRestorePlanIamMemberArgs) *GkeBackupRestorePlanIamMember {
	return &GkeBackupRestorePlanIamMember{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*GkeBackupRestorePlanIamMember)(nil)

// GkeBackupRestorePlanIamMember represents the Terraform resource google_gke_backup_restore_plan_iam_member.
type GkeBackupRestorePlanIamMember struct {
	Name      string
	Args      GkeBackupRestorePlanIamMemberArgs
	state     *gkeBackupRestorePlanIamMemberState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [GkeBackupRestorePlanIamMember].
func (gbrpim *GkeBackupRestorePlanIamMember) Type() string {
	return "google_gke_backup_restore_plan_iam_member"
}

// LocalName returns the local name for [GkeBackupRestorePlanIamMember].
func (gbrpim *GkeBackupRestorePlanIamMember) LocalName() string {
	return gbrpim.Name
}

// Configuration returns the configuration (args) for [GkeBackupRestorePlanIamMember].
func (gbrpim *GkeBackupRestorePlanIamMember) Configuration() interface{} {
	return gbrpim.Args
}

// DependOn is used for other resources to depend on [GkeBackupRestorePlanIamMember].
func (gbrpim *GkeBackupRestorePlanIamMember) DependOn() terra.Reference {
	return terra.ReferenceResource(gbrpim)
}

// Dependencies returns the list of resources [GkeBackupRestorePlanIamMember] depends_on.
func (gbrpim *GkeBackupRestorePlanIamMember) Dependencies() terra.Dependencies {
	return gbrpim.DependsOn
}

// LifecycleManagement returns the lifecycle block for [GkeBackupRestorePlanIamMember].
func (gbrpim *GkeBackupRestorePlanIamMember) LifecycleManagement() *terra.Lifecycle {
	return gbrpim.Lifecycle
}

// Attributes returns the attributes for [GkeBackupRestorePlanIamMember].
func (gbrpim *GkeBackupRestorePlanIamMember) Attributes() gkeBackupRestorePlanIamMemberAttributes {
	return gkeBackupRestorePlanIamMemberAttributes{ref: terra.ReferenceResource(gbrpim)}
}

// ImportState imports the given attribute values into [GkeBackupRestorePlanIamMember]'s state.
func (gbrpim *GkeBackupRestorePlanIamMember) ImportState(av io.Reader) error {
	gbrpim.state = &gkeBackupRestorePlanIamMemberState{}
	if err := json.NewDecoder(av).Decode(gbrpim.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", gbrpim.Type(), gbrpim.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [GkeBackupRestorePlanIamMember] has state.
func (gbrpim *GkeBackupRestorePlanIamMember) State() (*gkeBackupRestorePlanIamMemberState, bool) {
	return gbrpim.state, gbrpim.state != nil
}

// StateMust returns the state for [GkeBackupRestorePlanIamMember]. Panics if the state is nil.
func (gbrpim *GkeBackupRestorePlanIamMember) StateMust() *gkeBackupRestorePlanIamMemberState {
	if gbrpim.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", gbrpim.Type(), gbrpim.LocalName()))
	}
	return gbrpim.state
}

// GkeBackupRestorePlanIamMemberArgs contains the configurations for google_gke_backup_restore_plan_iam_member.
type GkeBackupRestorePlanIamMemberArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Location: string, optional
	Location terra.StringValue `hcl:"location,attr"`
	// Member: string, required
	Member terra.StringValue `hcl:"member,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
	// Role: string, required
	Role terra.StringValue `hcl:"role,attr" validate:"required"`
	// Condition: optional
	Condition *gkebackuprestoreplaniammember.Condition `hcl:"condition,block"`
}
type gkeBackupRestorePlanIamMemberAttributes struct {
	ref terra.Reference
}

// Etag returns a reference to field etag of google_gke_backup_restore_plan_iam_member.
func (gbrpim gkeBackupRestorePlanIamMemberAttributes) Etag() terra.StringValue {
	return terra.ReferenceAsString(gbrpim.ref.Append("etag"))
}

// Id returns a reference to field id of google_gke_backup_restore_plan_iam_member.
func (gbrpim gkeBackupRestorePlanIamMemberAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(gbrpim.ref.Append("id"))
}

// Location returns a reference to field location of google_gke_backup_restore_plan_iam_member.
func (gbrpim gkeBackupRestorePlanIamMemberAttributes) Location() terra.StringValue {
	return terra.ReferenceAsString(gbrpim.ref.Append("location"))
}

// Member returns a reference to field member of google_gke_backup_restore_plan_iam_member.
func (gbrpim gkeBackupRestorePlanIamMemberAttributes) Member() terra.StringValue {
	return terra.ReferenceAsString(gbrpim.ref.Append("member"))
}

// Name returns a reference to field name of google_gke_backup_restore_plan_iam_member.
func (gbrpim gkeBackupRestorePlanIamMemberAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(gbrpim.ref.Append("name"))
}

// Project returns a reference to field project of google_gke_backup_restore_plan_iam_member.
func (gbrpim gkeBackupRestorePlanIamMemberAttributes) Project() terra.StringValue {
	return terra.ReferenceAsString(gbrpim.ref.Append("project"))
}

// Role returns a reference to field role of google_gke_backup_restore_plan_iam_member.
func (gbrpim gkeBackupRestorePlanIamMemberAttributes) Role() terra.StringValue {
	return terra.ReferenceAsString(gbrpim.ref.Append("role"))
}

func (gbrpim gkeBackupRestorePlanIamMemberAttributes) Condition() terra.ListValue[gkebackuprestoreplaniammember.ConditionAttributes] {
	return terra.ReferenceAsList[gkebackuprestoreplaniammember.ConditionAttributes](gbrpim.ref.Append("condition"))
}

type gkeBackupRestorePlanIamMemberState struct {
	Etag      string                                         `json:"etag"`
	Id        string                                         `json:"id"`
	Location  string                                         `json:"location"`
	Member    string                                         `json:"member"`
	Name      string                                         `json:"name"`
	Project   string                                         `json:"project"`
	Role      string                                         `json:"role"`
	Condition []gkebackuprestoreplaniammember.ConditionState `json:"condition"`
}
