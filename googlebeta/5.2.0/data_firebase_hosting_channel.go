// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package googlebeta

import "github.com/volvo-cars/lingon/pkg/terra"

// NewDataFirebaseHostingChannel creates a new instance of [DataFirebaseHostingChannel].
func NewDataFirebaseHostingChannel(name string, args DataFirebaseHostingChannelArgs) *DataFirebaseHostingChannel {
	return &DataFirebaseHostingChannel{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataFirebaseHostingChannel)(nil)

// DataFirebaseHostingChannel represents the Terraform data resource google_firebase_hosting_channel.
type DataFirebaseHostingChannel struct {
	Name string
	Args DataFirebaseHostingChannelArgs
}

// DataSource returns the Terraform object type for [DataFirebaseHostingChannel].
func (fhc *DataFirebaseHostingChannel) DataSource() string {
	return "google_firebase_hosting_channel"
}

// LocalName returns the local name for [DataFirebaseHostingChannel].
func (fhc *DataFirebaseHostingChannel) LocalName() string {
	return fhc.Name
}

// Configuration returns the configuration (args) for [DataFirebaseHostingChannel].
func (fhc *DataFirebaseHostingChannel) Configuration() interface{} {
	return fhc.Args
}

// Attributes returns the attributes for [DataFirebaseHostingChannel].
func (fhc *DataFirebaseHostingChannel) Attributes() dataFirebaseHostingChannelAttributes {
	return dataFirebaseHostingChannelAttributes{ref: terra.ReferenceDataResource(fhc)}
}

// DataFirebaseHostingChannelArgs contains the configurations for google_firebase_hosting_channel.
type DataFirebaseHostingChannelArgs struct {
	// ChannelId: string, required
	ChannelId terra.StringValue `hcl:"channel_id,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// SiteId: string, required
	SiteId terra.StringValue `hcl:"site_id,attr" validate:"required"`
}
type dataFirebaseHostingChannelAttributes struct {
	ref terra.Reference
}

// ChannelId returns a reference to field channel_id of google_firebase_hosting_channel.
func (fhc dataFirebaseHostingChannelAttributes) ChannelId() terra.StringValue {
	return terra.ReferenceAsString(fhc.ref.Append("channel_id"))
}

// EffectiveLabels returns a reference to field effective_labels of google_firebase_hosting_channel.
func (fhc dataFirebaseHostingChannelAttributes) EffectiveLabels() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](fhc.ref.Append("effective_labels"))
}

// ExpireTime returns a reference to field expire_time of google_firebase_hosting_channel.
func (fhc dataFirebaseHostingChannelAttributes) ExpireTime() terra.StringValue {
	return terra.ReferenceAsString(fhc.ref.Append("expire_time"))
}

// Id returns a reference to field id of google_firebase_hosting_channel.
func (fhc dataFirebaseHostingChannelAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(fhc.ref.Append("id"))
}

// Labels returns a reference to field labels of google_firebase_hosting_channel.
func (fhc dataFirebaseHostingChannelAttributes) Labels() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](fhc.ref.Append("labels"))
}

// Name returns a reference to field name of google_firebase_hosting_channel.
func (fhc dataFirebaseHostingChannelAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(fhc.ref.Append("name"))
}

// RetainedReleaseCount returns a reference to field retained_release_count of google_firebase_hosting_channel.
func (fhc dataFirebaseHostingChannelAttributes) RetainedReleaseCount() terra.NumberValue {
	return terra.ReferenceAsNumber(fhc.ref.Append("retained_release_count"))
}

// SiteId returns a reference to field site_id of google_firebase_hosting_channel.
func (fhc dataFirebaseHostingChannelAttributes) SiteId() terra.StringValue {
	return terra.ReferenceAsString(fhc.ref.Append("site_id"))
}

// TerraformLabels returns a reference to field terraform_labels of google_firebase_hosting_channel.
func (fhc dataFirebaseHostingChannelAttributes) TerraformLabels() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](fhc.ref.Append("terraform_labels"))
}

// Ttl returns a reference to field ttl of google_firebase_hosting_channel.
func (fhc dataFirebaseHostingChannelAttributes) Ttl() terra.StringValue {
	return terra.ReferenceAsString(fhc.ref.Append("ttl"))
}
