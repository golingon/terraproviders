// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package googlebeta

import (
	"encoding/json"
	"fmt"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

// NewRuntimeconfigVariable creates a new instance of [RuntimeconfigVariable].
func NewRuntimeconfigVariable(name string, args RuntimeconfigVariableArgs) *RuntimeconfigVariable {
	return &RuntimeconfigVariable{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*RuntimeconfigVariable)(nil)

// RuntimeconfigVariable represents the Terraform resource google_runtimeconfig_variable.
type RuntimeconfigVariable struct {
	Name      string
	Args      RuntimeconfigVariableArgs
	state     *runtimeconfigVariableState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [RuntimeconfigVariable].
func (rv *RuntimeconfigVariable) Type() string {
	return "google_runtimeconfig_variable"
}

// LocalName returns the local name for [RuntimeconfigVariable].
func (rv *RuntimeconfigVariable) LocalName() string {
	return rv.Name
}

// Configuration returns the configuration (args) for [RuntimeconfigVariable].
func (rv *RuntimeconfigVariable) Configuration() interface{} {
	return rv.Args
}

// DependOn is used for other resources to depend on [RuntimeconfigVariable].
func (rv *RuntimeconfigVariable) DependOn() terra.Reference {
	return terra.ReferenceResource(rv)
}

// Dependencies returns the list of resources [RuntimeconfigVariable] depends_on.
func (rv *RuntimeconfigVariable) Dependencies() terra.Dependencies {
	return rv.DependsOn
}

// LifecycleManagement returns the lifecycle block for [RuntimeconfigVariable].
func (rv *RuntimeconfigVariable) LifecycleManagement() *terra.Lifecycle {
	return rv.Lifecycle
}

// Attributes returns the attributes for [RuntimeconfigVariable].
func (rv *RuntimeconfigVariable) Attributes() runtimeconfigVariableAttributes {
	return runtimeconfigVariableAttributes{ref: terra.ReferenceResource(rv)}
}

// ImportState imports the given attribute values into [RuntimeconfigVariable]'s state.
func (rv *RuntimeconfigVariable) ImportState(av io.Reader) error {
	rv.state = &runtimeconfigVariableState{}
	if err := json.NewDecoder(av).Decode(rv.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", rv.Type(), rv.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [RuntimeconfigVariable] has state.
func (rv *RuntimeconfigVariable) State() (*runtimeconfigVariableState, bool) {
	return rv.state, rv.state != nil
}

// StateMust returns the state for [RuntimeconfigVariable]. Panics if the state is nil.
func (rv *RuntimeconfigVariable) StateMust() *runtimeconfigVariableState {
	if rv.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", rv.Type(), rv.LocalName()))
	}
	return rv.state
}

// RuntimeconfigVariableArgs contains the configurations for google_runtimeconfig_variable.
type RuntimeconfigVariableArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Parent: string, required
	Parent terra.StringValue `hcl:"parent,attr" validate:"required"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
	// Text: string, optional
	Text terra.StringValue `hcl:"text,attr"`
	// Value: string, optional
	Value terra.StringValue `hcl:"value,attr"`
}
type runtimeconfigVariableAttributes struct {
	ref terra.Reference
}

// Id returns a reference to field id of google_runtimeconfig_variable.
func (rv runtimeconfigVariableAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(rv.ref.Append("id"))
}

// Name returns a reference to field name of google_runtimeconfig_variable.
func (rv runtimeconfigVariableAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(rv.ref.Append("name"))
}

// Parent returns a reference to field parent of google_runtimeconfig_variable.
func (rv runtimeconfigVariableAttributes) Parent() terra.StringValue {
	return terra.ReferenceAsString(rv.ref.Append("parent"))
}

// Project returns a reference to field project of google_runtimeconfig_variable.
func (rv runtimeconfigVariableAttributes) Project() terra.StringValue {
	return terra.ReferenceAsString(rv.ref.Append("project"))
}

// Text returns a reference to field text of google_runtimeconfig_variable.
func (rv runtimeconfigVariableAttributes) Text() terra.StringValue {
	return terra.ReferenceAsString(rv.ref.Append("text"))
}

// UpdateTime returns a reference to field update_time of google_runtimeconfig_variable.
func (rv runtimeconfigVariableAttributes) UpdateTime() terra.StringValue {
	return terra.ReferenceAsString(rv.ref.Append("update_time"))
}

// Value returns a reference to field value of google_runtimeconfig_variable.
func (rv runtimeconfigVariableAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(rv.ref.Append("value"))
}

type runtimeconfigVariableState struct {
	Id         string `json:"id"`
	Name       string `json:"name"`
	Parent     string `json:"parent"`
	Project    string `json:"project"`
	Text       string `json:"text"`
	UpdateTime string `json:"update_time"`
	Value      string `json:"value"`
}
