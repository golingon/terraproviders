// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package googlebeta

import (
	"encoding/json"
	"fmt"
	documentaiwarehousedocumentschema "github.com/golingon/terraproviders/googlebeta/5.2.0/documentaiwarehousedocumentschema"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

// NewDocumentAiWarehouseDocumentSchema creates a new instance of [DocumentAiWarehouseDocumentSchema].
func NewDocumentAiWarehouseDocumentSchema(name string, args DocumentAiWarehouseDocumentSchemaArgs) *DocumentAiWarehouseDocumentSchema {
	return &DocumentAiWarehouseDocumentSchema{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*DocumentAiWarehouseDocumentSchema)(nil)

// DocumentAiWarehouseDocumentSchema represents the Terraform resource google_document_ai_warehouse_document_schema.
type DocumentAiWarehouseDocumentSchema struct {
	Name      string
	Args      DocumentAiWarehouseDocumentSchemaArgs
	state     *documentAiWarehouseDocumentSchemaState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [DocumentAiWarehouseDocumentSchema].
func (dawds *DocumentAiWarehouseDocumentSchema) Type() string {
	return "google_document_ai_warehouse_document_schema"
}

// LocalName returns the local name for [DocumentAiWarehouseDocumentSchema].
func (dawds *DocumentAiWarehouseDocumentSchema) LocalName() string {
	return dawds.Name
}

// Configuration returns the configuration (args) for [DocumentAiWarehouseDocumentSchema].
func (dawds *DocumentAiWarehouseDocumentSchema) Configuration() interface{} {
	return dawds.Args
}

// DependOn is used for other resources to depend on [DocumentAiWarehouseDocumentSchema].
func (dawds *DocumentAiWarehouseDocumentSchema) DependOn() terra.Reference {
	return terra.ReferenceResource(dawds)
}

// Dependencies returns the list of resources [DocumentAiWarehouseDocumentSchema] depends_on.
func (dawds *DocumentAiWarehouseDocumentSchema) Dependencies() terra.Dependencies {
	return dawds.DependsOn
}

// LifecycleManagement returns the lifecycle block for [DocumentAiWarehouseDocumentSchema].
func (dawds *DocumentAiWarehouseDocumentSchema) LifecycleManagement() *terra.Lifecycle {
	return dawds.Lifecycle
}

// Attributes returns the attributes for [DocumentAiWarehouseDocumentSchema].
func (dawds *DocumentAiWarehouseDocumentSchema) Attributes() documentAiWarehouseDocumentSchemaAttributes {
	return documentAiWarehouseDocumentSchemaAttributes{ref: terra.ReferenceResource(dawds)}
}

// ImportState imports the given attribute values into [DocumentAiWarehouseDocumentSchema]'s state.
func (dawds *DocumentAiWarehouseDocumentSchema) ImportState(av io.Reader) error {
	dawds.state = &documentAiWarehouseDocumentSchemaState{}
	if err := json.NewDecoder(av).Decode(dawds.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", dawds.Type(), dawds.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [DocumentAiWarehouseDocumentSchema] has state.
func (dawds *DocumentAiWarehouseDocumentSchema) State() (*documentAiWarehouseDocumentSchemaState, bool) {
	return dawds.state, dawds.state != nil
}

// StateMust returns the state for [DocumentAiWarehouseDocumentSchema]. Panics if the state is nil.
func (dawds *DocumentAiWarehouseDocumentSchema) StateMust() *documentAiWarehouseDocumentSchemaState {
	if dawds.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", dawds.Type(), dawds.LocalName()))
	}
	return dawds.state
}

// DocumentAiWarehouseDocumentSchemaArgs contains the configurations for google_document_ai_warehouse_document_schema.
type DocumentAiWarehouseDocumentSchemaArgs struct {
	// DisplayName: string, required
	DisplayName terra.StringValue `hcl:"display_name,attr" validate:"required"`
	// DocumentIsFolder: bool, optional
	DocumentIsFolder terra.BoolValue `hcl:"document_is_folder,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Location: string, required
	Location terra.StringValue `hcl:"location,attr" validate:"required"`
	// ProjectNumber: string, required
	ProjectNumber terra.StringValue `hcl:"project_number,attr" validate:"required"`
	// PropertyDefinitions: min=1
	PropertyDefinitions []documentaiwarehousedocumentschema.PropertyDefinitions `hcl:"property_definitions,block" validate:"min=1"`
	// Timeouts: optional
	Timeouts *documentaiwarehousedocumentschema.Timeouts `hcl:"timeouts,block"`
}
type documentAiWarehouseDocumentSchemaAttributes struct {
	ref terra.Reference
}

// DisplayName returns a reference to field display_name of google_document_ai_warehouse_document_schema.
func (dawds documentAiWarehouseDocumentSchemaAttributes) DisplayName() terra.StringValue {
	return terra.ReferenceAsString(dawds.ref.Append("display_name"))
}

// DocumentIsFolder returns a reference to field document_is_folder of google_document_ai_warehouse_document_schema.
func (dawds documentAiWarehouseDocumentSchemaAttributes) DocumentIsFolder() terra.BoolValue {
	return terra.ReferenceAsBool(dawds.ref.Append("document_is_folder"))
}

// Id returns a reference to field id of google_document_ai_warehouse_document_schema.
func (dawds documentAiWarehouseDocumentSchemaAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(dawds.ref.Append("id"))
}

// Location returns a reference to field location of google_document_ai_warehouse_document_schema.
func (dawds documentAiWarehouseDocumentSchemaAttributes) Location() terra.StringValue {
	return terra.ReferenceAsString(dawds.ref.Append("location"))
}

// Name returns a reference to field name of google_document_ai_warehouse_document_schema.
func (dawds documentAiWarehouseDocumentSchemaAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(dawds.ref.Append("name"))
}

// ProjectNumber returns a reference to field project_number of google_document_ai_warehouse_document_schema.
func (dawds documentAiWarehouseDocumentSchemaAttributes) ProjectNumber() terra.StringValue {
	return terra.ReferenceAsString(dawds.ref.Append("project_number"))
}

func (dawds documentAiWarehouseDocumentSchemaAttributes) PropertyDefinitions() terra.ListValue[documentaiwarehousedocumentschema.PropertyDefinitionsAttributes] {
	return terra.ReferenceAsList[documentaiwarehousedocumentschema.PropertyDefinitionsAttributes](dawds.ref.Append("property_definitions"))
}

func (dawds documentAiWarehouseDocumentSchemaAttributes) Timeouts() documentaiwarehousedocumentschema.TimeoutsAttributes {
	return terra.ReferenceAsSingle[documentaiwarehousedocumentschema.TimeoutsAttributes](dawds.ref.Append("timeouts"))
}

type documentAiWarehouseDocumentSchemaState struct {
	DisplayName         string                                                       `json:"display_name"`
	DocumentIsFolder    bool                                                         `json:"document_is_folder"`
	Id                  string                                                       `json:"id"`
	Location            string                                                       `json:"location"`
	Name                string                                                       `json:"name"`
	ProjectNumber       string                                                       `json:"project_number"`
	PropertyDefinitions []documentaiwarehousedocumentschema.PropertyDefinitionsState `json:"property_definitions"`
	Timeouts            *documentaiwarehousedocumentschema.TimeoutsState             `json:"timeouts"`
}
