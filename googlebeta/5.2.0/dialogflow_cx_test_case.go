// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package googlebeta

import (
	"encoding/json"
	"fmt"
	dialogflowcxtestcase "github.com/golingon/terraproviders/googlebeta/5.2.0/dialogflowcxtestcase"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

// NewDialogflowCxTestCase creates a new instance of [DialogflowCxTestCase].
func NewDialogflowCxTestCase(name string, args DialogflowCxTestCaseArgs) *DialogflowCxTestCase {
	return &DialogflowCxTestCase{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*DialogflowCxTestCase)(nil)

// DialogflowCxTestCase represents the Terraform resource google_dialogflow_cx_test_case.
type DialogflowCxTestCase struct {
	Name      string
	Args      DialogflowCxTestCaseArgs
	state     *dialogflowCxTestCaseState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [DialogflowCxTestCase].
func (dctc *DialogflowCxTestCase) Type() string {
	return "google_dialogflow_cx_test_case"
}

// LocalName returns the local name for [DialogflowCxTestCase].
func (dctc *DialogflowCxTestCase) LocalName() string {
	return dctc.Name
}

// Configuration returns the configuration (args) for [DialogflowCxTestCase].
func (dctc *DialogflowCxTestCase) Configuration() interface{} {
	return dctc.Args
}

// DependOn is used for other resources to depend on [DialogflowCxTestCase].
func (dctc *DialogflowCxTestCase) DependOn() terra.Reference {
	return terra.ReferenceResource(dctc)
}

// Dependencies returns the list of resources [DialogflowCxTestCase] depends_on.
func (dctc *DialogflowCxTestCase) Dependencies() terra.Dependencies {
	return dctc.DependsOn
}

// LifecycleManagement returns the lifecycle block for [DialogflowCxTestCase].
func (dctc *DialogflowCxTestCase) LifecycleManagement() *terra.Lifecycle {
	return dctc.Lifecycle
}

// Attributes returns the attributes for [DialogflowCxTestCase].
func (dctc *DialogflowCxTestCase) Attributes() dialogflowCxTestCaseAttributes {
	return dialogflowCxTestCaseAttributes{ref: terra.ReferenceResource(dctc)}
}

// ImportState imports the given attribute values into [DialogflowCxTestCase]'s state.
func (dctc *DialogflowCxTestCase) ImportState(av io.Reader) error {
	dctc.state = &dialogflowCxTestCaseState{}
	if err := json.NewDecoder(av).Decode(dctc.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", dctc.Type(), dctc.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [DialogflowCxTestCase] has state.
func (dctc *DialogflowCxTestCase) State() (*dialogflowCxTestCaseState, bool) {
	return dctc.state, dctc.state != nil
}

// StateMust returns the state for [DialogflowCxTestCase]. Panics if the state is nil.
func (dctc *DialogflowCxTestCase) StateMust() *dialogflowCxTestCaseState {
	if dctc.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", dctc.Type(), dctc.LocalName()))
	}
	return dctc.state
}

// DialogflowCxTestCaseArgs contains the configurations for google_dialogflow_cx_test_case.
type DialogflowCxTestCaseArgs struct {
	// DisplayName: string, required
	DisplayName terra.StringValue `hcl:"display_name,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Notes: string, optional
	Notes terra.StringValue `hcl:"notes,attr"`
	// Parent: string, optional
	Parent terra.StringValue `hcl:"parent,attr"`
	// Tags: list of string, optional
	Tags terra.ListValue[terra.StringValue] `hcl:"tags,attr"`
	// LastTestResult: min=0
	LastTestResult []dialogflowcxtestcase.LastTestResult `hcl:"last_test_result,block" validate:"min=0"`
	// TestCaseConversationTurns: min=0
	TestCaseConversationTurns []dialogflowcxtestcase.TestCaseConversationTurns `hcl:"test_case_conversation_turns,block" validate:"min=0"`
	// TestConfig: optional
	TestConfig *dialogflowcxtestcase.TestConfig `hcl:"test_config,block"`
	// Timeouts: optional
	Timeouts *dialogflowcxtestcase.Timeouts `hcl:"timeouts,block"`
}
type dialogflowCxTestCaseAttributes struct {
	ref terra.Reference
}

// CreationTime returns a reference to field creation_time of google_dialogflow_cx_test_case.
func (dctc dialogflowCxTestCaseAttributes) CreationTime() terra.StringValue {
	return terra.ReferenceAsString(dctc.ref.Append("creation_time"))
}

// DisplayName returns a reference to field display_name of google_dialogflow_cx_test_case.
func (dctc dialogflowCxTestCaseAttributes) DisplayName() terra.StringValue {
	return terra.ReferenceAsString(dctc.ref.Append("display_name"))
}

// Id returns a reference to field id of google_dialogflow_cx_test_case.
func (dctc dialogflowCxTestCaseAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(dctc.ref.Append("id"))
}

// Name returns a reference to field name of google_dialogflow_cx_test_case.
func (dctc dialogflowCxTestCaseAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(dctc.ref.Append("name"))
}

// Notes returns a reference to field notes of google_dialogflow_cx_test_case.
func (dctc dialogflowCxTestCaseAttributes) Notes() terra.StringValue {
	return terra.ReferenceAsString(dctc.ref.Append("notes"))
}

// Parent returns a reference to field parent of google_dialogflow_cx_test_case.
func (dctc dialogflowCxTestCaseAttributes) Parent() terra.StringValue {
	return terra.ReferenceAsString(dctc.ref.Append("parent"))
}

// Tags returns a reference to field tags of google_dialogflow_cx_test_case.
func (dctc dialogflowCxTestCaseAttributes) Tags() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](dctc.ref.Append("tags"))
}

func (dctc dialogflowCxTestCaseAttributes) LastTestResult() terra.ListValue[dialogflowcxtestcase.LastTestResultAttributes] {
	return terra.ReferenceAsList[dialogflowcxtestcase.LastTestResultAttributes](dctc.ref.Append("last_test_result"))
}

func (dctc dialogflowCxTestCaseAttributes) TestCaseConversationTurns() terra.ListValue[dialogflowcxtestcase.TestCaseConversationTurnsAttributes] {
	return terra.ReferenceAsList[dialogflowcxtestcase.TestCaseConversationTurnsAttributes](dctc.ref.Append("test_case_conversation_turns"))
}

func (dctc dialogflowCxTestCaseAttributes) TestConfig() terra.ListValue[dialogflowcxtestcase.TestConfigAttributes] {
	return terra.ReferenceAsList[dialogflowcxtestcase.TestConfigAttributes](dctc.ref.Append("test_config"))
}

func (dctc dialogflowCxTestCaseAttributes) Timeouts() dialogflowcxtestcase.TimeoutsAttributes {
	return terra.ReferenceAsSingle[dialogflowcxtestcase.TimeoutsAttributes](dctc.ref.Append("timeouts"))
}

type dialogflowCxTestCaseState struct {
	CreationTime              string                                                `json:"creation_time"`
	DisplayName               string                                                `json:"display_name"`
	Id                        string                                                `json:"id"`
	Name                      string                                                `json:"name"`
	Notes                     string                                                `json:"notes"`
	Parent                    string                                                `json:"parent"`
	Tags                      []string                                              `json:"tags"`
	LastTestResult            []dialogflowcxtestcase.LastTestResultState            `json:"last_test_result"`
	TestCaseConversationTurns []dialogflowcxtestcase.TestCaseConversationTurnsState `json:"test_case_conversation_turns"`
	TestConfig                []dialogflowcxtestcase.TestConfigState                `json:"test_config"`
	Timeouts                  *dialogflowcxtestcase.TimeoutsState                   `json:"timeouts"`
}
