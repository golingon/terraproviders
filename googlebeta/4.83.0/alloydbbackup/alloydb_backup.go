// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package alloydbbackup

import (
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
	terra "github.com/volvo-cars/lingon/pkg/terra"
)

type EncryptionInfo struct{}

type EncryptionConfig struct {
	// KmsKeyName: string, optional
	KmsKeyName terra.StringValue `hcl:"kms_key_name,attr"`
}

type Timeouts struct {
	// Create: string, optional
	Create terra.StringValue `hcl:"create,attr"`
	// Delete: string, optional
	Delete terra.StringValue `hcl:"delete,attr"`
	// Update: string, optional
	Update terra.StringValue `hcl:"update,attr"`
}

type EncryptionInfoAttributes struct {
	ref terra.Reference
}

func (ei EncryptionInfoAttributes) InternalRef() (terra.Reference, error) {
	return ei.ref, nil
}

func (ei EncryptionInfoAttributes) InternalWithRef(ref terra.Reference) EncryptionInfoAttributes {
	return EncryptionInfoAttributes{ref: ref}
}

func (ei EncryptionInfoAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ei.ref.InternalTokens()
}

func (ei EncryptionInfoAttributes) EncryptionType() terra.StringValue {
	return terra.ReferenceAsString(ei.ref.Append("encryption_type"))
}

func (ei EncryptionInfoAttributes) KmsKeyVersions() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](ei.ref.Append("kms_key_versions"))
}

type EncryptionConfigAttributes struct {
	ref terra.Reference
}

func (ec EncryptionConfigAttributes) InternalRef() (terra.Reference, error) {
	return ec.ref, nil
}

func (ec EncryptionConfigAttributes) InternalWithRef(ref terra.Reference) EncryptionConfigAttributes {
	return EncryptionConfigAttributes{ref: ref}
}

func (ec EncryptionConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ec.ref.InternalTokens()
}

func (ec EncryptionConfigAttributes) KmsKeyName() terra.StringValue {
	return terra.ReferenceAsString(ec.ref.Append("kms_key_name"))
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("create"))
}

func (t TimeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("delete"))
}

func (t TimeoutsAttributes) Update() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("update"))
}

type EncryptionInfoState struct {
	EncryptionType string   `json:"encryption_type"`
	KmsKeyVersions []string `json:"kms_key_versions"`
}

type EncryptionConfigState struct {
	KmsKeyName string `json:"kms_key_name"`
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
	Update string `json:"update"`
}
