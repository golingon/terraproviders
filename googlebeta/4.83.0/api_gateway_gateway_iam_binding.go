// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package googlebeta

import (
	"encoding/json"
	"fmt"
	apigatewaygatewayiambinding "github.com/golingon/terraproviders/googlebeta/4.83.0/apigatewaygatewayiambinding"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

// NewApiGatewayGatewayIamBinding creates a new instance of [ApiGatewayGatewayIamBinding].
func NewApiGatewayGatewayIamBinding(name string, args ApiGatewayGatewayIamBindingArgs) *ApiGatewayGatewayIamBinding {
	return &ApiGatewayGatewayIamBinding{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*ApiGatewayGatewayIamBinding)(nil)

// ApiGatewayGatewayIamBinding represents the Terraform resource google_api_gateway_gateway_iam_binding.
type ApiGatewayGatewayIamBinding struct {
	Name      string
	Args      ApiGatewayGatewayIamBindingArgs
	state     *apiGatewayGatewayIamBindingState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [ApiGatewayGatewayIamBinding].
func (aggib *ApiGatewayGatewayIamBinding) Type() string {
	return "google_api_gateway_gateway_iam_binding"
}

// LocalName returns the local name for [ApiGatewayGatewayIamBinding].
func (aggib *ApiGatewayGatewayIamBinding) LocalName() string {
	return aggib.Name
}

// Configuration returns the configuration (args) for [ApiGatewayGatewayIamBinding].
func (aggib *ApiGatewayGatewayIamBinding) Configuration() interface{} {
	return aggib.Args
}

// DependOn is used for other resources to depend on [ApiGatewayGatewayIamBinding].
func (aggib *ApiGatewayGatewayIamBinding) DependOn() terra.Reference {
	return terra.ReferenceResource(aggib)
}

// Dependencies returns the list of resources [ApiGatewayGatewayIamBinding] depends_on.
func (aggib *ApiGatewayGatewayIamBinding) Dependencies() terra.Dependencies {
	return aggib.DependsOn
}

// LifecycleManagement returns the lifecycle block for [ApiGatewayGatewayIamBinding].
func (aggib *ApiGatewayGatewayIamBinding) LifecycleManagement() *terra.Lifecycle {
	return aggib.Lifecycle
}

// Attributes returns the attributes for [ApiGatewayGatewayIamBinding].
func (aggib *ApiGatewayGatewayIamBinding) Attributes() apiGatewayGatewayIamBindingAttributes {
	return apiGatewayGatewayIamBindingAttributes{ref: terra.ReferenceResource(aggib)}
}

// ImportState imports the given attribute values into [ApiGatewayGatewayIamBinding]'s state.
func (aggib *ApiGatewayGatewayIamBinding) ImportState(av io.Reader) error {
	aggib.state = &apiGatewayGatewayIamBindingState{}
	if err := json.NewDecoder(av).Decode(aggib.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", aggib.Type(), aggib.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [ApiGatewayGatewayIamBinding] has state.
func (aggib *ApiGatewayGatewayIamBinding) State() (*apiGatewayGatewayIamBindingState, bool) {
	return aggib.state, aggib.state != nil
}

// StateMust returns the state for [ApiGatewayGatewayIamBinding]. Panics if the state is nil.
func (aggib *ApiGatewayGatewayIamBinding) StateMust() *apiGatewayGatewayIamBindingState {
	if aggib.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", aggib.Type(), aggib.LocalName()))
	}
	return aggib.state
}

// ApiGatewayGatewayIamBindingArgs contains the configurations for google_api_gateway_gateway_iam_binding.
type ApiGatewayGatewayIamBindingArgs struct {
	// Gateway: string, required
	Gateway terra.StringValue `hcl:"gateway,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Members: set of string, required
	Members terra.SetValue[terra.StringValue] `hcl:"members,attr" validate:"required"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
	// Region: string, optional
	Region terra.StringValue `hcl:"region,attr"`
	// Role: string, required
	Role terra.StringValue `hcl:"role,attr" validate:"required"`
	// Condition: optional
	Condition *apigatewaygatewayiambinding.Condition `hcl:"condition,block"`
}
type apiGatewayGatewayIamBindingAttributes struct {
	ref terra.Reference
}

// Etag returns a reference to field etag of google_api_gateway_gateway_iam_binding.
func (aggib apiGatewayGatewayIamBindingAttributes) Etag() terra.StringValue {
	return terra.ReferenceAsString(aggib.ref.Append("etag"))
}

// Gateway returns a reference to field gateway of google_api_gateway_gateway_iam_binding.
func (aggib apiGatewayGatewayIamBindingAttributes) Gateway() terra.StringValue {
	return terra.ReferenceAsString(aggib.ref.Append("gateway"))
}

// Id returns a reference to field id of google_api_gateway_gateway_iam_binding.
func (aggib apiGatewayGatewayIamBindingAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aggib.ref.Append("id"))
}

// Members returns a reference to field members of google_api_gateway_gateway_iam_binding.
func (aggib apiGatewayGatewayIamBindingAttributes) Members() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](aggib.ref.Append("members"))
}

// Project returns a reference to field project of google_api_gateway_gateway_iam_binding.
func (aggib apiGatewayGatewayIamBindingAttributes) Project() terra.StringValue {
	return terra.ReferenceAsString(aggib.ref.Append("project"))
}

// Region returns a reference to field region of google_api_gateway_gateway_iam_binding.
func (aggib apiGatewayGatewayIamBindingAttributes) Region() terra.StringValue {
	return terra.ReferenceAsString(aggib.ref.Append("region"))
}

// Role returns a reference to field role of google_api_gateway_gateway_iam_binding.
func (aggib apiGatewayGatewayIamBindingAttributes) Role() terra.StringValue {
	return terra.ReferenceAsString(aggib.ref.Append("role"))
}

func (aggib apiGatewayGatewayIamBindingAttributes) Condition() terra.ListValue[apigatewaygatewayiambinding.ConditionAttributes] {
	return terra.ReferenceAsList[apigatewaygatewayiambinding.ConditionAttributes](aggib.ref.Append("condition"))
}

type apiGatewayGatewayIamBindingState struct {
	Etag      string                                       `json:"etag"`
	Gateway   string                                       `json:"gateway"`
	Id        string                                       `json:"id"`
	Members   []string                                     `json:"members"`
	Project   string                                       `json:"project"`
	Region    string                                       `json:"region"`
	Role      string                                       `json:"role"`
	Condition []apigatewaygatewayiambinding.ConditionState `json:"condition"`
}
