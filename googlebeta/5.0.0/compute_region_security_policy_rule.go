// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package googlebeta

import (
	"encoding/json"
	"fmt"
	computeregionsecuritypolicyrule "github.com/golingon/terraproviders/googlebeta/5.0.0/computeregionsecuritypolicyrule"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

// NewComputeRegionSecurityPolicyRule creates a new instance of [ComputeRegionSecurityPolicyRule].
func NewComputeRegionSecurityPolicyRule(name string, args ComputeRegionSecurityPolicyRuleArgs) *ComputeRegionSecurityPolicyRule {
	return &ComputeRegionSecurityPolicyRule{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*ComputeRegionSecurityPolicyRule)(nil)

// ComputeRegionSecurityPolicyRule represents the Terraform resource google_compute_region_security_policy_rule.
type ComputeRegionSecurityPolicyRule struct {
	Name      string
	Args      ComputeRegionSecurityPolicyRuleArgs
	state     *computeRegionSecurityPolicyRuleState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [ComputeRegionSecurityPolicyRule].
func (crspr *ComputeRegionSecurityPolicyRule) Type() string {
	return "google_compute_region_security_policy_rule"
}

// LocalName returns the local name for [ComputeRegionSecurityPolicyRule].
func (crspr *ComputeRegionSecurityPolicyRule) LocalName() string {
	return crspr.Name
}

// Configuration returns the configuration (args) for [ComputeRegionSecurityPolicyRule].
func (crspr *ComputeRegionSecurityPolicyRule) Configuration() interface{} {
	return crspr.Args
}

// DependOn is used for other resources to depend on [ComputeRegionSecurityPolicyRule].
func (crspr *ComputeRegionSecurityPolicyRule) DependOn() terra.Reference {
	return terra.ReferenceResource(crspr)
}

// Dependencies returns the list of resources [ComputeRegionSecurityPolicyRule] depends_on.
func (crspr *ComputeRegionSecurityPolicyRule) Dependencies() terra.Dependencies {
	return crspr.DependsOn
}

// LifecycleManagement returns the lifecycle block for [ComputeRegionSecurityPolicyRule].
func (crspr *ComputeRegionSecurityPolicyRule) LifecycleManagement() *terra.Lifecycle {
	return crspr.Lifecycle
}

// Attributes returns the attributes for [ComputeRegionSecurityPolicyRule].
func (crspr *ComputeRegionSecurityPolicyRule) Attributes() computeRegionSecurityPolicyRuleAttributes {
	return computeRegionSecurityPolicyRuleAttributes{ref: terra.ReferenceResource(crspr)}
}

// ImportState imports the given attribute values into [ComputeRegionSecurityPolicyRule]'s state.
func (crspr *ComputeRegionSecurityPolicyRule) ImportState(av io.Reader) error {
	crspr.state = &computeRegionSecurityPolicyRuleState{}
	if err := json.NewDecoder(av).Decode(crspr.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", crspr.Type(), crspr.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [ComputeRegionSecurityPolicyRule] has state.
func (crspr *ComputeRegionSecurityPolicyRule) State() (*computeRegionSecurityPolicyRuleState, bool) {
	return crspr.state, crspr.state != nil
}

// StateMust returns the state for [ComputeRegionSecurityPolicyRule]. Panics if the state is nil.
func (crspr *ComputeRegionSecurityPolicyRule) StateMust() *computeRegionSecurityPolicyRuleState {
	if crspr.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", crspr.Type(), crspr.LocalName()))
	}
	return crspr.state
}

// ComputeRegionSecurityPolicyRuleArgs contains the configurations for google_compute_region_security_policy_rule.
type ComputeRegionSecurityPolicyRuleArgs struct {
	// Action: string, required
	Action terra.StringValue `hcl:"action,attr" validate:"required"`
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Preview: bool, optional
	Preview terra.BoolValue `hcl:"preview,attr"`
	// Priority: number, required
	Priority terra.NumberValue `hcl:"priority,attr" validate:"required"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
	// Region: string, required
	Region terra.StringValue `hcl:"region,attr" validate:"required"`
	// SecurityPolicy: string, required
	SecurityPolicy terra.StringValue `hcl:"security_policy,attr" validate:"required"`
	// Match: optional
	Match *computeregionsecuritypolicyrule.Match `hcl:"match,block"`
	// NetworkMatch: optional
	NetworkMatch *computeregionsecuritypolicyrule.NetworkMatch `hcl:"network_match,block"`
	// Timeouts: optional
	Timeouts *computeregionsecuritypolicyrule.Timeouts `hcl:"timeouts,block"`
}
type computeRegionSecurityPolicyRuleAttributes struct {
	ref terra.Reference
}

// Action returns a reference to field action of google_compute_region_security_policy_rule.
func (crspr computeRegionSecurityPolicyRuleAttributes) Action() terra.StringValue {
	return terra.ReferenceAsString(crspr.ref.Append("action"))
}

// Description returns a reference to field description of google_compute_region_security_policy_rule.
func (crspr computeRegionSecurityPolicyRuleAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(crspr.ref.Append("description"))
}

// Id returns a reference to field id of google_compute_region_security_policy_rule.
func (crspr computeRegionSecurityPolicyRuleAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(crspr.ref.Append("id"))
}

// Preview returns a reference to field preview of google_compute_region_security_policy_rule.
func (crspr computeRegionSecurityPolicyRuleAttributes) Preview() terra.BoolValue {
	return terra.ReferenceAsBool(crspr.ref.Append("preview"))
}

// Priority returns a reference to field priority of google_compute_region_security_policy_rule.
func (crspr computeRegionSecurityPolicyRuleAttributes) Priority() terra.NumberValue {
	return terra.ReferenceAsNumber(crspr.ref.Append("priority"))
}

// Project returns a reference to field project of google_compute_region_security_policy_rule.
func (crspr computeRegionSecurityPolicyRuleAttributes) Project() terra.StringValue {
	return terra.ReferenceAsString(crspr.ref.Append("project"))
}

// Region returns a reference to field region of google_compute_region_security_policy_rule.
func (crspr computeRegionSecurityPolicyRuleAttributes) Region() terra.StringValue {
	return terra.ReferenceAsString(crspr.ref.Append("region"))
}

// SecurityPolicy returns a reference to field security_policy of google_compute_region_security_policy_rule.
func (crspr computeRegionSecurityPolicyRuleAttributes) SecurityPolicy() terra.StringValue {
	return terra.ReferenceAsString(crspr.ref.Append("security_policy"))
}

func (crspr computeRegionSecurityPolicyRuleAttributes) Match() terra.ListValue[computeregionsecuritypolicyrule.MatchAttributes] {
	return terra.ReferenceAsList[computeregionsecuritypolicyrule.MatchAttributes](crspr.ref.Append("match"))
}

func (crspr computeRegionSecurityPolicyRuleAttributes) NetworkMatch() terra.ListValue[computeregionsecuritypolicyrule.NetworkMatchAttributes] {
	return terra.ReferenceAsList[computeregionsecuritypolicyrule.NetworkMatchAttributes](crspr.ref.Append("network_match"))
}

func (crspr computeRegionSecurityPolicyRuleAttributes) Timeouts() computeregionsecuritypolicyrule.TimeoutsAttributes {
	return terra.ReferenceAsSingle[computeregionsecuritypolicyrule.TimeoutsAttributes](crspr.ref.Append("timeouts"))
}

type computeRegionSecurityPolicyRuleState struct {
	Action         string                                              `json:"action"`
	Description    string                                              `json:"description"`
	Id             string                                              `json:"id"`
	Preview        bool                                                `json:"preview"`
	Priority       float64                                             `json:"priority"`
	Project        string                                              `json:"project"`
	Region         string                                              `json:"region"`
	SecurityPolicy string                                              `json:"security_policy"`
	Match          []computeregionsecuritypolicyrule.MatchState        `json:"match"`
	NetworkMatch   []computeregionsecuritypolicyrule.NetworkMatchState `json:"network_match"`
	Timeouts       *computeregionsecuritypolicyrule.TimeoutsState      `json:"timeouts"`
}
