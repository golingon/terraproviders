// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package googlebeta

import (
	"encoding/json"
	"fmt"
	bigquerybireservation "github.com/golingon/terraproviders/googlebeta/5.0.0/bigquerybireservation"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

// NewBigqueryBiReservation creates a new instance of [BigqueryBiReservation].
func NewBigqueryBiReservation(name string, args BigqueryBiReservationArgs) *BigqueryBiReservation {
	return &BigqueryBiReservation{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*BigqueryBiReservation)(nil)

// BigqueryBiReservation represents the Terraform resource google_bigquery_bi_reservation.
type BigqueryBiReservation struct {
	Name      string
	Args      BigqueryBiReservationArgs
	state     *bigqueryBiReservationState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [BigqueryBiReservation].
func (bbr *BigqueryBiReservation) Type() string {
	return "google_bigquery_bi_reservation"
}

// LocalName returns the local name for [BigqueryBiReservation].
func (bbr *BigqueryBiReservation) LocalName() string {
	return bbr.Name
}

// Configuration returns the configuration (args) for [BigqueryBiReservation].
func (bbr *BigqueryBiReservation) Configuration() interface{} {
	return bbr.Args
}

// DependOn is used for other resources to depend on [BigqueryBiReservation].
func (bbr *BigqueryBiReservation) DependOn() terra.Reference {
	return terra.ReferenceResource(bbr)
}

// Dependencies returns the list of resources [BigqueryBiReservation] depends_on.
func (bbr *BigqueryBiReservation) Dependencies() terra.Dependencies {
	return bbr.DependsOn
}

// LifecycleManagement returns the lifecycle block for [BigqueryBiReservation].
func (bbr *BigqueryBiReservation) LifecycleManagement() *terra.Lifecycle {
	return bbr.Lifecycle
}

// Attributes returns the attributes for [BigqueryBiReservation].
func (bbr *BigqueryBiReservation) Attributes() bigqueryBiReservationAttributes {
	return bigqueryBiReservationAttributes{ref: terra.ReferenceResource(bbr)}
}

// ImportState imports the given attribute values into [BigqueryBiReservation]'s state.
func (bbr *BigqueryBiReservation) ImportState(av io.Reader) error {
	bbr.state = &bigqueryBiReservationState{}
	if err := json.NewDecoder(av).Decode(bbr.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", bbr.Type(), bbr.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [BigqueryBiReservation] has state.
func (bbr *BigqueryBiReservation) State() (*bigqueryBiReservationState, bool) {
	return bbr.state, bbr.state != nil
}

// StateMust returns the state for [BigqueryBiReservation]. Panics if the state is nil.
func (bbr *BigqueryBiReservation) StateMust() *bigqueryBiReservationState {
	if bbr.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", bbr.Type(), bbr.LocalName()))
	}
	return bbr.state
}

// BigqueryBiReservationArgs contains the configurations for google_bigquery_bi_reservation.
type BigqueryBiReservationArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Location: string, required
	Location terra.StringValue `hcl:"location,attr" validate:"required"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
	// Size: number, optional
	Size terra.NumberValue `hcl:"size,attr"`
	// PreferredTables: min=0
	PreferredTables []bigquerybireservation.PreferredTables `hcl:"preferred_tables,block" validate:"min=0"`
	// Timeouts: optional
	Timeouts *bigquerybireservation.Timeouts `hcl:"timeouts,block"`
}
type bigqueryBiReservationAttributes struct {
	ref terra.Reference
}

// Id returns a reference to field id of google_bigquery_bi_reservation.
func (bbr bigqueryBiReservationAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(bbr.ref.Append("id"))
}

// Location returns a reference to field location of google_bigquery_bi_reservation.
func (bbr bigqueryBiReservationAttributes) Location() terra.StringValue {
	return terra.ReferenceAsString(bbr.ref.Append("location"))
}

// Name returns a reference to field name of google_bigquery_bi_reservation.
func (bbr bigqueryBiReservationAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(bbr.ref.Append("name"))
}

// Project returns a reference to field project of google_bigquery_bi_reservation.
func (bbr bigqueryBiReservationAttributes) Project() terra.StringValue {
	return terra.ReferenceAsString(bbr.ref.Append("project"))
}

// Size returns a reference to field size of google_bigquery_bi_reservation.
func (bbr bigqueryBiReservationAttributes) Size() terra.NumberValue {
	return terra.ReferenceAsNumber(bbr.ref.Append("size"))
}

// UpdateTime returns a reference to field update_time of google_bigquery_bi_reservation.
func (bbr bigqueryBiReservationAttributes) UpdateTime() terra.StringValue {
	return terra.ReferenceAsString(bbr.ref.Append("update_time"))
}

func (bbr bigqueryBiReservationAttributes) PreferredTables() terra.ListValue[bigquerybireservation.PreferredTablesAttributes] {
	return terra.ReferenceAsList[bigquerybireservation.PreferredTablesAttributes](bbr.ref.Append("preferred_tables"))
}

func (bbr bigqueryBiReservationAttributes) Timeouts() bigquerybireservation.TimeoutsAttributes {
	return terra.ReferenceAsSingle[bigquerybireservation.TimeoutsAttributes](bbr.ref.Append("timeouts"))
}

type bigqueryBiReservationState struct {
	Id              string                                       `json:"id"`
	Location        string                                       `json:"location"`
	Name            string                                       `json:"name"`
	Project         string                                       `json:"project"`
	Size            float64                                      `json:"size"`
	UpdateTime      string                                       `json:"update_time"`
	PreferredTables []bigquerybireservation.PreferredTablesState `json:"preferred_tables"`
	Timeouts        *bigquerybireservation.TimeoutsState         `json:"timeouts"`
}
