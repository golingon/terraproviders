// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package googlebeta

import (
	"encoding/json"
	"fmt"
	sccprojectcustommodule "github.com/golingon/terraproviders/googlebeta/5.0.0/sccprojectcustommodule"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

// NewSccProjectCustomModule creates a new instance of [SccProjectCustomModule].
func NewSccProjectCustomModule(name string, args SccProjectCustomModuleArgs) *SccProjectCustomModule {
	return &SccProjectCustomModule{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*SccProjectCustomModule)(nil)

// SccProjectCustomModule represents the Terraform resource google_scc_project_custom_module.
type SccProjectCustomModule struct {
	Name      string
	Args      SccProjectCustomModuleArgs
	state     *sccProjectCustomModuleState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [SccProjectCustomModule].
func (spcm *SccProjectCustomModule) Type() string {
	return "google_scc_project_custom_module"
}

// LocalName returns the local name for [SccProjectCustomModule].
func (spcm *SccProjectCustomModule) LocalName() string {
	return spcm.Name
}

// Configuration returns the configuration (args) for [SccProjectCustomModule].
func (spcm *SccProjectCustomModule) Configuration() interface{} {
	return spcm.Args
}

// DependOn is used for other resources to depend on [SccProjectCustomModule].
func (spcm *SccProjectCustomModule) DependOn() terra.Reference {
	return terra.ReferenceResource(spcm)
}

// Dependencies returns the list of resources [SccProjectCustomModule] depends_on.
func (spcm *SccProjectCustomModule) Dependencies() terra.Dependencies {
	return spcm.DependsOn
}

// LifecycleManagement returns the lifecycle block for [SccProjectCustomModule].
func (spcm *SccProjectCustomModule) LifecycleManagement() *terra.Lifecycle {
	return spcm.Lifecycle
}

// Attributes returns the attributes for [SccProjectCustomModule].
func (spcm *SccProjectCustomModule) Attributes() sccProjectCustomModuleAttributes {
	return sccProjectCustomModuleAttributes{ref: terra.ReferenceResource(spcm)}
}

// ImportState imports the given attribute values into [SccProjectCustomModule]'s state.
func (spcm *SccProjectCustomModule) ImportState(av io.Reader) error {
	spcm.state = &sccProjectCustomModuleState{}
	if err := json.NewDecoder(av).Decode(spcm.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", spcm.Type(), spcm.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [SccProjectCustomModule] has state.
func (spcm *SccProjectCustomModule) State() (*sccProjectCustomModuleState, bool) {
	return spcm.state, spcm.state != nil
}

// StateMust returns the state for [SccProjectCustomModule]. Panics if the state is nil.
func (spcm *SccProjectCustomModule) StateMust() *sccProjectCustomModuleState {
	if spcm.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", spcm.Type(), spcm.LocalName()))
	}
	return spcm.state
}

// SccProjectCustomModuleArgs contains the configurations for google_scc_project_custom_module.
type SccProjectCustomModuleArgs struct {
	// DisplayName: string, required
	DisplayName terra.StringValue `hcl:"display_name,attr" validate:"required"`
	// EnablementState: string, required
	EnablementState terra.StringValue `hcl:"enablement_state,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
	// CustomConfig: required
	CustomConfig *sccprojectcustommodule.CustomConfig `hcl:"custom_config,block" validate:"required"`
	// Timeouts: optional
	Timeouts *sccprojectcustommodule.Timeouts `hcl:"timeouts,block"`
}
type sccProjectCustomModuleAttributes struct {
	ref terra.Reference
}

// AncestorModule returns a reference to field ancestor_module of google_scc_project_custom_module.
func (spcm sccProjectCustomModuleAttributes) AncestorModule() terra.StringValue {
	return terra.ReferenceAsString(spcm.ref.Append("ancestor_module"))
}

// DisplayName returns a reference to field display_name of google_scc_project_custom_module.
func (spcm sccProjectCustomModuleAttributes) DisplayName() terra.StringValue {
	return terra.ReferenceAsString(spcm.ref.Append("display_name"))
}

// EnablementState returns a reference to field enablement_state of google_scc_project_custom_module.
func (spcm sccProjectCustomModuleAttributes) EnablementState() terra.StringValue {
	return terra.ReferenceAsString(spcm.ref.Append("enablement_state"))
}

// Id returns a reference to field id of google_scc_project_custom_module.
func (spcm sccProjectCustomModuleAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(spcm.ref.Append("id"))
}

// LastEditor returns a reference to field last_editor of google_scc_project_custom_module.
func (spcm sccProjectCustomModuleAttributes) LastEditor() terra.StringValue {
	return terra.ReferenceAsString(spcm.ref.Append("last_editor"))
}

// Name returns a reference to field name of google_scc_project_custom_module.
func (spcm sccProjectCustomModuleAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(spcm.ref.Append("name"))
}

// Project returns a reference to field project of google_scc_project_custom_module.
func (spcm sccProjectCustomModuleAttributes) Project() terra.StringValue {
	return terra.ReferenceAsString(spcm.ref.Append("project"))
}

// UpdateTime returns a reference to field update_time of google_scc_project_custom_module.
func (spcm sccProjectCustomModuleAttributes) UpdateTime() terra.StringValue {
	return terra.ReferenceAsString(spcm.ref.Append("update_time"))
}

func (spcm sccProjectCustomModuleAttributes) CustomConfig() terra.ListValue[sccprojectcustommodule.CustomConfigAttributes] {
	return terra.ReferenceAsList[sccprojectcustommodule.CustomConfigAttributes](spcm.ref.Append("custom_config"))
}

func (spcm sccProjectCustomModuleAttributes) Timeouts() sccprojectcustommodule.TimeoutsAttributes {
	return terra.ReferenceAsSingle[sccprojectcustommodule.TimeoutsAttributes](spcm.ref.Append("timeouts"))
}

type sccProjectCustomModuleState struct {
	AncestorModule  string                                     `json:"ancestor_module"`
	DisplayName     string                                     `json:"display_name"`
	EnablementState string                                     `json:"enablement_state"`
	Id              string                                     `json:"id"`
	LastEditor      string                                     `json:"last_editor"`
	Name            string                                     `json:"name"`
	Project         string                                     `json:"project"`
	UpdateTime      string                                     `json:"update_time"`
	CustomConfig    []sccprojectcustommodule.CustomConfigState `json:"custom_config"`
	Timeouts        *sccprojectcustommodule.TimeoutsState      `json:"timeouts"`
}
