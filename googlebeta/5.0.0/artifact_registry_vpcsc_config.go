// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package googlebeta

import (
	"encoding/json"
	"fmt"
	artifactregistryvpcscconfig "github.com/golingon/terraproviders/googlebeta/5.0.0/artifactregistryvpcscconfig"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

// NewArtifactRegistryVpcscConfig creates a new instance of [ArtifactRegistryVpcscConfig].
func NewArtifactRegistryVpcscConfig(name string, args ArtifactRegistryVpcscConfigArgs) *ArtifactRegistryVpcscConfig {
	return &ArtifactRegistryVpcscConfig{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*ArtifactRegistryVpcscConfig)(nil)

// ArtifactRegistryVpcscConfig represents the Terraform resource google_artifact_registry_vpcsc_config.
type ArtifactRegistryVpcscConfig struct {
	Name      string
	Args      ArtifactRegistryVpcscConfigArgs
	state     *artifactRegistryVpcscConfigState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [ArtifactRegistryVpcscConfig].
func (arvc *ArtifactRegistryVpcscConfig) Type() string {
	return "google_artifact_registry_vpcsc_config"
}

// LocalName returns the local name for [ArtifactRegistryVpcscConfig].
func (arvc *ArtifactRegistryVpcscConfig) LocalName() string {
	return arvc.Name
}

// Configuration returns the configuration (args) for [ArtifactRegistryVpcscConfig].
func (arvc *ArtifactRegistryVpcscConfig) Configuration() interface{} {
	return arvc.Args
}

// DependOn is used for other resources to depend on [ArtifactRegistryVpcscConfig].
func (arvc *ArtifactRegistryVpcscConfig) DependOn() terra.Reference {
	return terra.ReferenceResource(arvc)
}

// Dependencies returns the list of resources [ArtifactRegistryVpcscConfig] depends_on.
func (arvc *ArtifactRegistryVpcscConfig) Dependencies() terra.Dependencies {
	return arvc.DependsOn
}

// LifecycleManagement returns the lifecycle block for [ArtifactRegistryVpcscConfig].
func (arvc *ArtifactRegistryVpcscConfig) LifecycleManagement() *terra.Lifecycle {
	return arvc.Lifecycle
}

// Attributes returns the attributes for [ArtifactRegistryVpcscConfig].
func (arvc *ArtifactRegistryVpcscConfig) Attributes() artifactRegistryVpcscConfigAttributes {
	return artifactRegistryVpcscConfigAttributes{ref: terra.ReferenceResource(arvc)}
}

// ImportState imports the given attribute values into [ArtifactRegistryVpcscConfig]'s state.
func (arvc *ArtifactRegistryVpcscConfig) ImportState(av io.Reader) error {
	arvc.state = &artifactRegistryVpcscConfigState{}
	if err := json.NewDecoder(av).Decode(arvc.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", arvc.Type(), arvc.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [ArtifactRegistryVpcscConfig] has state.
func (arvc *ArtifactRegistryVpcscConfig) State() (*artifactRegistryVpcscConfigState, bool) {
	return arvc.state, arvc.state != nil
}

// StateMust returns the state for [ArtifactRegistryVpcscConfig]. Panics if the state is nil.
func (arvc *ArtifactRegistryVpcscConfig) StateMust() *artifactRegistryVpcscConfigState {
	if arvc.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", arvc.Type(), arvc.LocalName()))
	}
	return arvc.state
}

// ArtifactRegistryVpcscConfigArgs contains the configurations for google_artifact_registry_vpcsc_config.
type ArtifactRegistryVpcscConfigArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Location: string, optional
	Location terra.StringValue `hcl:"location,attr"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
	// VpcscPolicy: string, optional
	VpcscPolicy terra.StringValue `hcl:"vpcsc_policy,attr"`
	// Timeouts: optional
	Timeouts *artifactregistryvpcscconfig.Timeouts `hcl:"timeouts,block"`
}
type artifactRegistryVpcscConfigAttributes struct {
	ref terra.Reference
}

// Id returns a reference to field id of google_artifact_registry_vpcsc_config.
func (arvc artifactRegistryVpcscConfigAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(arvc.ref.Append("id"))
}

// Location returns a reference to field location of google_artifact_registry_vpcsc_config.
func (arvc artifactRegistryVpcscConfigAttributes) Location() terra.StringValue {
	return terra.ReferenceAsString(arvc.ref.Append("location"))
}

// Name returns a reference to field name of google_artifact_registry_vpcsc_config.
func (arvc artifactRegistryVpcscConfigAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(arvc.ref.Append("name"))
}

// Project returns a reference to field project of google_artifact_registry_vpcsc_config.
func (arvc artifactRegistryVpcscConfigAttributes) Project() terra.StringValue {
	return terra.ReferenceAsString(arvc.ref.Append("project"))
}

// VpcscPolicy returns a reference to field vpcsc_policy of google_artifact_registry_vpcsc_config.
func (arvc artifactRegistryVpcscConfigAttributes) VpcscPolicy() terra.StringValue {
	return terra.ReferenceAsString(arvc.ref.Append("vpcsc_policy"))
}

func (arvc artifactRegistryVpcscConfigAttributes) Timeouts() artifactregistryvpcscconfig.TimeoutsAttributes {
	return terra.ReferenceAsSingle[artifactregistryvpcscconfig.TimeoutsAttributes](arvc.ref.Append("timeouts"))
}

type artifactRegistryVpcscConfigState struct {
	Id          string                                     `json:"id"`
	Location    string                                     `json:"location"`
	Name        string                                     `json:"name"`
	Project     string                                     `json:"project"`
	VpcscPolicy string                                     `json:"vpcsc_policy"`
	Timeouts    *artifactregistryvpcscconfig.TimeoutsState `json:"timeouts"`
}
