// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package backupdrmanagementserver

import (
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
	terra "github.com/volvo-cars/lingon/pkg/terra"
)

type ManagementUri struct{}

type Networks struct {
	// Network: string, required
	Network terra.StringValue `hcl:"network,attr" validate:"required"`
	// PeeringMode: string, optional
	PeeringMode terra.StringValue `hcl:"peering_mode,attr"`
}

type Timeouts struct {
	// Create: string, optional
	Create terra.StringValue `hcl:"create,attr"`
	// Delete: string, optional
	Delete terra.StringValue `hcl:"delete,attr"`
}

type ManagementUriAttributes struct {
	ref terra.Reference
}

func (mu ManagementUriAttributes) InternalRef() (terra.Reference, error) {
	return mu.ref, nil
}

func (mu ManagementUriAttributes) InternalWithRef(ref terra.Reference) ManagementUriAttributes {
	return ManagementUriAttributes{ref: ref}
}

func (mu ManagementUriAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return mu.ref.InternalTokens()
}

func (mu ManagementUriAttributes) Api() terra.StringValue {
	return terra.ReferenceAsString(mu.ref.Append("api"))
}

func (mu ManagementUriAttributes) WebUi() terra.StringValue {
	return terra.ReferenceAsString(mu.ref.Append("web_ui"))
}

type NetworksAttributes struct {
	ref terra.Reference
}

func (n NetworksAttributes) InternalRef() (terra.Reference, error) {
	return n.ref, nil
}

func (n NetworksAttributes) InternalWithRef(ref terra.Reference) NetworksAttributes {
	return NetworksAttributes{ref: ref}
}

func (n NetworksAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return n.ref.InternalTokens()
}

func (n NetworksAttributes) Network() terra.StringValue {
	return terra.ReferenceAsString(n.ref.Append("network"))
}

func (n NetworksAttributes) PeeringMode() terra.StringValue {
	return terra.ReferenceAsString(n.ref.Append("peering_mode"))
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("create"))
}

func (t TimeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("delete"))
}

type ManagementUriState struct {
	Api   string `json:"api"`
	WebUi string `json:"web_ui"`
}

type NetworksState struct {
	Network     string `json:"network"`
	PeeringMode string `json:"peering_mode"`
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
}
