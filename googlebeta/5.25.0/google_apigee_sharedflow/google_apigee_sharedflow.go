// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google_apigee_sharedflow

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource google_apigee_sharedflow.
type Resource struct {
	Name      string
	Args      Args
	state     *googleApigeeSharedflowState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (gas *Resource) Type() string {
	return "google_apigee_sharedflow"
}

// LocalName returns the local name for [Resource].
func (gas *Resource) LocalName() string {
	return gas.Name
}

// Configuration returns the configuration (args) for [Resource].
func (gas *Resource) Configuration() interface{} {
	return gas.Args
}

// DependOn is used for other resources to depend on [Resource].
func (gas *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(gas)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (gas *Resource) Dependencies() terra.Dependencies {
	return gas.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (gas *Resource) LifecycleManagement() *terra.Lifecycle {
	return gas.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (gas *Resource) Attributes() googleApigeeSharedflowAttributes {
	return googleApigeeSharedflowAttributes{ref: terra.ReferenceResource(gas)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (gas *Resource) ImportState(state io.Reader) error {
	gas.state = &googleApigeeSharedflowState{}
	if err := json.NewDecoder(state).Decode(gas.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", gas.Type(), gas.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (gas *Resource) State() (*googleApigeeSharedflowState, bool) {
	return gas.state, gas.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (gas *Resource) StateMust() *googleApigeeSharedflowState {
	if gas.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", gas.Type(), gas.LocalName()))
	}
	return gas.state
}

// Args contains the configurations for google_apigee_sharedflow.
type Args struct {
	// ConfigBundle: string, required
	ConfigBundle terra.StringValue `hcl:"config_bundle,attr" validate:"required"`
	// DetectMd5Hash: string, optional
	DetectMd5Hash terra.StringValue `hcl:"detect_md5hash,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// OrgId: string, required
	OrgId terra.StringValue `hcl:"org_id,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type googleApigeeSharedflowAttributes struct {
	ref terra.Reference
}

// ConfigBundle returns a reference to field config_bundle of google_apigee_sharedflow.
func (gas googleApigeeSharedflowAttributes) ConfigBundle() terra.StringValue {
	return terra.ReferenceAsString(gas.ref.Append("config_bundle"))
}

// DetectMd5Hash returns a reference to field detect_md5hash of google_apigee_sharedflow.
func (gas googleApigeeSharedflowAttributes) DetectMd5Hash() terra.StringValue {
	return terra.ReferenceAsString(gas.ref.Append("detect_md5hash"))
}

// Id returns a reference to field id of google_apigee_sharedflow.
func (gas googleApigeeSharedflowAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(gas.ref.Append("id"))
}

// LatestRevisionId returns a reference to field latest_revision_id of google_apigee_sharedflow.
func (gas googleApigeeSharedflowAttributes) LatestRevisionId() terra.StringValue {
	return terra.ReferenceAsString(gas.ref.Append("latest_revision_id"))
}

// Md5Hash returns a reference to field md5hash of google_apigee_sharedflow.
func (gas googleApigeeSharedflowAttributes) Md5Hash() terra.StringValue {
	return terra.ReferenceAsString(gas.ref.Append("md5hash"))
}

// Name returns a reference to field name of google_apigee_sharedflow.
func (gas googleApigeeSharedflowAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(gas.ref.Append("name"))
}

// OrgId returns a reference to field org_id of google_apigee_sharedflow.
func (gas googleApigeeSharedflowAttributes) OrgId() terra.StringValue {
	return terra.ReferenceAsString(gas.ref.Append("org_id"))
}

// Revision returns a reference to field revision of google_apigee_sharedflow.
func (gas googleApigeeSharedflowAttributes) Revision() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](gas.ref.Append("revision"))
}

func (gas googleApigeeSharedflowAttributes) MetaData() terra.ListValue[MetaDataAttributes] {
	return terra.ReferenceAsList[MetaDataAttributes](gas.ref.Append("meta_data"))
}

func (gas googleApigeeSharedflowAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](gas.ref.Append("timeouts"))
}

type googleApigeeSharedflowState struct {
	ConfigBundle     string          `json:"config_bundle"`
	DetectMd5Hash    string          `json:"detect_md5hash"`
	Id               string          `json:"id"`
	LatestRevisionId string          `json:"latest_revision_id"`
	Md5Hash          string          `json:"md5hash"`
	Name             string          `json:"name"`
	OrgId            string          `json:"org_id"`
	Revision         []string        `json:"revision"`
	MetaData         []MetaDataState `json:"meta_data"`
	Timeouts         *TimeoutsState  `json:"timeouts"`
}
