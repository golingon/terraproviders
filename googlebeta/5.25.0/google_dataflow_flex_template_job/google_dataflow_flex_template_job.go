// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google_dataflow_flex_template_job

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource google_dataflow_flex_template_job.
type Resource struct {
	Name      string
	Args      Args
	state     *googleDataflowFlexTemplateJobState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (gdftj *Resource) Type() string {
	return "google_dataflow_flex_template_job"
}

// LocalName returns the local name for [Resource].
func (gdftj *Resource) LocalName() string {
	return gdftj.Name
}

// Configuration returns the configuration (args) for [Resource].
func (gdftj *Resource) Configuration() interface{} {
	return gdftj.Args
}

// DependOn is used for other resources to depend on [Resource].
func (gdftj *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(gdftj)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (gdftj *Resource) Dependencies() terra.Dependencies {
	return gdftj.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (gdftj *Resource) LifecycleManagement() *terra.Lifecycle {
	return gdftj.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (gdftj *Resource) Attributes() googleDataflowFlexTemplateJobAttributes {
	return googleDataflowFlexTemplateJobAttributes{ref: terra.ReferenceResource(gdftj)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (gdftj *Resource) ImportState(state io.Reader) error {
	gdftj.state = &googleDataflowFlexTemplateJobState{}
	if err := json.NewDecoder(state).Decode(gdftj.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", gdftj.Type(), gdftj.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (gdftj *Resource) State() (*googleDataflowFlexTemplateJobState, bool) {
	return gdftj.state, gdftj.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (gdftj *Resource) StateMust() *googleDataflowFlexTemplateJobState {
	if gdftj.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", gdftj.Type(), gdftj.LocalName()))
	}
	return gdftj.state
}

// Args contains the configurations for google_dataflow_flex_template_job.
type Args struct {
	// AdditionalExperiments: set of string, optional
	AdditionalExperiments terra.SetValue[terra.StringValue] `hcl:"additional_experiments,attr"`
	// AutoscalingAlgorithm: string, optional
	AutoscalingAlgorithm terra.StringValue `hcl:"autoscaling_algorithm,attr"`
	// ContainerSpecGcsPath: string, required
	ContainerSpecGcsPath terra.StringValue `hcl:"container_spec_gcs_path,attr" validate:"required"`
	// EnableStreamingEngine: bool, optional
	EnableStreamingEngine terra.BoolValue `hcl:"enable_streaming_engine,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// IpConfiguration: string, optional
	IpConfiguration terra.StringValue `hcl:"ip_configuration,attr"`
	// KmsKeyName: string, optional
	KmsKeyName terra.StringValue `hcl:"kms_key_name,attr"`
	// Labels: map of string, optional
	Labels terra.MapValue[terra.StringValue] `hcl:"labels,attr"`
	// LauncherMachineType: string, optional
	LauncherMachineType terra.StringValue `hcl:"launcher_machine_type,attr"`
	// MachineType: string, optional
	MachineType terra.StringValue `hcl:"machine_type,attr"`
	// MaxWorkers: number, optional
	MaxWorkers terra.NumberValue `hcl:"max_workers,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Network: string, optional
	Network terra.StringValue `hcl:"network,attr"`
	// NumWorkers: number, optional
	NumWorkers terra.NumberValue `hcl:"num_workers,attr"`
	// OnDelete: string, optional
	OnDelete terra.StringValue `hcl:"on_delete,attr"`
	// Parameters: map of string, optional
	Parameters terra.MapValue[terra.StringValue] `hcl:"parameters,attr"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
	// Region: string, optional
	Region terra.StringValue `hcl:"region,attr"`
	// SdkContainerImage: string, optional
	SdkContainerImage terra.StringValue `hcl:"sdk_container_image,attr"`
	// ServiceAccountEmail: string, optional
	ServiceAccountEmail terra.StringValue `hcl:"service_account_email,attr"`
	// SkipWaitOnJobTermination: bool, optional
	SkipWaitOnJobTermination terra.BoolValue `hcl:"skip_wait_on_job_termination,attr"`
	// StagingLocation: string, optional
	StagingLocation terra.StringValue `hcl:"staging_location,attr"`
	// Subnetwork: string, optional
	Subnetwork terra.StringValue `hcl:"subnetwork,attr"`
	// TempLocation: string, optional
	TempLocation terra.StringValue `hcl:"temp_location,attr"`
	// TransformNameMapping: map of string, optional
	TransformNameMapping terra.MapValue[terra.StringValue] `hcl:"transform_name_mapping,attr"`
}

type googleDataflowFlexTemplateJobAttributes struct {
	ref terra.Reference
}

// AdditionalExperiments returns a reference to field additional_experiments of google_dataflow_flex_template_job.
func (gdftj googleDataflowFlexTemplateJobAttributes) AdditionalExperiments() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](gdftj.ref.Append("additional_experiments"))
}

// AutoscalingAlgorithm returns a reference to field autoscaling_algorithm of google_dataflow_flex_template_job.
func (gdftj googleDataflowFlexTemplateJobAttributes) AutoscalingAlgorithm() terra.StringValue {
	return terra.ReferenceAsString(gdftj.ref.Append("autoscaling_algorithm"))
}

// ContainerSpecGcsPath returns a reference to field container_spec_gcs_path of google_dataflow_flex_template_job.
func (gdftj googleDataflowFlexTemplateJobAttributes) ContainerSpecGcsPath() terra.StringValue {
	return terra.ReferenceAsString(gdftj.ref.Append("container_spec_gcs_path"))
}

// EffectiveLabels returns a reference to field effective_labels of google_dataflow_flex_template_job.
func (gdftj googleDataflowFlexTemplateJobAttributes) EffectiveLabels() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](gdftj.ref.Append("effective_labels"))
}

// EnableStreamingEngine returns a reference to field enable_streaming_engine of google_dataflow_flex_template_job.
func (gdftj googleDataflowFlexTemplateJobAttributes) EnableStreamingEngine() terra.BoolValue {
	return terra.ReferenceAsBool(gdftj.ref.Append("enable_streaming_engine"))
}

// Id returns a reference to field id of google_dataflow_flex_template_job.
func (gdftj googleDataflowFlexTemplateJobAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(gdftj.ref.Append("id"))
}

// IpConfiguration returns a reference to field ip_configuration of google_dataflow_flex_template_job.
func (gdftj googleDataflowFlexTemplateJobAttributes) IpConfiguration() terra.StringValue {
	return terra.ReferenceAsString(gdftj.ref.Append("ip_configuration"))
}

// JobId returns a reference to field job_id of google_dataflow_flex_template_job.
func (gdftj googleDataflowFlexTemplateJobAttributes) JobId() terra.StringValue {
	return terra.ReferenceAsString(gdftj.ref.Append("job_id"))
}

// KmsKeyName returns a reference to field kms_key_name of google_dataflow_flex_template_job.
func (gdftj googleDataflowFlexTemplateJobAttributes) KmsKeyName() terra.StringValue {
	return terra.ReferenceAsString(gdftj.ref.Append("kms_key_name"))
}

// Labels returns a reference to field labels of google_dataflow_flex_template_job.
func (gdftj googleDataflowFlexTemplateJobAttributes) Labels() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](gdftj.ref.Append("labels"))
}

// LauncherMachineType returns a reference to field launcher_machine_type of google_dataflow_flex_template_job.
func (gdftj googleDataflowFlexTemplateJobAttributes) LauncherMachineType() terra.StringValue {
	return terra.ReferenceAsString(gdftj.ref.Append("launcher_machine_type"))
}

// MachineType returns a reference to field machine_type of google_dataflow_flex_template_job.
func (gdftj googleDataflowFlexTemplateJobAttributes) MachineType() terra.StringValue {
	return terra.ReferenceAsString(gdftj.ref.Append("machine_type"))
}

// MaxWorkers returns a reference to field max_workers of google_dataflow_flex_template_job.
func (gdftj googleDataflowFlexTemplateJobAttributes) MaxWorkers() terra.NumberValue {
	return terra.ReferenceAsNumber(gdftj.ref.Append("max_workers"))
}

// Name returns a reference to field name of google_dataflow_flex_template_job.
func (gdftj googleDataflowFlexTemplateJobAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(gdftj.ref.Append("name"))
}

// Network returns a reference to field network of google_dataflow_flex_template_job.
func (gdftj googleDataflowFlexTemplateJobAttributes) Network() terra.StringValue {
	return terra.ReferenceAsString(gdftj.ref.Append("network"))
}

// NumWorkers returns a reference to field num_workers of google_dataflow_flex_template_job.
func (gdftj googleDataflowFlexTemplateJobAttributes) NumWorkers() terra.NumberValue {
	return terra.ReferenceAsNumber(gdftj.ref.Append("num_workers"))
}

// OnDelete returns a reference to field on_delete of google_dataflow_flex_template_job.
func (gdftj googleDataflowFlexTemplateJobAttributes) OnDelete() terra.StringValue {
	return terra.ReferenceAsString(gdftj.ref.Append("on_delete"))
}

// Parameters returns a reference to field parameters of google_dataflow_flex_template_job.
func (gdftj googleDataflowFlexTemplateJobAttributes) Parameters() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](gdftj.ref.Append("parameters"))
}

// Project returns a reference to field project of google_dataflow_flex_template_job.
func (gdftj googleDataflowFlexTemplateJobAttributes) Project() terra.StringValue {
	return terra.ReferenceAsString(gdftj.ref.Append("project"))
}

// Region returns a reference to field region of google_dataflow_flex_template_job.
func (gdftj googleDataflowFlexTemplateJobAttributes) Region() terra.StringValue {
	return terra.ReferenceAsString(gdftj.ref.Append("region"))
}

// SdkContainerImage returns a reference to field sdk_container_image of google_dataflow_flex_template_job.
func (gdftj googleDataflowFlexTemplateJobAttributes) SdkContainerImage() terra.StringValue {
	return terra.ReferenceAsString(gdftj.ref.Append("sdk_container_image"))
}

// ServiceAccountEmail returns a reference to field service_account_email of google_dataflow_flex_template_job.
func (gdftj googleDataflowFlexTemplateJobAttributes) ServiceAccountEmail() terra.StringValue {
	return terra.ReferenceAsString(gdftj.ref.Append("service_account_email"))
}

// SkipWaitOnJobTermination returns a reference to field skip_wait_on_job_termination of google_dataflow_flex_template_job.
func (gdftj googleDataflowFlexTemplateJobAttributes) SkipWaitOnJobTermination() terra.BoolValue {
	return terra.ReferenceAsBool(gdftj.ref.Append("skip_wait_on_job_termination"))
}

// StagingLocation returns a reference to field staging_location of google_dataflow_flex_template_job.
func (gdftj googleDataflowFlexTemplateJobAttributes) StagingLocation() terra.StringValue {
	return terra.ReferenceAsString(gdftj.ref.Append("staging_location"))
}

// State returns a reference to field state of google_dataflow_flex_template_job.
func (gdftj googleDataflowFlexTemplateJobAttributes) State() terra.StringValue {
	return terra.ReferenceAsString(gdftj.ref.Append("state"))
}

// Subnetwork returns a reference to field subnetwork of google_dataflow_flex_template_job.
func (gdftj googleDataflowFlexTemplateJobAttributes) Subnetwork() terra.StringValue {
	return terra.ReferenceAsString(gdftj.ref.Append("subnetwork"))
}

// TempLocation returns a reference to field temp_location of google_dataflow_flex_template_job.
func (gdftj googleDataflowFlexTemplateJobAttributes) TempLocation() terra.StringValue {
	return terra.ReferenceAsString(gdftj.ref.Append("temp_location"))
}

// TerraformLabels returns a reference to field terraform_labels of google_dataflow_flex_template_job.
func (gdftj googleDataflowFlexTemplateJobAttributes) TerraformLabels() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](gdftj.ref.Append("terraform_labels"))
}

// TransformNameMapping returns a reference to field transform_name_mapping of google_dataflow_flex_template_job.
func (gdftj googleDataflowFlexTemplateJobAttributes) TransformNameMapping() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](gdftj.ref.Append("transform_name_mapping"))
}

// Type returns a reference to field type of google_dataflow_flex_template_job.
func (gdftj googleDataflowFlexTemplateJobAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(gdftj.ref.Append("type"))
}

type googleDataflowFlexTemplateJobState struct {
	AdditionalExperiments    []string          `json:"additional_experiments"`
	AutoscalingAlgorithm     string            `json:"autoscaling_algorithm"`
	ContainerSpecGcsPath     string            `json:"container_spec_gcs_path"`
	EffectiveLabels          map[string]string `json:"effective_labels"`
	EnableStreamingEngine    bool              `json:"enable_streaming_engine"`
	Id                       string            `json:"id"`
	IpConfiguration          string            `json:"ip_configuration"`
	JobId                    string            `json:"job_id"`
	KmsKeyName               string            `json:"kms_key_name"`
	Labels                   map[string]string `json:"labels"`
	LauncherMachineType      string            `json:"launcher_machine_type"`
	MachineType              string            `json:"machine_type"`
	MaxWorkers               float64           `json:"max_workers"`
	Name                     string            `json:"name"`
	Network                  string            `json:"network"`
	NumWorkers               float64           `json:"num_workers"`
	OnDelete                 string            `json:"on_delete"`
	Parameters               map[string]string `json:"parameters"`
	Project                  string            `json:"project"`
	Region                   string            `json:"region"`
	SdkContainerImage        string            `json:"sdk_container_image"`
	ServiceAccountEmail      string            `json:"service_account_email"`
	SkipWaitOnJobTermination bool              `json:"skip_wait_on_job_termination"`
	StagingLocation          string            `json:"staging_location"`
	State                    string            `json:"state"`
	Subnetwork               string            `json:"subnetwork"`
	TempLocation             string            `json:"temp_location"`
	TerraformLabels          map[string]string `json:"terraform_labels"`
	TransformNameMapping     map[string]string `json:"transform_name_mapping"`
	Type                     string            `json:"type"`
}
