// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google_apigee_nat_address

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource google_apigee_nat_address.
type Resource struct {
	Name      string
	Args      Args
	state     *googleApigeeNatAddressState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (gana *Resource) Type() string {
	return "google_apigee_nat_address"
}

// LocalName returns the local name for [Resource].
func (gana *Resource) LocalName() string {
	return gana.Name
}

// Configuration returns the configuration (args) for [Resource].
func (gana *Resource) Configuration() interface{} {
	return gana.Args
}

// DependOn is used for other resources to depend on [Resource].
func (gana *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(gana)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (gana *Resource) Dependencies() terra.Dependencies {
	return gana.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (gana *Resource) LifecycleManagement() *terra.Lifecycle {
	return gana.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (gana *Resource) Attributes() googleApigeeNatAddressAttributes {
	return googleApigeeNatAddressAttributes{ref: terra.ReferenceResource(gana)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (gana *Resource) ImportState(state io.Reader) error {
	gana.state = &googleApigeeNatAddressState{}
	if err := json.NewDecoder(state).Decode(gana.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", gana.Type(), gana.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (gana *Resource) State() (*googleApigeeNatAddressState, bool) {
	return gana.state, gana.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (gana *Resource) StateMust() *googleApigeeNatAddressState {
	if gana.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", gana.Type(), gana.LocalName()))
	}
	return gana.state
}

// Args contains the configurations for google_apigee_nat_address.
type Args struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// InstanceId: string, required
	InstanceId terra.StringValue `hcl:"instance_id,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type googleApigeeNatAddressAttributes struct {
	ref terra.Reference
}

// Id returns a reference to field id of google_apigee_nat_address.
func (gana googleApigeeNatAddressAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(gana.ref.Append("id"))
}

// InstanceId returns a reference to field instance_id of google_apigee_nat_address.
func (gana googleApigeeNatAddressAttributes) InstanceId() terra.StringValue {
	return terra.ReferenceAsString(gana.ref.Append("instance_id"))
}

// IpAddress returns a reference to field ip_address of google_apigee_nat_address.
func (gana googleApigeeNatAddressAttributes) IpAddress() terra.StringValue {
	return terra.ReferenceAsString(gana.ref.Append("ip_address"))
}

// Name returns a reference to field name of google_apigee_nat_address.
func (gana googleApigeeNatAddressAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(gana.ref.Append("name"))
}

// State returns a reference to field state of google_apigee_nat_address.
func (gana googleApigeeNatAddressAttributes) State() terra.StringValue {
	return terra.ReferenceAsString(gana.ref.Append("state"))
}

func (gana googleApigeeNatAddressAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](gana.ref.Append("timeouts"))
}

type googleApigeeNatAddressState struct {
	Id         string         `json:"id"`
	InstanceId string         `json:"instance_id"`
	IpAddress  string         `json:"ip_address"`
	Name       string         `json:"name"`
	State      string         `json:"state"`
	Timeouts   *TimeoutsState `json:"timeouts"`
}
