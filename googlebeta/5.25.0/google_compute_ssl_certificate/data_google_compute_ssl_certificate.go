// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google_compute_ssl_certificate

import "github.com/golingon/lingon/pkg/terra"

// Data creates a new instance of [DataSource].
func Data(name string, args DataArgs) *DataSource {
	return &DataSource{
		Args: args,
		Name: name,
	}
}

var _ terra.DataSource = (*DataSource)(nil)

// DataSource represents the Terraform data resource google_compute_ssl_certificate.
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (gcsc *DataSource) DataSource() string {
	return "google_compute_ssl_certificate"
}

// LocalName returns the local name for [DataSource].
func (gcsc *DataSource) LocalName() string {
	return gcsc.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (gcsc *DataSource) Configuration() interface{} {
	return gcsc.Args
}

// Attributes returns the attributes for [DataSource].
func (gcsc *DataSource) Attributes() dataGoogleComputeSslCertificateAttributes {
	return dataGoogleComputeSslCertificateAttributes{ref: terra.ReferenceDataSource(gcsc)}
}

// DataArgs contains the configurations for google_compute_ssl_certificate.
type DataArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
}

type dataGoogleComputeSslCertificateAttributes struct {
	ref terra.Reference
}

// Certificate returns a reference to field certificate of google_compute_ssl_certificate.
func (gcsc dataGoogleComputeSslCertificateAttributes) Certificate() terra.StringValue {
	return terra.ReferenceAsString(gcsc.ref.Append("certificate"))
}

// CertificateId returns a reference to field certificate_id of google_compute_ssl_certificate.
func (gcsc dataGoogleComputeSslCertificateAttributes) CertificateId() terra.NumberValue {
	return terra.ReferenceAsNumber(gcsc.ref.Append("certificate_id"))
}

// CreationTimestamp returns a reference to field creation_timestamp of google_compute_ssl_certificate.
func (gcsc dataGoogleComputeSslCertificateAttributes) CreationTimestamp() terra.StringValue {
	return terra.ReferenceAsString(gcsc.ref.Append("creation_timestamp"))
}

// Description returns a reference to field description of google_compute_ssl_certificate.
func (gcsc dataGoogleComputeSslCertificateAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(gcsc.ref.Append("description"))
}

// ExpireTime returns a reference to field expire_time of google_compute_ssl_certificate.
func (gcsc dataGoogleComputeSslCertificateAttributes) ExpireTime() terra.StringValue {
	return terra.ReferenceAsString(gcsc.ref.Append("expire_time"))
}

// Id returns a reference to field id of google_compute_ssl_certificate.
func (gcsc dataGoogleComputeSslCertificateAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(gcsc.ref.Append("id"))
}

// Name returns a reference to field name of google_compute_ssl_certificate.
func (gcsc dataGoogleComputeSslCertificateAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(gcsc.ref.Append("name"))
}

// NamePrefix returns a reference to field name_prefix of google_compute_ssl_certificate.
func (gcsc dataGoogleComputeSslCertificateAttributes) NamePrefix() terra.StringValue {
	return terra.ReferenceAsString(gcsc.ref.Append("name_prefix"))
}

// PrivateKey returns a reference to field private_key of google_compute_ssl_certificate.
func (gcsc dataGoogleComputeSslCertificateAttributes) PrivateKey() terra.StringValue {
	return terra.ReferenceAsString(gcsc.ref.Append("private_key"))
}

// Project returns a reference to field project of google_compute_ssl_certificate.
func (gcsc dataGoogleComputeSslCertificateAttributes) Project() terra.StringValue {
	return terra.ReferenceAsString(gcsc.ref.Append("project"))
}

// SelfLink returns a reference to field self_link of google_compute_ssl_certificate.
func (gcsc dataGoogleComputeSslCertificateAttributes) SelfLink() terra.StringValue {
	return terra.ReferenceAsString(gcsc.ref.Append("self_link"))
}
