// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google_vpc_access_connector

import "github.com/golingon/lingon/pkg/terra"

// Data creates a new instance of [DataSource].
func Data(name string, args DataArgs) *DataSource {
	return &DataSource{
		Args: args,
		Name: name,
	}
}

var _ terra.DataSource = (*DataSource)(nil)

// DataSource represents the Terraform data resource google_vpc_access_connector.
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (gvac *DataSource) DataSource() string {
	return "google_vpc_access_connector"
}

// LocalName returns the local name for [DataSource].
func (gvac *DataSource) LocalName() string {
	return gvac.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (gvac *DataSource) Configuration() interface{} {
	return gvac.Args
}

// Attributes returns the attributes for [DataSource].
func (gvac *DataSource) Attributes() dataGoogleVpcAccessConnectorAttributes {
	return dataGoogleVpcAccessConnectorAttributes{ref: terra.ReferenceDataSource(gvac)}
}

// DataArgs contains the configurations for google_vpc_access_connector.
type DataArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
	// Region: string, optional
	Region terra.StringValue `hcl:"region,attr"`
}

type dataGoogleVpcAccessConnectorAttributes struct {
	ref terra.Reference
}

// ConnectedProjects returns a reference to field connected_projects of google_vpc_access_connector.
func (gvac dataGoogleVpcAccessConnectorAttributes) ConnectedProjects() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](gvac.ref.Append("connected_projects"))
}

// Id returns a reference to field id of google_vpc_access_connector.
func (gvac dataGoogleVpcAccessConnectorAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(gvac.ref.Append("id"))
}

// IpCidrRange returns a reference to field ip_cidr_range of google_vpc_access_connector.
func (gvac dataGoogleVpcAccessConnectorAttributes) IpCidrRange() terra.StringValue {
	return terra.ReferenceAsString(gvac.ref.Append("ip_cidr_range"))
}

// MachineType returns a reference to field machine_type of google_vpc_access_connector.
func (gvac dataGoogleVpcAccessConnectorAttributes) MachineType() terra.StringValue {
	return terra.ReferenceAsString(gvac.ref.Append("machine_type"))
}

// MaxInstances returns a reference to field max_instances of google_vpc_access_connector.
func (gvac dataGoogleVpcAccessConnectorAttributes) MaxInstances() terra.NumberValue {
	return terra.ReferenceAsNumber(gvac.ref.Append("max_instances"))
}

// MaxThroughput returns a reference to field max_throughput of google_vpc_access_connector.
func (gvac dataGoogleVpcAccessConnectorAttributes) MaxThroughput() terra.NumberValue {
	return terra.ReferenceAsNumber(gvac.ref.Append("max_throughput"))
}

// MinInstances returns a reference to field min_instances of google_vpc_access_connector.
func (gvac dataGoogleVpcAccessConnectorAttributes) MinInstances() terra.NumberValue {
	return terra.ReferenceAsNumber(gvac.ref.Append("min_instances"))
}

// MinThroughput returns a reference to field min_throughput of google_vpc_access_connector.
func (gvac dataGoogleVpcAccessConnectorAttributes) MinThroughput() terra.NumberValue {
	return terra.ReferenceAsNumber(gvac.ref.Append("min_throughput"))
}

// Name returns a reference to field name of google_vpc_access_connector.
func (gvac dataGoogleVpcAccessConnectorAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(gvac.ref.Append("name"))
}

// Network returns a reference to field network of google_vpc_access_connector.
func (gvac dataGoogleVpcAccessConnectorAttributes) Network() terra.StringValue {
	return terra.ReferenceAsString(gvac.ref.Append("network"))
}

// Project returns a reference to field project of google_vpc_access_connector.
func (gvac dataGoogleVpcAccessConnectorAttributes) Project() terra.StringValue {
	return terra.ReferenceAsString(gvac.ref.Append("project"))
}

// Region returns a reference to field region of google_vpc_access_connector.
func (gvac dataGoogleVpcAccessConnectorAttributes) Region() terra.StringValue {
	return terra.ReferenceAsString(gvac.ref.Append("region"))
}

// SelfLink returns a reference to field self_link of google_vpc_access_connector.
func (gvac dataGoogleVpcAccessConnectorAttributes) SelfLink() terra.StringValue {
	return terra.ReferenceAsString(gvac.ref.Append("self_link"))
}

// State returns a reference to field state of google_vpc_access_connector.
func (gvac dataGoogleVpcAccessConnectorAttributes) State() terra.StringValue {
	return terra.ReferenceAsString(gvac.ref.Append("state"))
}

func (gvac dataGoogleVpcAccessConnectorAttributes) Subnet() terra.ListValue[DataSubnetAttributes] {
	return terra.ReferenceAsList[DataSubnetAttributes](gvac.ref.Append("subnet"))
}
