// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google_network_security_server_tls_policy

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource google_network_security_server_tls_policy.
type Resource struct {
	Name      string
	Args      Args
	state     *googleNetworkSecurityServerTlsPolicyState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (gnsstp *Resource) Type() string {
	return "google_network_security_server_tls_policy"
}

// LocalName returns the local name for [Resource].
func (gnsstp *Resource) LocalName() string {
	return gnsstp.Name
}

// Configuration returns the configuration (args) for [Resource].
func (gnsstp *Resource) Configuration() interface{} {
	return gnsstp.Args
}

// DependOn is used for other resources to depend on [Resource].
func (gnsstp *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(gnsstp)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (gnsstp *Resource) Dependencies() terra.Dependencies {
	return gnsstp.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (gnsstp *Resource) LifecycleManagement() *terra.Lifecycle {
	return gnsstp.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (gnsstp *Resource) Attributes() googleNetworkSecurityServerTlsPolicyAttributes {
	return googleNetworkSecurityServerTlsPolicyAttributes{ref: terra.ReferenceResource(gnsstp)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (gnsstp *Resource) ImportState(state io.Reader) error {
	gnsstp.state = &googleNetworkSecurityServerTlsPolicyState{}
	if err := json.NewDecoder(state).Decode(gnsstp.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", gnsstp.Type(), gnsstp.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (gnsstp *Resource) State() (*googleNetworkSecurityServerTlsPolicyState, bool) {
	return gnsstp.state, gnsstp.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (gnsstp *Resource) StateMust() *googleNetworkSecurityServerTlsPolicyState {
	if gnsstp.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", gnsstp.Type(), gnsstp.LocalName()))
	}
	return gnsstp.state
}

// Args contains the configurations for google_network_security_server_tls_policy.
type Args struct {
	// AllowOpen: bool, optional
	AllowOpen terra.BoolValue `hcl:"allow_open,attr"`
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Labels: map of string, optional
	Labels terra.MapValue[terra.StringValue] `hcl:"labels,attr"`
	// Location: string, optional
	Location terra.StringValue `hcl:"location,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
	// MtlsPolicy: optional
	MtlsPolicy *MtlsPolicy `hcl:"mtls_policy,block"`
	// ServerCertificate: optional
	ServerCertificate *ServerCertificate `hcl:"server_certificate,block"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type googleNetworkSecurityServerTlsPolicyAttributes struct {
	ref terra.Reference
}

// AllowOpen returns a reference to field allow_open of google_network_security_server_tls_policy.
func (gnsstp googleNetworkSecurityServerTlsPolicyAttributes) AllowOpen() terra.BoolValue {
	return terra.ReferenceAsBool(gnsstp.ref.Append("allow_open"))
}

// CreateTime returns a reference to field create_time of google_network_security_server_tls_policy.
func (gnsstp googleNetworkSecurityServerTlsPolicyAttributes) CreateTime() terra.StringValue {
	return terra.ReferenceAsString(gnsstp.ref.Append("create_time"))
}

// Description returns a reference to field description of google_network_security_server_tls_policy.
func (gnsstp googleNetworkSecurityServerTlsPolicyAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(gnsstp.ref.Append("description"))
}

// EffectiveLabels returns a reference to field effective_labels of google_network_security_server_tls_policy.
func (gnsstp googleNetworkSecurityServerTlsPolicyAttributes) EffectiveLabels() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](gnsstp.ref.Append("effective_labels"))
}

// Id returns a reference to field id of google_network_security_server_tls_policy.
func (gnsstp googleNetworkSecurityServerTlsPolicyAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(gnsstp.ref.Append("id"))
}

// Labels returns a reference to field labels of google_network_security_server_tls_policy.
func (gnsstp googleNetworkSecurityServerTlsPolicyAttributes) Labels() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](gnsstp.ref.Append("labels"))
}

// Location returns a reference to field location of google_network_security_server_tls_policy.
func (gnsstp googleNetworkSecurityServerTlsPolicyAttributes) Location() terra.StringValue {
	return terra.ReferenceAsString(gnsstp.ref.Append("location"))
}

// Name returns a reference to field name of google_network_security_server_tls_policy.
func (gnsstp googleNetworkSecurityServerTlsPolicyAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(gnsstp.ref.Append("name"))
}

// Project returns a reference to field project of google_network_security_server_tls_policy.
func (gnsstp googleNetworkSecurityServerTlsPolicyAttributes) Project() terra.StringValue {
	return terra.ReferenceAsString(gnsstp.ref.Append("project"))
}

// TerraformLabels returns a reference to field terraform_labels of google_network_security_server_tls_policy.
func (gnsstp googleNetworkSecurityServerTlsPolicyAttributes) TerraformLabels() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](gnsstp.ref.Append("terraform_labels"))
}

// UpdateTime returns a reference to field update_time of google_network_security_server_tls_policy.
func (gnsstp googleNetworkSecurityServerTlsPolicyAttributes) UpdateTime() terra.StringValue {
	return terra.ReferenceAsString(gnsstp.ref.Append("update_time"))
}

func (gnsstp googleNetworkSecurityServerTlsPolicyAttributes) MtlsPolicy() terra.ListValue[MtlsPolicyAttributes] {
	return terra.ReferenceAsList[MtlsPolicyAttributes](gnsstp.ref.Append("mtls_policy"))
}

func (gnsstp googleNetworkSecurityServerTlsPolicyAttributes) ServerCertificate() terra.ListValue[ServerCertificateAttributes] {
	return terra.ReferenceAsList[ServerCertificateAttributes](gnsstp.ref.Append("server_certificate"))
}

func (gnsstp googleNetworkSecurityServerTlsPolicyAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](gnsstp.ref.Append("timeouts"))
}

type googleNetworkSecurityServerTlsPolicyState struct {
	AllowOpen         bool                     `json:"allow_open"`
	CreateTime        string                   `json:"create_time"`
	Description       string                   `json:"description"`
	EffectiveLabels   map[string]string        `json:"effective_labels"`
	Id                string                   `json:"id"`
	Labels            map[string]string        `json:"labels"`
	Location          string                   `json:"location"`
	Name              string                   `json:"name"`
	Project           string                   `json:"project"`
	TerraformLabels   map[string]string        `json:"terraform_labels"`
	UpdateTime        string                   `json:"update_time"`
	MtlsPolicy        []MtlsPolicyState        `json:"mtls_policy"`
	ServerCertificate []ServerCertificateState `json:"server_certificate"`
	Timeouts          *TimeoutsState           `json:"timeouts"`
}
