// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google_dialogflow_cx_entity_type

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource google_dialogflow_cx_entity_type.
type Resource struct {
	Name      string
	Args      Args
	state     *googleDialogflowCxEntityTypeState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (gdcet *Resource) Type() string {
	return "google_dialogflow_cx_entity_type"
}

// LocalName returns the local name for [Resource].
func (gdcet *Resource) LocalName() string {
	return gdcet.Name
}

// Configuration returns the configuration (args) for [Resource].
func (gdcet *Resource) Configuration() interface{} {
	return gdcet.Args
}

// DependOn is used for other resources to depend on [Resource].
func (gdcet *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(gdcet)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (gdcet *Resource) Dependencies() terra.Dependencies {
	return gdcet.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (gdcet *Resource) LifecycleManagement() *terra.Lifecycle {
	return gdcet.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (gdcet *Resource) Attributes() googleDialogflowCxEntityTypeAttributes {
	return googleDialogflowCxEntityTypeAttributes{ref: terra.ReferenceResource(gdcet)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (gdcet *Resource) ImportState(state io.Reader) error {
	gdcet.state = &googleDialogflowCxEntityTypeState{}
	if err := json.NewDecoder(state).Decode(gdcet.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", gdcet.Type(), gdcet.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (gdcet *Resource) State() (*googleDialogflowCxEntityTypeState, bool) {
	return gdcet.state, gdcet.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (gdcet *Resource) StateMust() *googleDialogflowCxEntityTypeState {
	if gdcet.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", gdcet.Type(), gdcet.LocalName()))
	}
	return gdcet.state
}

// Args contains the configurations for google_dialogflow_cx_entity_type.
type Args struct {
	// AutoExpansionMode: string, optional
	AutoExpansionMode terra.StringValue `hcl:"auto_expansion_mode,attr"`
	// DisplayName: string, required
	DisplayName terra.StringValue `hcl:"display_name,attr" validate:"required"`
	// EnableFuzzyExtraction: bool, optional
	EnableFuzzyExtraction terra.BoolValue `hcl:"enable_fuzzy_extraction,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Kind: string, required
	Kind terra.StringValue `hcl:"kind,attr" validate:"required"`
	// LanguageCode: string, optional
	LanguageCode terra.StringValue `hcl:"language_code,attr"`
	// Parent: string, optional
	Parent terra.StringValue `hcl:"parent,attr"`
	// Redact: bool, optional
	Redact terra.BoolValue `hcl:"redact,attr"`
	// Entities: min=1
	Entities []Entities `hcl:"entities,block" validate:"min=1"`
	// ExcludedPhrases: min=0
	ExcludedPhrases []ExcludedPhrases `hcl:"excluded_phrases,block" validate:"min=0"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type googleDialogflowCxEntityTypeAttributes struct {
	ref terra.Reference
}

// AutoExpansionMode returns a reference to field auto_expansion_mode of google_dialogflow_cx_entity_type.
func (gdcet googleDialogflowCxEntityTypeAttributes) AutoExpansionMode() terra.StringValue {
	return terra.ReferenceAsString(gdcet.ref.Append("auto_expansion_mode"))
}

// DisplayName returns a reference to field display_name of google_dialogflow_cx_entity_type.
func (gdcet googleDialogflowCxEntityTypeAttributes) DisplayName() terra.StringValue {
	return terra.ReferenceAsString(gdcet.ref.Append("display_name"))
}

// EnableFuzzyExtraction returns a reference to field enable_fuzzy_extraction of google_dialogflow_cx_entity_type.
func (gdcet googleDialogflowCxEntityTypeAttributes) EnableFuzzyExtraction() terra.BoolValue {
	return terra.ReferenceAsBool(gdcet.ref.Append("enable_fuzzy_extraction"))
}

// Id returns a reference to field id of google_dialogflow_cx_entity_type.
func (gdcet googleDialogflowCxEntityTypeAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(gdcet.ref.Append("id"))
}

// Kind returns a reference to field kind of google_dialogflow_cx_entity_type.
func (gdcet googleDialogflowCxEntityTypeAttributes) Kind() terra.StringValue {
	return terra.ReferenceAsString(gdcet.ref.Append("kind"))
}

// LanguageCode returns a reference to field language_code of google_dialogflow_cx_entity_type.
func (gdcet googleDialogflowCxEntityTypeAttributes) LanguageCode() terra.StringValue {
	return terra.ReferenceAsString(gdcet.ref.Append("language_code"))
}

// Name returns a reference to field name of google_dialogflow_cx_entity_type.
func (gdcet googleDialogflowCxEntityTypeAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(gdcet.ref.Append("name"))
}

// Parent returns a reference to field parent of google_dialogflow_cx_entity_type.
func (gdcet googleDialogflowCxEntityTypeAttributes) Parent() terra.StringValue {
	return terra.ReferenceAsString(gdcet.ref.Append("parent"))
}

// Redact returns a reference to field redact of google_dialogflow_cx_entity_type.
func (gdcet googleDialogflowCxEntityTypeAttributes) Redact() terra.BoolValue {
	return terra.ReferenceAsBool(gdcet.ref.Append("redact"))
}

func (gdcet googleDialogflowCxEntityTypeAttributes) Entities() terra.ListValue[EntitiesAttributes] {
	return terra.ReferenceAsList[EntitiesAttributes](gdcet.ref.Append("entities"))
}

func (gdcet googleDialogflowCxEntityTypeAttributes) ExcludedPhrases() terra.ListValue[ExcludedPhrasesAttributes] {
	return terra.ReferenceAsList[ExcludedPhrasesAttributes](gdcet.ref.Append("excluded_phrases"))
}

func (gdcet googleDialogflowCxEntityTypeAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](gdcet.ref.Append("timeouts"))
}

type googleDialogflowCxEntityTypeState struct {
	AutoExpansionMode     string                 `json:"auto_expansion_mode"`
	DisplayName           string                 `json:"display_name"`
	EnableFuzzyExtraction bool                   `json:"enable_fuzzy_extraction"`
	Id                    string                 `json:"id"`
	Kind                  string                 `json:"kind"`
	LanguageCode          string                 `json:"language_code"`
	Name                  string                 `json:"name"`
	Parent                string                 `json:"parent"`
	Redact                bool                   `json:"redact"`
	Entities              []EntitiesState        `json:"entities"`
	ExcludedPhrases       []ExcludedPhrasesState `json:"excluded_phrases"`
	Timeouts              *TimeoutsState         `json:"timeouts"`
}
