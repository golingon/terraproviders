// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google_network_connectivity_spoke

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type LinkedInterconnectAttachments struct {
	// SiteToSiteDataTransfer: bool, required
	SiteToSiteDataTransfer terra.BoolValue `hcl:"site_to_site_data_transfer,attr" validate:"required"`
	// Uris: list of string, required
	Uris terra.ListValue[terra.StringValue] `hcl:"uris,attr" validate:"required"`
}

type LinkedRouterApplianceInstances struct {
	// SiteToSiteDataTransfer: bool, required
	SiteToSiteDataTransfer terra.BoolValue `hcl:"site_to_site_data_transfer,attr" validate:"required"`
	// LinkedRouterApplianceInstancesInstances: min=1
	Instances []LinkedRouterApplianceInstancesInstances `hcl:"instances,block" validate:"min=1"`
}

type LinkedRouterApplianceInstancesInstances struct {
	// IpAddress: string, optional
	IpAddress terra.StringValue `hcl:"ip_address,attr"`
	// VirtualMachine: string, optional
	VirtualMachine terra.StringValue `hcl:"virtual_machine,attr"`
}

type LinkedVpcNetwork struct {
	// ExcludeExportRanges: list of string, optional
	ExcludeExportRanges terra.ListValue[terra.StringValue] `hcl:"exclude_export_ranges,attr"`
	// Uri: string, required
	Uri terra.StringValue `hcl:"uri,attr" validate:"required"`
}

type LinkedVpnTunnels struct {
	// SiteToSiteDataTransfer: bool, required
	SiteToSiteDataTransfer terra.BoolValue `hcl:"site_to_site_data_transfer,attr" validate:"required"`
	// Uris: list of string, required
	Uris terra.ListValue[terra.StringValue] `hcl:"uris,attr" validate:"required"`
}

type Timeouts struct {
	// Create: string, optional
	Create terra.StringValue `hcl:"create,attr"`
	// Delete: string, optional
	Delete terra.StringValue `hcl:"delete,attr"`
	// Update: string, optional
	Update terra.StringValue `hcl:"update,attr"`
}

type LinkedInterconnectAttachmentsAttributes struct {
	ref terra.Reference
}

func (lia LinkedInterconnectAttachmentsAttributes) InternalRef() (terra.Reference, error) {
	return lia.ref, nil
}

func (lia LinkedInterconnectAttachmentsAttributes) InternalWithRef(ref terra.Reference) LinkedInterconnectAttachmentsAttributes {
	return LinkedInterconnectAttachmentsAttributes{ref: ref}
}

func (lia LinkedInterconnectAttachmentsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return lia.ref.InternalTokens()
}

func (lia LinkedInterconnectAttachmentsAttributes) SiteToSiteDataTransfer() terra.BoolValue {
	return terra.ReferenceAsBool(lia.ref.Append("site_to_site_data_transfer"))
}

func (lia LinkedInterconnectAttachmentsAttributes) Uris() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](lia.ref.Append("uris"))
}

type LinkedRouterApplianceInstancesAttributes struct {
	ref terra.Reference
}

func (lrai LinkedRouterApplianceInstancesAttributes) InternalRef() (terra.Reference, error) {
	return lrai.ref, nil
}

func (lrai LinkedRouterApplianceInstancesAttributes) InternalWithRef(ref terra.Reference) LinkedRouterApplianceInstancesAttributes {
	return LinkedRouterApplianceInstancesAttributes{ref: ref}
}

func (lrai LinkedRouterApplianceInstancesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return lrai.ref.InternalTokens()
}

func (lrai LinkedRouterApplianceInstancesAttributes) SiteToSiteDataTransfer() terra.BoolValue {
	return terra.ReferenceAsBool(lrai.ref.Append("site_to_site_data_transfer"))
}

func (lrai LinkedRouterApplianceInstancesAttributes) Instances() terra.ListValue[LinkedRouterApplianceInstancesInstancesAttributes] {
	return terra.ReferenceAsList[LinkedRouterApplianceInstancesInstancesAttributes](lrai.ref.Append("instances"))
}

type LinkedRouterApplianceInstancesInstancesAttributes struct {
	ref terra.Reference
}

func (i LinkedRouterApplianceInstancesInstancesAttributes) InternalRef() (terra.Reference, error) {
	return i.ref, nil
}

func (i LinkedRouterApplianceInstancesInstancesAttributes) InternalWithRef(ref terra.Reference) LinkedRouterApplianceInstancesInstancesAttributes {
	return LinkedRouterApplianceInstancesInstancesAttributes{ref: ref}
}

func (i LinkedRouterApplianceInstancesInstancesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return i.ref.InternalTokens()
}

func (i LinkedRouterApplianceInstancesInstancesAttributes) IpAddress() terra.StringValue {
	return terra.ReferenceAsString(i.ref.Append("ip_address"))
}

func (i LinkedRouterApplianceInstancesInstancesAttributes) VirtualMachine() terra.StringValue {
	return terra.ReferenceAsString(i.ref.Append("virtual_machine"))
}

type LinkedVpcNetworkAttributes struct {
	ref terra.Reference
}

func (lvn LinkedVpcNetworkAttributes) InternalRef() (terra.Reference, error) {
	return lvn.ref, nil
}

func (lvn LinkedVpcNetworkAttributes) InternalWithRef(ref terra.Reference) LinkedVpcNetworkAttributes {
	return LinkedVpcNetworkAttributes{ref: ref}
}

func (lvn LinkedVpcNetworkAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return lvn.ref.InternalTokens()
}

func (lvn LinkedVpcNetworkAttributes) ExcludeExportRanges() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](lvn.ref.Append("exclude_export_ranges"))
}

func (lvn LinkedVpcNetworkAttributes) Uri() terra.StringValue {
	return terra.ReferenceAsString(lvn.ref.Append("uri"))
}

type LinkedVpnTunnelsAttributes struct {
	ref terra.Reference
}

func (lvt LinkedVpnTunnelsAttributes) InternalRef() (terra.Reference, error) {
	return lvt.ref, nil
}

func (lvt LinkedVpnTunnelsAttributes) InternalWithRef(ref terra.Reference) LinkedVpnTunnelsAttributes {
	return LinkedVpnTunnelsAttributes{ref: ref}
}

func (lvt LinkedVpnTunnelsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return lvt.ref.InternalTokens()
}

func (lvt LinkedVpnTunnelsAttributes) SiteToSiteDataTransfer() terra.BoolValue {
	return terra.ReferenceAsBool(lvt.ref.Append("site_to_site_data_transfer"))
}

func (lvt LinkedVpnTunnelsAttributes) Uris() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](lvt.ref.Append("uris"))
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("create"))
}

func (t TimeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("delete"))
}

func (t TimeoutsAttributes) Update() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("update"))
}

type LinkedInterconnectAttachmentsState struct {
	SiteToSiteDataTransfer bool     `json:"site_to_site_data_transfer"`
	Uris                   []string `json:"uris"`
}

type LinkedRouterApplianceInstancesState struct {
	SiteToSiteDataTransfer bool                                           `json:"site_to_site_data_transfer"`
	Instances              []LinkedRouterApplianceInstancesInstancesState `json:"instances"`
}

type LinkedRouterApplianceInstancesInstancesState struct {
	IpAddress      string `json:"ip_address"`
	VirtualMachine string `json:"virtual_machine"`
}

type LinkedVpcNetworkState struct {
	ExcludeExportRanges []string `json:"exclude_export_ranges"`
	Uri                 string   `json:"uri"`
}

type LinkedVpnTunnelsState struct {
	SiteToSiteDataTransfer bool     `json:"site_to_site_data_transfer"`
	Uris                   []string `json:"uris"`
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
	Update string `json:"update"`
}
