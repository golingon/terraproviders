// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google_identity_platform_tenant_inbound_saml_config

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type IdpConfig struct {
	// IdpEntityId: string, required
	IdpEntityId terra.StringValue `hcl:"idp_entity_id,attr" validate:"required"`
	// SignRequest: bool, optional
	SignRequest terra.BoolValue `hcl:"sign_request,attr"`
	// SsoUrl: string, required
	SsoUrl terra.StringValue `hcl:"sso_url,attr" validate:"required"`
	// IdpConfigIdpCertificates: min=1
	IdpCertificates []IdpConfigIdpCertificates `hcl:"idp_certificates,block" validate:"min=1"`
}

type IdpConfigIdpCertificates struct {
	// X509Certificate: string, optional
	X509Certificate terra.StringValue `hcl:"x509_certificate,attr"`
}

type SpConfig struct {
	// CallbackUri: string, required
	CallbackUri terra.StringValue `hcl:"callback_uri,attr" validate:"required"`
	// SpEntityId: string, required
	SpEntityId terra.StringValue `hcl:"sp_entity_id,attr" validate:"required"`
}

type Timeouts struct {
	// Create: string, optional
	Create terra.StringValue `hcl:"create,attr"`
	// Delete: string, optional
	Delete terra.StringValue `hcl:"delete,attr"`
	// Update: string, optional
	Update terra.StringValue `hcl:"update,attr"`
}

type IdpConfigAttributes struct {
	ref terra.Reference
}

func (ic IdpConfigAttributes) InternalRef() (terra.Reference, error) {
	return ic.ref, nil
}

func (ic IdpConfigAttributes) InternalWithRef(ref terra.Reference) IdpConfigAttributes {
	return IdpConfigAttributes{ref: ref}
}

func (ic IdpConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ic.ref.InternalTokens()
}

func (ic IdpConfigAttributes) IdpEntityId() terra.StringValue {
	return terra.ReferenceAsString(ic.ref.Append("idp_entity_id"))
}

func (ic IdpConfigAttributes) SignRequest() terra.BoolValue {
	return terra.ReferenceAsBool(ic.ref.Append("sign_request"))
}

func (ic IdpConfigAttributes) SsoUrl() terra.StringValue {
	return terra.ReferenceAsString(ic.ref.Append("sso_url"))
}

func (ic IdpConfigAttributes) IdpCertificates() terra.ListValue[IdpConfigIdpCertificatesAttributes] {
	return terra.ReferenceAsList[IdpConfigIdpCertificatesAttributes](ic.ref.Append("idp_certificates"))
}

type IdpConfigIdpCertificatesAttributes struct {
	ref terra.Reference
}

func (ic IdpConfigIdpCertificatesAttributes) InternalRef() (terra.Reference, error) {
	return ic.ref, nil
}

func (ic IdpConfigIdpCertificatesAttributes) InternalWithRef(ref terra.Reference) IdpConfigIdpCertificatesAttributes {
	return IdpConfigIdpCertificatesAttributes{ref: ref}
}

func (ic IdpConfigIdpCertificatesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ic.ref.InternalTokens()
}

func (ic IdpConfigIdpCertificatesAttributes) X509Certificate() terra.StringValue {
	return terra.ReferenceAsString(ic.ref.Append("x509_certificate"))
}

type SpConfigAttributes struct {
	ref terra.Reference
}

func (sc SpConfigAttributes) InternalRef() (terra.Reference, error) {
	return sc.ref, nil
}

func (sc SpConfigAttributes) InternalWithRef(ref terra.Reference) SpConfigAttributes {
	return SpConfigAttributes{ref: ref}
}

func (sc SpConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sc.ref.InternalTokens()
}

func (sc SpConfigAttributes) CallbackUri() terra.StringValue {
	return terra.ReferenceAsString(sc.ref.Append("callback_uri"))
}

func (sc SpConfigAttributes) SpEntityId() terra.StringValue {
	return terra.ReferenceAsString(sc.ref.Append("sp_entity_id"))
}

func (sc SpConfigAttributes) SpCertificates() terra.ListValue[SpConfigSpCertificatesAttributes] {
	return terra.ReferenceAsList[SpConfigSpCertificatesAttributes](sc.ref.Append("sp_certificates"))
}

type SpConfigSpCertificatesAttributes struct {
	ref terra.Reference
}

func (sc SpConfigSpCertificatesAttributes) InternalRef() (terra.Reference, error) {
	return sc.ref, nil
}

func (sc SpConfigSpCertificatesAttributes) InternalWithRef(ref terra.Reference) SpConfigSpCertificatesAttributes {
	return SpConfigSpCertificatesAttributes{ref: ref}
}

func (sc SpConfigSpCertificatesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sc.ref.InternalTokens()
}

func (sc SpConfigSpCertificatesAttributes) X509Certificate() terra.StringValue {
	return terra.ReferenceAsString(sc.ref.Append("x509_certificate"))
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("create"))
}

func (t TimeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("delete"))
}

func (t TimeoutsAttributes) Update() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("update"))
}

type IdpConfigState struct {
	IdpEntityId     string                          `json:"idp_entity_id"`
	SignRequest     bool                            `json:"sign_request"`
	SsoUrl          string                          `json:"sso_url"`
	IdpCertificates []IdpConfigIdpCertificatesState `json:"idp_certificates"`
}

type IdpConfigIdpCertificatesState struct {
	X509Certificate string `json:"x509_certificate"`
}

type SpConfigState struct {
	CallbackUri    string                        `json:"callback_uri"`
	SpEntityId     string                        `json:"sp_entity_id"`
	SpCertificates []SpConfigSpCertificatesState `json:"sp_certificates"`
}

type SpConfigSpCertificatesState struct {
	X509Certificate string `json:"x509_certificate"`
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
	Update string `json:"update"`
}
