// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google_storage_bucket

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DataAutoclassAttributes struct {
	ref terra.Reference
}

func (a DataAutoclassAttributes) InternalRef() (terra.Reference, error) {
	return a.ref, nil
}

func (a DataAutoclassAttributes) InternalWithRef(ref terra.Reference) DataAutoclassAttributes {
	return DataAutoclassAttributes{ref: ref}
}

func (a DataAutoclassAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return a.ref.InternalTokens()
}

func (a DataAutoclassAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceAsBool(a.ref.Append("enabled"))
}

func (a DataAutoclassAttributes) TerminalStorageClass() terra.StringValue {
	return terra.ReferenceAsString(a.ref.Append("terminal_storage_class"))
}

type DataCorsAttributes struct {
	ref terra.Reference
}

func (c DataCorsAttributes) InternalRef() (terra.Reference, error) {
	return c.ref, nil
}

func (c DataCorsAttributes) InternalWithRef(ref terra.Reference) DataCorsAttributes {
	return DataCorsAttributes{ref: ref}
}

func (c DataCorsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return c.ref.InternalTokens()
}

func (c DataCorsAttributes) MaxAgeSeconds() terra.NumberValue {
	return terra.ReferenceAsNumber(c.ref.Append("max_age_seconds"))
}

func (c DataCorsAttributes) Method() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](c.ref.Append("method"))
}

func (c DataCorsAttributes) Origin() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](c.ref.Append("origin"))
}

func (c DataCorsAttributes) ResponseHeader() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](c.ref.Append("response_header"))
}

type DataCustomPlacementConfigAttributes struct {
	ref terra.Reference
}

func (cpc DataCustomPlacementConfigAttributes) InternalRef() (terra.Reference, error) {
	return cpc.ref, nil
}

func (cpc DataCustomPlacementConfigAttributes) InternalWithRef(ref terra.Reference) DataCustomPlacementConfigAttributes {
	return DataCustomPlacementConfigAttributes{ref: ref}
}

func (cpc DataCustomPlacementConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cpc.ref.InternalTokens()
}

func (cpc DataCustomPlacementConfigAttributes) DataLocations() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](cpc.ref.Append("data_locations"))
}

type DataEncryptionAttributes struct {
	ref terra.Reference
}

func (e DataEncryptionAttributes) InternalRef() (terra.Reference, error) {
	return e.ref, nil
}

func (e DataEncryptionAttributes) InternalWithRef(ref terra.Reference) DataEncryptionAttributes {
	return DataEncryptionAttributes{ref: ref}
}

func (e DataEncryptionAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return e.ref.InternalTokens()
}

func (e DataEncryptionAttributes) DefaultKmsKeyName() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("default_kms_key_name"))
}

type DataLifecycleRuleAttributes struct {
	ref terra.Reference
}

func (lr DataLifecycleRuleAttributes) InternalRef() (terra.Reference, error) {
	return lr.ref, nil
}

func (lr DataLifecycleRuleAttributes) InternalWithRef(ref terra.Reference) DataLifecycleRuleAttributes {
	return DataLifecycleRuleAttributes{ref: ref}
}

func (lr DataLifecycleRuleAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return lr.ref.InternalTokens()
}

func (lr DataLifecycleRuleAttributes) Action() terra.SetValue[DataLifecycleRuleActionAttributes] {
	return terra.ReferenceAsSet[DataLifecycleRuleActionAttributes](lr.ref.Append("action"))
}

func (lr DataLifecycleRuleAttributes) Condition() terra.SetValue[DataLifecycleRuleConditionAttributes] {
	return terra.ReferenceAsSet[DataLifecycleRuleConditionAttributes](lr.ref.Append("condition"))
}

type DataLifecycleRuleActionAttributes struct {
	ref terra.Reference
}

func (a DataLifecycleRuleActionAttributes) InternalRef() (terra.Reference, error) {
	return a.ref, nil
}

func (a DataLifecycleRuleActionAttributes) InternalWithRef(ref terra.Reference) DataLifecycleRuleActionAttributes {
	return DataLifecycleRuleActionAttributes{ref: ref}
}

func (a DataLifecycleRuleActionAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return a.ref.InternalTokens()
}

func (a DataLifecycleRuleActionAttributes) StorageClass() terra.StringValue {
	return terra.ReferenceAsString(a.ref.Append("storage_class"))
}

func (a DataLifecycleRuleActionAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(a.ref.Append("type"))
}

type DataLifecycleRuleConditionAttributes struct {
	ref terra.Reference
}

func (c DataLifecycleRuleConditionAttributes) InternalRef() (terra.Reference, error) {
	return c.ref, nil
}

func (c DataLifecycleRuleConditionAttributes) InternalWithRef(ref terra.Reference) DataLifecycleRuleConditionAttributes {
	return DataLifecycleRuleConditionAttributes{ref: ref}
}

func (c DataLifecycleRuleConditionAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return c.ref.InternalTokens()
}

func (c DataLifecycleRuleConditionAttributes) Age() terra.NumberValue {
	return terra.ReferenceAsNumber(c.ref.Append("age"))
}

func (c DataLifecycleRuleConditionAttributes) CreatedBefore() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("created_before"))
}

func (c DataLifecycleRuleConditionAttributes) CustomTimeBefore() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("custom_time_before"))
}

func (c DataLifecycleRuleConditionAttributes) DaysSinceCustomTime() terra.NumberValue {
	return terra.ReferenceAsNumber(c.ref.Append("days_since_custom_time"))
}

func (c DataLifecycleRuleConditionAttributes) DaysSinceNoncurrentTime() terra.NumberValue {
	return terra.ReferenceAsNumber(c.ref.Append("days_since_noncurrent_time"))
}

func (c DataLifecycleRuleConditionAttributes) MatchesPrefix() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](c.ref.Append("matches_prefix"))
}

func (c DataLifecycleRuleConditionAttributes) MatchesStorageClass() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](c.ref.Append("matches_storage_class"))
}

func (c DataLifecycleRuleConditionAttributes) MatchesSuffix() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](c.ref.Append("matches_suffix"))
}

func (c DataLifecycleRuleConditionAttributes) NoAge() terra.BoolValue {
	return terra.ReferenceAsBool(c.ref.Append("no_age"))
}

func (c DataLifecycleRuleConditionAttributes) NoncurrentTimeBefore() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("noncurrent_time_before"))
}

func (c DataLifecycleRuleConditionAttributes) NumNewerVersions() terra.NumberValue {
	return terra.ReferenceAsNumber(c.ref.Append("num_newer_versions"))
}

func (c DataLifecycleRuleConditionAttributes) WithState() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("with_state"))
}

type DataLoggingAttributes struct {
	ref terra.Reference
}

func (l DataLoggingAttributes) InternalRef() (terra.Reference, error) {
	return l.ref, nil
}

func (l DataLoggingAttributes) InternalWithRef(ref terra.Reference) DataLoggingAttributes {
	return DataLoggingAttributes{ref: ref}
}

func (l DataLoggingAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return l.ref.InternalTokens()
}

func (l DataLoggingAttributes) LogBucket() terra.StringValue {
	return terra.ReferenceAsString(l.ref.Append("log_bucket"))
}

func (l DataLoggingAttributes) LogObjectPrefix() terra.StringValue {
	return terra.ReferenceAsString(l.ref.Append("log_object_prefix"))
}

type DataRetentionPolicyAttributes struct {
	ref terra.Reference
}

func (rp DataRetentionPolicyAttributes) InternalRef() (terra.Reference, error) {
	return rp.ref, nil
}

func (rp DataRetentionPolicyAttributes) InternalWithRef(ref terra.Reference) DataRetentionPolicyAttributes {
	return DataRetentionPolicyAttributes{ref: ref}
}

func (rp DataRetentionPolicyAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rp.ref.InternalTokens()
}

func (rp DataRetentionPolicyAttributes) IsLocked() terra.BoolValue {
	return terra.ReferenceAsBool(rp.ref.Append("is_locked"))
}

func (rp DataRetentionPolicyAttributes) RetentionPeriod() terra.NumberValue {
	return terra.ReferenceAsNumber(rp.ref.Append("retention_period"))
}

type DataSoftDeletePolicyAttributes struct {
	ref terra.Reference
}

func (sdp DataSoftDeletePolicyAttributes) InternalRef() (terra.Reference, error) {
	return sdp.ref, nil
}

func (sdp DataSoftDeletePolicyAttributes) InternalWithRef(ref terra.Reference) DataSoftDeletePolicyAttributes {
	return DataSoftDeletePolicyAttributes{ref: ref}
}

func (sdp DataSoftDeletePolicyAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sdp.ref.InternalTokens()
}

func (sdp DataSoftDeletePolicyAttributes) EffectiveTime() terra.StringValue {
	return terra.ReferenceAsString(sdp.ref.Append("effective_time"))
}

func (sdp DataSoftDeletePolicyAttributes) RetentionDurationSeconds() terra.NumberValue {
	return terra.ReferenceAsNumber(sdp.ref.Append("retention_duration_seconds"))
}

type DataVersioningAttributes struct {
	ref terra.Reference
}

func (v DataVersioningAttributes) InternalRef() (terra.Reference, error) {
	return v.ref, nil
}

func (v DataVersioningAttributes) InternalWithRef(ref terra.Reference) DataVersioningAttributes {
	return DataVersioningAttributes{ref: ref}
}

func (v DataVersioningAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return v.ref.InternalTokens()
}

func (v DataVersioningAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceAsBool(v.ref.Append("enabled"))
}

type DataWebsiteAttributes struct {
	ref terra.Reference
}

func (w DataWebsiteAttributes) InternalRef() (terra.Reference, error) {
	return w.ref, nil
}

func (w DataWebsiteAttributes) InternalWithRef(ref terra.Reference) DataWebsiteAttributes {
	return DataWebsiteAttributes{ref: ref}
}

func (w DataWebsiteAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return w.ref.InternalTokens()
}

func (w DataWebsiteAttributes) MainPageSuffix() terra.StringValue {
	return terra.ReferenceAsString(w.ref.Append("main_page_suffix"))
}

func (w DataWebsiteAttributes) NotFoundPage() terra.StringValue {
	return terra.ReferenceAsString(w.ref.Append("not_found_page"))
}

type DataAutoclassState struct {
	Enabled              bool   `json:"enabled"`
	TerminalStorageClass string `json:"terminal_storage_class"`
}

type DataCorsState struct {
	MaxAgeSeconds  float64  `json:"max_age_seconds"`
	Method         []string `json:"method"`
	Origin         []string `json:"origin"`
	ResponseHeader []string `json:"response_header"`
}

type DataCustomPlacementConfigState struct {
	DataLocations []string `json:"data_locations"`
}

type DataEncryptionState struct {
	DefaultKmsKeyName string `json:"default_kms_key_name"`
}

type DataLifecycleRuleState struct {
	Action    []DataLifecycleRuleActionState    `json:"action"`
	Condition []DataLifecycleRuleConditionState `json:"condition"`
}

type DataLifecycleRuleActionState struct {
	StorageClass string `json:"storage_class"`
	Type         string `json:"type"`
}

type DataLifecycleRuleConditionState struct {
	Age                     float64  `json:"age"`
	CreatedBefore           string   `json:"created_before"`
	CustomTimeBefore        string   `json:"custom_time_before"`
	DaysSinceCustomTime     float64  `json:"days_since_custom_time"`
	DaysSinceNoncurrentTime float64  `json:"days_since_noncurrent_time"`
	MatchesPrefix           []string `json:"matches_prefix"`
	MatchesStorageClass     []string `json:"matches_storage_class"`
	MatchesSuffix           []string `json:"matches_suffix"`
	NoAge                   bool     `json:"no_age"`
	NoncurrentTimeBefore    string   `json:"noncurrent_time_before"`
	NumNewerVersions        float64  `json:"num_newer_versions"`
	WithState               string   `json:"with_state"`
}

type DataLoggingState struct {
	LogBucket       string `json:"log_bucket"`
	LogObjectPrefix string `json:"log_object_prefix"`
}

type DataRetentionPolicyState struct {
	IsLocked        bool    `json:"is_locked"`
	RetentionPeriod float64 `json:"retention_period"`
}

type DataSoftDeletePolicyState struct {
	EffectiveTime            string  `json:"effective_time"`
	RetentionDurationSeconds float64 `json:"retention_duration_seconds"`
}

type DataVersioningState struct {
	Enabled bool `json:"enabled"`
}

type DataWebsiteState struct {
	MainPageSuffix string `json:"main_page_suffix"`
	NotFoundPage   string `json:"not_found_page"`
}
