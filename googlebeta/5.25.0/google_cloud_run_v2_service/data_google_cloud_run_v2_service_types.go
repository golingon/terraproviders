// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google_cloud_run_v2_service

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DataBinaryAuthorizationAttributes struct {
	ref terra.Reference
}

func (ba DataBinaryAuthorizationAttributes) InternalRef() (terra.Reference, error) {
	return ba.ref, nil
}

func (ba DataBinaryAuthorizationAttributes) InternalWithRef(ref terra.Reference) DataBinaryAuthorizationAttributes {
	return DataBinaryAuthorizationAttributes{ref: ref}
}

func (ba DataBinaryAuthorizationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ba.ref.InternalTokens()
}

func (ba DataBinaryAuthorizationAttributes) BreakglassJustification() terra.StringValue {
	return terra.ReferenceAsString(ba.ref.Append("breakglass_justification"))
}

func (ba DataBinaryAuthorizationAttributes) UseDefault() terra.BoolValue {
	return terra.ReferenceAsBool(ba.ref.Append("use_default"))
}

type DataConditionsAttributes struct {
	ref terra.Reference
}

func (c DataConditionsAttributes) InternalRef() (terra.Reference, error) {
	return c.ref, nil
}

func (c DataConditionsAttributes) InternalWithRef(ref terra.Reference) DataConditionsAttributes {
	return DataConditionsAttributes{ref: ref}
}

func (c DataConditionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return c.ref.InternalTokens()
}

func (c DataConditionsAttributes) ExecutionReason() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("execution_reason"))
}

func (c DataConditionsAttributes) LastTransitionTime() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("last_transition_time"))
}

func (c DataConditionsAttributes) Message() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("message"))
}

func (c DataConditionsAttributes) Reason() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("reason"))
}

func (c DataConditionsAttributes) RevisionReason() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("revision_reason"))
}

func (c DataConditionsAttributes) Severity() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("severity"))
}

func (c DataConditionsAttributes) State() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("state"))
}

func (c DataConditionsAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("type"))
}

type DataScalingAttributes struct {
	ref terra.Reference
}

func (s DataScalingAttributes) InternalRef() (terra.Reference, error) {
	return s.ref, nil
}

func (s DataScalingAttributes) InternalWithRef(ref terra.Reference) DataScalingAttributes {
	return DataScalingAttributes{ref: ref}
}

func (s DataScalingAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return s.ref.InternalTokens()
}

func (s DataScalingAttributes) MinInstanceCount() terra.NumberValue {
	return terra.ReferenceAsNumber(s.ref.Append("min_instance_count"))
}

type DataTemplateAttributes struct {
	ref terra.Reference
}

func (t DataTemplateAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t DataTemplateAttributes) InternalWithRef(ref terra.Reference) DataTemplateAttributes {
	return DataTemplateAttributes{ref: ref}
}

func (t DataTemplateAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t DataTemplateAttributes) Annotations() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](t.ref.Append("annotations"))
}

func (t DataTemplateAttributes) EncryptionKey() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("encryption_key"))
}

func (t DataTemplateAttributes) ExecutionEnvironment() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("execution_environment"))
}

func (t DataTemplateAttributes) Labels() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](t.ref.Append("labels"))
}

func (t DataTemplateAttributes) MaxInstanceRequestConcurrency() terra.NumberValue {
	return terra.ReferenceAsNumber(t.ref.Append("max_instance_request_concurrency"))
}

func (t DataTemplateAttributes) Revision() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("revision"))
}

func (t DataTemplateAttributes) ServiceAccount() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("service_account"))
}

func (t DataTemplateAttributes) SessionAffinity() terra.BoolValue {
	return terra.ReferenceAsBool(t.ref.Append("session_affinity"))
}

func (t DataTemplateAttributes) Timeout() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("timeout"))
}

func (t DataTemplateAttributes) Containers() terra.ListValue[DataTemplateContainersAttributes] {
	return terra.ReferenceAsList[DataTemplateContainersAttributes](t.ref.Append("containers"))
}

func (t DataTemplateAttributes) Scaling() terra.ListValue[DataTemplateScalingAttributes] {
	return terra.ReferenceAsList[DataTemplateScalingAttributes](t.ref.Append("scaling"))
}

func (t DataTemplateAttributes) Volumes() terra.ListValue[DataTemplateVolumesAttributes] {
	return terra.ReferenceAsList[DataTemplateVolumesAttributes](t.ref.Append("volumes"))
}

func (t DataTemplateAttributes) VpcAccess() terra.ListValue[DataTemplateVpcAccessAttributes] {
	return terra.ReferenceAsList[DataTemplateVpcAccessAttributes](t.ref.Append("vpc_access"))
}

type DataTemplateContainersAttributes struct {
	ref terra.Reference
}

func (c DataTemplateContainersAttributes) InternalRef() (terra.Reference, error) {
	return c.ref, nil
}

func (c DataTemplateContainersAttributes) InternalWithRef(ref terra.Reference) DataTemplateContainersAttributes {
	return DataTemplateContainersAttributes{ref: ref}
}

func (c DataTemplateContainersAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return c.ref.InternalTokens()
}

func (c DataTemplateContainersAttributes) Args() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](c.ref.Append("args"))
}

func (c DataTemplateContainersAttributes) Command() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](c.ref.Append("command"))
}

func (c DataTemplateContainersAttributes) DependsOn() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](c.ref.Append("depends_on"))
}

func (c DataTemplateContainersAttributes) Image() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("image"))
}

func (c DataTemplateContainersAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("name"))
}

func (c DataTemplateContainersAttributes) WorkingDir() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("working_dir"))
}

func (c DataTemplateContainersAttributes) Env() terra.ListValue[DataTemplateContainersEnvAttributes] {
	return terra.ReferenceAsList[DataTemplateContainersEnvAttributes](c.ref.Append("env"))
}

func (c DataTemplateContainersAttributes) LivenessProbe() terra.ListValue[DataTemplateContainersLivenessProbeAttributes] {
	return terra.ReferenceAsList[DataTemplateContainersLivenessProbeAttributes](c.ref.Append("liveness_probe"))
}

func (c DataTemplateContainersAttributes) Ports() terra.ListValue[DataTemplateContainersPortsAttributes] {
	return terra.ReferenceAsList[DataTemplateContainersPortsAttributes](c.ref.Append("ports"))
}

func (c DataTemplateContainersAttributes) Resources() terra.ListValue[DataTemplateContainersResourcesAttributes] {
	return terra.ReferenceAsList[DataTemplateContainersResourcesAttributes](c.ref.Append("resources"))
}

func (c DataTemplateContainersAttributes) StartupProbe() terra.ListValue[DataTemplateContainersStartupProbeAttributes] {
	return terra.ReferenceAsList[DataTemplateContainersStartupProbeAttributes](c.ref.Append("startup_probe"))
}

func (c DataTemplateContainersAttributes) VolumeMounts() terra.ListValue[DataTemplateContainersVolumeMountsAttributes] {
	return terra.ReferenceAsList[DataTemplateContainersVolumeMountsAttributes](c.ref.Append("volume_mounts"))
}

type DataTemplateContainersEnvAttributes struct {
	ref terra.Reference
}

func (e DataTemplateContainersEnvAttributes) InternalRef() (terra.Reference, error) {
	return e.ref, nil
}

func (e DataTemplateContainersEnvAttributes) InternalWithRef(ref terra.Reference) DataTemplateContainersEnvAttributes {
	return DataTemplateContainersEnvAttributes{ref: ref}
}

func (e DataTemplateContainersEnvAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return e.ref.InternalTokens()
}

func (e DataTemplateContainersEnvAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("name"))
}

func (e DataTemplateContainersEnvAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("value"))
}

func (e DataTemplateContainersEnvAttributes) ValueSource() terra.ListValue[DataTemplateContainersEnvValueSourceAttributes] {
	return terra.ReferenceAsList[DataTemplateContainersEnvValueSourceAttributes](e.ref.Append("value_source"))
}

type DataTemplateContainersEnvValueSourceAttributes struct {
	ref terra.Reference
}

func (vs DataTemplateContainersEnvValueSourceAttributes) InternalRef() (terra.Reference, error) {
	return vs.ref, nil
}

func (vs DataTemplateContainersEnvValueSourceAttributes) InternalWithRef(ref terra.Reference) DataTemplateContainersEnvValueSourceAttributes {
	return DataTemplateContainersEnvValueSourceAttributes{ref: ref}
}

func (vs DataTemplateContainersEnvValueSourceAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return vs.ref.InternalTokens()
}

func (vs DataTemplateContainersEnvValueSourceAttributes) SecretKeyRef() terra.ListValue[DataTemplateContainers2Daa6B87Attributes] {
	return terra.ReferenceAsList[DataTemplateContainers2Daa6B87Attributes](vs.ref.Append("secret_key_ref"))
}

type DataTemplateContainers2Daa6B87Attributes struct {
	ref terra.Reference
}

func (skr DataTemplateContainers2Daa6B87Attributes) InternalRef() (terra.Reference, error) {
	return skr.ref, nil
}

func (skr DataTemplateContainers2Daa6B87Attributes) InternalWithRef(ref terra.Reference) DataTemplateContainers2Daa6B87Attributes {
	return DataTemplateContainers2Daa6B87Attributes{ref: ref}
}

func (skr DataTemplateContainers2Daa6B87Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return skr.ref.InternalTokens()
}

func (skr DataTemplateContainers2Daa6B87Attributes) Secret() terra.StringValue {
	return terra.ReferenceAsString(skr.ref.Append("secret"))
}

func (skr DataTemplateContainers2Daa6B87Attributes) Version() terra.StringValue {
	return terra.ReferenceAsString(skr.ref.Append("version"))
}

type DataTemplateContainersLivenessProbeAttributes struct {
	ref terra.Reference
}

func (lp DataTemplateContainersLivenessProbeAttributes) InternalRef() (terra.Reference, error) {
	return lp.ref, nil
}

func (lp DataTemplateContainersLivenessProbeAttributes) InternalWithRef(ref terra.Reference) DataTemplateContainersLivenessProbeAttributes {
	return DataTemplateContainersLivenessProbeAttributes{ref: ref}
}

func (lp DataTemplateContainersLivenessProbeAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return lp.ref.InternalTokens()
}

func (lp DataTemplateContainersLivenessProbeAttributes) FailureThreshold() terra.NumberValue {
	return terra.ReferenceAsNumber(lp.ref.Append("failure_threshold"))
}

func (lp DataTemplateContainersLivenessProbeAttributes) InitialDelaySeconds() terra.NumberValue {
	return terra.ReferenceAsNumber(lp.ref.Append("initial_delay_seconds"))
}

func (lp DataTemplateContainersLivenessProbeAttributes) PeriodSeconds() terra.NumberValue {
	return terra.ReferenceAsNumber(lp.ref.Append("period_seconds"))
}

func (lp DataTemplateContainersLivenessProbeAttributes) TimeoutSeconds() terra.NumberValue {
	return terra.ReferenceAsNumber(lp.ref.Append("timeout_seconds"))
}

func (lp DataTemplateContainersLivenessProbeAttributes) Grpc() terra.ListValue[DataTemplateContainersLivenessProbeGrpcAttributes] {
	return terra.ReferenceAsList[DataTemplateContainersLivenessProbeGrpcAttributes](lp.ref.Append("grpc"))
}

func (lp DataTemplateContainersLivenessProbeAttributes) HttpGet() terra.ListValue[DataTemplateContainersLivenessProbeHttpGetAttributes] {
	return terra.ReferenceAsList[DataTemplateContainersLivenessProbeHttpGetAttributes](lp.ref.Append("http_get"))
}

func (lp DataTemplateContainersLivenessProbeAttributes) TcpSocket() terra.ListValue[DataTemplateContainersLivenessProbeTcpSocketAttributes] {
	return terra.ReferenceAsList[DataTemplateContainersLivenessProbeTcpSocketAttributes](lp.ref.Append("tcp_socket"))
}

type DataTemplateContainersLivenessProbeGrpcAttributes struct {
	ref terra.Reference
}

func (g DataTemplateContainersLivenessProbeGrpcAttributes) InternalRef() (terra.Reference, error) {
	return g.ref, nil
}

func (g DataTemplateContainersLivenessProbeGrpcAttributes) InternalWithRef(ref terra.Reference) DataTemplateContainersLivenessProbeGrpcAttributes {
	return DataTemplateContainersLivenessProbeGrpcAttributes{ref: ref}
}

func (g DataTemplateContainersLivenessProbeGrpcAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return g.ref.InternalTokens()
}

func (g DataTemplateContainersLivenessProbeGrpcAttributes) Port() terra.NumberValue {
	return terra.ReferenceAsNumber(g.ref.Append("port"))
}

func (g DataTemplateContainersLivenessProbeGrpcAttributes) Service() terra.StringValue {
	return terra.ReferenceAsString(g.ref.Append("service"))
}

type DataTemplateContainersLivenessProbeHttpGetAttributes struct {
	ref terra.Reference
}

func (hg DataTemplateContainersLivenessProbeHttpGetAttributes) InternalRef() (terra.Reference, error) {
	return hg.ref, nil
}

func (hg DataTemplateContainersLivenessProbeHttpGetAttributes) InternalWithRef(ref terra.Reference) DataTemplateContainersLivenessProbeHttpGetAttributes {
	return DataTemplateContainersLivenessProbeHttpGetAttributes{ref: ref}
}

func (hg DataTemplateContainersLivenessProbeHttpGetAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return hg.ref.InternalTokens()
}

func (hg DataTemplateContainersLivenessProbeHttpGetAttributes) Path() terra.StringValue {
	return terra.ReferenceAsString(hg.ref.Append("path"))
}

func (hg DataTemplateContainersLivenessProbeHttpGetAttributes) Port() terra.NumberValue {
	return terra.ReferenceAsNumber(hg.ref.Append("port"))
}

func (hg DataTemplateContainersLivenessProbeHttpGetAttributes) HttpHeaders() terra.ListValue[DataTemplateContainers32Db2D95Attributes] {
	return terra.ReferenceAsList[DataTemplateContainers32Db2D95Attributes](hg.ref.Append("http_headers"))
}

type DataTemplateContainers32Db2D95Attributes struct {
	ref terra.Reference
}

func (hh DataTemplateContainers32Db2D95Attributes) InternalRef() (terra.Reference, error) {
	return hh.ref, nil
}

func (hh DataTemplateContainers32Db2D95Attributes) InternalWithRef(ref terra.Reference) DataTemplateContainers32Db2D95Attributes {
	return DataTemplateContainers32Db2D95Attributes{ref: ref}
}

func (hh DataTemplateContainers32Db2D95Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return hh.ref.InternalTokens()
}

func (hh DataTemplateContainers32Db2D95Attributes) Name() terra.StringValue {
	return terra.ReferenceAsString(hh.ref.Append("name"))
}

func (hh DataTemplateContainers32Db2D95Attributes) Value() terra.StringValue {
	return terra.ReferenceAsString(hh.ref.Append("value"))
}

type DataTemplateContainersLivenessProbeTcpSocketAttributes struct {
	ref terra.Reference
}

func (ts DataTemplateContainersLivenessProbeTcpSocketAttributes) InternalRef() (terra.Reference, error) {
	return ts.ref, nil
}

func (ts DataTemplateContainersLivenessProbeTcpSocketAttributes) InternalWithRef(ref terra.Reference) DataTemplateContainersLivenessProbeTcpSocketAttributes {
	return DataTemplateContainersLivenessProbeTcpSocketAttributes{ref: ref}
}

func (ts DataTemplateContainersLivenessProbeTcpSocketAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ts.ref.InternalTokens()
}

func (ts DataTemplateContainersLivenessProbeTcpSocketAttributes) Port() terra.NumberValue {
	return terra.ReferenceAsNumber(ts.ref.Append("port"))
}

type DataTemplateContainersPortsAttributes struct {
	ref terra.Reference
}

func (p DataTemplateContainersPortsAttributes) InternalRef() (terra.Reference, error) {
	return p.ref, nil
}

func (p DataTemplateContainersPortsAttributes) InternalWithRef(ref terra.Reference) DataTemplateContainersPortsAttributes {
	return DataTemplateContainersPortsAttributes{ref: ref}
}

func (p DataTemplateContainersPortsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return p.ref.InternalTokens()
}

func (p DataTemplateContainersPortsAttributes) ContainerPort() terra.NumberValue {
	return terra.ReferenceAsNumber(p.ref.Append("container_port"))
}

func (p DataTemplateContainersPortsAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(p.ref.Append("name"))
}

type DataTemplateContainersResourcesAttributes struct {
	ref terra.Reference
}

func (r DataTemplateContainersResourcesAttributes) InternalRef() (terra.Reference, error) {
	return r.ref, nil
}

func (r DataTemplateContainersResourcesAttributes) InternalWithRef(ref terra.Reference) DataTemplateContainersResourcesAttributes {
	return DataTemplateContainersResourcesAttributes{ref: ref}
}

func (r DataTemplateContainersResourcesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return r.ref.InternalTokens()
}

func (r DataTemplateContainersResourcesAttributes) CpuIdle() terra.BoolValue {
	return terra.ReferenceAsBool(r.ref.Append("cpu_idle"))
}

func (r DataTemplateContainersResourcesAttributes) Limits() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](r.ref.Append("limits"))
}

func (r DataTemplateContainersResourcesAttributes) StartupCpuBoost() terra.BoolValue {
	return terra.ReferenceAsBool(r.ref.Append("startup_cpu_boost"))
}

type DataTemplateContainersStartupProbeAttributes struct {
	ref terra.Reference
}

func (sp DataTemplateContainersStartupProbeAttributes) InternalRef() (terra.Reference, error) {
	return sp.ref, nil
}

func (sp DataTemplateContainersStartupProbeAttributes) InternalWithRef(ref terra.Reference) DataTemplateContainersStartupProbeAttributes {
	return DataTemplateContainersStartupProbeAttributes{ref: ref}
}

func (sp DataTemplateContainersStartupProbeAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sp.ref.InternalTokens()
}

func (sp DataTemplateContainersStartupProbeAttributes) FailureThreshold() terra.NumberValue {
	return terra.ReferenceAsNumber(sp.ref.Append("failure_threshold"))
}

func (sp DataTemplateContainersStartupProbeAttributes) InitialDelaySeconds() terra.NumberValue {
	return terra.ReferenceAsNumber(sp.ref.Append("initial_delay_seconds"))
}

func (sp DataTemplateContainersStartupProbeAttributes) PeriodSeconds() terra.NumberValue {
	return terra.ReferenceAsNumber(sp.ref.Append("period_seconds"))
}

func (sp DataTemplateContainersStartupProbeAttributes) TimeoutSeconds() terra.NumberValue {
	return terra.ReferenceAsNumber(sp.ref.Append("timeout_seconds"))
}

func (sp DataTemplateContainersStartupProbeAttributes) Grpc() terra.ListValue[DataTemplateContainersStartupProbeGrpcAttributes] {
	return terra.ReferenceAsList[DataTemplateContainersStartupProbeGrpcAttributes](sp.ref.Append("grpc"))
}

func (sp DataTemplateContainersStartupProbeAttributes) HttpGet() terra.ListValue[DataTemplateContainersStartupProbeHttpGetAttributes] {
	return terra.ReferenceAsList[DataTemplateContainersStartupProbeHttpGetAttributes](sp.ref.Append("http_get"))
}

func (sp DataTemplateContainersStartupProbeAttributes) TcpSocket() terra.ListValue[DataTemplateContainersStartupProbeTcpSocketAttributes] {
	return terra.ReferenceAsList[DataTemplateContainersStartupProbeTcpSocketAttributes](sp.ref.Append("tcp_socket"))
}

type DataTemplateContainersStartupProbeGrpcAttributes struct {
	ref terra.Reference
}

func (g DataTemplateContainersStartupProbeGrpcAttributes) InternalRef() (terra.Reference, error) {
	return g.ref, nil
}

func (g DataTemplateContainersStartupProbeGrpcAttributes) InternalWithRef(ref terra.Reference) DataTemplateContainersStartupProbeGrpcAttributes {
	return DataTemplateContainersStartupProbeGrpcAttributes{ref: ref}
}

func (g DataTemplateContainersStartupProbeGrpcAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return g.ref.InternalTokens()
}

func (g DataTemplateContainersStartupProbeGrpcAttributes) Port() terra.NumberValue {
	return terra.ReferenceAsNumber(g.ref.Append("port"))
}

func (g DataTemplateContainersStartupProbeGrpcAttributes) Service() terra.StringValue {
	return terra.ReferenceAsString(g.ref.Append("service"))
}

type DataTemplateContainersStartupProbeHttpGetAttributes struct {
	ref terra.Reference
}

func (hg DataTemplateContainersStartupProbeHttpGetAttributes) InternalRef() (terra.Reference, error) {
	return hg.ref, nil
}

func (hg DataTemplateContainersStartupProbeHttpGetAttributes) InternalWithRef(ref terra.Reference) DataTemplateContainersStartupProbeHttpGetAttributes {
	return DataTemplateContainersStartupProbeHttpGetAttributes{ref: ref}
}

func (hg DataTemplateContainersStartupProbeHttpGetAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return hg.ref.InternalTokens()
}

func (hg DataTemplateContainersStartupProbeHttpGetAttributes) Path() terra.StringValue {
	return terra.ReferenceAsString(hg.ref.Append("path"))
}

func (hg DataTemplateContainersStartupProbeHttpGetAttributes) Port() terra.NumberValue {
	return terra.ReferenceAsNumber(hg.ref.Append("port"))
}

func (hg DataTemplateContainersStartupProbeHttpGetAttributes) HttpHeaders() terra.ListValue[DataTemplateContainers9Abba116Attributes] {
	return terra.ReferenceAsList[DataTemplateContainers9Abba116Attributes](hg.ref.Append("http_headers"))
}

type DataTemplateContainers9Abba116Attributes struct {
	ref terra.Reference
}

func (hh DataTemplateContainers9Abba116Attributes) InternalRef() (terra.Reference, error) {
	return hh.ref, nil
}

func (hh DataTemplateContainers9Abba116Attributes) InternalWithRef(ref terra.Reference) DataTemplateContainers9Abba116Attributes {
	return DataTemplateContainers9Abba116Attributes{ref: ref}
}

func (hh DataTemplateContainers9Abba116Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return hh.ref.InternalTokens()
}

func (hh DataTemplateContainers9Abba116Attributes) Name() terra.StringValue {
	return terra.ReferenceAsString(hh.ref.Append("name"))
}

func (hh DataTemplateContainers9Abba116Attributes) Value() terra.StringValue {
	return terra.ReferenceAsString(hh.ref.Append("value"))
}

type DataTemplateContainersStartupProbeTcpSocketAttributes struct {
	ref terra.Reference
}

func (ts DataTemplateContainersStartupProbeTcpSocketAttributes) InternalRef() (terra.Reference, error) {
	return ts.ref, nil
}

func (ts DataTemplateContainersStartupProbeTcpSocketAttributes) InternalWithRef(ref terra.Reference) DataTemplateContainersStartupProbeTcpSocketAttributes {
	return DataTemplateContainersStartupProbeTcpSocketAttributes{ref: ref}
}

func (ts DataTemplateContainersStartupProbeTcpSocketAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ts.ref.InternalTokens()
}

func (ts DataTemplateContainersStartupProbeTcpSocketAttributes) Port() terra.NumberValue {
	return terra.ReferenceAsNumber(ts.ref.Append("port"))
}

type DataTemplateContainersVolumeMountsAttributes struct {
	ref terra.Reference
}

func (vm DataTemplateContainersVolumeMountsAttributes) InternalRef() (terra.Reference, error) {
	return vm.ref, nil
}

func (vm DataTemplateContainersVolumeMountsAttributes) InternalWithRef(ref terra.Reference) DataTemplateContainersVolumeMountsAttributes {
	return DataTemplateContainersVolumeMountsAttributes{ref: ref}
}

func (vm DataTemplateContainersVolumeMountsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return vm.ref.InternalTokens()
}

func (vm DataTemplateContainersVolumeMountsAttributes) MountPath() terra.StringValue {
	return terra.ReferenceAsString(vm.ref.Append("mount_path"))
}

func (vm DataTemplateContainersVolumeMountsAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(vm.ref.Append("name"))
}

type DataTemplateScalingAttributes struct {
	ref terra.Reference
}

func (s DataTemplateScalingAttributes) InternalRef() (terra.Reference, error) {
	return s.ref, nil
}

func (s DataTemplateScalingAttributes) InternalWithRef(ref terra.Reference) DataTemplateScalingAttributes {
	return DataTemplateScalingAttributes{ref: ref}
}

func (s DataTemplateScalingAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return s.ref.InternalTokens()
}

func (s DataTemplateScalingAttributes) MaxInstanceCount() terra.NumberValue {
	return terra.ReferenceAsNumber(s.ref.Append("max_instance_count"))
}

func (s DataTemplateScalingAttributes) MinInstanceCount() terra.NumberValue {
	return terra.ReferenceAsNumber(s.ref.Append("min_instance_count"))
}

type DataTemplateVolumesAttributes struct {
	ref terra.Reference
}

func (v DataTemplateVolumesAttributes) InternalRef() (terra.Reference, error) {
	return v.ref, nil
}

func (v DataTemplateVolumesAttributes) InternalWithRef(ref terra.Reference) DataTemplateVolumesAttributes {
	return DataTemplateVolumesAttributes{ref: ref}
}

func (v DataTemplateVolumesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return v.ref.InternalTokens()
}

func (v DataTemplateVolumesAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(v.ref.Append("name"))
}

func (v DataTemplateVolumesAttributes) CloudSqlInstance() terra.ListValue[DataTemplateVolumesCloudSqlInstanceAttributes] {
	return terra.ReferenceAsList[DataTemplateVolumesCloudSqlInstanceAttributes](v.ref.Append("cloud_sql_instance"))
}

func (v DataTemplateVolumesAttributes) EmptyDir() terra.ListValue[DataTemplateVolumesEmptyDirAttributes] {
	return terra.ReferenceAsList[DataTemplateVolumesEmptyDirAttributes](v.ref.Append("empty_dir"))
}

func (v DataTemplateVolumesAttributes) Gcs() terra.ListValue[DataTemplateVolumesGcsAttributes] {
	return terra.ReferenceAsList[DataTemplateVolumesGcsAttributes](v.ref.Append("gcs"))
}

func (v DataTemplateVolumesAttributes) Nfs() terra.ListValue[DataTemplateVolumesNfsAttributes] {
	return terra.ReferenceAsList[DataTemplateVolumesNfsAttributes](v.ref.Append("nfs"))
}

func (v DataTemplateVolumesAttributes) Secret() terra.ListValue[DataTemplateVolumesSecretAttributes] {
	return terra.ReferenceAsList[DataTemplateVolumesSecretAttributes](v.ref.Append("secret"))
}

type DataTemplateVolumesCloudSqlInstanceAttributes struct {
	ref terra.Reference
}

func (csi DataTemplateVolumesCloudSqlInstanceAttributes) InternalRef() (terra.Reference, error) {
	return csi.ref, nil
}

func (csi DataTemplateVolumesCloudSqlInstanceAttributes) InternalWithRef(ref terra.Reference) DataTemplateVolumesCloudSqlInstanceAttributes {
	return DataTemplateVolumesCloudSqlInstanceAttributes{ref: ref}
}

func (csi DataTemplateVolumesCloudSqlInstanceAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return csi.ref.InternalTokens()
}

func (csi DataTemplateVolumesCloudSqlInstanceAttributes) Instances() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](csi.ref.Append("instances"))
}

type DataTemplateVolumesEmptyDirAttributes struct {
	ref terra.Reference
}

func (ed DataTemplateVolumesEmptyDirAttributes) InternalRef() (terra.Reference, error) {
	return ed.ref, nil
}

func (ed DataTemplateVolumesEmptyDirAttributes) InternalWithRef(ref terra.Reference) DataTemplateVolumesEmptyDirAttributes {
	return DataTemplateVolumesEmptyDirAttributes{ref: ref}
}

func (ed DataTemplateVolumesEmptyDirAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ed.ref.InternalTokens()
}

func (ed DataTemplateVolumesEmptyDirAttributes) Medium() terra.StringValue {
	return terra.ReferenceAsString(ed.ref.Append("medium"))
}

func (ed DataTemplateVolumesEmptyDirAttributes) SizeLimit() terra.StringValue {
	return terra.ReferenceAsString(ed.ref.Append("size_limit"))
}

type DataTemplateVolumesGcsAttributes struct {
	ref terra.Reference
}

func (g DataTemplateVolumesGcsAttributes) InternalRef() (terra.Reference, error) {
	return g.ref, nil
}

func (g DataTemplateVolumesGcsAttributes) InternalWithRef(ref terra.Reference) DataTemplateVolumesGcsAttributes {
	return DataTemplateVolumesGcsAttributes{ref: ref}
}

func (g DataTemplateVolumesGcsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return g.ref.InternalTokens()
}

func (g DataTemplateVolumesGcsAttributes) Bucket() terra.StringValue {
	return terra.ReferenceAsString(g.ref.Append("bucket"))
}

func (g DataTemplateVolumesGcsAttributes) ReadOnly() terra.BoolValue {
	return terra.ReferenceAsBool(g.ref.Append("read_only"))
}

type DataTemplateVolumesNfsAttributes struct {
	ref terra.Reference
}

func (n DataTemplateVolumesNfsAttributes) InternalRef() (terra.Reference, error) {
	return n.ref, nil
}

func (n DataTemplateVolumesNfsAttributes) InternalWithRef(ref terra.Reference) DataTemplateVolumesNfsAttributes {
	return DataTemplateVolumesNfsAttributes{ref: ref}
}

func (n DataTemplateVolumesNfsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return n.ref.InternalTokens()
}

func (n DataTemplateVolumesNfsAttributes) Path() terra.StringValue {
	return terra.ReferenceAsString(n.ref.Append("path"))
}

func (n DataTemplateVolumesNfsAttributes) ReadOnly() terra.BoolValue {
	return terra.ReferenceAsBool(n.ref.Append("read_only"))
}

func (n DataTemplateVolumesNfsAttributes) Server() terra.StringValue {
	return terra.ReferenceAsString(n.ref.Append("server"))
}

type DataTemplateVolumesSecretAttributes struct {
	ref terra.Reference
}

func (s DataTemplateVolumesSecretAttributes) InternalRef() (terra.Reference, error) {
	return s.ref, nil
}

func (s DataTemplateVolumesSecretAttributes) InternalWithRef(ref terra.Reference) DataTemplateVolumesSecretAttributes {
	return DataTemplateVolumesSecretAttributes{ref: ref}
}

func (s DataTemplateVolumesSecretAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return s.ref.InternalTokens()
}

func (s DataTemplateVolumesSecretAttributes) DefaultMode() terra.NumberValue {
	return terra.ReferenceAsNumber(s.ref.Append("default_mode"))
}

func (s DataTemplateVolumesSecretAttributes) Secret() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("secret"))
}

func (s DataTemplateVolumesSecretAttributes) Items() terra.ListValue[DataTemplateVolumesSecretItemsAttributes] {
	return terra.ReferenceAsList[DataTemplateVolumesSecretItemsAttributes](s.ref.Append("items"))
}

type DataTemplateVolumesSecretItemsAttributes struct {
	ref terra.Reference
}

func (i DataTemplateVolumesSecretItemsAttributes) InternalRef() (terra.Reference, error) {
	return i.ref, nil
}

func (i DataTemplateVolumesSecretItemsAttributes) InternalWithRef(ref terra.Reference) DataTemplateVolumesSecretItemsAttributes {
	return DataTemplateVolumesSecretItemsAttributes{ref: ref}
}

func (i DataTemplateVolumesSecretItemsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return i.ref.InternalTokens()
}

func (i DataTemplateVolumesSecretItemsAttributes) Mode() terra.NumberValue {
	return terra.ReferenceAsNumber(i.ref.Append("mode"))
}

func (i DataTemplateVolumesSecretItemsAttributes) Path() terra.StringValue {
	return terra.ReferenceAsString(i.ref.Append("path"))
}

func (i DataTemplateVolumesSecretItemsAttributes) Version() terra.StringValue {
	return terra.ReferenceAsString(i.ref.Append("version"))
}

type DataTemplateVpcAccessAttributes struct {
	ref terra.Reference
}

func (va DataTemplateVpcAccessAttributes) InternalRef() (terra.Reference, error) {
	return va.ref, nil
}

func (va DataTemplateVpcAccessAttributes) InternalWithRef(ref terra.Reference) DataTemplateVpcAccessAttributes {
	return DataTemplateVpcAccessAttributes{ref: ref}
}

func (va DataTemplateVpcAccessAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return va.ref.InternalTokens()
}

func (va DataTemplateVpcAccessAttributes) Connector() terra.StringValue {
	return terra.ReferenceAsString(va.ref.Append("connector"))
}

func (va DataTemplateVpcAccessAttributes) Egress() terra.StringValue {
	return terra.ReferenceAsString(va.ref.Append("egress"))
}

func (va DataTemplateVpcAccessAttributes) NetworkInterfaces() terra.ListValue[DataTemplateVpcAccessNetworkInterfacesAttributes] {
	return terra.ReferenceAsList[DataTemplateVpcAccessNetworkInterfacesAttributes](va.ref.Append("network_interfaces"))
}

type DataTemplateVpcAccessNetworkInterfacesAttributes struct {
	ref terra.Reference
}

func (ni DataTemplateVpcAccessNetworkInterfacesAttributes) InternalRef() (terra.Reference, error) {
	return ni.ref, nil
}

func (ni DataTemplateVpcAccessNetworkInterfacesAttributes) InternalWithRef(ref terra.Reference) DataTemplateVpcAccessNetworkInterfacesAttributes {
	return DataTemplateVpcAccessNetworkInterfacesAttributes{ref: ref}
}

func (ni DataTemplateVpcAccessNetworkInterfacesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ni.ref.InternalTokens()
}

func (ni DataTemplateVpcAccessNetworkInterfacesAttributes) Network() terra.StringValue {
	return terra.ReferenceAsString(ni.ref.Append("network"))
}

func (ni DataTemplateVpcAccessNetworkInterfacesAttributes) Subnetwork() terra.StringValue {
	return terra.ReferenceAsString(ni.ref.Append("subnetwork"))
}

func (ni DataTemplateVpcAccessNetworkInterfacesAttributes) Tags() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](ni.ref.Append("tags"))
}

type DataTerminalConditionAttributes struct {
	ref terra.Reference
}

func (tc DataTerminalConditionAttributes) InternalRef() (terra.Reference, error) {
	return tc.ref, nil
}

func (tc DataTerminalConditionAttributes) InternalWithRef(ref terra.Reference) DataTerminalConditionAttributes {
	return DataTerminalConditionAttributes{ref: ref}
}

func (tc DataTerminalConditionAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return tc.ref.InternalTokens()
}

func (tc DataTerminalConditionAttributes) ExecutionReason() terra.StringValue {
	return terra.ReferenceAsString(tc.ref.Append("execution_reason"))
}

func (tc DataTerminalConditionAttributes) LastTransitionTime() terra.StringValue {
	return terra.ReferenceAsString(tc.ref.Append("last_transition_time"))
}

func (tc DataTerminalConditionAttributes) Message() terra.StringValue {
	return terra.ReferenceAsString(tc.ref.Append("message"))
}

func (tc DataTerminalConditionAttributes) Reason() terra.StringValue {
	return terra.ReferenceAsString(tc.ref.Append("reason"))
}

func (tc DataTerminalConditionAttributes) RevisionReason() terra.StringValue {
	return terra.ReferenceAsString(tc.ref.Append("revision_reason"))
}

func (tc DataTerminalConditionAttributes) Severity() terra.StringValue {
	return terra.ReferenceAsString(tc.ref.Append("severity"))
}

func (tc DataTerminalConditionAttributes) State() terra.StringValue {
	return terra.ReferenceAsString(tc.ref.Append("state"))
}

func (tc DataTerminalConditionAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(tc.ref.Append("type"))
}

type DataTrafficAttributes struct {
	ref terra.Reference
}

func (t DataTrafficAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t DataTrafficAttributes) InternalWithRef(ref terra.Reference) DataTrafficAttributes {
	return DataTrafficAttributes{ref: ref}
}

func (t DataTrafficAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t DataTrafficAttributes) Percent() terra.NumberValue {
	return terra.ReferenceAsNumber(t.ref.Append("percent"))
}

func (t DataTrafficAttributes) Revision() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("revision"))
}

func (t DataTrafficAttributes) Tag() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("tag"))
}

func (t DataTrafficAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("type"))
}

type DataTrafficStatusesAttributes struct {
	ref terra.Reference
}

func (ts DataTrafficStatusesAttributes) InternalRef() (terra.Reference, error) {
	return ts.ref, nil
}

func (ts DataTrafficStatusesAttributes) InternalWithRef(ref terra.Reference) DataTrafficStatusesAttributes {
	return DataTrafficStatusesAttributes{ref: ref}
}

func (ts DataTrafficStatusesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ts.ref.InternalTokens()
}

func (ts DataTrafficStatusesAttributes) Percent() terra.NumberValue {
	return terra.ReferenceAsNumber(ts.ref.Append("percent"))
}

func (ts DataTrafficStatusesAttributes) Revision() terra.StringValue {
	return terra.ReferenceAsString(ts.ref.Append("revision"))
}

func (ts DataTrafficStatusesAttributes) Tag() terra.StringValue {
	return terra.ReferenceAsString(ts.ref.Append("tag"))
}

func (ts DataTrafficStatusesAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(ts.ref.Append("type"))
}

func (ts DataTrafficStatusesAttributes) Uri() terra.StringValue {
	return terra.ReferenceAsString(ts.ref.Append("uri"))
}

type DataBinaryAuthorizationState struct {
	BreakglassJustification string `json:"breakglass_justification"`
	UseDefault              bool   `json:"use_default"`
}

type DataConditionsState struct {
	ExecutionReason    string `json:"execution_reason"`
	LastTransitionTime string `json:"last_transition_time"`
	Message            string `json:"message"`
	Reason             string `json:"reason"`
	RevisionReason     string `json:"revision_reason"`
	Severity           string `json:"severity"`
	State              string `json:"state"`
	Type               string `json:"type"`
}

type DataScalingState struct {
	MinInstanceCount float64 `json:"min_instance_count"`
}

type DataTemplateState struct {
	Annotations                   map[string]string             `json:"annotations"`
	EncryptionKey                 string                        `json:"encryption_key"`
	ExecutionEnvironment          string                        `json:"execution_environment"`
	Labels                        map[string]string             `json:"labels"`
	MaxInstanceRequestConcurrency float64                       `json:"max_instance_request_concurrency"`
	Revision                      string                        `json:"revision"`
	ServiceAccount                string                        `json:"service_account"`
	SessionAffinity               bool                          `json:"session_affinity"`
	Timeout                       string                        `json:"timeout"`
	Containers                    []DataTemplateContainersState `json:"containers"`
	Scaling                       []DataTemplateScalingState    `json:"scaling"`
	Volumes                       []DataTemplateVolumesState    `json:"volumes"`
	VpcAccess                     []DataTemplateVpcAccessState  `json:"vpc_access"`
}

type DataTemplateContainersState struct {
	Args          []string                                   `json:"args"`
	Command       []string                                   `json:"command"`
	DependsOn     []string                                   `json:"depends_on"`
	Image         string                                     `json:"image"`
	Name          string                                     `json:"name"`
	WorkingDir    string                                     `json:"working_dir"`
	Env           []DataTemplateContainersEnvState           `json:"env"`
	LivenessProbe []DataTemplateContainersLivenessProbeState `json:"liveness_probe"`
	Ports         []DataTemplateContainersPortsState         `json:"ports"`
	Resources     []DataTemplateContainersResourcesState     `json:"resources"`
	StartupProbe  []DataTemplateContainersStartupProbeState  `json:"startup_probe"`
	VolumeMounts  []DataTemplateContainersVolumeMountsState  `json:"volume_mounts"`
}

type DataTemplateContainersEnvState struct {
	Name        string                                      `json:"name"`
	Value       string                                      `json:"value"`
	ValueSource []DataTemplateContainersEnvValueSourceState `json:"value_source"`
}

type DataTemplateContainersEnvValueSourceState struct {
	SecretKeyRef []DataTemplateContainers2Daa6B87State `json:"secret_key_ref"`
}

type DataTemplateContainers2Daa6B87State struct {
	Secret  string `json:"secret"`
	Version string `json:"version"`
}

type DataTemplateContainersLivenessProbeState struct {
	FailureThreshold    float64                                             `json:"failure_threshold"`
	InitialDelaySeconds float64                                             `json:"initial_delay_seconds"`
	PeriodSeconds       float64                                             `json:"period_seconds"`
	TimeoutSeconds      float64                                             `json:"timeout_seconds"`
	Grpc                []DataTemplateContainersLivenessProbeGrpcState      `json:"grpc"`
	HttpGet             []DataTemplateContainersLivenessProbeHttpGetState   `json:"http_get"`
	TcpSocket           []DataTemplateContainersLivenessProbeTcpSocketState `json:"tcp_socket"`
}

type DataTemplateContainersLivenessProbeGrpcState struct {
	Port    float64 `json:"port"`
	Service string  `json:"service"`
}

type DataTemplateContainersLivenessProbeHttpGetState struct {
	Path        string                                `json:"path"`
	Port        float64                               `json:"port"`
	HttpHeaders []DataTemplateContainers32Db2D95State `json:"http_headers"`
}

type DataTemplateContainers32Db2D95State struct {
	Name  string `json:"name"`
	Value string `json:"value"`
}

type DataTemplateContainersLivenessProbeTcpSocketState struct {
	Port float64 `json:"port"`
}

type DataTemplateContainersPortsState struct {
	ContainerPort float64 `json:"container_port"`
	Name          string  `json:"name"`
}

type DataTemplateContainersResourcesState struct {
	CpuIdle         bool              `json:"cpu_idle"`
	Limits          map[string]string `json:"limits"`
	StartupCpuBoost bool              `json:"startup_cpu_boost"`
}

type DataTemplateContainersStartupProbeState struct {
	FailureThreshold    float64                                            `json:"failure_threshold"`
	InitialDelaySeconds float64                                            `json:"initial_delay_seconds"`
	PeriodSeconds       float64                                            `json:"period_seconds"`
	TimeoutSeconds      float64                                            `json:"timeout_seconds"`
	Grpc                []DataTemplateContainersStartupProbeGrpcState      `json:"grpc"`
	HttpGet             []DataTemplateContainersStartupProbeHttpGetState   `json:"http_get"`
	TcpSocket           []DataTemplateContainersStartupProbeTcpSocketState `json:"tcp_socket"`
}

type DataTemplateContainersStartupProbeGrpcState struct {
	Port    float64 `json:"port"`
	Service string  `json:"service"`
}

type DataTemplateContainersStartupProbeHttpGetState struct {
	Path        string                                `json:"path"`
	Port        float64                               `json:"port"`
	HttpHeaders []DataTemplateContainers9Abba116State `json:"http_headers"`
}

type DataTemplateContainers9Abba116State struct {
	Name  string `json:"name"`
	Value string `json:"value"`
}

type DataTemplateContainersStartupProbeTcpSocketState struct {
	Port float64 `json:"port"`
}

type DataTemplateContainersVolumeMountsState struct {
	MountPath string `json:"mount_path"`
	Name      string `json:"name"`
}

type DataTemplateScalingState struct {
	MaxInstanceCount float64 `json:"max_instance_count"`
	MinInstanceCount float64 `json:"min_instance_count"`
}

type DataTemplateVolumesState struct {
	Name             string                                     `json:"name"`
	CloudSqlInstance []DataTemplateVolumesCloudSqlInstanceState `json:"cloud_sql_instance"`
	EmptyDir         []DataTemplateVolumesEmptyDirState         `json:"empty_dir"`
	Gcs              []DataTemplateVolumesGcsState              `json:"gcs"`
	Nfs              []DataTemplateVolumesNfsState              `json:"nfs"`
	Secret           []DataTemplateVolumesSecretState           `json:"secret"`
}

type DataTemplateVolumesCloudSqlInstanceState struct {
	Instances []string `json:"instances"`
}

type DataTemplateVolumesEmptyDirState struct {
	Medium    string `json:"medium"`
	SizeLimit string `json:"size_limit"`
}

type DataTemplateVolumesGcsState struct {
	Bucket   string `json:"bucket"`
	ReadOnly bool   `json:"read_only"`
}

type DataTemplateVolumesNfsState struct {
	Path     string `json:"path"`
	ReadOnly bool   `json:"read_only"`
	Server   string `json:"server"`
}

type DataTemplateVolumesSecretState struct {
	DefaultMode float64                               `json:"default_mode"`
	Secret      string                                `json:"secret"`
	Items       []DataTemplateVolumesSecretItemsState `json:"items"`
}

type DataTemplateVolumesSecretItemsState struct {
	Mode    float64 `json:"mode"`
	Path    string  `json:"path"`
	Version string  `json:"version"`
}

type DataTemplateVpcAccessState struct {
	Connector         string                                        `json:"connector"`
	Egress            string                                        `json:"egress"`
	NetworkInterfaces []DataTemplateVpcAccessNetworkInterfacesState `json:"network_interfaces"`
}

type DataTemplateVpcAccessNetworkInterfacesState struct {
	Network    string   `json:"network"`
	Subnetwork string   `json:"subnetwork"`
	Tags       []string `json:"tags"`
}

type DataTerminalConditionState struct {
	ExecutionReason    string `json:"execution_reason"`
	LastTransitionTime string `json:"last_transition_time"`
	Message            string `json:"message"`
	Reason             string `json:"reason"`
	RevisionReason     string `json:"revision_reason"`
	Severity           string `json:"severity"`
	State              string `json:"state"`
	Type               string `json:"type"`
}

type DataTrafficState struct {
	Percent  float64 `json:"percent"`
	Revision string  `json:"revision"`
	Tag      string  `json:"tag"`
	Type     string  `json:"type"`
}

type DataTrafficStatusesState struct {
	Percent  float64 `json:"percent"`
	Revision string  `json:"revision"`
	Tag      string  `json:"tag"`
	Type     string  `json:"type"`
	Uri      string  `json:"uri"`
}
