// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google_folders

import "github.com/golingon/lingon/pkg/terra"

// Data creates a new instance of [DataSource].
func Data(name string, args DataArgs) *DataSource {
	return &DataSource{
		Args: args,
		Name: name,
	}
}

var _ terra.DataSource = (*DataSource)(nil)

// DataSource represents the Terraform data resource google_folders.
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (gf *DataSource) DataSource() string {
	return "google_folders"
}

// LocalName returns the local name for [DataSource].
func (gf *DataSource) LocalName() string {
	return gf.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (gf *DataSource) Configuration() interface{} {
	return gf.Args
}

// Attributes returns the attributes for [DataSource].
func (gf *DataSource) Attributes() dataGoogleFoldersAttributes {
	return dataGoogleFoldersAttributes{ref: terra.ReferenceDataSource(gf)}
}

// DataArgs contains the configurations for google_folders.
type DataArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// ParentId: string, required
	ParentId terra.StringValue `hcl:"parent_id,attr" validate:"required"`
}

type dataGoogleFoldersAttributes struct {
	ref terra.Reference
}

// Id returns a reference to field id of google_folders.
func (gf dataGoogleFoldersAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(gf.ref.Append("id"))
}

// ParentId returns a reference to field parent_id of google_folders.
func (gf dataGoogleFoldersAttributes) ParentId() terra.StringValue {
	return terra.ReferenceAsString(gf.ref.Append("parent_id"))
}

func (gf dataGoogleFoldersAttributes) Folders() terra.ListValue[DataFoldersAttributes] {
	return terra.ReferenceAsList[DataFoldersAttributes](gf.ref.Append("folders"))
}
