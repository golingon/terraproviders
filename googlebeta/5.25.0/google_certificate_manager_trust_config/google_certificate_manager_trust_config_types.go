// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google_certificate_manager_trust_config

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type Timeouts struct {
	// Create: string, optional
	Create terra.StringValue `hcl:"create,attr"`
	// Delete: string, optional
	Delete terra.StringValue `hcl:"delete,attr"`
	// Update: string, optional
	Update terra.StringValue `hcl:"update,attr"`
}

type TrustStores struct {
	// TrustStoresIntermediateCas: min=0
	IntermediateCas []TrustStoresIntermediateCas `hcl:"intermediate_cas,block" validate:"min=0"`
	// TrustStoresTrustAnchors: min=0
	TrustAnchors []TrustStoresTrustAnchors `hcl:"trust_anchors,block" validate:"min=0"`
}

type TrustStoresIntermediateCas struct {
	// PemCertificate: string, optional
	PemCertificate terra.StringValue `hcl:"pem_certificate,attr"`
}

type TrustStoresTrustAnchors struct {
	// PemCertificate: string, optional
	PemCertificate terra.StringValue `hcl:"pem_certificate,attr"`
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("create"))
}

func (t TimeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("delete"))
}

func (t TimeoutsAttributes) Update() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("update"))
}

type TrustStoresAttributes struct {
	ref terra.Reference
}

func (ts TrustStoresAttributes) InternalRef() (terra.Reference, error) {
	return ts.ref, nil
}

func (ts TrustStoresAttributes) InternalWithRef(ref terra.Reference) TrustStoresAttributes {
	return TrustStoresAttributes{ref: ref}
}

func (ts TrustStoresAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ts.ref.InternalTokens()
}

func (ts TrustStoresAttributes) IntermediateCas() terra.ListValue[TrustStoresIntermediateCasAttributes] {
	return terra.ReferenceAsList[TrustStoresIntermediateCasAttributes](ts.ref.Append("intermediate_cas"))
}

func (ts TrustStoresAttributes) TrustAnchors() terra.ListValue[TrustStoresTrustAnchorsAttributes] {
	return terra.ReferenceAsList[TrustStoresTrustAnchorsAttributes](ts.ref.Append("trust_anchors"))
}

type TrustStoresIntermediateCasAttributes struct {
	ref terra.Reference
}

func (ic TrustStoresIntermediateCasAttributes) InternalRef() (terra.Reference, error) {
	return ic.ref, nil
}

func (ic TrustStoresIntermediateCasAttributes) InternalWithRef(ref terra.Reference) TrustStoresIntermediateCasAttributes {
	return TrustStoresIntermediateCasAttributes{ref: ref}
}

func (ic TrustStoresIntermediateCasAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ic.ref.InternalTokens()
}

func (ic TrustStoresIntermediateCasAttributes) PemCertificate() terra.StringValue {
	return terra.ReferenceAsString(ic.ref.Append("pem_certificate"))
}

type TrustStoresTrustAnchorsAttributes struct {
	ref terra.Reference
}

func (ta TrustStoresTrustAnchorsAttributes) InternalRef() (terra.Reference, error) {
	return ta.ref, nil
}

func (ta TrustStoresTrustAnchorsAttributes) InternalWithRef(ref terra.Reference) TrustStoresTrustAnchorsAttributes {
	return TrustStoresTrustAnchorsAttributes{ref: ref}
}

func (ta TrustStoresTrustAnchorsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ta.ref.InternalTokens()
}

func (ta TrustStoresTrustAnchorsAttributes) PemCertificate() terra.StringValue {
	return terra.ReferenceAsString(ta.ref.Append("pem_certificate"))
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
	Update string `json:"update"`
}

type TrustStoresState struct {
	IntermediateCas []TrustStoresIntermediateCasState `json:"intermediate_cas"`
	TrustAnchors    []TrustStoresTrustAnchorsState    `json:"trust_anchors"`
}

type TrustStoresIntermediateCasState struct {
	PemCertificate string `json:"pem_certificate"`
}

type TrustStoresTrustAnchorsState struct {
	PemCertificate string `json:"pem_certificate"`
}
