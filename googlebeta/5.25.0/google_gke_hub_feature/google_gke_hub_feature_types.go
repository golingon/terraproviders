// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google_gke_hub_feature

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type FleetDefaultMemberConfig struct {
	// FleetDefaultMemberConfigConfigmanagement: optional
	Configmanagement *FleetDefaultMemberConfigConfigmanagement `hcl:"configmanagement,block"`
	// FleetDefaultMemberConfigMesh: optional
	Mesh *FleetDefaultMemberConfigMesh `hcl:"mesh,block"`
	// FleetDefaultMemberConfigPolicycontroller: optional
	Policycontroller *FleetDefaultMemberConfigPolicycontroller `hcl:"policycontroller,block"`
}

type FleetDefaultMemberConfigConfigmanagement struct {
	// Version: string, optional
	Version terra.StringValue `hcl:"version,attr"`
	// FleetDefaultMemberConfigConfigmanagementConfigSync: optional
	ConfigSync *FleetDefaultMemberConfigConfigmanagementConfigSync `hcl:"config_sync,block"`
}

type FleetDefaultMemberConfigConfigmanagementConfigSync struct {
	// SourceFormat: string, optional
	SourceFormat terra.StringValue `hcl:"source_format,attr"`
	// FleetDefaultMemberConfigConfigmanagementConfigSyncGit: optional
	Git *FleetDefaultMemberConfigConfigmanagementConfigSyncGit `hcl:"git,block"`
	// FleetDefaultMemberConfigConfigmanagementConfigSyncOci: optional
	Oci *FleetDefaultMemberConfigConfigmanagementConfigSyncOci `hcl:"oci,block"`
}

type FleetDefaultMemberConfigConfigmanagementConfigSyncGit struct {
	// GcpServiceAccountEmail: string, optional
	GcpServiceAccountEmail terra.StringValue `hcl:"gcp_service_account_email,attr"`
	// HttpsProxy: string, optional
	HttpsProxy terra.StringValue `hcl:"https_proxy,attr"`
	// PolicyDir: string, optional
	PolicyDir terra.StringValue `hcl:"policy_dir,attr"`
	// SecretType: string, required
	SecretType terra.StringValue `hcl:"secret_type,attr" validate:"required"`
	// SyncBranch: string, optional
	SyncBranch terra.StringValue `hcl:"sync_branch,attr"`
	// SyncRepo: string, optional
	SyncRepo terra.StringValue `hcl:"sync_repo,attr"`
	// SyncRev: string, optional
	SyncRev terra.StringValue `hcl:"sync_rev,attr"`
	// SyncWaitSecs: string, optional
	SyncWaitSecs terra.StringValue `hcl:"sync_wait_secs,attr"`
}

type FleetDefaultMemberConfigConfigmanagementConfigSyncOci struct {
	// GcpServiceAccountEmail: string, optional
	GcpServiceAccountEmail terra.StringValue `hcl:"gcp_service_account_email,attr"`
	// PolicyDir: string, optional
	PolicyDir terra.StringValue `hcl:"policy_dir,attr"`
	// SecretType: string, required
	SecretType terra.StringValue `hcl:"secret_type,attr" validate:"required"`
	// SyncRepo: string, optional
	SyncRepo terra.StringValue `hcl:"sync_repo,attr"`
	// SyncWaitSecs: string, optional
	SyncWaitSecs terra.StringValue `hcl:"sync_wait_secs,attr"`
	// Version: string, optional
	Version terra.StringValue `hcl:"version,attr"`
}

type FleetDefaultMemberConfigMesh struct {
	// Management: string, required
	Management terra.StringValue `hcl:"management,attr" validate:"required"`
}

type FleetDefaultMemberConfigPolicycontroller struct {
	// Version: string, optional
	Version terra.StringValue `hcl:"version,attr"`
	// FleetDefaultMemberConfigPolicycontrollerPolicyControllerHubConfig: required
	PolicyControllerHubConfig *FleetDefaultMemberConfigPolicycontrollerPolicyControllerHubConfig `hcl:"policy_controller_hub_config,block" validate:"required"`
}

type FleetDefaultMemberConfigPolicycontrollerPolicyControllerHubConfig struct {
	// AuditIntervalSeconds: number, optional
	AuditIntervalSeconds terra.NumberValue `hcl:"audit_interval_seconds,attr"`
	// ConstraintViolationLimit: number, optional
	ConstraintViolationLimit terra.NumberValue `hcl:"constraint_violation_limit,attr"`
	// ExemptableNamespaces: list of string, optional
	ExemptableNamespaces terra.ListValue[terra.StringValue] `hcl:"exemptable_namespaces,attr"`
	// InstallSpec: string, required
	InstallSpec terra.StringValue `hcl:"install_spec,attr" validate:"required"`
	// LogDeniesEnabled: bool, optional
	LogDeniesEnabled terra.BoolValue `hcl:"log_denies_enabled,attr"`
	// MutationEnabled: bool, optional
	MutationEnabled terra.BoolValue `hcl:"mutation_enabled,attr"`
	// ReferentialRulesEnabled: bool, optional
	ReferentialRulesEnabled terra.BoolValue `hcl:"referential_rules_enabled,attr"`
	// FleetDefaultMemberConfigPolicycontrollerPolicyControllerHubConfigDeploymentConfigs: min=0
	DeploymentConfigs []FleetDefaultMemberConfigPolicycontrollerPolicyControllerHubConfigDeploymentConfigs `hcl:"deployment_configs,block" validate:"min=0"`
	// FleetDefaultMemberConfigPolicycontrollerPolicyControllerHubConfigMonitoring: optional
	Monitoring *FleetDefaultMemberConfigPolicycontrollerPolicyControllerHubConfigMonitoring `hcl:"monitoring,block"`
	// FleetDefaultMemberConfigPolicycontrollerPolicyControllerHubConfigPolicyContent: optional
	PolicyContent *FleetDefaultMemberConfigPolicycontrollerPolicyControllerHubConfigPolicyContent `hcl:"policy_content,block"`
}

type FleetDefaultMemberConfigPolicycontrollerPolicyControllerHubConfigDeploymentConfigs struct {
	// Component: string, required
	Component terra.StringValue `hcl:"component,attr" validate:"required"`
	// PodAffinity: string, optional
	PodAffinity terra.StringValue `hcl:"pod_affinity,attr"`
	// ReplicaCount: number, optional
	ReplicaCount terra.NumberValue `hcl:"replica_count,attr"`
	// FleetDefaultMemberConfigPolicycontrollerE45136A6: optional
	ContainerResources *FleetDefaultMemberConfigPolicycontrollerE45136A6 `hcl:"container_resources,block"`
	// FleetDefaultMemberConfigPolicycontrollerDe37Eea4: min=0
	PodToleration []FleetDefaultMemberConfigPolicycontrollerDe37Eea4 `hcl:"pod_toleration,block" validate:"min=0"`
}

type FleetDefaultMemberConfigPolicycontrollerE45136A6 struct {
	// FleetDefaultMemberConfigPolicycontrollerD1D2De84: optional
	Limits *FleetDefaultMemberConfigPolicycontrollerD1D2De84 `hcl:"limits,block"`
	// FleetDefaultMemberConfigPolicycontrollerC14Cea29: optional
	Requests *FleetDefaultMemberConfigPolicycontrollerC14Cea29 `hcl:"requests,block"`
}

type FleetDefaultMemberConfigPolicycontrollerD1D2De84 struct {
	// Cpu: string, optional
	Cpu terra.StringValue `hcl:"cpu,attr"`
	// Memory: string, optional
	Memory terra.StringValue `hcl:"memory,attr"`
}

type FleetDefaultMemberConfigPolicycontrollerC14Cea29 struct {
	// Cpu: string, optional
	Cpu terra.StringValue `hcl:"cpu,attr"`
	// Memory: string, optional
	Memory terra.StringValue `hcl:"memory,attr"`
}

type FleetDefaultMemberConfigPolicycontrollerDe37Eea4 struct {
	// Effect: string, optional
	Effect terra.StringValue `hcl:"effect,attr"`
	// Key: string, optional
	Key terra.StringValue `hcl:"key,attr"`
	// Operator: string, optional
	Operator terra.StringValue `hcl:"operator,attr"`
	// Value: string, optional
	Value terra.StringValue `hcl:"value,attr"`
}

type FleetDefaultMemberConfigPolicycontrollerPolicyControllerHubConfigMonitoring struct {
	// Backends: list of string, optional
	Backends terra.ListValue[terra.StringValue] `hcl:"backends,attr"`
}

type FleetDefaultMemberConfigPolicycontrollerPolicyControllerHubConfigPolicyContent struct {
	// FleetDefaultMemberConfigPolicycontrollerEbb04Ca2: min=0
	Bundles []FleetDefaultMemberConfigPolicycontrollerEbb04Ca2 `hcl:"bundles,block" validate:"min=0"`
	// FleetDefaultMemberConfigPolicycontrollerFe42429F: optional
	TemplateLibrary *FleetDefaultMemberConfigPolicycontrollerFe42429F `hcl:"template_library,block"`
}

type FleetDefaultMemberConfigPolicycontrollerEbb04Ca2 struct {
	// Bundle: string, required
	Bundle terra.StringValue `hcl:"bundle,attr" validate:"required"`
	// ExemptedNamespaces: list of string, optional
	ExemptedNamespaces terra.ListValue[terra.StringValue] `hcl:"exempted_namespaces,attr"`
}

type FleetDefaultMemberConfigPolicycontrollerFe42429F struct {
	// Installation: string, optional
	Installation terra.StringValue `hcl:"installation,attr"`
}

type Spec struct {
	// SpecClusterupgrade: optional
	Clusterupgrade *SpecClusterupgrade `hcl:"clusterupgrade,block"`
	// SpecFleetobservability: optional
	Fleetobservability *SpecFleetobservability `hcl:"fleetobservability,block"`
	// SpecMulticlusteringress: optional
	Multiclusteringress *SpecMulticlusteringress `hcl:"multiclusteringress,block"`
}

type SpecClusterupgrade struct {
	// UpstreamFleets: list of string, required
	UpstreamFleets terra.ListValue[terra.StringValue] `hcl:"upstream_fleets,attr" validate:"required"`
	// SpecClusterupgradeGkeUpgradeOverrides: min=0
	GkeUpgradeOverrides []SpecClusterupgradeGkeUpgradeOverrides `hcl:"gke_upgrade_overrides,block" validate:"min=0"`
	// SpecClusterupgradePostConditions: optional
	PostConditions *SpecClusterupgradePostConditions `hcl:"post_conditions,block"`
}

type SpecClusterupgradeGkeUpgradeOverrides struct {
	// SpecClusterupgradeGkeUpgradeOverridesPostConditions: required
	PostConditions *SpecClusterupgradeGkeUpgradeOverridesPostConditions `hcl:"post_conditions,block" validate:"required"`
	// SpecClusterupgradeGkeUpgradeOverridesUpgrade: required
	Upgrade *SpecClusterupgradeGkeUpgradeOverridesUpgrade `hcl:"upgrade,block" validate:"required"`
}

type SpecClusterupgradeGkeUpgradeOverridesPostConditions struct {
	// Soaking: string, required
	Soaking terra.StringValue `hcl:"soaking,attr" validate:"required"`
}

type SpecClusterupgradeGkeUpgradeOverridesUpgrade struct {
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Version: string, required
	Version terra.StringValue `hcl:"version,attr" validate:"required"`
}

type SpecClusterupgradePostConditions struct {
	// Soaking: string, required
	Soaking terra.StringValue `hcl:"soaking,attr" validate:"required"`
}

type SpecFleetobservability struct {
	// SpecFleetobservabilityLoggingConfig: optional
	LoggingConfig *SpecFleetobservabilityLoggingConfig `hcl:"logging_config,block"`
}

type SpecFleetobservabilityLoggingConfig struct {
	// SpecFleetobservabilityLoggingConfigDefaultConfig: optional
	DefaultConfig *SpecFleetobservabilityLoggingConfigDefaultConfig `hcl:"default_config,block"`
	// SpecFleetobservabilityLoggingConfigFleetScopeLogsConfig: optional
	FleetScopeLogsConfig *SpecFleetobservabilityLoggingConfigFleetScopeLogsConfig `hcl:"fleet_scope_logs_config,block"`
}

type SpecFleetobservabilityLoggingConfigDefaultConfig struct {
	// Mode: string, optional
	Mode terra.StringValue `hcl:"mode,attr"`
}

type SpecFleetobservabilityLoggingConfigFleetScopeLogsConfig struct {
	// Mode: string, optional
	Mode terra.StringValue `hcl:"mode,attr"`
}

type SpecMulticlusteringress struct {
	// ConfigMembership: string, required
	ConfigMembership terra.StringValue `hcl:"config_membership,attr" validate:"required"`
}

type Timeouts struct {
	// Create: string, optional
	Create terra.StringValue `hcl:"create,attr"`
	// Delete: string, optional
	Delete terra.StringValue `hcl:"delete,attr"`
	// Update: string, optional
	Update terra.StringValue `hcl:"update,attr"`
}

type ResourceStateAttributes struct {
	ref terra.Reference
}

func (rs ResourceStateAttributes) InternalRef() (terra.Reference, error) {
	return rs.ref, nil
}

func (rs ResourceStateAttributes) InternalWithRef(ref terra.Reference) ResourceStateAttributes {
	return ResourceStateAttributes{ref: ref}
}

func (rs ResourceStateAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rs.ref.InternalTokens()
}

func (rs ResourceStateAttributes) HasResources() terra.BoolValue {
	return terra.ReferenceAsBool(rs.ref.Append("has_resources"))
}

func (rs ResourceStateAttributes) State() terra.StringValue {
	return terra.ReferenceAsString(rs.ref.Append("state"))
}

type StateAttributes struct {
	ref terra.Reference
}

func (s StateAttributes) InternalRef() (terra.Reference, error) {
	return s.ref, nil
}

func (s StateAttributes) InternalWithRef(ref terra.Reference) StateAttributes {
	return StateAttributes{ref: ref}
}

func (s StateAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return s.ref.InternalTokens()
}

func (s StateAttributes) State() terra.ListValue[StateStateAttributes] {
	return terra.ReferenceAsList[StateStateAttributes](s.ref.Append("state"))
}

type StateStateAttributes struct {
	ref terra.Reference
}

func (s StateStateAttributes) InternalRef() (terra.Reference, error) {
	return s.ref, nil
}

func (s StateStateAttributes) InternalWithRef(ref terra.Reference) StateStateAttributes {
	return StateStateAttributes{ref: ref}
}

func (s StateStateAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return s.ref.InternalTokens()
}

func (s StateStateAttributes) Code() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("code"))
}

func (s StateStateAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("description"))
}

func (s StateStateAttributes) UpdateTime() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("update_time"))
}

type FleetDefaultMemberConfigAttributes struct {
	ref terra.Reference
}

func (fdmc FleetDefaultMemberConfigAttributes) InternalRef() (terra.Reference, error) {
	return fdmc.ref, nil
}

func (fdmc FleetDefaultMemberConfigAttributes) InternalWithRef(ref terra.Reference) FleetDefaultMemberConfigAttributes {
	return FleetDefaultMemberConfigAttributes{ref: ref}
}

func (fdmc FleetDefaultMemberConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return fdmc.ref.InternalTokens()
}

func (fdmc FleetDefaultMemberConfigAttributes) Configmanagement() terra.ListValue[FleetDefaultMemberConfigConfigmanagementAttributes] {
	return terra.ReferenceAsList[FleetDefaultMemberConfigConfigmanagementAttributes](fdmc.ref.Append("configmanagement"))
}

func (fdmc FleetDefaultMemberConfigAttributes) Mesh() terra.ListValue[FleetDefaultMemberConfigMeshAttributes] {
	return terra.ReferenceAsList[FleetDefaultMemberConfigMeshAttributes](fdmc.ref.Append("mesh"))
}

func (fdmc FleetDefaultMemberConfigAttributes) Policycontroller() terra.ListValue[FleetDefaultMemberConfigPolicycontrollerAttributes] {
	return terra.ReferenceAsList[FleetDefaultMemberConfigPolicycontrollerAttributes](fdmc.ref.Append("policycontroller"))
}

type FleetDefaultMemberConfigConfigmanagementAttributes struct {
	ref terra.Reference
}

func (c FleetDefaultMemberConfigConfigmanagementAttributes) InternalRef() (terra.Reference, error) {
	return c.ref, nil
}

func (c FleetDefaultMemberConfigConfigmanagementAttributes) InternalWithRef(ref terra.Reference) FleetDefaultMemberConfigConfigmanagementAttributes {
	return FleetDefaultMemberConfigConfigmanagementAttributes{ref: ref}
}

func (c FleetDefaultMemberConfigConfigmanagementAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return c.ref.InternalTokens()
}

func (c FleetDefaultMemberConfigConfigmanagementAttributes) Version() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("version"))
}

func (c FleetDefaultMemberConfigConfigmanagementAttributes) ConfigSync() terra.ListValue[FleetDefaultMemberConfigConfigmanagementConfigSyncAttributes] {
	return terra.ReferenceAsList[FleetDefaultMemberConfigConfigmanagementConfigSyncAttributes](c.ref.Append("config_sync"))
}

type FleetDefaultMemberConfigConfigmanagementConfigSyncAttributes struct {
	ref terra.Reference
}

func (cs FleetDefaultMemberConfigConfigmanagementConfigSyncAttributes) InternalRef() (terra.Reference, error) {
	return cs.ref, nil
}

func (cs FleetDefaultMemberConfigConfigmanagementConfigSyncAttributes) InternalWithRef(ref terra.Reference) FleetDefaultMemberConfigConfigmanagementConfigSyncAttributes {
	return FleetDefaultMemberConfigConfigmanagementConfigSyncAttributes{ref: ref}
}

func (cs FleetDefaultMemberConfigConfigmanagementConfigSyncAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cs.ref.InternalTokens()
}

func (cs FleetDefaultMemberConfigConfigmanagementConfigSyncAttributes) SourceFormat() terra.StringValue {
	return terra.ReferenceAsString(cs.ref.Append("source_format"))
}

func (cs FleetDefaultMemberConfigConfigmanagementConfigSyncAttributes) Git() terra.ListValue[FleetDefaultMemberConfigConfigmanagementConfigSyncGitAttributes] {
	return terra.ReferenceAsList[FleetDefaultMemberConfigConfigmanagementConfigSyncGitAttributes](cs.ref.Append("git"))
}

func (cs FleetDefaultMemberConfigConfigmanagementConfigSyncAttributes) Oci() terra.ListValue[FleetDefaultMemberConfigConfigmanagementConfigSyncOciAttributes] {
	return terra.ReferenceAsList[FleetDefaultMemberConfigConfigmanagementConfigSyncOciAttributes](cs.ref.Append("oci"))
}

type FleetDefaultMemberConfigConfigmanagementConfigSyncGitAttributes struct {
	ref terra.Reference
}

func (g FleetDefaultMemberConfigConfigmanagementConfigSyncGitAttributes) InternalRef() (terra.Reference, error) {
	return g.ref, nil
}

func (g FleetDefaultMemberConfigConfigmanagementConfigSyncGitAttributes) InternalWithRef(ref terra.Reference) FleetDefaultMemberConfigConfigmanagementConfigSyncGitAttributes {
	return FleetDefaultMemberConfigConfigmanagementConfigSyncGitAttributes{ref: ref}
}

func (g FleetDefaultMemberConfigConfigmanagementConfigSyncGitAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return g.ref.InternalTokens()
}

func (g FleetDefaultMemberConfigConfigmanagementConfigSyncGitAttributes) GcpServiceAccountEmail() terra.StringValue {
	return terra.ReferenceAsString(g.ref.Append("gcp_service_account_email"))
}

func (g FleetDefaultMemberConfigConfigmanagementConfigSyncGitAttributes) HttpsProxy() terra.StringValue {
	return terra.ReferenceAsString(g.ref.Append("https_proxy"))
}

func (g FleetDefaultMemberConfigConfigmanagementConfigSyncGitAttributes) PolicyDir() terra.StringValue {
	return terra.ReferenceAsString(g.ref.Append("policy_dir"))
}

func (g FleetDefaultMemberConfigConfigmanagementConfigSyncGitAttributes) SecretType() terra.StringValue {
	return terra.ReferenceAsString(g.ref.Append("secret_type"))
}

func (g FleetDefaultMemberConfigConfigmanagementConfigSyncGitAttributes) SyncBranch() terra.StringValue {
	return terra.ReferenceAsString(g.ref.Append("sync_branch"))
}

func (g FleetDefaultMemberConfigConfigmanagementConfigSyncGitAttributes) SyncRepo() terra.StringValue {
	return terra.ReferenceAsString(g.ref.Append("sync_repo"))
}

func (g FleetDefaultMemberConfigConfigmanagementConfigSyncGitAttributes) SyncRev() terra.StringValue {
	return terra.ReferenceAsString(g.ref.Append("sync_rev"))
}

func (g FleetDefaultMemberConfigConfigmanagementConfigSyncGitAttributes) SyncWaitSecs() terra.StringValue {
	return terra.ReferenceAsString(g.ref.Append("sync_wait_secs"))
}

type FleetDefaultMemberConfigConfigmanagementConfigSyncOciAttributes struct {
	ref terra.Reference
}

func (o FleetDefaultMemberConfigConfigmanagementConfigSyncOciAttributes) InternalRef() (terra.Reference, error) {
	return o.ref, nil
}

func (o FleetDefaultMemberConfigConfigmanagementConfigSyncOciAttributes) InternalWithRef(ref terra.Reference) FleetDefaultMemberConfigConfigmanagementConfigSyncOciAttributes {
	return FleetDefaultMemberConfigConfigmanagementConfigSyncOciAttributes{ref: ref}
}

func (o FleetDefaultMemberConfigConfigmanagementConfigSyncOciAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return o.ref.InternalTokens()
}

func (o FleetDefaultMemberConfigConfigmanagementConfigSyncOciAttributes) GcpServiceAccountEmail() terra.StringValue {
	return terra.ReferenceAsString(o.ref.Append("gcp_service_account_email"))
}

func (o FleetDefaultMemberConfigConfigmanagementConfigSyncOciAttributes) PolicyDir() terra.StringValue {
	return terra.ReferenceAsString(o.ref.Append("policy_dir"))
}

func (o FleetDefaultMemberConfigConfigmanagementConfigSyncOciAttributes) SecretType() terra.StringValue {
	return terra.ReferenceAsString(o.ref.Append("secret_type"))
}

func (o FleetDefaultMemberConfigConfigmanagementConfigSyncOciAttributes) SyncRepo() terra.StringValue {
	return terra.ReferenceAsString(o.ref.Append("sync_repo"))
}

func (o FleetDefaultMemberConfigConfigmanagementConfigSyncOciAttributes) SyncWaitSecs() terra.StringValue {
	return terra.ReferenceAsString(o.ref.Append("sync_wait_secs"))
}

func (o FleetDefaultMemberConfigConfigmanagementConfigSyncOciAttributes) Version() terra.StringValue {
	return terra.ReferenceAsString(o.ref.Append("version"))
}

type FleetDefaultMemberConfigMeshAttributes struct {
	ref terra.Reference
}

func (m FleetDefaultMemberConfigMeshAttributes) InternalRef() (terra.Reference, error) {
	return m.ref, nil
}

func (m FleetDefaultMemberConfigMeshAttributes) InternalWithRef(ref terra.Reference) FleetDefaultMemberConfigMeshAttributes {
	return FleetDefaultMemberConfigMeshAttributes{ref: ref}
}

func (m FleetDefaultMemberConfigMeshAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return m.ref.InternalTokens()
}

func (m FleetDefaultMemberConfigMeshAttributes) Management() terra.StringValue {
	return terra.ReferenceAsString(m.ref.Append("management"))
}

type FleetDefaultMemberConfigPolicycontrollerAttributes struct {
	ref terra.Reference
}

func (p FleetDefaultMemberConfigPolicycontrollerAttributes) InternalRef() (terra.Reference, error) {
	return p.ref, nil
}

func (p FleetDefaultMemberConfigPolicycontrollerAttributes) InternalWithRef(ref terra.Reference) FleetDefaultMemberConfigPolicycontrollerAttributes {
	return FleetDefaultMemberConfigPolicycontrollerAttributes{ref: ref}
}

func (p FleetDefaultMemberConfigPolicycontrollerAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return p.ref.InternalTokens()
}

func (p FleetDefaultMemberConfigPolicycontrollerAttributes) Version() terra.StringValue {
	return terra.ReferenceAsString(p.ref.Append("version"))
}

func (p FleetDefaultMemberConfigPolicycontrollerAttributes) PolicyControllerHubConfig() terra.ListValue[FleetDefaultMemberConfigPolicycontrollerPolicyControllerHubConfigAttributes] {
	return terra.ReferenceAsList[FleetDefaultMemberConfigPolicycontrollerPolicyControllerHubConfigAttributes](p.ref.Append("policy_controller_hub_config"))
}

type FleetDefaultMemberConfigPolicycontrollerPolicyControllerHubConfigAttributes struct {
	ref terra.Reference
}

func (pchc FleetDefaultMemberConfigPolicycontrollerPolicyControllerHubConfigAttributes) InternalRef() (terra.Reference, error) {
	return pchc.ref, nil
}

func (pchc FleetDefaultMemberConfigPolicycontrollerPolicyControllerHubConfigAttributes) InternalWithRef(ref terra.Reference) FleetDefaultMemberConfigPolicycontrollerPolicyControllerHubConfigAttributes {
	return FleetDefaultMemberConfigPolicycontrollerPolicyControllerHubConfigAttributes{ref: ref}
}

func (pchc FleetDefaultMemberConfigPolicycontrollerPolicyControllerHubConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return pchc.ref.InternalTokens()
}

func (pchc FleetDefaultMemberConfigPolicycontrollerPolicyControllerHubConfigAttributes) AuditIntervalSeconds() terra.NumberValue {
	return terra.ReferenceAsNumber(pchc.ref.Append("audit_interval_seconds"))
}

func (pchc FleetDefaultMemberConfigPolicycontrollerPolicyControllerHubConfigAttributes) ConstraintViolationLimit() terra.NumberValue {
	return terra.ReferenceAsNumber(pchc.ref.Append("constraint_violation_limit"))
}

func (pchc FleetDefaultMemberConfigPolicycontrollerPolicyControllerHubConfigAttributes) ExemptableNamespaces() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](pchc.ref.Append("exemptable_namespaces"))
}

func (pchc FleetDefaultMemberConfigPolicycontrollerPolicyControllerHubConfigAttributes) InstallSpec() terra.StringValue {
	return terra.ReferenceAsString(pchc.ref.Append("install_spec"))
}

func (pchc FleetDefaultMemberConfigPolicycontrollerPolicyControllerHubConfigAttributes) LogDeniesEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(pchc.ref.Append("log_denies_enabled"))
}

func (pchc FleetDefaultMemberConfigPolicycontrollerPolicyControllerHubConfigAttributes) MutationEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(pchc.ref.Append("mutation_enabled"))
}

func (pchc FleetDefaultMemberConfigPolicycontrollerPolicyControllerHubConfigAttributes) ReferentialRulesEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(pchc.ref.Append("referential_rules_enabled"))
}

func (pchc FleetDefaultMemberConfigPolicycontrollerPolicyControllerHubConfigAttributes) DeploymentConfigs() terra.SetValue[FleetDefaultMemberConfigPolicycontrollerPolicyControllerHubConfigDeploymentConfigsAttributes] {
	return terra.ReferenceAsSet[FleetDefaultMemberConfigPolicycontrollerPolicyControllerHubConfigDeploymentConfigsAttributes](pchc.ref.Append("deployment_configs"))
}

func (pchc FleetDefaultMemberConfigPolicycontrollerPolicyControllerHubConfigAttributes) Monitoring() terra.ListValue[FleetDefaultMemberConfigPolicycontrollerPolicyControllerHubConfigMonitoringAttributes] {
	return terra.ReferenceAsList[FleetDefaultMemberConfigPolicycontrollerPolicyControllerHubConfigMonitoringAttributes](pchc.ref.Append("monitoring"))
}

func (pchc FleetDefaultMemberConfigPolicycontrollerPolicyControllerHubConfigAttributes) PolicyContent() terra.ListValue[FleetDefaultMemberConfigPolicycontrollerPolicyControllerHubConfigPolicyContentAttributes] {
	return terra.ReferenceAsList[FleetDefaultMemberConfigPolicycontrollerPolicyControllerHubConfigPolicyContentAttributes](pchc.ref.Append("policy_content"))
}

type FleetDefaultMemberConfigPolicycontrollerPolicyControllerHubConfigDeploymentConfigsAttributes struct {
	ref terra.Reference
}

func (dc FleetDefaultMemberConfigPolicycontrollerPolicyControllerHubConfigDeploymentConfigsAttributes) InternalRef() (terra.Reference, error) {
	return dc.ref, nil
}

func (dc FleetDefaultMemberConfigPolicycontrollerPolicyControllerHubConfigDeploymentConfigsAttributes) InternalWithRef(ref terra.Reference) FleetDefaultMemberConfigPolicycontrollerPolicyControllerHubConfigDeploymentConfigsAttributes {
	return FleetDefaultMemberConfigPolicycontrollerPolicyControllerHubConfigDeploymentConfigsAttributes{ref: ref}
}

func (dc FleetDefaultMemberConfigPolicycontrollerPolicyControllerHubConfigDeploymentConfigsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dc.ref.InternalTokens()
}

func (dc FleetDefaultMemberConfigPolicycontrollerPolicyControllerHubConfigDeploymentConfigsAttributes) Component() terra.StringValue {
	return terra.ReferenceAsString(dc.ref.Append("component"))
}

func (dc FleetDefaultMemberConfigPolicycontrollerPolicyControllerHubConfigDeploymentConfigsAttributes) PodAffinity() terra.StringValue {
	return terra.ReferenceAsString(dc.ref.Append("pod_affinity"))
}

func (dc FleetDefaultMemberConfigPolicycontrollerPolicyControllerHubConfigDeploymentConfigsAttributes) ReplicaCount() terra.NumberValue {
	return terra.ReferenceAsNumber(dc.ref.Append("replica_count"))
}

func (dc FleetDefaultMemberConfigPolicycontrollerPolicyControllerHubConfigDeploymentConfigsAttributes) ContainerResources() terra.ListValue[FleetDefaultMemberConfigPolicycontrollerE45136A6Attributes] {
	return terra.ReferenceAsList[FleetDefaultMemberConfigPolicycontrollerE45136A6Attributes](dc.ref.Append("container_resources"))
}

func (dc FleetDefaultMemberConfigPolicycontrollerPolicyControllerHubConfigDeploymentConfigsAttributes) PodToleration() terra.ListValue[FleetDefaultMemberConfigPolicycontrollerDe37Eea4Attributes] {
	return terra.ReferenceAsList[FleetDefaultMemberConfigPolicycontrollerDe37Eea4Attributes](dc.ref.Append("pod_toleration"))
}

type FleetDefaultMemberConfigPolicycontrollerE45136A6Attributes struct {
	ref terra.Reference
}

func (cr FleetDefaultMemberConfigPolicycontrollerE45136A6Attributes) InternalRef() (terra.Reference, error) {
	return cr.ref, nil
}

func (cr FleetDefaultMemberConfigPolicycontrollerE45136A6Attributes) InternalWithRef(ref terra.Reference) FleetDefaultMemberConfigPolicycontrollerE45136A6Attributes {
	return FleetDefaultMemberConfigPolicycontrollerE45136A6Attributes{ref: ref}
}

func (cr FleetDefaultMemberConfigPolicycontrollerE45136A6Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return cr.ref.InternalTokens()
}

func (cr FleetDefaultMemberConfigPolicycontrollerE45136A6Attributes) Limits() terra.ListValue[FleetDefaultMemberConfigPolicycontrollerD1D2De84Attributes] {
	return terra.ReferenceAsList[FleetDefaultMemberConfigPolicycontrollerD1D2De84Attributes](cr.ref.Append("limits"))
}

func (cr FleetDefaultMemberConfigPolicycontrollerE45136A6Attributes) Requests() terra.ListValue[FleetDefaultMemberConfigPolicycontrollerC14Cea29Attributes] {
	return terra.ReferenceAsList[FleetDefaultMemberConfigPolicycontrollerC14Cea29Attributes](cr.ref.Append("requests"))
}

type FleetDefaultMemberConfigPolicycontrollerD1D2De84Attributes struct {
	ref terra.Reference
}

func (l FleetDefaultMemberConfigPolicycontrollerD1D2De84Attributes) InternalRef() (terra.Reference, error) {
	return l.ref, nil
}

func (l FleetDefaultMemberConfigPolicycontrollerD1D2De84Attributes) InternalWithRef(ref terra.Reference) FleetDefaultMemberConfigPolicycontrollerD1D2De84Attributes {
	return FleetDefaultMemberConfigPolicycontrollerD1D2De84Attributes{ref: ref}
}

func (l FleetDefaultMemberConfigPolicycontrollerD1D2De84Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return l.ref.InternalTokens()
}

func (l FleetDefaultMemberConfigPolicycontrollerD1D2De84Attributes) Cpu() terra.StringValue {
	return terra.ReferenceAsString(l.ref.Append("cpu"))
}

func (l FleetDefaultMemberConfigPolicycontrollerD1D2De84Attributes) Memory() terra.StringValue {
	return terra.ReferenceAsString(l.ref.Append("memory"))
}

type FleetDefaultMemberConfigPolicycontrollerC14Cea29Attributes struct {
	ref terra.Reference
}

func (r FleetDefaultMemberConfigPolicycontrollerC14Cea29Attributes) InternalRef() (terra.Reference, error) {
	return r.ref, nil
}

func (r FleetDefaultMemberConfigPolicycontrollerC14Cea29Attributes) InternalWithRef(ref terra.Reference) FleetDefaultMemberConfigPolicycontrollerC14Cea29Attributes {
	return FleetDefaultMemberConfigPolicycontrollerC14Cea29Attributes{ref: ref}
}

func (r FleetDefaultMemberConfigPolicycontrollerC14Cea29Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return r.ref.InternalTokens()
}

func (r FleetDefaultMemberConfigPolicycontrollerC14Cea29Attributes) Cpu() terra.StringValue {
	return terra.ReferenceAsString(r.ref.Append("cpu"))
}

func (r FleetDefaultMemberConfigPolicycontrollerC14Cea29Attributes) Memory() terra.StringValue {
	return terra.ReferenceAsString(r.ref.Append("memory"))
}

type FleetDefaultMemberConfigPolicycontrollerDe37Eea4Attributes struct {
	ref terra.Reference
}

func (pt FleetDefaultMemberConfigPolicycontrollerDe37Eea4Attributes) InternalRef() (terra.Reference, error) {
	return pt.ref, nil
}

func (pt FleetDefaultMemberConfigPolicycontrollerDe37Eea4Attributes) InternalWithRef(ref terra.Reference) FleetDefaultMemberConfigPolicycontrollerDe37Eea4Attributes {
	return FleetDefaultMemberConfigPolicycontrollerDe37Eea4Attributes{ref: ref}
}

func (pt FleetDefaultMemberConfigPolicycontrollerDe37Eea4Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return pt.ref.InternalTokens()
}

func (pt FleetDefaultMemberConfigPolicycontrollerDe37Eea4Attributes) Effect() terra.StringValue {
	return terra.ReferenceAsString(pt.ref.Append("effect"))
}

func (pt FleetDefaultMemberConfigPolicycontrollerDe37Eea4Attributes) Key() terra.StringValue {
	return terra.ReferenceAsString(pt.ref.Append("key"))
}

func (pt FleetDefaultMemberConfigPolicycontrollerDe37Eea4Attributes) Operator() terra.StringValue {
	return terra.ReferenceAsString(pt.ref.Append("operator"))
}

func (pt FleetDefaultMemberConfigPolicycontrollerDe37Eea4Attributes) Value() terra.StringValue {
	return terra.ReferenceAsString(pt.ref.Append("value"))
}

type FleetDefaultMemberConfigPolicycontrollerPolicyControllerHubConfigMonitoringAttributes struct {
	ref terra.Reference
}

func (m FleetDefaultMemberConfigPolicycontrollerPolicyControllerHubConfigMonitoringAttributes) InternalRef() (terra.Reference, error) {
	return m.ref, nil
}

func (m FleetDefaultMemberConfigPolicycontrollerPolicyControllerHubConfigMonitoringAttributes) InternalWithRef(ref terra.Reference) FleetDefaultMemberConfigPolicycontrollerPolicyControllerHubConfigMonitoringAttributes {
	return FleetDefaultMemberConfigPolicycontrollerPolicyControllerHubConfigMonitoringAttributes{ref: ref}
}

func (m FleetDefaultMemberConfigPolicycontrollerPolicyControllerHubConfigMonitoringAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return m.ref.InternalTokens()
}

func (m FleetDefaultMemberConfigPolicycontrollerPolicyControllerHubConfigMonitoringAttributes) Backends() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](m.ref.Append("backends"))
}

type FleetDefaultMemberConfigPolicycontrollerPolicyControllerHubConfigPolicyContentAttributes struct {
	ref terra.Reference
}

func (pc FleetDefaultMemberConfigPolicycontrollerPolicyControllerHubConfigPolicyContentAttributes) InternalRef() (terra.Reference, error) {
	return pc.ref, nil
}

func (pc FleetDefaultMemberConfigPolicycontrollerPolicyControllerHubConfigPolicyContentAttributes) InternalWithRef(ref terra.Reference) FleetDefaultMemberConfigPolicycontrollerPolicyControllerHubConfigPolicyContentAttributes {
	return FleetDefaultMemberConfigPolicycontrollerPolicyControllerHubConfigPolicyContentAttributes{ref: ref}
}

func (pc FleetDefaultMemberConfigPolicycontrollerPolicyControllerHubConfigPolicyContentAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return pc.ref.InternalTokens()
}

func (pc FleetDefaultMemberConfigPolicycontrollerPolicyControllerHubConfigPolicyContentAttributes) Bundles() terra.SetValue[FleetDefaultMemberConfigPolicycontrollerEbb04Ca2Attributes] {
	return terra.ReferenceAsSet[FleetDefaultMemberConfigPolicycontrollerEbb04Ca2Attributes](pc.ref.Append("bundles"))
}

func (pc FleetDefaultMemberConfigPolicycontrollerPolicyControllerHubConfigPolicyContentAttributes) TemplateLibrary() terra.ListValue[FleetDefaultMemberConfigPolicycontrollerFe42429FAttributes] {
	return terra.ReferenceAsList[FleetDefaultMemberConfigPolicycontrollerFe42429FAttributes](pc.ref.Append("template_library"))
}

type FleetDefaultMemberConfigPolicycontrollerEbb04Ca2Attributes struct {
	ref terra.Reference
}

func (b FleetDefaultMemberConfigPolicycontrollerEbb04Ca2Attributes) InternalRef() (terra.Reference, error) {
	return b.ref, nil
}

func (b FleetDefaultMemberConfigPolicycontrollerEbb04Ca2Attributes) InternalWithRef(ref terra.Reference) FleetDefaultMemberConfigPolicycontrollerEbb04Ca2Attributes {
	return FleetDefaultMemberConfigPolicycontrollerEbb04Ca2Attributes{ref: ref}
}

func (b FleetDefaultMemberConfigPolicycontrollerEbb04Ca2Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return b.ref.InternalTokens()
}

func (b FleetDefaultMemberConfigPolicycontrollerEbb04Ca2Attributes) Bundle() terra.StringValue {
	return terra.ReferenceAsString(b.ref.Append("bundle"))
}

func (b FleetDefaultMemberConfigPolicycontrollerEbb04Ca2Attributes) ExemptedNamespaces() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](b.ref.Append("exempted_namespaces"))
}

type FleetDefaultMemberConfigPolicycontrollerFe42429FAttributes struct {
	ref terra.Reference
}

func (tl FleetDefaultMemberConfigPolicycontrollerFe42429FAttributes) InternalRef() (terra.Reference, error) {
	return tl.ref, nil
}

func (tl FleetDefaultMemberConfigPolicycontrollerFe42429FAttributes) InternalWithRef(ref terra.Reference) FleetDefaultMemberConfigPolicycontrollerFe42429FAttributes {
	return FleetDefaultMemberConfigPolicycontrollerFe42429FAttributes{ref: ref}
}

func (tl FleetDefaultMemberConfigPolicycontrollerFe42429FAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return tl.ref.InternalTokens()
}

func (tl FleetDefaultMemberConfigPolicycontrollerFe42429FAttributes) Installation() terra.StringValue {
	return terra.ReferenceAsString(tl.ref.Append("installation"))
}

type SpecAttributes struct {
	ref terra.Reference
}

func (s SpecAttributes) InternalRef() (terra.Reference, error) {
	return s.ref, nil
}

func (s SpecAttributes) InternalWithRef(ref terra.Reference) SpecAttributes {
	return SpecAttributes{ref: ref}
}

func (s SpecAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return s.ref.InternalTokens()
}

func (s SpecAttributes) Clusterupgrade() terra.ListValue[SpecClusterupgradeAttributes] {
	return terra.ReferenceAsList[SpecClusterupgradeAttributes](s.ref.Append("clusterupgrade"))
}

func (s SpecAttributes) Fleetobservability() terra.ListValue[SpecFleetobservabilityAttributes] {
	return terra.ReferenceAsList[SpecFleetobservabilityAttributes](s.ref.Append("fleetobservability"))
}

func (s SpecAttributes) Multiclusteringress() terra.ListValue[SpecMulticlusteringressAttributes] {
	return terra.ReferenceAsList[SpecMulticlusteringressAttributes](s.ref.Append("multiclusteringress"))
}

type SpecClusterupgradeAttributes struct {
	ref terra.Reference
}

func (c SpecClusterupgradeAttributes) InternalRef() (terra.Reference, error) {
	return c.ref, nil
}

func (c SpecClusterupgradeAttributes) InternalWithRef(ref terra.Reference) SpecClusterupgradeAttributes {
	return SpecClusterupgradeAttributes{ref: ref}
}

func (c SpecClusterupgradeAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return c.ref.InternalTokens()
}

func (c SpecClusterupgradeAttributes) UpstreamFleets() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](c.ref.Append("upstream_fleets"))
}

func (c SpecClusterupgradeAttributes) GkeUpgradeOverrides() terra.ListValue[SpecClusterupgradeGkeUpgradeOverridesAttributes] {
	return terra.ReferenceAsList[SpecClusterupgradeGkeUpgradeOverridesAttributes](c.ref.Append("gke_upgrade_overrides"))
}

func (c SpecClusterupgradeAttributes) PostConditions() terra.ListValue[SpecClusterupgradePostConditionsAttributes] {
	return terra.ReferenceAsList[SpecClusterupgradePostConditionsAttributes](c.ref.Append("post_conditions"))
}

type SpecClusterupgradeGkeUpgradeOverridesAttributes struct {
	ref terra.Reference
}

func (guo SpecClusterupgradeGkeUpgradeOverridesAttributes) InternalRef() (terra.Reference, error) {
	return guo.ref, nil
}

func (guo SpecClusterupgradeGkeUpgradeOverridesAttributes) InternalWithRef(ref terra.Reference) SpecClusterupgradeGkeUpgradeOverridesAttributes {
	return SpecClusterupgradeGkeUpgradeOverridesAttributes{ref: ref}
}

func (guo SpecClusterupgradeGkeUpgradeOverridesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return guo.ref.InternalTokens()
}

func (guo SpecClusterupgradeGkeUpgradeOverridesAttributes) PostConditions() terra.ListValue[SpecClusterupgradeGkeUpgradeOverridesPostConditionsAttributes] {
	return terra.ReferenceAsList[SpecClusterupgradeGkeUpgradeOverridesPostConditionsAttributes](guo.ref.Append("post_conditions"))
}

func (guo SpecClusterupgradeGkeUpgradeOverridesAttributes) Upgrade() terra.ListValue[SpecClusterupgradeGkeUpgradeOverridesUpgradeAttributes] {
	return terra.ReferenceAsList[SpecClusterupgradeGkeUpgradeOverridesUpgradeAttributes](guo.ref.Append("upgrade"))
}

type SpecClusterupgradeGkeUpgradeOverridesPostConditionsAttributes struct {
	ref terra.Reference
}

func (pc SpecClusterupgradeGkeUpgradeOverridesPostConditionsAttributes) InternalRef() (terra.Reference, error) {
	return pc.ref, nil
}

func (pc SpecClusterupgradeGkeUpgradeOverridesPostConditionsAttributes) InternalWithRef(ref terra.Reference) SpecClusterupgradeGkeUpgradeOverridesPostConditionsAttributes {
	return SpecClusterupgradeGkeUpgradeOverridesPostConditionsAttributes{ref: ref}
}

func (pc SpecClusterupgradeGkeUpgradeOverridesPostConditionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return pc.ref.InternalTokens()
}

func (pc SpecClusterupgradeGkeUpgradeOverridesPostConditionsAttributes) Soaking() terra.StringValue {
	return terra.ReferenceAsString(pc.ref.Append("soaking"))
}

type SpecClusterupgradeGkeUpgradeOverridesUpgradeAttributes struct {
	ref terra.Reference
}

func (u SpecClusterupgradeGkeUpgradeOverridesUpgradeAttributes) InternalRef() (terra.Reference, error) {
	return u.ref, nil
}

func (u SpecClusterupgradeGkeUpgradeOverridesUpgradeAttributes) InternalWithRef(ref terra.Reference) SpecClusterupgradeGkeUpgradeOverridesUpgradeAttributes {
	return SpecClusterupgradeGkeUpgradeOverridesUpgradeAttributes{ref: ref}
}

func (u SpecClusterupgradeGkeUpgradeOverridesUpgradeAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return u.ref.InternalTokens()
}

func (u SpecClusterupgradeGkeUpgradeOverridesUpgradeAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(u.ref.Append("name"))
}

func (u SpecClusterupgradeGkeUpgradeOverridesUpgradeAttributes) Version() terra.StringValue {
	return terra.ReferenceAsString(u.ref.Append("version"))
}

type SpecClusterupgradePostConditionsAttributes struct {
	ref terra.Reference
}

func (pc SpecClusterupgradePostConditionsAttributes) InternalRef() (terra.Reference, error) {
	return pc.ref, nil
}

func (pc SpecClusterupgradePostConditionsAttributes) InternalWithRef(ref terra.Reference) SpecClusterupgradePostConditionsAttributes {
	return SpecClusterupgradePostConditionsAttributes{ref: ref}
}

func (pc SpecClusterupgradePostConditionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return pc.ref.InternalTokens()
}

func (pc SpecClusterupgradePostConditionsAttributes) Soaking() terra.StringValue {
	return terra.ReferenceAsString(pc.ref.Append("soaking"))
}

type SpecFleetobservabilityAttributes struct {
	ref terra.Reference
}

func (f SpecFleetobservabilityAttributes) InternalRef() (terra.Reference, error) {
	return f.ref, nil
}

func (f SpecFleetobservabilityAttributes) InternalWithRef(ref terra.Reference) SpecFleetobservabilityAttributes {
	return SpecFleetobservabilityAttributes{ref: ref}
}

func (f SpecFleetobservabilityAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return f.ref.InternalTokens()
}

func (f SpecFleetobservabilityAttributes) LoggingConfig() terra.ListValue[SpecFleetobservabilityLoggingConfigAttributes] {
	return terra.ReferenceAsList[SpecFleetobservabilityLoggingConfigAttributes](f.ref.Append("logging_config"))
}

type SpecFleetobservabilityLoggingConfigAttributes struct {
	ref terra.Reference
}

func (lc SpecFleetobservabilityLoggingConfigAttributes) InternalRef() (terra.Reference, error) {
	return lc.ref, nil
}

func (lc SpecFleetobservabilityLoggingConfigAttributes) InternalWithRef(ref terra.Reference) SpecFleetobservabilityLoggingConfigAttributes {
	return SpecFleetobservabilityLoggingConfigAttributes{ref: ref}
}

func (lc SpecFleetobservabilityLoggingConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return lc.ref.InternalTokens()
}

func (lc SpecFleetobservabilityLoggingConfigAttributes) DefaultConfig() terra.ListValue[SpecFleetobservabilityLoggingConfigDefaultConfigAttributes] {
	return terra.ReferenceAsList[SpecFleetobservabilityLoggingConfigDefaultConfigAttributes](lc.ref.Append("default_config"))
}

func (lc SpecFleetobservabilityLoggingConfigAttributes) FleetScopeLogsConfig() terra.ListValue[SpecFleetobservabilityLoggingConfigFleetScopeLogsConfigAttributes] {
	return terra.ReferenceAsList[SpecFleetobservabilityLoggingConfigFleetScopeLogsConfigAttributes](lc.ref.Append("fleet_scope_logs_config"))
}

type SpecFleetobservabilityLoggingConfigDefaultConfigAttributes struct {
	ref terra.Reference
}

func (dc SpecFleetobservabilityLoggingConfigDefaultConfigAttributes) InternalRef() (terra.Reference, error) {
	return dc.ref, nil
}

func (dc SpecFleetobservabilityLoggingConfigDefaultConfigAttributes) InternalWithRef(ref terra.Reference) SpecFleetobservabilityLoggingConfigDefaultConfigAttributes {
	return SpecFleetobservabilityLoggingConfigDefaultConfigAttributes{ref: ref}
}

func (dc SpecFleetobservabilityLoggingConfigDefaultConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dc.ref.InternalTokens()
}

func (dc SpecFleetobservabilityLoggingConfigDefaultConfigAttributes) Mode() terra.StringValue {
	return terra.ReferenceAsString(dc.ref.Append("mode"))
}

type SpecFleetobservabilityLoggingConfigFleetScopeLogsConfigAttributes struct {
	ref terra.Reference
}

func (fslc SpecFleetobservabilityLoggingConfigFleetScopeLogsConfigAttributes) InternalRef() (terra.Reference, error) {
	return fslc.ref, nil
}

func (fslc SpecFleetobservabilityLoggingConfigFleetScopeLogsConfigAttributes) InternalWithRef(ref terra.Reference) SpecFleetobservabilityLoggingConfigFleetScopeLogsConfigAttributes {
	return SpecFleetobservabilityLoggingConfigFleetScopeLogsConfigAttributes{ref: ref}
}

func (fslc SpecFleetobservabilityLoggingConfigFleetScopeLogsConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return fslc.ref.InternalTokens()
}

func (fslc SpecFleetobservabilityLoggingConfigFleetScopeLogsConfigAttributes) Mode() terra.StringValue {
	return terra.ReferenceAsString(fslc.ref.Append("mode"))
}

type SpecMulticlusteringressAttributes struct {
	ref terra.Reference
}

func (m SpecMulticlusteringressAttributes) InternalRef() (terra.Reference, error) {
	return m.ref, nil
}

func (m SpecMulticlusteringressAttributes) InternalWithRef(ref terra.Reference) SpecMulticlusteringressAttributes {
	return SpecMulticlusteringressAttributes{ref: ref}
}

func (m SpecMulticlusteringressAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return m.ref.InternalTokens()
}

func (m SpecMulticlusteringressAttributes) ConfigMembership() terra.StringValue {
	return terra.ReferenceAsString(m.ref.Append("config_membership"))
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("create"))
}

func (t TimeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("delete"))
}

func (t TimeoutsAttributes) Update() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("update"))
}

type ResourceStateState struct {
	HasResources bool   `json:"has_resources"`
	State        string `json:"state"`
}

type StateState struct {
	State []StateStateState `json:"state"`
}

type StateStateState struct {
	Code        string `json:"code"`
	Description string `json:"description"`
	UpdateTime  string `json:"update_time"`
}

type FleetDefaultMemberConfigState struct {
	Configmanagement []FleetDefaultMemberConfigConfigmanagementState `json:"configmanagement"`
	Mesh             []FleetDefaultMemberConfigMeshState             `json:"mesh"`
	Policycontroller []FleetDefaultMemberConfigPolicycontrollerState `json:"policycontroller"`
}

type FleetDefaultMemberConfigConfigmanagementState struct {
	Version    string                                                    `json:"version"`
	ConfigSync []FleetDefaultMemberConfigConfigmanagementConfigSyncState `json:"config_sync"`
}

type FleetDefaultMemberConfigConfigmanagementConfigSyncState struct {
	SourceFormat string                                                       `json:"source_format"`
	Git          []FleetDefaultMemberConfigConfigmanagementConfigSyncGitState `json:"git"`
	Oci          []FleetDefaultMemberConfigConfigmanagementConfigSyncOciState `json:"oci"`
}

type FleetDefaultMemberConfigConfigmanagementConfigSyncGitState struct {
	GcpServiceAccountEmail string `json:"gcp_service_account_email"`
	HttpsProxy             string `json:"https_proxy"`
	PolicyDir              string `json:"policy_dir"`
	SecretType             string `json:"secret_type"`
	SyncBranch             string `json:"sync_branch"`
	SyncRepo               string `json:"sync_repo"`
	SyncRev                string `json:"sync_rev"`
	SyncWaitSecs           string `json:"sync_wait_secs"`
}

type FleetDefaultMemberConfigConfigmanagementConfigSyncOciState struct {
	GcpServiceAccountEmail string `json:"gcp_service_account_email"`
	PolicyDir              string `json:"policy_dir"`
	SecretType             string `json:"secret_type"`
	SyncRepo               string `json:"sync_repo"`
	SyncWaitSecs           string `json:"sync_wait_secs"`
	Version                string `json:"version"`
}

type FleetDefaultMemberConfigMeshState struct {
	Management string `json:"management"`
}

type FleetDefaultMemberConfigPolicycontrollerState struct {
	Version                   string                                                                   `json:"version"`
	PolicyControllerHubConfig []FleetDefaultMemberConfigPolicycontrollerPolicyControllerHubConfigState `json:"policy_controller_hub_config"`
}

type FleetDefaultMemberConfigPolicycontrollerPolicyControllerHubConfigState struct {
	AuditIntervalSeconds     float64                                                                                   `json:"audit_interval_seconds"`
	ConstraintViolationLimit float64                                                                                   `json:"constraint_violation_limit"`
	ExemptableNamespaces     []string                                                                                  `json:"exemptable_namespaces"`
	InstallSpec              string                                                                                    `json:"install_spec"`
	LogDeniesEnabled         bool                                                                                      `json:"log_denies_enabled"`
	MutationEnabled          bool                                                                                      `json:"mutation_enabled"`
	ReferentialRulesEnabled  bool                                                                                      `json:"referential_rules_enabled"`
	DeploymentConfigs        []FleetDefaultMemberConfigPolicycontrollerPolicyControllerHubConfigDeploymentConfigsState `json:"deployment_configs"`
	Monitoring               []FleetDefaultMemberConfigPolicycontrollerPolicyControllerHubConfigMonitoringState        `json:"monitoring"`
	PolicyContent            []FleetDefaultMemberConfigPolicycontrollerPolicyControllerHubConfigPolicyContentState     `json:"policy_content"`
}

type FleetDefaultMemberConfigPolicycontrollerPolicyControllerHubConfigDeploymentConfigsState struct {
	Component          string                                                  `json:"component"`
	PodAffinity        string                                                  `json:"pod_affinity"`
	ReplicaCount       float64                                                 `json:"replica_count"`
	ContainerResources []FleetDefaultMemberConfigPolicycontrollerE45136A6State `json:"container_resources"`
	PodToleration      []FleetDefaultMemberConfigPolicycontrollerDe37Eea4State `json:"pod_toleration"`
}

type FleetDefaultMemberConfigPolicycontrollerE45136A6State struct {
	Limits   []FleetDefaultMemberConfigPolicycontrollerD1D2De84State `json:"limits"`
	Requests []FleetDefaultMemberConfigPolicycontrollerC14Cea29State `json:"requests"`
}

type FleetDefaultMemberConfigPolicycontrollerD1D2De84State struct {
	Cpu    string `json:"cpu"`
	Memory string `json:"memory"`
}

type FleetDefaultMemberConfigPolicycontrollerC14Cea29State struct {
	Cpu    string `json:"cpu"`
	Memory string `json:"memory"`
}

type FleetDefaultMemberConfigPolicycontrollerDe37Eea4State struct {
	Effect   string `json:"effect"`
	Key      string `json:"key"`
	Operator string `json:"operator"`
	Value    string `json:"value"`
}

type FleetDefaultMemberConfigPolicycontrollerPolicyControllerHubConfigMonitoringState struct {
	Backends []string `json:"backends"`
}

type FleetDefaultMemberConfigPolicycontrollerPolicyControllerHubConfigPolicyContentState struct {
	Bundles         []FleetDefaultMemberConfigPolicycontrollerEbb04Ca2State `json:"bundles"`
	TemplateLibrary []FleetDefaultMemberConfigPolicycontrollerFe42429FState `json:"template_library"`
}

type FleetDefaultMemberConfigPolicycontrollerEbb04Ca2State struct {
	Bundle             string   `json:"bundle"`
	ExemptedNamespaces []string `json:"exempted_namespaces"`
}

type FleetDefaultMemberConfigPolicycontrollerFe42429FState struct {
	Installation string `json:"installation"`
}

type SpecState struct {
	Clusterupgrade      []SpecClusterupgradeState      `json:"clusterupgrade"`
	Fleetobservability  []SpecFleetobservabilityState  `json:"fleetobservability"`
	Multiclusteringress []SpecMulticlusteringressState `json:"multiclusteringress"`
}

type SpecClusterupgradeState struct {
	UpstreamFleets      []string                                     `json:"upstream_fleets"`
	GkeUpgradeOverrides []SpecClusterupgradeGkeUpgradeOverridesState `json:"gke_upgrade_overrides"`
	PostConditions      []SpecClusterupgradePostConditionsState      `json:"post_conditions"`
}

type SpecClusterupgradeGkeUpgradeOverridesState struct {
	PostConditions []SpecClusterupgradeGkeUpgradeOverridesPostConditionsState `json:"post_conditions"`
	Upgrade        []SpecClusterupgradeGkeUpgradeOverridesUpgradeState        `json:"upgrade"`
}

type SpecClusterupgradeGkeUpgradeOverridesPostConditionsState struct {
	Soaking string `json:"soaking"`
}

type SpecClusterupgradeGkeUpgradeOverridesUpgradeState struct {
	Name    string `json:"name"`
	Version string `json:"version"`
}

type SpecClusterupgradePostConditionsState struct {
	Soaking string `json:"soaking"`
}

type SpecFleetobservabilityState struct {
	LoggingConfig []SpecFleetobservabilityLoggingConfigState `json:"logging_config"`
}

type SpecFleetobservabilityLoggingConfigState struct {
	DefaultConfig        []SpecFleetobservabilityLoggingConfigDefaultConfigState        `json:"default_config"`
	FleetScopeLogsConfig []SpecFleetobservabilityLoggingConfigFleetScopeLogsConfigState `json:"fleet_scope_logs_config"`
}

type SpecFleetobservabilityLoggingConfigDefaultConfigState struct {
	Mode string `json:"mode"`
}

type SpecFleetobservabilityLoggingConfigFleetScopeLogsConfigState struct {
	Mode string `json:"mode"`
}

type SpecMulticlusteringressState struct {
	ConfigMembership string `json:"config_membership"`
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
	Update string `json:"update"`
}
