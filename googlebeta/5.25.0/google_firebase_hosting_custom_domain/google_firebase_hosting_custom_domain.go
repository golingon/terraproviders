// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google_firebase_hosting_custom_domain

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource google_firebase_hosting_custom_domain.
type Resource struct {
	Name      string
	Args      Args
	state     *googleFirebaseHostingCustomDomainState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (gfhcd *Resource) Type() string {
	return "google_firebase_hosting_custom_domain"
}

// LocalName returns the local name for [Resource].
func (gfhcd *Resource) LocalName() string {
	return gfhcd.Name
}

// Configuration returns the configuration (args) for [Resource].
func (gfhcd *Resource) Configuration() interface{} {
	return gfhcd.Args
}

// DependOn is used for other resources to depend on [Resource].
func (gfhcd *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(gfhcd)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (gfhcd *Resource) Dependencies() terra.Dependencies {
	return gfhcd.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (gfhcd *Resource) LifecycleManagement() *terra.Lifecycle {
	return gfhcd.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (gfhcd *Resource) Attributes() googleFirebaseHostingCustomDomainAttributes {
	return googleFirebaseHostingCustomDomainAttributes{ref: terra.ReferenceResource(gfhcd)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (gfhcd *Resource) ImportState(state io.Reader) error {
	gfhcd.state = &googleFirebaseHostingCustomDomainState{}
	if err := json.NewDecoder(state).Decode(gfhcd.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", gfhcd.Type(), gfhcd.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (gfhcd *Resource) State() (*googleFirebaseHostingCustomDomainState, bool) {
	return gfhcd.state, gfhcd.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (gfhcd *Resource) StateMust() *googleFirebaseHostingCustomDomainState {
	if gfhcd.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", gfhcd.Type(), gfhcd.LocalName()))
	}
	return gfhcd.state
}

// Args contains the configurations for google_firebase_hosting_custom_domain.
type Args struct {
	// CertPreference: string, optional
	CertPreference terra.StringValue `hcl:"cert_preference,attr"`
	// CustomDomain: string, required
	CustomDomain terra.StringValue `hcl:"custom_domain,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
	// RedirectTarget: string, optional
	RedirectTarget terra.StringValue `hcl:"redirect_target,attr"`
	// SiteId: string, required
	SiteId terra.StringValue `hcl:"site_id,attr" validate:"required"`
	// WaitDnsVerification: bool, optional
	WaitDnsVerification terra.BoolValue `hcl:"wait_dns_verification,attr"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type googleFirebaseHostingCustomDomainAttributes struct {
	ref terra.Reference
}

// CertPreference returns a reference to field cert_preference of google_firebase_hosting_custom_domain.
func (gfhcd googleFirebaseHostingCustomDomainAttributes) CertPreference() terra.StringValue {
	return terra.ReferenceAsString(gfhcd.ref.Append("cert_preference"))
}

// CreateTime returns a reference to field create_time of google_firebase_hosting_custom_domain.
func (gfhcd googleFirebaseHostingCustomDomainAttributes) CreateTime() terra.StringValue {
	return terra.ReferenceAsString(gfhcd.ref.Append("create_time"))
}

// CustomDomain returns a reference to field custom_domain of google_firebase_hosting_custom_domain.
func (gfhcd googleFirebaseHostingCustomDomainAttributes) CustomDomain() terra.StringValue {
	return terra.ReferenceAsString(gfhcd.ref.Append("custom_domain"))
}

// DeleteTime returns a reference to field delete_time of google_firebase_hosting_custom_domain.
func (gfhcd googleFirebaseHostingCustomDomainAttributes) DeleteTime() terra.StringValue {
	return terra.ReferenceAsString(gfhcd.ref.Append("delete_time"))
}

// Etag returns a reference to field etag of google_firebase_hosting_custom_domain.
func (gfhcd googleFirebaseHostingCustomDomainAttributes) Etag() terra.StringValue {
	return terra.ReferenceAsString(gfhcd.ref.Append("etag"))
}

// ExpireTime returns a reference to field expire_time of google_firebase_hosting_custom_domain.
func (gfhcd googleFirebaseHostingCustomDomainAttributes) ExpireTime() terra.StringValue {
	return terra.ReferenceAsString(gfhcd.ref.Append("expire_time"))
}

// HostState returns a reference to field host_state of google_firebase_hosting_custom_domain.
func (gfhcd googleFirebaseHostingCustomDomainAttributes) HostState() terra.StringValue {
	return terra.ReferenceAsString(gfhcd.ref.Append("host_state"))
}

// Id returns a reference to field id of google_firebase_hosting_custom_domain.
func (gfhcd googleFirebaseHostingCustomDomainAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(gfhcd.ref.Append("id"))
}

// Name returns a reference to field name of google_firebase_hosting_custom_domain.
func (gfhcd googleFirebaseHostingCustomDomainAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(gfhcd.ref.Append("name"))
}

// OwnershipState returns a reference to field ownership_state of google_firebase_hosting_custom_domain.
func (gfhcd googleFirebaseHostingCustomDomainAttributes) OwnershipState() terra.StringValue {
	return terra.ReferenceAsString(gfhcd.ref.Append("ownership_state"))
}

// Project returns a reference to field project of google_firebase_hosting_custom_domain.
func (gfhcd googleFirebaseHostingCustomDomainAttributes) Project() terra.StringValue {
	return terra.ReferenceAsString(gfhcd.ref.Append("project"))
}

// Reconciling returns a reference to field reconciling of google_firebase_hosting_custom_domain.
func (gfhcd googleFirebaseHostingCustomDomainAttributes) Reconciling() terra.BoolValue {
	return terra.ReferenceAsBool(gfhcd.ref.Append("reconciling"))
}

// RedirectTarget returns a reference to field redirect_target of google_firebase_hosting_custom_domain.
func (gfhcd googleFirebaseHostingCustomDomainAttributes) RedirectTarget() terra.StringValue {
	return terra.ReferenceAsString(gfhcd.ref.Append("redirect_target"))
}

// SiteId returns a reference to field site_id of google_firebase_hosting_custom_domain.
func (gfhcd googleFirebaseHostingCustomDomainAttributes) SiteId() terra.StringValue {
	return terra.ReferenceAsString(gfhcd.ref.Append("site_id"))
}

// UpdateTime returns a reference to field update_time of google_firebase_hosting_custom_domain.
func (gfhcd googleFirebaseHostingCustomDomainAttributes) UpdateTime() terra.StringValue {
	return terra.ReferenceAsString(gfhcd.ref.Append("update_time"))
}

// WaitDnsVerification returns a reference to field wait_dns_verification of google_firebase_hosting_custom_domain.
func (gfhcd googleFirebaseHostingCustomDomainAttributes) WaitDnsVerification() terra.BoolValue {
	return terra.ReferenceAsBool(gfhcd.ref.Append("wait_dns_verification"))
}

func (gfhcd googleFirebaseHostingCustomDomainAttributes) Cert() terra.ListValue[CertAttributes] {
	return terra.ReferenceAsList[CertAttributes](gfhcd.ref.Append("cert"))
}

func (gfhcd googleFirebaseHostingCustomDomainAttributes) Issues() terra.ListValue[IssuesAttributes] {
	return terra.ReferenceAsList[IssuesAttributes](gfhcd.ref.Append("issues"))
}

func (gfhcd googleFirebaseHostingCustomDomainAttributes) RequiredDnsUpdates() terra.ListValue[RequiredDnsUpdatesAttributes] {
	return terra.ReferenceAsList[RequiredDnsUpdatesAttributes](gfhcd.ref.Append("required_dns_updates"))
}

func (gfhcd googleFirebaseHostingCustomDomainAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](gfhcd.ref.Append("timeouts"))
}

type googleFirebaseHostingCustomDomainState struct {
	CertPreference      string                    `json:"cert_preference"`
	CreateTime          string                    `json:"create_time"`
	CustomDomain        string                    `json:"custom_domain"`
	DeleteTime          string                    `json:"delete_time"`
	Etag                string                    `json:"etag"`
	ExpireTime          string                    `json:"expire_time"`
	HostState           string                    `json:"host_state"`
	Id                  string                    `json:"id"`
	Name                string                    `json:"name"`
	OwnershipState      string                    `json:"ownership_state"`
	Project             string                    `json:"project"`
	Reconciling         bool                      `json:"reconciling"`
	RedirectTarget      string                    `json:"redirect_target"`
	SiteId              string                    `json:"site_id"`
	UpdateTime          string                    `json:"update_time"`
	WaitDnsVerification bool                      `json:"wait_dns_verification"`
	Cert                []CertState               `json:"cert"`
	Issues              []IssuesState             `json:"issues"`
	RequiredDnsUpdates  []RequiredDnsUpdatesState `json:"required_dns_updates"`
	Timeouts            *TimeoutsState            `json:"timeouts"`
}
