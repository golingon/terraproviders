// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google_pubsub_subscription

import "github.com/golingon/lingon/pkg/terra"

// Data creates a new instance of [DataSource].
func Data(name string, args DataArgs) *DataSource {
	return &DataSource{
		Args: args,
		Name: name,
	}
}

var _ terra.DataSource = (*DataSource)(nil)

// DataSource represents the Terraform data resource google_pubsub_subscription.
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (gps *DataSource) DataSource() string {
	return "google_pubsub_subscription"
}

// LocalName returns the local name for [DataSource].
func (gps *DataSource) LocalName() string {
	return gps.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (gps *DataSource) Configuration() interface{} {
	return gps.Args
}

// Attributes returns the attributes for [DataSource].
func (gps *DataSource) Attributes() dataGooglePubsubSubscriptionAttributes {
	return dataGooglePubsubSubscriptionAttributes{ref: terra.ReferenceDataSource(gps)}
}

// DataArgs contains the configurations for google_pubsub_subscription.
type DataArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
}

type dataGooglePubsubSubscriptionAttributes struct {
	ref terra.Reference
}

// AckDeadlineSeconds returns a reference to field ack_deadline_seconds of google_pubsub_subscription.
func (gps dataGooglePubsubSubscriptionAttributes) AckDeadlineSeconds() terra.NumberValue {
	return terra.ReferenceAsNumber(gps.ref.Append("ack_deadline_seconds"))
}

// EffectiveLabels returns a reference to field effective_labels of google_pubsub_subscription.
func (gps dataGooglePubsubSubscriptionAttributes) EffectiveLabels() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](gps.ref.Append("effective_labels"))
}

// EnableExactlyOnceDelivery returns a reference to field enable_exactly_once_delivery of google_pubsub_subscription.
func (gps dataGooglePubsubSubscriptionAttributes) EnableExactlyOnceDelivery() terra.BoolValue {
	return terra.ReferenceAsBool(gps.ref.Append("enable_exactly_once_delivery"))
}

// EnableMessageOrdering returns a reference to field enable_message_ordering of google_pubsub_subscription.
func (gps dataGooglePubsubSubscriptionAttributes) EnableMessageOrdering() terra.BoolValue {
	return terra.ReferenceAsBool(gps.ref.Append("enable_message_ordering"))
}

// Filter returns a reference to field filter of google_pubsub_subscription.
func (gps dataGooglePubsubSubscriptionAttributes) Filter() terra.StringValue {
	return terra.ReferenceAsString(gps.ref.Append("filter"))
}

// Id returns a reference to field id of google_pubsub_subscription.
func (gps dataGooglePubsubSubscriptionAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(gps.ref.Append("id"))
}

// Labels returns a reference to field labels of google_pubsub_subscription.
func (gps dataGooglePubsubSubscriptionAttributes) Labels() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](gps.ref.Append("labels"))
}

// MessageRetentionDuration returns a reference to field message_retention_duration of google_pubsub_subscription.
func (gps dataGooglePubsubSubscriptionAttributes) MessageRetentionDuration() terra.StringValue {
	return terra.ReferenceAsString(gps.ref.Append("message_retention_duration"))
}

// Name returns a reference to field name of google_pubsub_subscription.
func (gps dataGooglePubsubSubscriptionAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(gps.ref.Append("name"))
}

// Project returns a reference to field project of google_pubsub_subscription.
func (gps dataGooglePubsubSubscriptionAttributes) Project() terra.StringValue {
	return terra.ReferenceAsString(gps.ref.Append("project"))
}

// RetainAckedMessages returns a reference to field retain_acked_messages of google_pubsub_subscription.
func (gps dataGooglePubsubSubscriptionAttributes) RetainAckedMessages() terra.BoolValue {
	return terra.ReferenceAsBool(gps.ref.Append("retain_acked_messages"))
}

// TerraformLabels returns a reference to field terraform_labels of google_pubsub_subscription.
func (gps dataGooglePubsubSubscriptionAttributes) TerraformLabels() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](gps.ref.Append("terraform_labels"))
}

// Topic returns a reference to field topic of google_pubsub_subscription.
func (gps dataGooglePubsubSubscriptionAttributes) Topic() terra.StringValue {
	return terra.ReferenceAsString(gps.ref.Append("topic"))
}

func (gps dataGooglePubsubSubscriptionAttributes) BigqueryConfig() terra.ListValue[DataBigqueryConfigAttributes] {
	return terra.ReferenceAsList[DataBigqueryConfigAttributes](gps.ref.Append("bigquery_config"))
}

func (gps dataGooglePubsubSubscriptionAttributes) CloudStorageConfig() terra.ListValue[DataCloudStorageConfigAttributes] {
	return terra.ReferenceAsList[DataCloudStorageConfigAttributes](gps.ref.Append("cloud_storage_config"))
}

func (gps dataGooglePubsubSubscriptionAttributes) DeadLetterPolicy() terra.ListValue[DataDeadLetterPolicyAttributes] {
	return terra.ReferenceAsList[DataDeadLetterPolicyAttributes](gps.ref.Append("dead_letter_policy"))
}

func (gps dataGooglePubsubSubscriptionAttributes) ExpirationPolicy() terra.ListValue[DataExpirationPolicyAttributes] {
	return terra.ReferenceAsList[DataExpirationPolicyAttributes](gps.ref.Append("expiration_policy"))
}

func (gps dataGooglePubsubSubscriptionAttributes) PushConfig() terra.ListValue[DataPushConfigAttributes] {
	return terra.ReferenceAsList[DataPushConfigAttributes](gps.ref.Append("push_config"))
}

func (gps dataGooglePubsubSubscriptionAttributes) RetryPolicy() terra.ListValue[DataRetryPolicyAttributes] {
	return terra.ReferenceAsList[DataRetryPolicyAttributes](gps.ref.Append("retry_policy"))
}
