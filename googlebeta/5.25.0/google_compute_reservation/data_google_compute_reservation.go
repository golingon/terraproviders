// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google_compute_reservation

import "github.com/golingon/lingon/pkg/terra"

// Data creates a new instance of [DataSource].
func Data(name string, args DataArgs) *DataSource {
	return &DataSource{
		Args: args,
		Name: name,
	}
}

var _ terra.DataSource = (*DataSource)(nil)

// DataSource represents the Terraform data resource google_compute_reservation.
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (gcr *DataSource) DataSource() string {
	return "google_compute_reservation"
}

// LocalName returns the local name for [DataSource].
func (gcr *DataSource) LocalName() string {
	return gcr.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (gcr *DataSource) Configuration() interface{} {
	return gcr.Args
}

// Attributes returns the attributes for [DataSource].
func (gcr *DataSource) Attributes() dataGoogleComputeReservationAttributes {
	return dataGoogleComputeReservationAttributes{ref: terra.ReferenceDataSource(gcr)}
}

// DataArgs contains the configurations for google_compute_reservation.
type DataArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
	// Zone: string, required
	Zone terra.StringValue `hcl:"zone,attr" validate:"required"`
}

type dataGoogleComputeReservationAttributes struct {
	ref terra.Reference
}

// Commitment returns a reference to field commitment of google_compute_reservation.
func (gcr dataGoogleComputeReservationAttributes) Commitment() terra.StringValue {
	return terra.ReferenceAsString(gcr.ref.Append("commitment"))
}

// CreationTimestamp returns a reference to field creation_timestamp of google_compute_reservation.
func (gcr dataGoogleComputeReservationAttributes) CreationTimestamp() terra.StringValue {
	return terra.ReferenceAsString(gcr.ref.Append("creation_timestamp"))
}

// Description returns a reference to field description of google_compute_reservation.
func (gcr dataGoogleComputeReservationAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(gcr.ref.Append("description"))
}

// Id returns a reference to field id of google_compute_reservation.
func (gcr dataGoogleComputeReservationAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(gcr.ref.Append("id"))
}

// Name returns a reference to field name of google_compute_reservation.
func (gcr dataGoogleComputeReservationAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(gcr.ref.Append("name"))
}

// Project returns a reference to field project of google_compute_reservation.
func (gcr dataGoogleComputeReservationAttributes) Project() terra.StringValue {
	return terra.ReferenceAsString(gcr.ref.Append("project"))
}

// SelfLink returns a reference to field self_link of google_compute_reservation.
func (gcr dataGoogleComputeReservationAttributes) SelfLink() terra.StringValue {
	return terra.ReferenceAsString(gcr.ref.Append("self_link"))
}

// SpecificReservationRequired returns a reference to field specific_reservation_required of google_compute_reservation.
func (gcr dataGoogleComputeReservationAttributes) SpecificReservationRequired() terra.BoolValue {
	return terra.ReferenceAsBool(gcr.ref.Append("specific_reservation_required"))
}

// Status returns a reference to field status of google_compute_reservation.
func (gcr dataGoogleComputeReservationAttributes) Status() terra.StringValue {
	return terra.ReferenceAsString(gcr.ref.Append("status"))
}

// Zone returns a reference to field zone of google_compute_reservation.
func (gcr dataGoogleComputeReservationAttributes) Zone() terra.StringValue {
	return terra.ReferenceAsString(gcr.ref.Append("zone"))
}

func (gcr dataGoogleComputeReservationAttributes) ShareSettings() terra.ListValue[DataShareSettingsAttributes] {
	return terra.ReferenceAsList[DataShareSettingsAttributes](gcr.ref.Append("share_settings"))
}

func (gcr dataGoogleComputeReservationAttributes) SpecificReservation() terra.ListValue[DataSpecificReservationAttributes] {
	return terra.ReferenceAsList[DataSpecificReservationAttributes](gcr.ref.Append("specific_reservation"))
}
