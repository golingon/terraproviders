// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google_logging_billing_account_bucket_config

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource google_logging_billing_account_bucket_config.
type Resource struct {
	Name      string
	Args      Args
	state     *googleLoggingBillingAccountBucketConfigState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (glbabc *Resource) Type() string {
	return "google_logging_billing_account_bucket_config"
}

// LocalName returns the local name for [Resource].
func (glbabc *Resource) LocalName() string {
	return glbabc.Name
}

// Configuration returns the configuration (args) for [Resource].
func (glbabc *Resource) Configuration() interface{} {
	return glbabc.Args
}

// DependOn is used for other resources to depend on [Resource].
func (glbabc *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(glbabc)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (glbabc *Resource) Dependencies() terra.Dependencies {
	return glbabc.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (glbabc *Resource) LifecycleManagement() *terra.Lifecycle {
	return glbabc.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (glbabc *Resource) Attributes() googleLoggingBillingAccountBucketConfigAttributes {
	return googleLoggingBillingAccountBucketConfigAttributes{ref: terra.ReferenceResource(glbabc)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (glbabc *Resource) ImportState(state io.Reader) error {
	glbabc.state = &googleLoggingBillingAccountBucketConfigState{}
	if err := json.NewDecoder(state).Decode(glbabc.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", glbabc.Type(), glbabc.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (glbabc *Resource) State() (*googleLoggingBillingAccountBucketConfigState, bool) {
	return glbabc.state, glbabc.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (glbabc *Resource) StateMust() *googleLoggingBillingAccountBucketConfigState {
	if glbabc.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", glbabc.Type(), glbabc.LocalName()))
	}
	return glbabc.state
}

// Args contains the configurations for google_logging_billing_account_bucket_config.
type Args struct {
	// BillingAccount: string, required
	BillingAccount terra.StringValue `hcl:"billing_account,attr" validate:"required"`
	// BucketId: string, required
	BucketId terra.StringValue `hcl:"bucket_id,attr" validate:"required"`
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Location: string, required
	Location terra.StringValue `hcl:"location,attr" validate:"required"`
	// RetentionDays: number, optional
	RetentionDays terra.NumberValue `hcl:"retention_days,attr"`
	// CmekSettings: optional
	CmekSettings *CmekSettings `hcl:"cmek_settings,block"`
	// IndexConfigs: min=0,max=20
	IndexConfigs []IndexConfigs `hcl:"index_configs,block" validate:"min=0,max=20"`
}

type googleLoggingBillingAccountBucketConfigAttributes struct {
	ref terra.Reference
}

// BillingAccount returns a reference to field billing_account of google_logging_billing_account_bucket_config.
func (glbabc googleLoggingBillingAccountBucketConfigAttributes) BillingAccount() terra.StringValue {
	return terra.ReferenceAsString(glbabc.ref.Append("billing_account"))
}

// BucketId returns a reference to field bucket_id of google_logging_billing_account_bucket_config.
func (glbabc googleLoggingBillingAccountBucketConfigAttributes) BucketId() terra.StringValue {
	return terra.ReferenceAsString(glbabc.ref.Append("bucket_id"))
}

// Description returns a reference to field description of google_logging_billing_account_bucket_config.
func (glbabc googleLoggingBillingAccountBucketConfigAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(glbabc.ref.Append("description"))
}

// Id returns a reference to field id of google_logging_billing_account_bucket_config.
func (glbabc googleLoggingBillingAccountBucketConfigAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(glbabc.ref.Append("id"))
}

// LifecycleState returns a reference to field lifecycle_state of google_logging_billing_account_bucket_config.
func (glbabc googleLoggingBillingAccountBucketConfigAttributes) LifecycleState() terra.StringValue {
	return terra.ReferenceAsString(glbabc.ref.Append("lifecycle_state"))
}

// Location returns a reference to field location of google_logging_billing_account_bucket_config.
func (glbabc googleLoggingBillingAccountBucketConfigAttributes) Location() terra.StringValue {
	return terra.ReferenceAsString(glbabc.ref.Append("location"))
}

// Name returns a reference to field name of google_logging_billing_account_bucket_config.
func (glbabc googleLoggingBillingAccountBucketConfigAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(glbabc.ref.Append("name"))
}

// RetentionDays returns a reference to field retention_days of google_logging_billing_account_bucket_config.
func (glbabc googleLoggingBillingAccountBucketConfigAttributes) RetentionDays() terra.NumberValue {
	return terra.ReferenceAsNumber(glbabc.ref.Append("retention_days"))
}

func (glbabc googleLoggingBillingAccountBucketConfigAttributes) CmekSettings() terra.ListValue[CmekSettingsAttributes] {
	return terra.ReferenceAsList[CmekSettingsAttributes](glbabc.ref.Append("cmek_settings"))
}

func (glbabc googleLoggingBillingAccountBucketConfigAttributes) IndexConfigs() terra.SetValue[IndexConfigsAttributes] {
	return terra.ReferenceAsSet[IndexConfigsAttributes](glbabc.ref.Append("index_configs"))
}

type googleLoggingBillingAccountBucketConfigState struct {
	BillingAccount string              `json:"billing_account"`
	BucketId       string              `json:"bucket_id"`
	Description    string              `json:"description"`
	Id             string              `json:"id"`
	LifecycleState string              `json:"lifecycle_state"`
	Location       string              `json:"location"`
	Name           string              `json:"name"`
	RetentionDays  float64             `json:"retention_days"`
	CmekSettings   []CmekSettingsState `json:"cmek_settings"`
	IndexConfigs   []IndexConfigsState `json:"index_configs"`
}
