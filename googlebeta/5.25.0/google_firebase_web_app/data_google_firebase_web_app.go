// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google_firebase_web_app

import "github.com/golingon/lingon/pkg/terra"

// Data creates a new instance of [DataSource].
func Data(name string, args DataArgs) *DataSource {
	return &DataSource{
		Args: args,
		Name: name,
	}
}

var _ terra.DataSource = (*DataSource)(nil)

// DataSource represents the Terraform data resource google_firebase_web_app.
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (gfwa *DataSource) DataSource() string {
	return "google_firebase_web_app"
}

// LocalName returns the local name for [DataSource].
func (gfwa *DataSource) LocalName() string {
	return gfwa.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (gfwa *DataSource) Configuration() interface{} {
	return gfwa.Args
}

// Attributes returns the attributes for [DataSource].
func (gfwa *DataSource) Attributes() dataGoogleFirebaseWebAppAttributes {
	return dataGoogleFirebaseWebAppAttributes{ref: terra.ReferenceDataSource(gfwa)}
}

// DataArgs contains the configurations for google_firebase_web_app.
type DataArgs struct {
	// AppId: string, required
	AppId terra.StringValue `hcl:"app_id,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
}

type dataGoogleFirebaseWebAppAttributes struct {
	ref terra.Reference
}

// ApiKeyId returns a reference to field api_key_id of google_firebase_web_app.
func (gfwa dataGoogleFirebaseWebAppAttributes) ApiKeyId() terra.StringValue {
	return terra.ReferenceAsString(gfwa.ref.Append("api_key_id"))
}

// AppId returns a reference to field app_id of google_firebase_web_app.
func (gfwa dataGoogleFirebaseWebAppAttributes) AppId() terra.StringValue {
	return terra.ReferenceAsString(gfwa.ref.Append("app_id"))
}

// AppUrls returns a reference to field app_urls of google_firebase_web_app.
func (gfwa dataGoogleFirebaseWebAppAttributes) AppUrls() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](gfwa.ref.Append("app_urls"))
}

// DeletionPolicy returns a reference to field deletion_policy of google_firebase_web_app.
func (gfwa dataGoogleFirebaseWebAppAttributes) DeletionPolicy() terra.StringValue {
	return terra.ReferenceAsString(gfwa.ref.Append("deletion_policy"))
}

// DisplayName returns a reference to field display_name of google_firebase_web_app.
func (gfwa dataGoogleFirebaseWebAppAttributes) DisplayName() terra.StringValue {
	return terra.ReferenceAsString(gfwa.ref.Append("display_name"))
}

// Id returns a reference to field id of google_firebase_web_app.
func (gfwa dataGoogleFirebaseWebAppAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(gfwa.ref.Append("id"))
}

// Name returns a reference to field name of google_firebase_web_app.
func (gfwa dataGoogleFirebaseWebAppAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(gfwa.ref.Append("name"))
}

// Project returns a reference to field project of google_firebase_web_app.
func (gfwa dataGoogleFirebaseWebAppAttributes) Project() terra.StringValue {
	return terra.ReferenceAsString(gfwa.ref.Append("project"))
}
