// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google_iam_workforce_pool

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource google_iam_workforce_pool.
type Resource struct {
	Name      string
	Args      Args
	state     *googleIamWorkforcePoolState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (giwp *Resource) Type() string {
	return "google_iam_workforce_pool"
}

// LocalName returns the local name for [Resource].
func (giwp *Resource) LocalName() string {
	return giwp.Name
}

// Configuration returns the configuration (args) for [Resource].
func (giwp *Resource) Configuration() interface{} {
	return giwp.Args
}

// DependOn is used for other resources to depend on [Resource].
func (giwp *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(giwp)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (giwp *Resource) Dependencies() terra.Dependencies {
	return giwp.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (giwp *Resource) LifecycleManagement() *terra.Lifecycle {
	return giwp.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (giwp *Resource) Attributes() googleIamWorkforcePoolAttributes {
	return googleIamWorkforcePoolAttributes{ref: terra.ReferenceResource(giwp)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (giwp *Resource) ImportState(state io.Reader) error {
	giwp.state = &googleIamWorkforcePoolState{}
	if err := json.NewDecoder(state).Decode(giwp.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", giwp.Type(), giwp.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (giwp *Resource) State() (*googleIamWorkforcePoolState, bool) {
	return giwp.state, giwp.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (giwp *Resource) StateMust() *googleIamWorkforcePoolState {
	if giwp.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", giwp.Type(), giwp.LocalName()))
	}
	return giwp.state
}

// Args contains the configurations for google_iam_workforce_pool.
type Args struct {
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// Disabled: bool, optional
	Disabled terra.BoolValue `hcl:"disabled,attr"`
	// DisplayName: string, optional
	DisplayName terra.StringValue `hcl:"display_name,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Location: string, required
	Location terra.StringValue `hcl:"location,attr" validate:"required"`
	// Parent: string, required
	Parent terra.StringValue `hcl:"parent,attr" validate:"required"`
	// SessionDuration: string, optional
	SessionDuration terra.StringValue `hcl:"session_duration,attr"`
	// WorkforcePoolId: string, required
	WorkforcePoolId terra.StringValue `hcl:"workforce_pool_id,attr" validate:"required"`
	// AccessRestrictions: optional
	AccessRestrictions *AccessRestrictions `hcl:"access_restrictions,block"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type googleIamWorkforcePoolAttributes struct {
	ref terra.Reference
}

// Description returns a reference to field description of google_iam_workforce_pool.
func (giwp googleIamWorkforcePoolAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(giwp.ref.Append("description"))
}

// Disabled returns a reference to field disabled of google_iam_workforce_pool.
func (giwp googleIamWorkforcePoolAttributes) Disabled() terra.BoolValue {
	return terra.ReferenceAsBool(giwp.ref.Append("disabled"))
}

// DisplayName returns a reference to field display_name of google_iam_workforce_pool.
func (giwp googleIamWorkforcePoolAttributes) DisplayName() terra.StringValue {
	return terra.ReferenceAsString(giwp.ref.Append("display_name"))
}

// Id returns a reference to field id of google_iam_workforce_pool.
func (giwp googleIamWorkforcePoolAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(giwp.ref.Append("id"))
}

// Location returns a reference to field location of google_iam_workforce_pool.
func (giwp googleIamWorkforcePoolAttributes) Location() terra.StringValue {
	return terra.ReferenceAsString(giwp.ref.Append("location"))
}

// Name returns a reference to field name of google_iam_workforce_pool.
func (giwp googleIamWorkforcePoolAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(giwp.ref.Append("name"))
}

// Parent returns a reference to field parent of google_iam_workforce_pool.
func (giwp googleIamWorkforcePoolAttributes) Parent() terra.StringValue {
	return terra.ReferenceAsString(giwp.ref.Append("parent"))
}

// SessionDuration returns a reference to field session_duration of google_iam_workforce_pool.
func (giwp googleIamWorkforcePoolAttributes) SessionDuration() terra.StringValue {
	return terra.ReferenceAsString(giwp.ref.Append("session_duration"))
}

// State returns a reference to field state of google_iam_workforce_pool.
func (giwp googleIamWorkforcePoolAttributes) State() terra.StringValue {
	return terra.ReferenceAsString(giwp.ref.Append("state"))
}

// WorkforcePoolId returns a reference to field workforce_pool_id of google_iam_workforce_pool.
func (giwp googleIamWorkforcePoolAttributes) WorkforcePoolId() terra.StringValue {
	return terra.ReferenceAsString(giwp.ref.Append("workforce_pool_id"))
}

func (giwp googleIamWorkforcePoolAttributes) AccessRestrictions() terra.ListValue[AccessRestrictionsAttributes] {
	return terra.ReferenceAsList[AccessRestrictionsAttributes](giwp.ref.Append("access_restrictions"))
}

func (giwp googleIamWorkforcePoolAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](giwp.ref.Append("timeouts"))
}

type googleIamWorkforcePoolState struct {
	Description        string                    `json:"description"`
	Disabled           bool                      `json:"disabled"`
	DisplayName        string                    `json:"display_name"`
	Id                 string                    `json:"id"`
	Location           string                    `json:"location"`
	Name               string                    `json:"name"`
	Parent             string                    `json:"parent"`
	SessionDuration    string                    `json:"session_duration"`
	State              string                    `json:"state"`
	WorkforcePoolId    string                    `json:"workforce_pool_id"`
	AccessRestrictions []AccessRestrictionsState `json:"access_restrictions"`
	Timeouts           *TimeoutsState            `json:"timeouts"`
}
