// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google_vertex_ai_deployment_resource_pool

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DedicatedResources struct {
	// MaxReplicaCount: number, optional
	MaxReplicaCount terra.NumberValue `hcl:"max_replica_count,attr"`
	// MinReplicaCount: number, required
	MinReplicaCount terra.NumberValue `hcl:"min_replica_count,attr" validate:"required"`
	// DedicatedResourcesAutoscalingMetricSpecs: min=0
	AutoscalingMetricSpecs []DedicatedResourcesAutoscalingMetricSpecs `hcl:"autoscaling_metric_specs,block" validate:"min=0"`
	// DedicatedResourcesMachineSpec: required
	MachineSpec *DedicatedResourcesMachineSpec `hcl:"machine_spec,block" validate:"required"`
}

type DedicatedResourcesAutoscalingMetricSpecs struct {
	// MetricName: string, required
	MetricName terra.StringValue `hcl:"metric_name,attr" validate:"required"`
	// Target: number, optional
	Target terra.NumberValue `hcl:"target,attr"`
}

type DedicatedResourcesMachineSpec struct {
	// AcceleratorCount: number, optional
	AcceleratorCount terra.NumberValue `hcl:"accelerator_count,attr"`
	// AcceleratorType: string, optional
	AcceleratorType terra.StringValue `hcl:"accelerator_type,attr"`
	// MachineType: string, optional
	MachineType terra.StringValue `hcl:"machine_type,attr"`
}

type Timeouts struct {
	// Create: string, optional
	Create terra.StringValue `hcl:"create,attr"`
	// Delete: string, optional
	Delete terra.StringValue `hcl:"delete,attr"`
}

type DedicatedResourcesAttributes struct {
	ref terra.Reference
}

func (dr DedicatedResourcesAttributes) InternalRef() (terra.Reference, error) {
	return dr.ref, nil
}

func (dr DedicatedResourcesAttributes) InternalWithRef(ref terra.Reference) DedicatedResourcesAttributes {
	return DedicatedResourcesAttributes{ref: ref}
}

func (dr DedicatedResourcesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dr.ref.InternalTokens()
}

func (dr DedicatedResourcesAttributes) MaxReplicaCount() terra.NumberValue {
	return terra.ReferenceAsNumber(dr.ref.Append("max_replica_count"))
}

func (dr DedicatedResourcesAttributes) MinReplicaCount() terra.NumberValue {
	return terra.ReferenceAsNumber(dr.ref.Append("min_replica_count"))
}

func (dr DedicatedResourcesAttributes) AutoscalingMetricSpecs() terra.ListValue[DedicatedResourcesAutoscalingMetricSpecsAttributes] {
	return terra.ReferenceAsList[DedicatedResourcesAutoscalingMetricSpecsAttributes](dr.ref.Append("autoscaling_metric_specs"))
}

func (dr DedicatedResourcesAttributes) MachineSpec() terra.ListValue[DedicatedResourcesMachineSpecAttributes] {
	return terra.ReferenceAsList[DedicatedResourcesMachineSpecAttributes](dr.ref.Append("machine_spec"))
}

type DedicatedResourcesAutoscalingMetricSpecsAttributes struct {
	ref terra.Reference
}

func (ams DedicatedResourcesAutoscalingMetricSpecsAttributes) InternalRef() (terra.Reference, error) {
	return ams.ref, nil
}

func (ams DedicatedResourcesAutoscalingMetricSpecsAttributes) InternalWithRef(ref terra.Reference) DedicatedResourcesAutoscalingMetricSpecsAttributes {
	return DedicatedResourcesAutoscalingMetricSpecsAttributes{ref: ref}
}

func (ams DedicatedResourcesAutoscalingMetricSpecsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ams.ref.InternalTokens()
}

func (ams DedicatedResourcesAutoscalingMetricSpecsAttributes) MetricName() terra.StringValue {
	return terra.ReferenceAsString(ams.ref.Append("metric_name"))
}

func (ams DedicatedResourcesAutoscalingMetricSpecsAttributes) Target() terra.NumberValue {
	return terra.ReferenceAsNumber(ams.ref.Append("target"))
}

type DedicatedResourcesMachineSpecAttributes struct {
	ref terra.Reference
}

func (ms DedicatedResourcesMachineSpecAttributes) InternalRef() (terra.Reference, error) {
	return ms.ref, nil
}

func (ms DedicatedResourcesMachineSpecAttributes) InternalWithRef(ref terra.Reference) DedicatedResourcesMachineSpecAttributes {
	return DedicatedResourcesMachineSpecAttributes{ref: ref}
}

func (ms DedicatedResourcesMachineSpecAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ms.ref.InternalTokens()
}

func (ms DedicatedResourcesMachineSpecAttributes) AcceleratorCount() terra.NumberValue {
	return terra.ReferenceAsNumber(ms.ref.Append("accelerator_count"))
}

func (ms DedicatedResourcesMachineSpecAttributes) AcceleratorType() terra.StringValue {
	return terra.ReferenceAsString(ms.ref.Append("accelerator_type"))
}

func (ms DedicatedResourcesMachineSpecAttributes) MachineType() terra.StringValue {
	return terra.ReferenceAsString(ms.ref.Append("machine_type"))
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("create"))
}

func (t TimeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("delete"))
}

type DedicatedResourcesState struct {
	MaxReplicaCount        float64                                         `json:"max_replica_count"`
	MinReplicaCount        float64                                         `json:"min_replica_count"`
	AutoscalingMetricSpecs []DedicatedResourcesAutoscalingMetricSpecsState `json:"autoscaling_metric_specs"`
	MachineSpec            []DedicatedResourcesMachineSpecState            `json:"machine_spec"`
}

type DedicatedResourcesAutoscalingMetricSpecsState struct {
	MetricName string  `json:"metric_name"`
	Target     float64 `json:"target"`
}

type DedicatedResourcesMachineSpecState struct {
	AcceleratorCount float64 `json:"accelerator_count"`
	AcceleratorType  string  `json:"accelerator_type"`
	MachineType      string  `json:"machine_type"`
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
}
