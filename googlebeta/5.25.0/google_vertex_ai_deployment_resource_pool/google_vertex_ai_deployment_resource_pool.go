// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google_vertex_ai_deployment_resource_pool

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource google_vertex_ai_deployment_resource_pool.
type Resource struct {
	Name      string
	Args      Args
	state     *googleVertexAiDeploymentResourcePoolState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (gvadrp *Resource) Type() string {
	return "google_vertex_ai_deployment_resource_pool"
}

// LocalName returns the local name for [Resource].
func (gvadrp *Resource) LocalName() string {
	return gvadrp.Name
}

// Configuration returns the configuration (args) for [Resource].
func (gvadrp *Resource) Configuration() interface{} {
	return gvadrp.Args
}

// DependOn is used for other resources to depend on [Resource].
func (gvadrp *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(gvadrp)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (gvadrp *Resource) Dependencies() terra.Dependencies {
	return gvadrp.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (gvadrp *Resource) LifecycleManagement() *terra.Lifecycle {
	return gvadrp.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (gvadrp *Resource) Attributes() googleVertexAiDeploymentResourcePoolAttributes {
	return googleVertexAiDeploymentResourcePoolAttributes{ref: terra.ReferenceResource(gvadrp)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (gvadrp *Resource) ImportState(state io.Reader) error {
	gvadrp.state = &googleVertexAiDeploymentResourcePoolState{}
	if err := json.NewDecoder(state).Decode(gvadrp.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", gvadrp.Type(), gvadrp.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (gvadrp *Resource) State() (*googleVertexAiDeploymentResourcePoolState, bool) {
	return gvadrp.state, gvadrp.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (gvadrp *Resource) StateMust() *googleVertexAiDeploymentResourcePoolState {
	if gvadrp.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", gvadrp.Type(), gvadrp.LocalName()))
	}
	return gvadrp.state
}

// Args contains the configurations for google_vertex_ai_deployment_resource_pool.
type Args struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
	// Region: string, optional
	Region terra.StringValue `hcl:"region,attr"`
	// DedicatedResources: optional
	DedicatedResources *DedicatedResources `hcl:"dedicated_resources,block"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type googleVertexAiDeploymentResourcePoolAttributes struct {
	ref terra.Reference
}

// CreateTime returns a reference to field create_time of google_vertex_ai_deployment_resource_pool.
func (gvadrp googleVertexAiDeploymentResourcePoolAttributes) CreateTime() terra.StringValue {
	return terra.ReferenceAsString(gvadrp.ref.Append("create_time"))
}

// Id returns a reference to field id of google_vertex_ai_deployment_resource_pool.
func (gvadrp googleVertexAiDeploymentResourcePoolAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(gvadrp.ref.Append("id"))
}

// Name returns a reference to field name of google_vertex_ai_deployment_resource_pool.
func (gvadrp googleVertexAiDeploymentResourcePoolAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(gvadrp.ref.Append("name"))
}

// Project returns a reference to field project of google_vertex_ai_deployment_resource_pool.
func (gvadrp googleVertexAiDeploymentResourcePoolAttributes) Project() terra.StringValue {
	return terra.ReferenceAsString(gvadrp.ref.Append("project"))
}

// Region returns a reference to field region of google_vertex_ai_deployment_resource_pool.
func (gvadrp googleVertexAiDeploymentResourcePoolAttributes) Region() terra.StringValue {
	return terra.ReferenceAsString(gvadrp.ref.Append("region"))
}

func (gvadrp googleVertexAiDeploymentResourcePoolAttributes) DedicatedResources() terra.ListValue[DedicatedResourcesAttributes] {
	return terra.ReferenceAsList[DedicatedResourcesAttributes](gvadrp.ref.Append("dedicated_resources"))
}

func (gvadrp googleVertexAiDeploymentResourcePoolAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](gvadrp.ref.Append("timeouts"))
}

type googleVertexAiDeploymentResourcePoolState struct {
	CreateTime         string                    `json:"create_time"`
	Id                 string                    `json:"id"`
	Name               string                    `json:"name"`
	Project            string                    `json:"project"`
	Region             string                    `json:"region"`
	DedicatedResources []DedicatedResourcesState `json:"dedicated_resources"`
	Timeouts           *TimeoutsState            `json:"timeouts"`
}
