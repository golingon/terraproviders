// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google_gkeonprem_bare_metal_cluster

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource google_gkeonprem_bare_metal_cluster.
type Resource struct {
	Name      string
	Args      Args
	state     *googleGkeonpremBareMetalClusterState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (ggbmc *Resource) Type() string {
	return "google_gkeonprem_bare_metal_cluster"
}

// LocalName returns the local name for [Resource].
func (ggbmc *Resource) LocalName() string {
	return ggbmc.Name
}

// Configuration returns the configuration (args) for [Resource].
func (ggbmc *Resource) Configuration() interface{} {
	return ggbmc.Args
}

// DependOn is used for other resources to depend on [Resource].
func (ggbmc *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(ggbmc)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (ggbmc *Resource) Dependencies() terra.Dependencies {
	return ggbmc.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (ggbmc *Resource) LifecycleManagement() *terra.Lifecycle {
	return ggbmc.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (ggbmc *Resource) Attributes() googleGkeonpremBareMetalClusterAttributes {
	return googleGkeonpremBareMetalClusterAttributes{ref: terra.ReferenceResource(ggbmc)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (ggbmc *Resource) ImportState(state io.Reader) error {
	ggbmc.state = &googleGkeonpremBareMetalClusterState{}
	if err := json.NewDecoder(state).Decode(ggbmc.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", ggbmc.Type(), ggbmc.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (ggbmc *Resource) State() (*googleGkeonpremBareMetalClusterState, bool) {
	return ggbmc.state, ggbmc.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (ggbmc *Resource) StateMust() *googleGkeonpremBareMetalClusterState {
	if ggbmc.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", ggbmc.Type(), ggbmc.LocalName()))
	}
	return ggbmc.state
}

// Args contains the configurations for google_gkeonprem_bare_metal_cluster.
type Args struct {
	// AdminClusterMembership: string, required
	AdminClusterMembership terra.StringValue `hcl:"admin_cluster_membership,attr" validate:"required"`
	// Annotations: map of string, optional
	Annotations terra.MapValue[terra.StringValue] `hcl:"annotations,attr"`
	// BareMetalVersion: string, required
	BareMetalVersion terra.StringValue `hcl:"bare_metal_version,attr" validate:"required"`
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Location: string, required
	Location terra.StringValue `hcl:"location,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
	// BinaryAuthorization: optional
	BinaryAuthorization *BinaryAuthorization `hcl:"binary_authorization,block"`
	// ClusterOperations: optional
	ClusterOperations *ClusterOperations `hcl:"cluster_operations,block"`
	// ControlPlane: required
	ControlPlane *ControlPlane `hcl:"control_plane,block" validate:"required"`
	// LoadBalancer: required
	LoadBalancer *LoadBalancer `hcl:"load_balancer,block" validate:"required"`
	// MaintenanceConfig: optional
	MaintenanceConfig *MaintenanceConfig `hcl:"maintenance_config,block"`
	// NetworkConfig: required
	NetworkConfig *NetworkConfig `hcl:"network_config,block" validate:"required"`
	// NodeAccessConfig: optional
	NodeAccessConfig *NodeAccessConfig `hcl:"node_access_config,block"`
	// NodeConfig: optional
	NodeConfig *NodeConfig `hcl:"node_config,block"`
	// OsEnvironmentConfig: optional
	OsEnvironmentConfig *OsEnvironmentConfig `hcl:"os_environment_config,block"`
	// Proxy: optional
	Proxy *Proxy `hcl:"proxy,block"`
	// SecurityConfig: optional
	SecurityConfig *SecurityConfig `hcl:"security_config,block"`
	// Storage: required
	Storage *Storage `hcl:"storage,block" validate:"required"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
	// UpgradePolicy: optional
	UpgradePolicy *UpgradePolicy `hcl:"upgrade_policy,block"`
}

type googleGkeonpremBareMetalClusterAttributes struct {
	ref terra.Reference
}

// AdminClusterMembership returns a reference to field admin_cluster_membership of google_gkeonprem_bare_metal_cluster.
func (ggbmc googleGkeonpremBareMetalClusterAttributes) AdminClusterMembership() terra.StringValue {
	return terra.ReferenceAsString(ggbmc.ref.Append("admin_cluster_membership"))
}

// Annotations returns a reference to field annotations of google_gkeonprem_bare_metal_cluster.
func (ggbmc googleGkeonpremBareMetalClusterAttributes) Annotations() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](ggbmc.ref.Append("annotations"))
}

// BareMetalVersion returns a reference to field bare_metal_version of google_gkeonprem_bare_metal_cluster.
func (ggbmc googleGkeonpremBareMetalClusterAttributes) BareMetalVersion() terra.StringValue {
	return terra.ReferenceAsString(ggbmc.ref.Append("bare_metal_version"))
}

// CreateTime returns a reference to field create_time of google_gkeonprem_bare_metal_cluster.
func (ggbmc googleGkeonpremBareMetalClusterAttributes) CreateTime() terra.StringValue {
	return terra.ReferenceAsString(ggbmc.ref.Append("create_time"))
}

// DeleteTime returns a reference to field delete_time of google_gkeonprem_bare_metal_cluster.
func (ggbmc googleGkeonpremBareMetalClusterAttributes) DeleteTime() terra.StringValue {
	return terra.ReferenceAsString(ggbmc.ref.Append("delete_time"))
}

// Description returns a reference to field description of google_gkeonprem_bare_metal_cluster.
func (ggbmc googleGkeonpremBareMetalClusterAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(ggbmc.ref.Append("description"))
}

// EffectiveAnnotations returns a reference to field effective_annotations of google_gkeonprem_bare_metal_cluster.
func (ggbmc googleGkeonpremBareMetalClusterAttributes) EffectiveAnnotations() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](ggbmc.ref.Append("effective_annotations"))
}

// Endpoint returns a reference to field endpoint of google_gkeonprem_bare_metal_cluster.
func (ggbmc googleGkeonpremBareMetalClusterAttributes) Endpoint() terra.StringValue {
	return terra.ReferenceAsString(ggbmc.ref.Append("endpoint"))
}

// Etag returns a reference to field etag of google_gkeonprem_bare_metal_cluster.
func (ggbmc googleGkeonpremBareMetalClusterAttributes) Etag() terra.StringValue {
	return terra.ReferenceAsString(ggbmc.ref.Append("etag"))
}

// Id returns a reference to field id of google_gkeonprem_bare_metal_cluster.
func (ggbmc googleGkeonpremBareMetalClusterAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(ggbmc.ref.Append("id"))
}

// LocalName returns a reference to field local_name of google_gkeonprem_bare_metal_cluster.
func (ggbmc googleGkeonpremBareMetalClusterAttributes) LocalName() terra.StringValue {
	return terra.ReferenceAsString(ggbmc.ref.Append("local_name"))
}

// Location returns a reference to field location of google_gkeonprem_bare_metal_cluster.
func (ggbmc googleGkeonpremBareMetalClusterAttributes) Location() terra.StringValue {
	return terra.ReferenceAsString(ggbmc.ref.Append("location"))
}

// Name returns a reference to field name of google_gkeonprem_bare_metal_cluster.
func (ggbmc googleGkeonpremBareMetalClusterAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(ggbmc.ref.Append("name"))
}

// Project returns a reference to field project of google_gkeonprem_bare_metal_cluster.
func (ggbmc googleGkeonpremBareMetalClusterAttributes) Project() terra.StringValue {
	return terra.ReferenceAsString(ggbmc.ref.Append("project"))
}

// Reconciling returns a reference to field reconciling of google_gkeonprem_bare_metal_cluster.
func (ggbmc googleGkeonpremBareMetalClusterAttributes) Reconciling() terra.BoolValue {
	return terra.ReferenceAsBool(ggbmc.ref.Append("reconciling"))
}

// State returns a reference to field state of google_gkeonprem_bare_metal_cluster.
func (ggbmc googleGkeonpremBareMetalClusterAttributes) State() terra.StringValue {
	return terra.ReferenceAsString(ggbmc.ref.Append("state"))
}

// Uid returns a reference to field uid of google_gkeonprem_bare_metal_cluster.
func (ggbmc googleGkeonpremBareMetalClusterAttributes) Uid() terra.StringValue {
	return terra.ReferenceAsString(ggbmc.ref.Append("uid"))
}

// UpdateTime returns a reference to field update_time of google_gkeonprem_bare_metal_cluster.
func (ggbmc googleGkeonpremBareMetalClusterAttributes) UpdateTime() terra.StringValue {
	return terra.ReferenceAsString(ggbmc.ref.Append("update_time"))
}

func (ggbmc googleGkeonpremBareMetalClusterAttributes) Fleet() terra.ListValue[FleetAttributes] {
	return terra.ReferenceAsList[FleetAttributes](ggbmc.ref.Append("fleet"))
}

func (ggbmc googleGkeonpremBareMetalClusterAttributes) Status() terra.ListValue[StatusAttributes] {
	return terra.ReferenceAsList[StatusAttributes](ggbmc.ref.Append("status"))
}

func (ggbmc googleGkeonpremBareMetalClusterAttributes) ValidationCheck() terra.ListValue[ValidationCheckAttributes] {
	return terra.ReferenceAsList[ValidationCheckAttributes](ggbmc.ref.Append("validation_check"))
}

func (ggbmc googleGkeonpremBareMetalClusterAttributes) BinaryAuthorization() terra.ListValue[BinaryAuthorizationAttributes] {
	return terra.ReferenceAsList[BinaryAuthorizationAttributes](ggbmc.ref.Append("binary_authorization"))
}

func (ggbmc googleGkeonpremBareMetalClusterAttributes) ClusterOperations() terra.ListValue[ClusterOperationsAttributes] {
	return terra.ReferenceAsList[ClusterOperationsAttributes](ggbmc.ref.Append("cluster_operations"))
}

func (ggbmc googleGkeonpremBareMetalClusterAttributes) ControlPlane() terra.ListValue[ControlPlaneAttributes] {
	return terra.ReferenceAsList[ControlPlaneAttributes](ggbmc.ref.Append("control_plane"))
}

func (ggbmc googleGkeonpremBareMetalClusterAttributes) LoadBalancer() terra.ListValue[LoadBalancerAttributes] {
	return terra.ReferenceAsList[LoadBalancerAttributes](ggbmc.ref.Append("load_balancer"))
}

func (ggbmc googleGkeonpremBareMetalClusterAttributes) MaintenanceConfig() terra.ListValue[MaintenanceConfigAttributes] {
	return terra.ReferenceAsList[MaintenanceConfigAttributes](ggbmc.ref.Append("maintenance_config"))
}

func (ggbmc googleGkeonpremBareMetalClusterAttributes) NetworkConfig() terra.ListValue[NetworkConfigAttributes] {
	return terra.ReferenceAsList[NetworkConfigAttributes](ggbmc.ref.Append("network_config"))
}

func (ggbmc googleGkeonpremBareMetalClusterAttributes) NodeAccessConfig() terra.ListValue[NodeAccessConfigAttributes] {
	return terra.ReferenceAsList[NodeAccessConfigAttributes](ggbmc.ref.Append("node_access_config"))
}

func (ggbmc googleGkeonpremBareMetalClusterAttributes) NodeConfig() terra.ListValue[NodeConfigAttributes] {
	return terra.ReferenceAsList[NodeConfigAttributes](ggbmc.ref.Append("node_config"))
}

func (ggbmc googleGkeonpremBareMetalClusterAttributes) OsEnvironmentConfig() terra.ListValue[OsEnvironmentConfigAttributes] {
	return terra.ReferenceAsList[OsEnvironmentConfigAttributes](ggbmc.ref.Append("os_environment_config"))
}

func (ggbmc googleGkeonpremBareMetalClusterAttributes) Proxy() terra.ListValue[ProxyAttributes] {
	return terra.ReferenceAsList[ProxyAttributes](ggbmc.ref.Append("proxy"))
}

func (ggbmc googleGkeonpremBareMetalClusterAttributes) SecurityConfig() terra.ListValue[SecurityConfigAttributes] {
	return terra.ReferenceAsList[SecurityConfigAttributes](ggbmc.ref.Append("security_config"))
}

func (ggbmc googleGkeonpremBareMetalClusterAttributes) Storage() terra.ListValue[StorageAttributes] {
	return terra.ReferenceAsList[StorageAttributes](ggbmc.ref.Append("storage"))
}

func (ggbmc googleGkeonpremBareMetalClusterAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](ggbmc.ref.Append("timeouts"))
}

func (ggbmc googleGkeonpremBareMetalClusterAttributes) UpgradePolicy() terra.ListValue[UpgradePolicyAttributes] {
	return terra.ReferenceAsList[UpgradePolicyAttributes](ggbmc.ref.Append("upgrade_policy"))
}

type googleGkeonpremBareMetalClusterState struct {
	AdminClusterMembership string                     `json:"admin_cluster_membership"`
	Annotations            map[string]string          `json:"annotations"`
	BareMetalVersion       string                     `json:"bare_metal_version"`
	CreateTime             string                     `json:"create_time"`
	DeleteTime             string                     `json:"delete_time"`
	Description            string                     `json:"description"`
	EffectiveAnnotations   map[string]string          `json:"effective_annotations"`
	Endpoint               string                     `json:"endpoint"`
	Etag                   string                     `json:"etag"`
	Id                     string                     `json:"id"`
	LocalName              string                     `json:"local_name"`
	Location               string                     `json:"location"`
	Name                   string                     `json:"name"`
	Project                string                     `json:"project"`
	Reconciling            bool                       `json:"reconciling"`
	State                  string                     `json:"state"`
	Uid                    string                     `json:"uid"`
	UpdateTime             string                     `json:"update_time"`
	Fleet                  []FleetState               `json:"fleet"`
	Status                 []StatusState              `json:"status"`
	ValidationCheck        []ValidationCheckState     `json:"validation_check"`
	BinaryAuthorization    []BinaryAuthorizationState `json:"binary_authorization"`
	ClusterOperations      []ClusterOperationsState   `json:"cluster_operations"`
	ControlPlane           []ControlPlaneState        `json:"control_plane"`
	LoadBalancer           []LoadBalancerState        `json:"load_balancer"`
	MaintenanceConfig      []MaintenanceConfigState   `json:"maintenance_config"`
	NetworkConfig          []NetworkConfigState       `json:"network_config"`
	NodeAccessConfig       []NodeAccessConfigState    `json:"node_access_config"`
	NodeConfig             []NodeConfigState          `json:"node_config"`
	OsEnvironmentConfig    []OsEnvironmentConfigState `json:"os_environment_config"`
	Proxy                  []ProxyState               `json:"proxy"`
	SecurityConfig         []SecurityConfigState      `json:"security_config"`
	Storage                []StorageState             `json:"storage"`
	Timeouts               *TimeoutsState             `json:"timeouts"`
	UpgradePolicy          []UpgradePolicyState       `json:"upgrade_policy"`
}
