// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google_gkeonprem_bare_metal_cluster

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type BinaryAuthorization struct {
	// EvaluationMode: string, optional
	EvaluationMode terra.StringValue `hcl:"evaluation_mode,attr"`
}

type ClusterOperations struct {
	// EnableApplicationLogs: bool, optional
	EnableApplicationLogs terra.BoolValue `hcl:"enable_application_logs,attr"`
}

type ControlPlane struct {
	// ControlPlaneApiServerArgs: min=0
	ApiServerArgs []ControlPlaneApiServerArgs `hcl:"api_server_args,block" validate:"min=0"`
	// ControlPlaneControlPlaneNodePoolConfig: required
	ControlPlaneNodePoolConfig *ControlPlaneControlPlaneNodePoolConfig `hcl:"control_plane_node_pool_config,block" validate:"required"`
}

type ControlPlaneApiServerArgs struct {
	// Argument: string, required
	Argument terra.StringValue `hcl:"argument,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type ControlPlaneControlPlaneNodePoolConfig struct {
	// ControlPlaneControlPlaneNodePoolConfigNodePoolConfig: required
	NodePoolConfig *ControlPlaneControlPlaneNodePoolConfigNodePoolConfig `hcl:"node_pool_config,block" validate:"required"`
}

type ControlPlaneControlPlaneNodePoolConfigNodePoolConfig struct {
	// Labels: map of string, optional
	Labels terra.MapValue[terra.StringValue] `hcl:"labels,attr"`
	// OperatingSystem: string, optional
	OperatingSystem terra.StringValue `hcl:"operating_system,attr"`
	// ControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigs: min=0
	NodeConfigs []ControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigs `hcl:"node_configs,block" validate:"min=0"`
	// ControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaints: min=0
	Taints []ControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaints `hcl:"taints,block" validate:"min=0"`
}

type ControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigs struct {
	// Labels: map of string, optional
	Labels terra.MapValue[terra.StringValue] `hcl:"labels,attr"`
	// NodeIp: string, optional
	NodeIp terra.StringValue `hcl:"node_ip,attr"`
}

type ControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaints struct {
	// Effect: string, optional
	Effect terra.StringValue `hcl:"effect,attr"`
	// Key: string, optional
	Key terra.StringValue `hcl:"key,attr"`
	// Value: string, optional
	Value terra.StringValue `hcl:"value,attr"`
}

type LoadBalancer struct {
	// LoadBalancerBgpLbConfig: optional
	BgpLbConfig *LoadBalancerBgpLbConfig `hcl:"bgp_lb_config,block"`
	// LoadBalancerManualLbConfig: optional
	ManualLbConfig *LoadBalancerManualLbConfig `hcl:"manual_lb_config,block"`
	// LoadBalancerMetalLbConfig: optional
	MetalLbConfig *LoadBalancerMetalLbConfig `hcl:"metal_lb_config,block"`
	// LoadBalancerPortConfig: required
	PortConfig *LoadBalancerPortConfig `hcl:"port_config,block" validate:"required"`
	// LoadBalancerVipConfig: required
	VipConfig *LoadBalancerVipConfig `hcl:"vip_config,block" validate:"required"`
}

type LoadBalancerBgpLbConfig struct {
	// Asn: number, required
	Asn terra.NumberValue `hcl:"asn,attr" validate:"required"`
	// LoadBalancerBgpLbConfigAddressPools: min=1
	AddressPools []LoadBalancerBgpLbConfigAddressPools `hcl:"address_pools,block" validate:"min=1"`
	// LoadBalancerBgpLbConfigBgpPeerConfigs: min=1
	BgpPeerConfigs []LoadBalancerBgpLbConfigBgpPeerConfigs `hcl:"bgp_peer_configs,block" validate:"min=1"`
	// LoadBalancerBgpLbConfigLoadBalancerNodePoolConfig: optional
	LoadBalancerNodePoolConfig *LoadBalancerBgpLbConfigLoadBalancerNodePoolConfig `hcl:"load_balancer_node_pool_config,block"`
}

type LoadBalancerBgpLbConfigAddressPools struct {
	// Addresses: list of string, required
	Addresses terra.ListValue[terra.StringValue] `hcl:"addresses,attr" validate:"required"`
	// AvoidBuggyIps: bool, optional
	AvoidBuggyIps terra.BoolValue `hcl:"avoid_buggy_ips,attr"`
	// ManualAssign: string, optional
	ManualAssign terra.StringValue `hcl:"manual_assign,attr"`
	// Pool: string, required
	Pool terra.StringValue `hcl:"pool,attr" validate:"required"`
}

type LoadBalancerBgpLbConfigBgpPeerConfigs struct {
	// Asn: number, required
	Asn terra.NumberValue `hcl:"asn,attr" validate:"required"`
	// ControlPlaneNodes: list of string, optional
	ControlPlaneNodes terra.ListValue[terra.StringValue] `hcl:"control_plane_nodes,attr"`
	// IpAddress: string, required
	IpAddress terra.StringValue `hcl:"ip_address,attr" validate:"required"`
}

type LoadBalancerBgpLbConfigLoadBalancerNodePoolConfig struct {
	// LoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfig: optional
	NodePoolConfig *LoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfig `hcl:"node_pool_config,block"`
}

type LoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfig struct {
	// Labels: map of string, optional
	Labels terra.MapValue[terra.StringValue] `hcl:"labels,attr"`
	// OperatingSystem: string, optional
	OperatingSystem terra.StringValue `hcl:"operating_system,attr"`
	// LoadBalancerBgpLbConfig9B65Ed98: optional
	KubeletConfig *LoadBalancerBgpLbConfig9B65Ed98 `hcl:"kubelet_config,block"`
	// LoadBalancerBgpLbConfig2Af619Ee: min=0
	NodeConfigs []LoadBalancerBgpLbConfig2Af619Ee `hcl:"node_configs,block" validate:"min=0"`
	// LoadBalancerBgpLbConfig95F9C67B: min=0
	Taints []LoadBalancerBgpLbConfig95F9C67B `hcl:"taints,block" validate:"min=0"`
}

type LoadBalancerBgpLbConfig9B65Ed98 struct {
	// RegistryBurst: number, optional
	RegistryBurst terra.NumberValue `hcl:"registry_burst,attr"`
	// RegistryPullQps: number, optional
	RegistryPullQps terra.NumberValue `hcl:"registry_pull_qps,attr"`
	// SerializeImagePullsDisabled: bool, optional
	SerializeImagePullsDisabled terra.BoolValue `hcl:"serialize_image_pulls_disabled,attr"`
}

type LoadBalancerBgpLbConfig2Af619Ee struct {
	// Labels: map of string, optional
	Labels terra.MapValue[terra.StringValue] `hcl:"labels,attr"`
	// NodeIp: string, optional
	NodeIp terra.StringValue `hcl:"node_ip,attr"`
}

type LoadBalancerBgpLbConfig95F9C67B struct {
	// Effect: string, optional
	Effect terra.StringValue `hcl:"effect,attr"`
	// Key: string, optional
	Key terra.StringValue `hcl:"key,attr"`
	// Value: string, optional
	Value terra.StringValue `hcl:"value,attr"`
}

type LoadBalancerManualLbConfig struct {
	// Enabled: bool, required
	Enabled terra.BoolValue `hcl:"enabled,attr" validate:"required"`
}

type LoadBalancerMetalLbConfig struct {
	// LoadBalancerMetalLbConfigAddressPools: min=1
	AddressPools []LoadBalancerMetalLbConfigAddressPools `hcl:"address_pools,block" validate:"min=1"`
	// LoadBalancerMetalLbConfigLoadBalancerNodePoolConfig: optional
	LoadBalancerNodePoolConfig *LoadBalancerMetalLbConfigLoadBalancerNodePoolConfig `hcl:"load_balancer_node_pool_config,block"`
}

type LoadBalancerMetalLbConfigAddressPools struct {
	// Addresses: list of string, required
	Addresses terra.ListValue[terra.StringValue] `hcl:"addresses,attr" validate:"required"`
	// AvoidBuggyIps: bool, optional
	AvoidBuggyIps terra.BoolValue `hcl:"avoid_buggy_ips,attr"`
	// ManualAssign: bool, optional
	ManualAssign terra.BoolValue `hcl:"manual_assign,attr"`
	// Pool: string, required
	Pool terra.StringValue `hcl:"pool,attr" validate:"required"`
}

type LoadBalancerMetalLbConfigLoadBalancerNodePoolConfig struct {
	// LoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfig: optional
	NodePoolConfig *LoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfig `hcl:"node_pool_config,block"`
}

type LoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfig struct {
	// Labels: map of string, optional
	Labels terra.MapValue[terra.StringValue] `hcl:"labels,attr"`
	// OperatingSystem: string, optional
	OperatingSystem terra.StringValue `hcl:"operating_system,attr"`
	// LoadBalancerMetalLbConfig2Af619Ee: min=0
	NodeConfigs []LoadBalancerMetalLbConfig2Af619Ee `hcl:"node_configs,block" validate:"min=0"`
	// LoadBalancerMetalLbConfig95F9C67B: min=0
	Taints []LoadBalancerMetalLbConfig95F9C67B `hcl:"taints,block" validate:"min=0"`
}

type LoadBalancerMetalLbConfig2Af619Ee struct {
	// Labels: map of string, optional
	Labels terra.MapValue[terra.StringValue] `hcl:"labels,attr"`
	// NodeIp: string, optional
	NodeIp terra.StringValue `hcl:"node_ip,attr"`
}

type LoadBalancerMetalLbConfig95F9C67B struct {
	// Effect: string, optional
	Effect terra.StringValue `hcl:"effect,attr"`
	// Key: string, optional
	Key terra.StringValue `hcl:"key,attr"`
	// Value: string, optional
	Value terra.StringValue `hcl:"value,attr"`
}

type LoadBalancerPortConfig struct {
	// ControlPlaneLoadBalancerPort: number, required
	ControlPlaneLoadBalancerPort terra.NumberValue `hcl:"control_plane_load_balancer_port,attr" validate:"required"`
}

type LoadBalancerVipConfig struct {
	// ControlPlaneVip: string, required
	ControlPlaneVip terra.StringValue `hcl:"control_plane_vip,attr" validate:"required"`
	// IngressVip: string, required
	IngressVip terra.StringValue `hcl:"ingress_vip,attr" validate:"required"`
}

type MaintenanceConfig struct {
	// MaintenanceAddressCidrBlocks: list of string, required
	MaintenanceAddressCidrBlocks terra.ListValue[terra.StringValue] `hcl:"maintenance_address_cidr_blocks,attr" validate:"required"`
}

type NetworkConfig struct {
	// AdvancedNetworking: bool, optional
	AdvancedNetworking terra.BoolValue `hcl:"advanced_networking,attr"`
	// NetworkConfigIslandModeCidr: optional
	IslandModeCidr *NetworkConfigIslandModeCidr `hcl:"island_mode_cidr,block"`
	// NetworkConfigMultipleNetworkInterfacesConfig: optional
	MultipleNetworkInterfacesConfig *NetworkConfigMultipleNetworkInterfacesConfig `hcl:"multiple_network_interfaces_config,block"`
	// NetworkConfigSrIovConfig: optional
	SrIovConfig *NetworkConfigSrIovConfig `hcl:"sr_iov_config,block"`
}

type NetworkConfigIslandModeCidr struct {
	// PodAddressCidrBlocks: list of string, required
	PodAddressCidrBlocks terra.ListValue[terra.StringValue] `hcl:"pod_address_cidr_blocks,attr" validate:"required"`
	// ServiceAddressCidrBlocks: list of string, required
	ServiceAddressCidrBlocks terra.ListValue[terra.StringValue] `hcl:"service_address_cidr_blocks,attr" validate:"required"`
}

type NetworkConfigMultipleNetworkInterfacesConfig struct {
	// Enabled: bool, optional
	Enabled terra.BoolValue `hcl:"enabled,attr"`
}

type NetworkConfigSrIovConfig struct {
	// Enabled: bool, optional
	Enabled terra.BoolValue `hcl:"enabled,attr"`
}

type NodeAccessConfig struct {
	// LoginUser: string, optional
	LoginUser terra.StringValue `hcl:"login_user,attr"`
}

type NodeConfig struct {
	// ContainerRuntime: string, optional
	ContainerRuntime terra.StringValue `hcl:"container_runtime,attr"`
	// MaxPodsPerNode: number, optional
	MaxPodsPerNode terra.NumberValue `hcl:"max_pods_per_node,attr"`
}

type OsEnvironmentConfig struct {
	// PackageRepoExcluded: bool, required
	PackageRepoExcluded terra.BoolValue `hcl:"package_repo_excluded,attr" validate:"required"`
}

type Proxy struct {
	// NoProxy: list of string, optional
	NoProxy terra.ListValue[terra.StringValue] `hcl:"no_proxy,attr"`
	// Uri: string, required
	Uri terra.StringValue `hcl:"uri,attr" validate:"required"`
}

type SecurityConfig struct {
	// SecurityConfigAuthorization: optional
	Authorization *SecurityConfigAuthorization `hcl:"authorization,block"`
}

type SecurityConfigAuthorization struct {
	// SecurityConfigAuthorizationAdminUsers: min=1
	AdminUsers []SecurityConfigAuthorizationAdminUsers `hcl:"admin_users,block" validate:"min=1"`
}

type SecurityConfigAuthorizationAdminUsers struct {
	// Username: string, required
	Username terra.StringValue `hcl:"username,attr" validate:"required"`
}

type Storage struct {
	// StorageLvpNodeMountsConfig: required
	LvpNodeMountsConfig *StorageLvpNodeMountsConfig `hcl:"lvp_node_mounts_config,block" validate:"required"`
	// StorageLvpShareConfig: required
	LvpShareConfig *StorageLvpShareConfig `hcl:"lvp_share_config,block" validate:"required"`
}

type StorageLvpNodeMountsConfig struct {
	// Path: string, required
	Path terra.StringValue `hcl:"path,attr" validate:"required"`
	// StorageClass: string, required
	StorageClass terra.StringValue `hcl:"storage_class,attr" validate:"required"`
}

type StorageLvpShareConfig struct {
	// SharedPathPvCount: number, optional
	SharedPathPvCount terra.NumberValue `hcl:"shared_path_pv_count,attr"`
	// StorageLvpShareConfigLvpConfig: required
	LvpConfig *StorageLvpShareConfigLvpConfig `hcl:"lvp_config,block" validate:"required"`
}

type StorageLvpShareConfigLvpConfig struct {
	// Path: string, required
	Path terra.StringValue `hcl:"path,attr" validate:"required"`
	// StorageClass: string, required
	StorageClass terra.StringValue `hcl:"storage_class,attr" validate:"required"`
}

type Timeouts struct {
	// Create: string, optional
	Create terra.StringValue `hcl:"create,attr"`
	// Delete: string, optional
	Delete terra.StringValue `hcl:"delete,attr"`
	// Update: string, optional
	Update terra.StringValue `hcl:"update,attr"`
}

type UpgradePolicy struct {
	// Policy: string, optional
	Policy terra.StringValue `hcl:"policy,attr"`
}

type FleetAttributes struct {
	ref terra.Reference
}

func (f FleetAttributes) InternalRef() (terra.Reference, error) {
	return f.ref, nil
}

func (f FleetAttributes) InternalWithRef(ref terra.Reference) FleetAttributes {
	return FleetAttributes{ref: ref}
}

func (f FleetAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return f.ref.InternalTokens()
}

func (f FleetAttributes) Membership() terra.StringValue {
	return terra.ReferenceAsString(f.ref.Append("membership"))
}

type StatusAttributes struct {
	ref terra.Reference
}

func (s StatusAttributes) InternalRef() (terra.Reference, error) {
	return s.ref, nil
}

func (s StatusAttributes) InternalWithRef(ref terra.Reference) StatusAttributes {
	return StatusAttributes{ref: ref}
}

func (s StatusAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return s.ref.InternalTokens()
}

func (s StatusAttributes) ErrorMessage() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("error_message"))
}

func (s StatusAttributes) Conditions() terra.ListValue[StatusConditionsAttributes] {
	return terra.ReferenceAsList[StatusConditionsAttributes](s.ref.Append("conditions"))
}

type StatusConditionsAttributes struct {
	ref terra.Reference
}

func (c StatusConditionsAttributes) InternalRef() (terra.Reference, error) {
	return c.ref, nil
}

func (c StatusConditionsAttributes) InternalWithRef(ref terra.Reference) StatusConditionsAttributes {
	return StatusConditionsAttributes{ref: ref}
}

func (c StatusConditionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return c.ref.InternalTokens()
}

func (c StatusConditionsAttributes) LastTransitionTime() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("last_transition_time"))
}

func (c StatusConditionsAttributes) Message() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("message"))
}

func (c StatusConditionsAttributes) Reason() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("reason"))
}

func (c StatusConditionsAttributes) State() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("state"))
}

func (c StatusConditionsAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("type"))
}

type ValidationCheckAttributes struct {
	ref terra.Reference
}

func (vc ValidationCheckAttributes) InternalRef() (terra.Reference, error) {
	return vc.ref, nil
}

func (vc ValidationCheckAttributes) InternalWithRef(ref terra.Reference) ValidationCheckAttributes {
	return ValidationCheckAttributes{ref: ref}
}

func (vc ValidationCheckAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return vc.ref.InternalTokens()
}

func (vc ValidationCheckAttributes) Options() terra.StringValue {
	return terra.ReferenceAsString(vc.ref.Append("options"))
}

func (vc ValidationCheckAttributes) Scenario() terra.StringValue {
	return terra.ReferenceAsString(vc.ref.Append("scenario"))
}

func (vc ValidationCheckAttributes) Status() terra.ListValue[ValidationCheckStatusAttributes] {
	return terra.ReferenceAsList[ValidationCheckStatusAttributes](vc.ref.Append("status"))
}

type ValidationCheckStatusAttributes struct {
	ref terra.Reference
}

func (s ValidationCheckStatusAttributes) InternalRef() (terra.Reference, error) {
	return s.ref, nil
}

func (s ValidationCheckStatusAttributes) InternalWithRef(ref terra.Reference) ValidationCheckStatusAttributes {
	return ValidationCheckStatusAttributes{ref: ref}
}

func (s ValidationCheckStatusAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return s.ref.InternalTokens()
}

func (s ValidationCheckStatusAttributes) Result() terra.ListValue[ValidationCheckStatusResultAttributes] {
	return terra.ReferenceAsList[ValidationCheckStatusResultAttributes](s.ref.Append("result"))
}

type ValidationCheckStatusResultAttributes struct {
	ref terra.Reference
}

func (r ValidationCheckStatusResultAttributes) InternalRef() (terra.Reference, error) {
	return r.ref, nil
}

func (r ValidationCheckStatusResultAttributes) InternalWithRef(ref terra.Reference) ValidationCheckStatusResultAttributes {
	return ValidationCheckStatusResultAttributes{ref: ref}
}

func (r ValidationCheckStatusResultAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return r.ref.InternalTokens()
}

func (r ValidationCheckStatusResultAttributes) Category() terra.StringValue {
	return terra.ReferenceAsString(r.ref.Append("category"))
}

func (r ValidationCheckStatusResultAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(r.ref.Append("description"))
}

func (r ValidationCheckStatusResultAttributes) Details() terra.StringValue {
	return terra.ReferenceAsString(r.ref.Append("details"))
}

func (r ValidationCheckStatusResultAttributes) Options() terra.StringValue {
	return terra.ReferenceAsString(r.ref.Append("options"))
}

func (r ValidationCheckStatusResultAttributes) Reason() terra.StringValue {
	return terra.ReferenceAsString(r.ref.Append("reason"))
}

type BinaryAuthorizationAttributes struct {
	ref terra.Reference
}

func (ba BinaryAuthorizationAttributes) InternalRef() (terra.Reference, error) {
	return ba.ref, nil
}

func (ba BinaryAuthorizationAttributes) InternalWithRef(ref terra.Reference) BinaryAuthorizationAttributes {
	return BinaryAuthorizationAttributes{ref: ref}
}

func (ba BinaryAuthorizationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ba.ref.InternalTokens()
}

func (ba BinaryAuthorizationAttributes) EvaluationMode() terra.StringValue {
	return terra.ReferenceAsString(ba.ref.Append("evaluation_mode"))
}

type ClusterOperationsAttributes struct {
	ref terra.Reference
}

func (co ClusterOperationsAttributes) InternalRef() (terra.Reference, error) {
	return co.ref, nil
}

func (co ClusterOperationsAttributes) InternalWithRef(ref terra.Reference) ClusterOperationsAttributes {
	return ClusterOperationsAttributes{ref: ref}
}

func (co ClusterOperationsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return co.ref.InternalTokens()
}

func (co ClusterOperationsAttributes) EnableApplicationLogs() terra.BoolValue {
	return terra.ReferenceAsBool(co.ref.Append("enable_application_logs"))
}

type ControlPlaneAttributes struct {
	ref terra.Reference
}

func (cp ControlPlaneAttributes) InternalRef() (terra.Reference, error) {
	return cp.ref, nil
}

func (cp ControlPlaneAttributes) InternalWithRef(ref terra.Reference) ControlPlaneAttributes {
	return ControlPlaneAttributes{ref: ref}
}

func (cp ControlPlaneAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cp.ref.InternalTokens()
}

func (cp ControlPlaneAttributes) ApiServerArgs() terra.ListValue[ControlPlaneApiServerArgsAttributes] {
	return terra.ReferenceAsList[ControlPlaneApiServerArgsAttributes](cp.ref.Append("api_server_args"))
}

func (cp ControlPlaneAttributes) ControlPlaneNodePoolConfig() terra.ListValue[ControlPlaneControlPlaneNodePoolConfigAttributes] {
	return terra.ReferenceAsList[ControlPlaneControlPlaneNodePoolConfigAttributes](cp.ref.Append("control_plane_node_pool_config"))
}

type ControlPlaneApiServerArgsAttributes struct {
	ref terra.Reference
}

func (asa ControlPlaneApiServerArgsAttributes) InternalRef() (terra.Reference, error) {
	return asa.ref, nil
}

func (asa ControlPlaneApiServerArgsAttributes) InternalWithRef(ref terra.Reference) ControlPlaneApiServerArgsAttributes {
	return ControlPlaneApiServerArgsAttributes{ref: ref}
}

func (asa ControlPlaneApiServerArgsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return asa.ref.InternalTokens()
}

func (asa ControlPlaneApiServerArgsAttributes) Argument() terra.StringValue {
	return terra.ReferenceAsString(asa.ref.Append("argument"))
}

func (asa ControlPlaneApiServerArgsAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(asa.ref.Append("value"))
}

type ControlPlaneControlPlaneNodePoolConfigAttributes struct {
	ref terra.Reference
}

func (cpnpc ControlPlaneControlPlaneNodePoolConfigAttributes) InternalRef() (terra.Reference, error) {
	return cpnpc.ref, nil
}

func (cpnpc ControlPlaneControlPlaneNodePoolConfigAttributes) InternalWithRef(ref terra.Reference) ControlPlaneControlPlaneNodePoolConfigAttributes {
	return ControlPlaneControlPlaneNodePoolConfigAttributes{ref: ref}
}

func (cpnpc ControlPlaneControlPlaneNodePoolConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cpnpc.ref.InternalTokens()
}

func (cpnpc ControlPlaneControlPlaneNodePoolConfigAttributes) NodePoolConfig() terra.ListValue[ControlPlaneControlPlaneNodePoolConfigNodePoolConfigAttributes] {
	return terra.ReferenceAsList[ControlPlaneControlPlaneNodePoolConfigNodePoolConfigAttributes](cpnpc.ref.Append("node_pool_config"))
}

type ControlPlaneControlPlaneNodePoolConfigNodePoolConfigAttributes struct {
	ref terra.Reference
}

func (npc ControlPlaneControlPlaneNodePoolConfigNodePoolConfigAttributes) InternalRef() (terra.Reference, error) {
	return npc.ref, nil
}

func (npc ControlPlaneControlPlaneNodePoolConfigNodePoolConfigAttributes) InternalWithRef(ref terra.Reference) ControlPlaneControlPlaneNodePoolConfigNodePoolConfigAttributes {
	return ControlPlaneControlPlaneNodePoolConfigNodePoolConfigAttributes{ref: ref}
}

func (npc ControlPlaneControlPlaneNodePoolConfigNodePoolConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return npc.ref.InternalTokens()
}

func (npc ControlPlaneControlPlaneNodePoolConfigNodePoolConfigAttributes) Labels() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](npc.ref.Append("labels"))
}

func (npc ControlPlaneControlPlaneNodePoolConfigNodePoolConfigAttributes) OperatingSystem() terra.StringValue {
	return terra.ReferenceAsString(npc.ref.Append("operating_system"))
}

func (npc ControlPlaneControlPlaneNodePoolConfigNodePoolConfigAttributes) NodeConfigs() terra.ListValue[ControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigsAttributes] {
	return terra.ReferenceAsList[ControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigsAttributes](npc.ref.Append("node_configs"))
}

func (npc ControlPlaneControlPlaneNodePoolConfigNodePoolConfigAttributes) Taints() terra.ListValue[ControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintsAttributes] {
	return terra.ReferenceAsList[ControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintsAttributes](npc.ref.Append("taints"))
}

type ControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigsAttributes struct {
	ref terra.Reference
}

func (nc ControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigsAttributes) InternalRef() (terra.Reference, error) {
	return nc.ref, nil
}

func (nc ControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigsAttributes) InternalWithRef(ref terra.Reference) ControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigsAttributes {
	return ControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigsAttributes{ref: ref}
}

func (nc ControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return nc.ref.InternalTokens()
}

func (nc ControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigsAttributes) Labels() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](nc.ref.Append("labels"))
}

func (nc ControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigsAttributes) NodeIp() terra.StringValue {
	return terra.ReferenceAsString(nc.ref.Append("node_ip"))
}

type ControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintsAttributes struct {
	ref terra.Reference
}

func (t ControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t ControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintsAttributes) InternalWithRef(ref terra.Reference) ControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintsAttributes {
	return ControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintsAttributes{ref: ref}
}

func (t ControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t ControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintsAttributes) Effect() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("effect"))
}

func (t ControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintsAttributes) Key() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("key"))
}

func (t ControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintsAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("value"))
}

type LoadBalancerAttributes struct {
	ref terra.Reference
}

func (lb LoadBalancerAttributes) InternalRef() (terra.Reference, error) {
	return lb.ref, nil
}

func (lb LoadBalancerAttributes) InternalWithRef(ref terra.Reference) LoadBalancerAttributes {
	return LoadBalancerAttributes{ref: ref}
}

func (lb LoadBalancerAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return lb.ref.InternalTokens()
}

func (lb LoadBalancerAttributes) BgpLbConfig() terra.ListValue[LoadBalancerBgpLbConfigAttributes] {
	return terra.ReferenceAsList[LoadBalancerBgpLbConfigAttributes](lb.ref.Append("bgp_lb_config"))
}

func (lb LoadBalancerAttributes) ManualLbConfig() terra.ListValue[LoadBalancerManualLbConfigAttributes] {
	return terra.ReferenceAsList[LoadBalancerManualLbConfigAttributes](lb.ref.Append("manual_lb_config"))
}

func (lb LoadBalancerAttributes) MetalLbConfig() terra.ListValue[LoadBalancerMetalLbConfigAttributes] {
	return terra.ReferenceAsList[LoadBalancerMetalLbConfigAttributes](lb.ref.Append("metal_lb_config"))
}

func (lb LoadBalancerAttributes) PortConfig() terra.ListValue[LoadBalancerPortConfigAttributes] {
	return terra.ReferenceAsList[LoadBalancerPortConfigAttributes](lb.ref.Append("port_config"))
}

func (lb LoadBalancerAttributes) VipConfig() terra.ListValue[LoadBalancerVipConfigAttributes] {
	return terra.ReferenceAsList[LoadBalancerVipConfigAttributes](lb.ref.Append("vip_config"))
}

type LoadBalancerBgpLbConfigAttributes struct {
	ref terra.Reference
}

func (blc LoadBalancerBgpLbConfigAttributes) InternalRef() (terra.Reference, error) {
	return blc.ref, nil
}

func (blc LoadBalancerBgpLbConfigAttributes) InternalWithRef(ref terra.Reference) LoadBalancerBgpLbConfigAttributes {
	return LoadBalancerBgpLbConfigAttributes{ref: ref}
}

func (blc LoadBalancerBgpLbConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return blc.ref.InternalTokens()
}

func (blc LoadBalancerBgpLbConfigAttributes) Asn() terra.NumberValue {
	return terra.ReferenceAsNumber(blc.ref.Append("asn"))
}

func (blc LoadBalancerBgpLbConfigAttributes) AddressPools() terra.ListValue[LoadBalancerBgpLbConfigAddressPoolsAttributes] {
	return terra.ReferenceAsList[LoadBalancerBgpLbConfigAddressPoolsAttributes](blc.ref.Append("address_pools"))
}

func (blc LoadBalancerBgpLbConfigAttributes) BgpPeerConfigs() terra.ListValue[LoadBalancerBgpLbConfigBgpPeerConfigsAttributes] {
	return terra.ReferenceAsList[LoadBalancerBgpLbConfigBgpPeerConfigsAttributes](blc.ref.Append("bgp_peer_configs"))
}

func (blc LoadBalancerBgpLbConfigAttributes) LoadBalancerNodePoolConfig() terra.ListValue[LoadBalancerBgpLbConfigLoadBalancerNodePoolConfigAttributes] {
	return terra.ReferenceAsList[LoadBalancerBgpLbConfigLoadBalancerNodePoolConfigAttributes](blc.ref.Append("load_balancer_node_pool_config"))
}

type LoadBalancerBgpLbConfigAddressPoolsAttributes struct {
	ref terra.Reference
}

func (ap LoadBalancerBgpLbConfigAddressPoolsAttributes) InternalRef() (terra.Reference, error) {
	return ap.ref, nil
}

func (ap LoadBalancerBgpLbConfigAddressPoolsAttributes) InternalWithRef(ref terra.Reference) LoadBalancerBgpLbConfigAddressPoolsAttributes {
	return LoadBalancerBgpLbConfigAddressPoolsAttributes{ref: ref}
}

func (ap LoadBalancerBgpLbConfigAddressPoolsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ap.ref.InternalTokens()
}

func (ap LoadBalancerBgpLbConfigAddressPoolsAttributes) Addresses() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](ap.ref.Append("addresses"))
}

func (ap LoadBalancerBgpLbConfigAddressPoolsAttributes) AvoidBuggyIps() terra.BoolValue {
	return terra.ReferenceAsBool(ap.ref.Append("avoid_buggy_ips"))
}

func (ap LoadBalancerBgpLbConfigAddressPoolsAttributes) ManualAssign() terra.StringValue {
	return terra.ReferenceAsString(ap.ref.Append("manual_assign"))
}

func (ap LoadBalancerBgpLbConfigAddressPoolsAttributes) Pool() terra.StringValue {
	return terra.ReferenceAsString(ap.ref.Append("pool"))
}

type LoadBalancerBgpLbConfigBgpPeerConfigsAttributes struct {
	ref terra.Reference
}

func (bpc LoadBalancerBgpLbConfigBgpPeerConfigsAttributes) InternalRef() (terra.Reference, error) {
	return bpc.ref, nil
}

func (bpc LoadBalancerBgpLbConfigBgpPeerConfigsAttributes) InternalWithRef(ref terra.Reference) LoadBalancerBgpLbConfigBgpPeerConfigsAttributes {
	return LoadBalancerBgpLbConfigBgpPeerConfigsAttributes{ref: ref}
}

func (bpc LoadBalancerBgpLbConfigBgpPeerConfigsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return bpc.ref.InternalTokens()
}

func (bpc LoadBalancerBgpLbConfigBgpPeerConfigsAttributes) Asn() terra.NumberValue {
	return terra.ReferenceAsNumber(bpc.ref.Append("asn"))
}

func (bpc LoadBalancerBgpLbConfigBgpPeerConfigsAttributes) ControlPlaneNodes() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](bpc.ref.Append("control_plane_nodes"))
}

func (bpc LoadBalancerBgpLbConfigBgpPeerConfigsAttributes) IpAddress() terra.StringValue {
	return terra.ReferenceAsString(bpc.ref.Append("ip_address"))
}

type LoadBalancerBgpLbConfigLoadBalancerNodePoolConfigAttributes struct {
	ref terra.Reference
}

func (lbnpc LoadBalancerBgpLbConfigLoadBalancerNodePoolConfigAttributes) InternalRef() (terra.Reference, error) {
	return lbnpc.ref, nil
}

func (lbnpc LoadBalancerBgpLbConfigLoadBalancerNodePoolConfigAttributes) InternalWithRef(ref terra.Reference) LoadBalancerBgpLbConfigLoadBalancerNodePoolConfigAttributes {
	return LoadBalancerBgpLbConfigLoadBalancerNodePoolConfigAttributes{ref: ref}
}

func (lbnpc LoadBalancerBgpLbConfigLoadBalancerNodePoolConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return lbnpc.ref.InternalTokens()
}

func (lbnpc LoadBalancerBgpLbConfigLoadBalancerNodePoolConfigAttributes) NodePoolConfig() terra.ListValue[LoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigAttributes] {
	return terra.ReferenceAsList[LoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigAttributes](lbnpc.ref.Append("node_pool_config"))
}

type LoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigAttributes struct {
	ref terra.Reference
}

func (npc LoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigAttributes) InternalRef() (terra.Reference, error) {
	return npc.ref, nil
}

func (npc LoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigAttributes) InternalWithRef(ref terra.Reference) LoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigAttributes {
	return LoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigAttributes{ref: ref}
}

func (npc LoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return npc.ref.InternalTokens()
}

func (npc LoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigAttributes) Labels() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](npc.ref.Append("labels"))
}

func (npc LoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigAttributes) OperatingSystem() terra.StringValue {
	return terra.ReferenceAsString(npc.ref.Append("operating_system"))
}

func (npc LoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigAttributes) KubeletConfig() terra.ListValue[LoadBalancerBgpLbConfig9B65Ed98Attributes] {
	return terra.ReferenceAsList[LoadBalancerBgpLbConfig9B65Ed98Attributes](npc.ref.Append("kubelet_config"))
}

func (npc LoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigAttributes) NodeConfigs() terra.ListValue[LoadBalancerBgpLbConfig2Af619EeAttributes] {
	return terra.ReferenceAsList[LoadBalancerBgpLbConfig2Af619EeAttributes](npc.ref.Append("node_configs"))
}

func (npc LoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigAttributes) Taints() terra.ListValue[LoadBalancerBgpLbConfig95F9C67BAttributes] {
	return terra.ReferenceAsList[LoadBalancerBgpLbConfig95F9C67BAttributes](npc.ref.Append("taints"))
}

type LoadBalancerBgpLbConfig9B65Ed98Attributes struct {
	ref terra.Reference
}

func (kc LoadBalancerBgpLbConfig9B65Ed98Attributes) InternalRef() (terra.Reference, error) {
	return kc.ref, nil
}

func (kc LoadBalancerBgpLbConfig9B65Ed98Attributes) InternalWithRef(ref terra.Reference) LoadBalancerBgpLbConfig9B65Ed98Attributes {
	return LoadBalancerBgpLbConfig9B65Ed98Attributes{ref: ref}
}

func (kc LoadBalancerBgpLbConfig9B65Ed98Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return kc.ref.InternalTokens()
}

func (kc LoadBalancerBgpLbConfig9B65Ed98Attributes) RegistryBurst() terra.NumberValue {
	return terra.ReferenceAsNumber(kc.ref.Append("registry_burst"))
}

func (kc LoadBalancerBgpLbConfig9B65Ed98Attributes) RegistryPullQps() terra.NumberValue {
	return terra.ReferenceAsNumber(kc.ref.Append("registry_pull_qps"))
}

func (kc LoadBalancerBgpLbConfig9B65Ed98Attributes) SerializeImagePullsDisabled() terra.BoolValue {
	return terra.ReferenceAsBool(kc.ref.Append("serialize_image_pulls_disabled"))
}

type LoadBalancerBgpLbConfig2Af619EeAttributes struct {
	ref terra.Reference
}

func (nc LoadBalancerBgpLbConfig2Af619EeAttributes) InternalRef() (terra.Reference, error) {
	return nc.ref, nil
}

func (nc LoadBalancerBgpLbConfig2Af619EeAttributes) InternalWithRef(ref terra.Reference) LoadBalancerBgpLbConfig2Af619EeAttributes {
	return LoadBalancerBgpLbConfig2Af619EeAttributes{ref: ref}
}

func (nc LoadBalancerBgpLbConfig2Af619EeAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return nc.ref.InternalTokens()
}

func (nc LoadBalancerBgpLbConfig2Af619EeAttributes) Labels() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](nc.ref.Append("labels"))
}

func (nc LoadBalancerBgpLbConfig2Af619EeAttributes) NodeIp() terra.StringValue {
	return terra.ReferenceAsString(nc.ref.Append("node_ip"))
}

type LoadBalancerBgpLbConfig95F9C67BAttributes struct {
	ref terra.Reference
}

func (t LoadBalancerBgpLbConfig95F9C67BAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t LoadBalancerBgpLbConfig95F9C67BAttributes) InternalWithRef(ref terra.Reference) LoadBalancerBgpLbConfig95F9C67BAttributes {
	return LoadBalancerBgpLbConfig95F9C67BAttributes{ref: ref}
}

func (t LoadBalancerBgpLbConfig95F9C67BAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t LoadBalancerBgpLbConfig95F9C67BAttributes) Effect() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("effect"))
}

func (t LoadBalancerBgpLbConfig95F9C67BAttributes) Key() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("key"))
}

func (t LoadBalancerBgpLbConfig95F9C67BAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("value"))
}

type LoadBalancerManualLbConfigAttributes struct {
	ref terra.Reference
}

func (mlc LoadBalancerManualLbConfigAttributes) InternalRef() (terra.Reference, error) {
	return mlc.ref, nil
}

func (mlc LoadBalancerManualLbConfigAttributes) InternalWithRef(ref terra.Reference) LoadBalancerManualLbConfigAttributes {
	return LoadBalancerManualLbConfigAttributes{ref: ref}
}

func (mlc LoadBalancerManualLbConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return mlc.ref.InternalTokens()
}

func (mlc LoadBalancerManualLbConfigAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceAsBool(mlc.ref.Append("enabled"))
}

type LoadBalancerMetalLbConfigAttributes struct {
	ref terra.Reference
}

func (mlc LoadBalancerMetalLbConfigAttributes) InternalRef() (terra.Reference, error) {
	return mlc.ref, nil
}

func (mlc LoadBalancerMetalLbConfigAttributes) InternalWithRef(ref terra.Reference) LoadBalancerMetalLbConfigAttributes {
	return LoadBalancerMetalLbConfigAttributes{ref: ref}
}

func (mlc LoadBalancerMetalLbConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return mlc.ref.InternalTokens()
}

func (mlc LoadBalancerMetalLbConfigAttributes) AddressPools() terra.ListValue[LoadBalancerMetalLbConfigAddressPoolsAttributes] {
	return terra.ReferenceAsList[LoadBalancerMetalLbConfigAddressPoolsAttributes](mlc.ref.Append("address_pools"))
}

func (mlc LoadBalancerMetalLbConfigAttributes) LoadBalancerNodePoolConfig() terra.ListValue[LoadBalancerMetalLbConfigLoadBalancerNodePoolConfigAttributes] {
	return terra.ReferenceAsList[LoadBalancerMetalLbConfigLoadBalancerNodePoolConfigAttributes](mlc.ref.Append("load_balancer_node_pool_config"))
}

type LoadBalancerMetalLbConfigAddressPoolsAttributes struct {
	ref terra.Reference
}

func (ap LoadBalancerMetalLbConfigAddressPoolsAttributes) InternalRef() (terra.Reference, error) {
	return ap.ref, nil
}

func (ap LoadBalancerMetalLbConfigAddressPoolsAttributes) InternalWithRef(ref terra.Reference) LoadBalancerMetalLbConfigAddressPoolsAttributes {
	return LoadBalancerMetalLbConfigAddressPoolsAttributes{ref: ref}
}

func (ap LoadBalancerMetalLbConfigAddressPoolsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ap.ref.InternalTokens()
}

func (ap LoadBalancerMetalLbConfigAddressPoolsAttributes) Addresses() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](ap.ref.Append("addresses"))
}

func (ap LoadBalancerMetalLbConfigAddressPoolsAttributes) AvoidBuggyIps() terra.BoolValue {
	return terra.ReferenceAsBool(ap.ref.Append("avoid_buggy_ips"))
}

func (ap LoadBalancerMetalLbConfigAddressPoolsAttributes) ManualAssign() terra.BoolValue {
	return terra.ReferenceAsBool(ap.ref.Append("manual_assign"))
}

func (ap LoadBalancerMetalLbConfigAddressPoolsAttributes) Pool() terra.StringValue {
	return terra.ReferenceAsString(ap.ref.Append("pool"))
}

type LoadBalancerMetalLbConfigLoadBalancerNodePoolConfigAttributes struct {
	ref terra.Reference
}

func (lbnpc LoadBalancerMetalLbConfigLoadBalancerNodePoolConfigAttributes) InternalRef() (terra.Reference, error) {
	return lbnpc.ref, nil
}

func (lbnpc LoadBalancerMetalLbConfigLoadBalancerNodePoolConfigAttributes) InternalWithRef(ref terra.Reference) LoadBalancerMetalLbConfigLoadBalancerNodePoolConfigAttributes {
	return LoadBalancerMetalLbConfigLoadBalancerNodePoolConfigAttributes{ref: ref}
}

func (lbnpc LoadBalancerMetalLbConfigLoadBalancerNodePoolConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return lbnpc.ref.InternalTokens()
}

func (lbnpc LoadBalancerMetalLbConfigLoadBalancerNodePoolConfigAttributes) NodePoolConfig() terra.ListValue[LoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigAttributes] {
	return terra.ReferenceAsList[LoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigAttributes](lbnpc.ref.Append("node_pool_config"))
}

type LoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigAttributes struct {
	ref terra.Reference
}

func (npc LoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigAttributes) InternalRef() (terra.Reference, error) {
	return npc.ref, nil
}

func (npc LoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigAttributes) InternalWithRef(ref terra.Reference) LoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigAttributes {
	return LoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigAttributes{ref: ref}
}

func (npc LoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return npc.ref.InternalTokens()
}

func (npc LoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigAttributes) Labels() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](npc.ref.Append("labels"))
}

func (npc LoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigAttributes) OperatingSystem() terra.StringValue {
	return terra.ReferenceAsString(npc.ref.Append("operating_system"))
}

func (npc LoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigAttributes) NodeConfigs() terra.ListValue[LoadBalancerMetalLbConfig2Af619EeAttributes] {
	return terra.ReferenceAsList[LoadBalancerMetalLbConfig2Af619EeAttributes](npc.ref.Append("node_configs"))
}

func (npc LoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigAttributes) Taints() terra.ListValue[LoadBalancerMetalLbConfig95F9C67BAttributes] {
	return terra.ReferenceAsList[LoadBalancerMetalLbConfig95F9C67BAttributes](npc.ref.Append("taints"))
}

type LoadBalancerMetalLbConfig2Af619EeAttributes struct {
	ref terra.Reference
}

func (nc LoadBalancerMetalLbConfig2Af619EeAttributes) InternalRef() (terra.Reference, error) {
	return nc.ref, nil
}

func (nc LoadBalancerMetalLbConfig2Af619EeAttributes) InternalWithRef(ref terra.Reference) LoadBalancerMetalLbConfig2Af619EeAttributes {
	return LoadBalancerMetalLbConfig2Af619EeAttributes{ref: ref}
}

func (nc LoadBalancerMetalLbConfig2Af619EeAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return nc.ref.InternalTokens()
}

func (nc LoadBalancerMetalLbConfig2Af619EeAttributes) Labels() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](nc.ref.Append("labels"))
}

func (nc LoadBalancerMetalLbConfig2Af619EeAttributes) NodeIp() terra.StringValue {
	return terra.ReferenceAsString(nc.ref.Append("node_ip"))
}

type LoadBalancerMetalLbConfig95F9C67BAttributes struct {
	ref terra.Reference
}

func (t LoadBalancerMetalLbConfig95F9C67BAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t LoadBalancerMetalLbConfig95F9C67BAttributes) InternalWithRef(ref terra.Reference) LoadBalancerMetalLbConfig95F9C67BAttributes {
	return LoadBalancerMetalLbConfig95F9C67BAttributes{ref: ref}
}

func (t LoadBalancerMetalLbConfig95F9C67BAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t LoadBalancerMetalLbConfig95F9C67BAttributes) Effect() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("effect"))
}

func (t LoadBalancerMetalLbConfig95F9C67BAttributes) Key() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("key"))
}

func (t LoadBalancerMetalLbConfig95F9C67BAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("value"))
}

type LoadBalancerPortConfigAttributes struct {
	ref terra.Reference
}

func (pc LoadBalancerPortConfigAttributes) InternalRef() (terra.Reference, error) {
	return pc.ref, nil
}

func (pc LoadBalancerPortConfigAttributes) InternalWithRef(ref terra.Reference) LoadBalancerPortConfigAttributes {
	return LoadBalancerPortConfigAttributes{ref: ref}
}

func (pc LoadBalancerPortConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return pc.ref.InternalTokens()
}

func (pc LoadBalancerPortConfigAttributes) ControlPlaneLoadBalancerPort() terra.NumberValue {
	return terra.ReferenceAsNumber(pc.ref.Append("control_plane_load_balancer_port"))
}

type LoadBalancerVipConfigAttributes struct {
	ref terra.Reference
}

func (vc LoadBalancerVipConfigAttributes) InternalRef() (terra.Reference, error) {
	return vc.ref, nil
}

func (vc LoadBalancerVipConfigAttributes) InternalWithRef(ref terra.Reference) LoadBalancerVipConfigAttributes {
	return LoadBalancerVipConfigAttributes{ref: ref}
}

func (vc LoadBalancerVipConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return vc.ref.InternalTokens()
}

func (vc LoadBalancerVipConfigAttributes) ControlPlaneVip() terra.StringValue {
	return terra.ReferenceAsString(vc.ref.Append("control_plane_vip"))
}

func (vc LoadBalancerVipConfigAttributes) IngressVip() terra.StringValue {
	return terra.ReferenceAsString(vc.ref.Append("ingress_vip"))
}

type MaintenanceConfigAttributes struct {
	ref terra.Reference
}

func (mc MaintenanceConfigAttributes) InternalRef() (terra.Reference, error) {
	return mc.ref, nil
}

func (mc MaintenanceConfigAttributes) InternalWithRef(ref terra.Reference) MaintenanceConfigAttributes {
	return MaintenanceConfigAttributes{ref: ref}
}

func (mc MaintenanceConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return mc.ref.InternalTokens()
}

func (mc MaintenanceConfigAttributes) MaintenanceAddressCidrBlocks() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](mc.ref.Append("maintenance_address_cidr_blocks"))
}

type NetworkConfigAttributes struct {
	ref terra.Reference
}

func (nc NetworkConfigAttributes) InternalRef() (terra.Reference, error) {
	return nc.ref, nil
}

func (nc NetworkConfigAttributes) InternalWithRef(ref terra.Reference) NetworkConfigAttributes {
	return NetworkConfigAttributes{ref: ref}
}

func (nc NetworkConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return nc.ref.InternalTokens()
}

func (nc NetworkConfigAttributes) AdvancedNetworking() terra.BoolValue {
	return terra.ReferenceAsBool(nc.ref.Append("advanced_networking"))
}

func (nc NetworkConfigAttributes) IslandModeCidr() terra.ListValue[NetworkConfigIslandModeCidrAttributes] {
	return terra.ReferenceAsList[NetworkConfigIslandModeCidrAttributes](nc.ref.Append("island_mode_cidr"))
}

func (nc NetworkConfigAttributes) MultipleNetworkInterfacesConfig() terra.ListValue[NetworkConfigMultipleNetworkInterfacesConfigAttributes] {
	return terra.ReferenceAsList[NetworkConfigMultipleNetworkInterfacesConfigAttributes](nc.ref.Append("multiple_network_interfaces_config"))
}

func (nc NetworkConfigAttributes) SrIovConfig() terra.ListValue[NetworkConfigSrIovConfigAttributes] {
	return terra.ReferenceAsList[NetworkConfigSrIovConfigAttributes](nc.ref.Append("sr_iov_config"))
}

type NetworkConfigIslandModeCidrAttributes struct {
	ref terra.Reference
}

func (imc NetworkConfigIslandModeCidrAttributes) InternalRef() (terra.Reference, error) {
	return imc.ref, nil
}

func (imc NetworkConfigIslandModeCidrAttributes) InternalWithRef(ref terra.Reference) NetworkConfigIslandModeCidrAttributes {
	return NetworkConfigIslandModeCidrAttributes{ref: ref}
}

func (imc NetworkConfigIslandModeCidrAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return imc.ref.InternalTokens()
}

func (imc NetworkConfigIslandModeCidrAttributes) PodAddressCidrBlocks() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](imc.ref.Append("pod_address_cidr_blocks"))
}

func (imc NetworkConfigIslandModeCidrAttributes) ServiceAddressCidrBlocks() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](imc.ref.Append("service_address_cidr_blocks"))
}

type NetworkConfigMultipleNetworkInterfacesConfigAttributes struct {
	ref terra.Reference
}

func (mnic NetworkConfigMultipleNetworkInterfacesConfigAttributes) InternalRef() (terra.Reference, error) {
	return mnic.ref, nil
}

func (mnic NetworkConfigMultipleNetworkInterfacesConfigAttributes) InternalWithRef(ref terra.Reference) NetworkConfigMultipleNetworkInterfacesConfigAttributes {
	return NetworkConfigMultipleNetworkInterfacesConfigAttributes{ref: ref}
}

func (mnic NetworkConfigMultipleNetworkInterfacesConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return mnic.ref.InternalTokens()
}

func (mnic NetworkConfigMultipleNetworkInterfacesConfigAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceAsBool(mnic.ref.Append("enabled"))
}

type NetworkConfigSrIovConfigAttributes struct {
	ref terra.Reference
}

func (sic NetworkConfigSrIovConfigAttributes) InternalRef() (terra.Reference, error) {
	return sic.ref, nil
}

func (sic NetworkConfigSrIovConfigAttributes) InternalWithRef(ref terra.Reference) NetworkConfigSrIovConfigAttributes {
	return NetworkConfigSrIovConfigAttributes{ref: ref}
}

func (sic NetworkConfigSrIovConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sic.ref.InternalTokens()
}

func (sic NetworkConfigSrIovConfigAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceAsBool(sic.ref.Append("enabled"))
}

type NodeAccessConfigAttributes struct {
	ref terra.Reference
}

func (nac NodeAccessConfigAttributes) InternalRef() (terra.Reference, error) {
	return nac.ref, nil
}

func (nac NodeAccessConfigAttributes) InternalWithRef(ref terra.Reference) NodeAccessConfigAttributes {
	return NodeAccessConfigAttributes{ref: ref}
}

func (nac NodeAccessConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return nac.ref.InternalTokens()
}

func (nac NodeAccessConfigAttributes) LoginUser() terra.StringValue {
	return terra.ReferenceAsString(nac.ref.Append("login_user"))
}

type NodeConfigAttributes struct {
	ref terra.Reference
}

func (nc NodeConfigAttributes) InternalRef() (terra.Reference, error) {
	return nc.ref, nil
}

func (nc NodeConfigAttributes) InternalWithRef(ref terra.Reference) NodeConfigAttributes {
	return NodeConfigAttributes{ref: ref}
}

func (nc NodeConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return nc.ref.InternalTokens()
}

func (nc NodeConfigAttributes) ContainerRuntime() terra.StringValue {
	return terra.ReferenceAsString(nc.ref.Append("container_runtime"))
}

func (nc NodeConfigAttributes) MaxPodsPerNode() terra.NumberValue {
	return terra.ReferenceAsNumber(nc.ref.Append("max_pods_per_node"))
}

type OsEnvironmentConfigAttributes struct {
	ref terra.Reference
}

func (oec OsEnvironmentConfigAttributes) InternalRef() (terra.Reference, error) {
	return oec.ref, nil
}

func (oec OsEnvironmentConfigAttributes) InternalWithRef(ref terra.Reference) OsEnvironmentConfigAttributes {
	return OsEnvironmentConfigAttributes{ref: ref}
}

func (oec OsEnvironmentConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return oec.ref.InternalTokens()
}

func (oec OsEnvironmentConfigAttributes) PackageRepoExcluded() terra.BoolValue {
	return terra.ReferenceAsBool(oec.ref.Append("package_repo_excluded"))
}

type ProxyAttributes struct {
	ref terra.Reference
}

func (p ProxyAttributes) InternalRef() (terra.Reference, error) {
	return p.ref, nil
}

func (p ProxyAttributes) InternalWithRef(ref terra.Reference) ProxyAttributes {
	return ProxyAttributes{ref: ref}
}

func (p ProxyAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return p.ref.InternalTokens()
}

func (p ProxyAttributes) NoProxy() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](p.ref.Append("no_proxy"))
}

func (p ProxyAttributes) Uri() terra.StringValue {
	return terra.ReferenceAsString(p.ref.Append("uri"))
}

type SecurityConfigAttributes struct {
	ref terra.Reference
}

func (sc SecurityConfigAttributes) InternalRef() (terra.Reference, error) {
	return sc.ref, nil
}

func (sc SecurityConfigAttributes) InternalWithRef(ref terra.Reference) SecurityConfigAttributes {
	return SecurityConfigAttributes{ref: ref}
}

func (sc SecurityConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sc.ref.InternalTokens()
}

func (sc SecurityConfigAttributes) Authorization() terra.ListValue[SecurityConfigAuthorizationAttributes] {
	return terra.ReferenceAsList[SecurityConfigAuthorizationAttributes](sc.ref.Append("authorization"))
}

type SecurityConfigAuthorizationAttributes struct {
	ref terra.Reference
}

func (a SecurityConfigAuthorizationAttributes) InternalRef() (terra.Reference, error) {
	return a.ref, nil
}

func (a SecurityConfigAuthorizationAttributes) InternalWithRef(ref terra.Reference) SecurityConfigAuthorizationAttributes {
	return SecurityConfigAuthorizationAttributes{ref: ref}
}

func (a SecurityConfigAuthorizationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return a.ref.InternalTokens()
}

func (a SecurityConfigAuthorizationAttributes) AdminUsers() terra.ListValue[SecurityConfigAuthorizationAdminUsersAttributes] {
	return terra.ReferenceAsList[SecurityConfigAuthorizationAdminUsersAttributes](a.ref.Append("admin_users"))
}

type SecurityConfigAuthorizationAdminUsersAttributes struct {
	ref terra.Reference
}

func (au SecurityConfigAuthorizationAdminUsersAttributes) InternalRef() (terra.Reference, error) {
	return au.ref, nil
}

func (au SecurityConfigAuthorizationAdminUsersAttributes) InternalWithRef(ref terra.Reference) SecurityConfigAuthorizationAdminUsersAttributes {
	return SecurityConfigAuthorizationAdminUsersAttributes{ref: ref}
}

func (au SecurityConfigAuthorizationAdminUsersAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return au.ref.InternalTokens()
}

func (au SecurityConfigAuthorizationAdminUsersAttributes) Username() terra.StringValue {
	return terra.ReferenceAsString(au.ref.Append("username"))
}

type StorageAttributes struct {
	ref terra.Reference
}

func (s StorageAttributes) InternalRef() (terra.Reference, error) {
	return s.ref, nil
}

func (s StorageAttributes) InternalWithRef(ref terra.Reference) StorageAttributes {
	return StorageAttributes{ref: ref}
}

func (s StorageAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return s.ref.InternalTokens()
}

func (s StorageAttributes) LvpNodeMountsConfig() terra.ListValue[StorageLvpNodeMountsConfigAttributes] {
	return terra.ReferenceAsList[StorageLvpNodeMountsConfigAttributes](s.ref.Append("lvp_node_mounts_config"))
}

func (s StorageAttributes) LvpShareConfig() terra.ListValue[StorageLvpShareConfigAttributes] {
	return terra.ReferenceAsList[StorageLvpShareConfigAttributes](s.ref.Append("lvp_share_config"))
}

type StorageLvpNodeMountsConfigAttributes struct {
	ref terra.Reference
}

func (lnmc StorageLvpNodeMountsConfigAttributes) InternalRef() (terra.Reference, error) {
	return lnmc.ref, nil
}

func (lnmc StorageLvpNodeMountsConfigAttributes) InternalWithRef(ref terra.Reference) StorageLvpNodeMountsConfigAttributes {
	return StorageLvpNodeMountsConfigAttributes{ref: ref}
}

func (lnmc StorageLvpNodeMountsConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return lnmc.ref.InternalTokens()
}

func (lnmc StorageLvpNodeMountsConfigAttributes) Path() terra.StringValue {
	return terra.ReferenceAsString(lnmc.ref.Append("path"))
}

func (lnmc StorageLvpNodeMountsConfigAttributes) StorageClass() terra.StringValue {
	return terra.ReferenceAsString(lnmc.ref.Append("storage_class"))
}

type StorageLvpShareConfigAttributes struct {
	ref terra.Reference
}

func (lsc StorageLvpShareConfigAttributes) InternalRef() (terra.Reference, error) {
	return lsc.ref, nil
}

func (lsc StorageLvpShareConfigAttributes) InternalWithRef(ref terra.Reference) StorageLvpShareConfigAttributes {
	return StorageLvpShareConfigAttributes{ref: ref}
}

func (lsc StorageLvpShareConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return lsc.ref.InternalTokens()
}

func (lsc StorageLvpShareConfigAttributes) SharedPathPvCount() terra.NumberValue {
	return terra.ReferenceAsNumber(lsc.ref.Append("shared_path_pv_count"))
}

func (lsc StorageLvpShareConfigAttributes) LvpConfig() terra.ListValue[StorageLvpShareConfigLvpConfigAttributes] {
	return terra.ReferenceAsList[StorageLvpShareConfigLvpConfigAttributes](lsc.ref.Append("lvp_config"))
}

type StorageLvpShareConfigLvpConfigAttributes struct {
	ref terra.Reference
}

func (lc StorageLvpShareConfigLvpConfigAttributes) InternalRef() (terra.Reference, error) {
	return lc.ref, nil
}

func (lc StorageLvpShareConfigLvpConfigAttributes) InternalWithRef(ref terra.Reference) StorageLvpShareConfigLvpConfigAttributes {
	return StorageLvpShareConfigLvpConfigAttributes{ref: ref}
}

func (lc StorageLvpShareConfigLvpConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return lc.ref.InternalTokens()
}

func (lc StorageLvpShareConfigLvpConfigAttributes) Path() terra.StringValue {
	return terra.ReferenceAsString(lc.ref.Append("path"))
}

func (lc StorageLvpShareConfigLvpConfigAttributes) StorageClass() terra.StringValue {
	return terra.ReferenceAsString(lc.ref.Append("storage_class"))
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("create"))
}

func (t TimeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("delete"))
}

func (t TimeoutsAttributes) Update() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("update"))
}

type UpgradePolicyAttributes struct {
	ref terra.Reference
}

func (up UpgradePolicyAttributes) InternalRef() (terra.Reference, error) {
	return up.ref, nil
}

func (up UpgradePolicyAttributes) InternalWithRef(ref terra.Reference) UpgradePolicyAttributes {
	return UpgradePolicyAttributes{ref: ref}
}

func (up UpgradePolicyAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return up.ref.InternalTokens()
}

func (up UpgradePolicyAttributes) Policy() terra.StringValue {
	return terra.ReferenceAsString(up.ref.Append("policy"))
}

type FleetState struct {
	Membership string `json:"membership"`
}

type StatusState struct {
	ErrorMessage string                  `json:"error_message"`
	Conditions   []StatusConditionsState `json:"conditions"`
}

type StatusConditionsState struct {
	LastTransitionTime string `json:"last_transition_time"`
	Message            string `json:"message"`
	Reason             string `json:"reason"`
	State              string `json:"state"`
	Type               string `json:"type"`
}

type ValidationCheckState struct {
	Options  string                       `json:"options"`
	Scenario string                       `json:"scenario"`
	Status   []ValidationCheckStatusState `json:"status"`
}

type ValidationCheckStatusState struct {
	Result []ValidationCheckStatusResultState `json:"result"`
}

type ValidationCheckStatusResultState struct {
	Category    string `json:"category"`
	Description string `json:"description"`
	Details     string `json:"details"`
	Options     string `json:"options"`
	Reason      string `json:"reason"`
}

type BinaryAuthorizationState struct {
	EvaluationMode string `json:"evaluation_mode"`
}

type ClusterOperationsState struct {
	EnableApplicationLogs bool `json:"enable_application_logs"`
}

type ControlPlaneState struct {
	ApiServerArgs              []ControlPlaneApiServerArgsState              `json:"api_server_args"`
	ControlPlaneNodePoolConfig []ControlPlaneControlPlaneNodePoolConfigState `json:"control_plane_node_pool_config"`
}

type ControlPlaneApiServerArgsState struct {
	Argument string `json:"argument"`
	Value    string `json:"value"`
}

type ControlPlaneControlPlaneNodePoolConfigState struct {
	NodePoolConfig []ControlPlaneControlPlaneNodePoolConfigNodePoolConfigState `json:"node_pool_config"`
}

type ControlPlaneControlPlaneNodePoolConfigNodePoolConfigState struct {
	Labels          map[string]string                                                      `json:"labels"`
	OperatingSystem string                                                                 `json:"operating_system"`
	NodeConfigs     []ControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigsState `json:"node_configs"`
	Taints          []ControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintsState      `json:"taints"`
}

type ControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigsState struct {
	Labels map[string]string `json:"labels"`
	NodeIp string            `json:"node_ip"`
}

type ControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintsState struct {
	Effect string `json:"effect"`
	Key    string `json:"key"`
	Value  string `json:"value"`
}

type LoadBalancerState struct {
	BgpLbConfig    []LoadBalancerBgpLbConfigState    `json:"bgp_lb_config"`
	ManualLbConfig []LoadBalancerManualLbConfigState `json:"manual_lb_config"`
	MetalLbConfig  []LoadBalancerMetalLbConfigState  `json:"metal_lb_config"`
	PortConfig     []LoadBalancerPortConfigState     `json:"port_config"`
	VipConfig      []LoadBalancerVipConfigState      `json:"vip_config"`
}

type LoadBalancerBgpLbConfigState struct {
	Asn                        float64                                                  `json:"asn"`
	AddressPools               []LoadBalancerBgpLbConfigAddressPoolsState               `json:"address_pools"`
	BgpPeerConfigs             []LoadBalancerBgpLbConfigBgpPeerConfigsState             `json:"bgp_peer_configs"`
	LoadBalancerNodePoolConfig []LoadBalancerBgpLbConfigLoadBalancerNodePoolConfigState `json:"load_balancer_node_pool_config"`
}

type LoadBalancerBgpLbConfigAddressPoolsState struct {
	Addresses     []string `json:"addresses"`
	AvoidBuggyIps bool     `json:"avoid_buggy_ips"`
	ManualAssign  string   `json:"manual_assign"`
	Pool          string   `json:"pool"`
}

type LoadBalancerBgpLbConfigBgpPeerConfigsState struct {
	Asn               float64  `json:"asn"`
	ControlPlaneNodes []string `json:"control_plane_nodes"`
	IpAddress         string   `json:"ip_address"`
}

type LoadBalancerBgpLbConfigLoadBalancerNodePoolConfigState struct {
	NodePoolConfig []LoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigState `json:"node_pool_config"`
}

type LoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigState struct {
	Labels          map[string]string                      `json:"labels"`
	OperatingSystem string                                 `json:"operating_system"`
	KubeletConfig   []LoadBalancerBgpLbConfig9B65Ed98State `json:"kubelet_config"`
	NodeConfigs     []LoadBalancerBgpLbConfig2Af619EeState `json:"node_configs"`
	Taints          []LoadBalancerBgpLbConfig95F9C67BState `json:"taints"`
}

type LoadBalancerBgpLbConfig9B65Ed98State struct {
	RegistryBurst               float64 `json:"registry_burst"`
	RegistryPullQps             float64 `json:"registry_pull_qps"`
	SerializeImagePullsDisabled bool    `json:"serialize_image_pulls_disabled"`
}

type LoadBalancerBgpLbConfig2Af619EeState struct {
	Labels map[string]string `json:"labels"`
	NodeIp string            `json:"node_ip"`
}

type LoadBalancerBgpLbConfig95F9C67BState struct {
	Effect string `json:"effect"`
	Key    string `json:"key"`
	Value  string `json:"value"`
}

type LoadBalancerManualLbConfigState struct {
	Enabled bool `json:"enabled"`
}

type LoadBalancerMetalLbConfigState struct {
	AddressPools               []LoadBalancerMetalLbConfigAddressPoolsState               `json:"address_pools"`
	LoadBalancerNodePoolConfig []LoadBalancerMetalLbConfigLoadBalancerNodePoolConfigState `json:"load_balancer_node_pool_config"`
}

type LoadBalancerMetalLbConfigAddressPoolsState struct {
	Addresses     []string `json:"addresses"`
	AvoidBuggyIps bool     `json:"avoid_buggy_ips"`
	ManualAssign  bool     `json:"manual_assign"`
	Pool          string   `json:"pool"`
}

type LoadBalancerMetalLbConfigLoadBalancerNodePoolConfigState struct {
	NodePoolConfig []LoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigState `json:"node_pool_config"`
}

type LoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigState struct {
	Labels          map[string]string                        `json:"labels"`
	OperatingSystem string                                   `json:"operating_system"`
	NodeConfigs     []LoadBalancerMetalLbConfig2Af619EeState `json:"node_configs"`
	Taints          []LoadBalancerMetalLbConfig95F9C67BState `json:"taints"`
}

type LoadBalancerMetalLbConfig2Af619EeState struct {
	Labels map[string]string `json:"labels"`
	NodeIp string            `json:"node_ip"`
}

type LoadBalancerMetalLbConfig95F9C67BState struct {
	Effect string `json:"effect"`
	Key    string `json:"key"`
	Value  string `json:"value"`
}

type LoadBalancerPortConfigState struct {
	ControlPlaneLoadBalancerPort float64 `json:"control_plane_load_balancer_port"`
}

type LoadBalancerVipConfigState struct {
	ControlPlaneVip string `json:"control_plane_vip"`
	IngressVip      string `json:"ingress_vip"`
}

type MaintenanceConfigState struct {
	MaintenanceAddressCidrBlocks []string `json:"maintenance_address_cidr_blocks"`
}

type NetworkConfigState struct {
	AdvancedNetworking              bool                                                `json:"advanced_networking"`
	IslandModeCidr                  []NetworkConfigIslandModeCidrState                  `json:"island_mode_cidr"`
	MultipleNetworkInterfacesConfig []NetworkConfigMultipleNetworkInterfacesConfigState `json:"multiple_network_interfaces_config"`
	SrIovConfig                     []NetworkConfigSrIovConfigState                     `json:"sr_iov_config"`
}

type NetworkConfigIslandModeCidrState struct {
	PodAddressCidrBlocks     []string `json:"pod_address_cidr_blocks"`
	ServiceAddressCidrBlocks []string `json:"service_address_cidr_blocks"`
}

type NetworkConfigMultipleNetworkInterfacesConfigState struct {
	Enabled bool `json:"enabled"`
}

type NetworkConfigSrIovConfigState struct {
	Enabled bool `json:"enabled"`
}

type NodeAccessConfigState struct {
	LoginUser string `json:"login_user"`
}

type NodeConfigState struct {
	ContainerRuntime string  `json:"container_runtime"`
	MaxPodsPerNode   float64 `json:"max_pods_per_node"`
}

type OsEnvironmentConfigState struct {
	PackageRepoExcluded bool `json:"package_repo_excluded"`
}

type ProxyState struct {
	NoProxy []string `json:"no_proxy"`
	Uri     string   `json:"uri"`
}

type SecurityConfigState struct {
	Authorization []SecurityConfigAuthorizationState `json:"authorization"`
}

type SecurityConfigAuthorizationState struct {
	AdminUsers []SecurityConfigAuthorizationAdminUsersState `json:"admin_users"`
}

type SecurityConfigAuthorizationAdminUsersState struct {
	Username string `json:"username"`
}

type StorageState struct {
	LvpNodeMountsConfig []StorageLvpNodeMountsConfigState `json:"lvp_node_mounts_config"`
	LvpShareConfig      []StorageLvpShareConfigState      `json:"lvp_share_config"`
}

type StorageLvpNodeMountsConfigState struct {
	Path         string `json:"path"`
	StorageClass string `json:"storage_class"`
}

type StorageLvpShareConfigState struct {
	SharedPathPvCount float64                               `json:"shared_path_pv_count"`
	LvpConfig         []StorageLvpShareConfigLvpConfigState `json:"lvp_config"`
}

type StorageLvpShareConfigLvpConfigState struct {
	Path         string `json:"path"`
	StorageClass string `json:"storage_class"`
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
	Update string `json:"update"`
}

type UpgradePolicyState struct {
	Policy string `json:"policy"`
}
