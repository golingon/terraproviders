// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google_compute_ha_vpn_gateway

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type Timeouts struct {
	// Create: string, optional
	Create terra.StringValue `hcl:"create,attr"`
	// Delete: string, optional
	Delete terra.StringValue `hcl:"delete,attr"`
}

type VpnInterfaces struct {
	// Id: number, optional
	Id terra.NumberValue `hcl:"id,attr"`
	// InterconnectAttachment: string, optional
	InterconnectAttachment terra.StringValue `hcl:"interconnect_attachment,attr"`
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("create"))
}

func (t TimeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("delete"))
}

type VpnInterfacesAttributes struct {
	ref terra.Reference
}

func (vi VpnInterfacesAttributes) InternalRef() (terra.Reference, error) {
	return vi.ref, nil
}

func (vi VpnInterfacesAttributes) InternalWithRef(ref terra.Reference) VpnInterfacesAttributes {
	return VpnInterfacesAttributes{ref: ref}
}

func (vi VpnInterfacesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return vi.ref.InternalTokens()
}

func (vi VpnInterfacesAttributes) Id() terra.NumberValue {
	return terra.ReferenceAsNumber(vi.ref.Append("id"))
}

func (vi VpnInterfacesAttributes) InterconnectAttachment() terra.StringValue {
	return terra.ReferenceAsString(vi.ref.Append("interconnect_attachment"))
}

func (vi VpnInterfacesAttributes) IpAddress() terra.StringValue {
	return terra.ReferenceAsString(vi.ref.Append("ip_address"))
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
}

type VpnInterfacesState struct {
	Id                     float64 `json:"id"`
	InterconnectAttachment string  `json:"interconnect_attachment"`
	IpAddress              string  `json:"ip_address"`
}
