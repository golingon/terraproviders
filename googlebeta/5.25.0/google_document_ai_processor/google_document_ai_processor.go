// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google_document_ai_processor

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource google_document_ai_processor.
type Resource struct {
	Name      string
	Args      Args
	state     *googleDocumentAiProcessorState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (gdap *Resource) Type() string {
	return "google_document_ai_processor"
}

// LocalName returns the local name for [Resource].
func (gdap *Resource) LocalName() string {
	return gdap.Name
}

// Configuration returns the configuration (args) for [Resource].
func (gdap *Resource) Configuration() interface{} {
	return gdap.Args
}

// DependOn is used for other resources to depend on [Resource].
func (gdap *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(gdap)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (gdap *Resource) Dependencies() terra.Dependencies {
	return gdap.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (gdap *Resource) LifecycleManagement() *terra.Lifecycle {
	return gdap.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (gdap *Resource) Attributes() googleDocumentAiProcessorAttributes {
	return googleDocumentAiProcessorAttributes{ref: terra.ReferenceResource(gdap)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (gdap *Resource) ImportState(state io.Reader) error {
	gdap.state = &googleDocumentAiProcessorState{}
	if err := json.NewDecoder(state).Decode(gdap.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", gdap.Type(), gdap.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (gdap *Resource) State() (*googleDocumentAiProcessorState, bool) {
	return gdap.state, gdap.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (gdap *Resource) StateMust() *googleDocumentAiProcessorState {
	if gdap.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", gdap.Type(), gdap.LocalName()))
	}
	return gdap.state
}

// Args contains the configurations for google_document_ai_processor.
type Args struct {
	// DisplayName: string, required
	DisplayName terra.StringValue `hcl:"display_name,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// KmsKeyName: string, optional
	KmsKeyName terra.StringValue `hcl:"kms_key_name,attr"`
	// Location: string, required
	Location terra.StringValue `hcl:"location,attr" validate:"required"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
	// Type: string, required
	Type terra.StringValue `hcl:"type,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type googleDocumentAiProcessorAttributes struct {
	ref terra.Reference
}

// DisplayName returns a reference to field display_name of google_document_ai_processor.
func (gdap googleDocumentAiProcessorAttributes) DisplayName() terra.StringValue {
	return terra.ReferenceAsString(gdap.ref.Append("display_name"))
}

// Id returns a reference to field id of google_document_ai_processor.
func (gdap googleDocumentAiProcessorAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(gdap.ref.Append("id"))
}

// KmsKeyName returns a reference to field kms_key_name of google_document_ai_processor.
func (gdap googleDocumentAiProcessorAttributes) KmsKeyName() terra.StringValue {
	return terra.ReferenceAsString(gdap.ref.Append("kms_key_name"))
}

// Location returns a reference to field location of google_document_ai_processor.
func (gdap googleDocumentAiProcessorAttributes) Location() terra.StringValue {
	return terra.ReferenceAsString(gdap.ref.Append("location"))
}

// Name returns a reference to field name of google_document_ai_processor.
func (gdap googleDocumentAiProcessorAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(gdap.ref.Append("name"))
}

// Project returns a reference to field project of google_document_ai_processor.
func (gdap googleDocumentAiProcessorAttributes) Project() terra.StringValue {
	return terra.ReferenceAsString(gdap.ref.Append("project"))
}

// Type returns a reference to field type of google_document_ai_processor.
func (gdap googleDocumentAiProcessorAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(gdap.ref.Append("type"))
}

func (gdap googleDocumentAiProcessorAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](gdap.ref.Append("timeouts"))
}

type googleDocumentAiProcessorState struct {
	DisplayName string         `json:"display_name"`
	Id          string         `json:"id"`
	KmsKeyName  string         `json:"kms_key_name"`
	Location    string         `json:"location"`
	Name        string         `json:"name"`
	Project     string         `json:"project"`
	Type        string         `json:"type"`
	Timeouts    *TimeoutsState `json:"timeouts"`
}
