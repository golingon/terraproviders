// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google_os_config_guest_policies

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource google_os_config_guest_policies.
type Resource struct {
	Name      string
	Args      Args
	state     *googleOsConfigGuestPoliciesState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (gocgp *Resource) Type() string {
	return "google_os_config_guest_policies"
}

// LocalName returns the local name for [Resource].
func (gocgp *Resource) LocalName() string {
	return gocgp.Name
}

// Configuration returns the configuration (args) for [Resource].
func (gocgp *Resource) Configuration() interface{} {
	return gocgp.Args
}

// DependOn is used for other resources to depend on [Resource].
func (gocgp *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(gocgp)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (gocgp *Resource) Dependencies() terra.Dependencies {
	return gocgp.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (gocgp *Resource) LifecycleManagement() *terra.Lifecycle {
	return gocgp.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (gocgp *Resource) Attributes() googleOsConfigGuestPoliciesAttributes {
	return googleOsConfigGuestPoliciesAttributes{ref: terra.ReferenceResource(gocgp)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (gocgp *Resource) ImportState(state io.Reader) error {
	gocgp.state = &googleOsConfigGuestPoliciesState{}
	if err := json.NewDecoder(state).Decode(gocgp.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", gocgp.Type(), gocgp.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (gocgp *Resource) State() (*googleOsConfigGuestPoliciesState, bool) {
	return gocgp.state, gocgp.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (gocgp *Resource) StateMust() *googleOsConfigGuestPoliciesState {
	if gocgp.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", gocgp.Type(), gocgp.LocalName()))
	}
	return gocgp.state
}

// Args contains the configurations for google_os_config_guest_policies.
type Args struct {
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// Etag: string, optional
	Etag terra.StringValue `hcl:"etag,attr"`
	// GuestPolicyId: string, required
	GuestPolicyId terra.StringValue `hcl:"guest_policy_id,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
	// Assignment: required
	Assignment *Assignment `hcl:"assignment,block" validate:"required"`
	// PackageRepositories: min=0
	PackageRepositories []PackageRepositories `hcl:"package_repositories,block" validate:"min=0"`
	// Packages: min=0
	Packages []Packages `hcl:"packages,block" validate:"min=0"`
	// Recipes: min=0
	Recipes []Recipes `hcl:"recipes,block" validate:"min=0"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type googleOsConfigGuestPoliciesAttributes struct {
	ref terra.Reference
}

// CreateTime returns a reference to field create_time of google_os_config_guest_policies.
func (gocgp googleOsConfigGuestPoliciesAttributes) CreateTime() terra.StringValue {
	return terra.ReferenceAsString(gocgp.ref.Append("create_time"))
}

// Description returns a reference to field description of google_os_config_guest_policies.
func (gocgp googleOsConfigGuestPoliciesAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(gocgp.ref.Append("description"))
}

// Etag returns a reference to field etag of google_os_config_guest_policies.
func (gocgp googleOsConfigGuestPoliciesAttributes) Etag() terra.StringValue {
	return terra.ReferenceAsString(gocgp.ref.Append("etag"))
}

// GuestPolicyId returns a reference to field guest_policy_id of google_os_config_guest_policies.
func (gocgp googleOsConfigGuestPoliciesAttributes) GuestPolicyId() terra.StringValue {
	return terra.ReferenceAsString(gocgp.ref.Append("guest_policy_id"))
}

// Id returns a reference to field id of google_os_config_guest_policies.
func (gocgp googleOsConfigGuestPoliciesAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(gocgp.ref.Append("id"))
}

// Name returns a reference to field name of google_os_config_guest_policies.
func (gocgp googleOsConfigGuestPoliciesAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(gocgp.ref.Append("name"))
}

// Project returns a reference to field project of google_os_config_guest_policies.
func (gocgp googleOsConfigGuestPoliciesAttributes) Project() terra.StringValue {
	return terra.ReferenceAsString(gocgp.ref.Append("project"))
}

// UpdateTime returns a reference to field update_time of google_os_config_guest_policies.
func (gocgp googleOsConfigGuestPoliciesAttributes) UpdateTime() terra.StringValue {
	return terra.ReferenceAsString(gocgp.ref.Append("update_time"))
}

func (gocgp googleOsConfigGuestPoliciesAttributes) Assignment() terra.ListValue[AssignmentAttributes] {
	return terra.ReferenceAsList[AssignmentAttributes](gocgp.ref.Append("assignment"))
}

func (gocgp googleOsConfigGuestPoliciesAttributes) PackageRepositories() terra.ListValue[PackageRepositoriesAttributes] {
	return terra.ReferenceAsList[PackageRepositoriesAttributes](gocgp.ref.Append("package_repositories"))
}

func (gocgp googleOsConfigGuestPoliciesAttributes) Packages() terra.ListValue[PackagesAttributes] {
	return terra.ReferenceAsList[PackagesAttributes](gocgp.ref.Append("packages"))
}

func (gocgp googleOsConfigGuestPoliciesAttributes) Recipes() terra.ListValue[RecipesAttributes] {
	return terra.ReferenceAsList[RecipesAttributes](gocgp.ref.Append("recipes"))
}

func (gocgp googleOsConfigGuestPoliciesAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](gocgp.ref.Append("timeouts"))
}

type googleOsConfigGuestPoliciesState struct {
	CreateTime          string                     `json:"create_time"`
	Description         string                     `json:"description"`
	Etag                string                     `json:"etag"`
	GuestPolicyId       string                     `json:"guest_policy_id"`
	Id                  string                     `json:"id"`
	Name                string                     `json:"name"`
	Project             string                     `json:"project"`
	UpdateTime          string                     `json:"update_time"`
	Assignment          []AssignmentState          `json:"assignment"`
	PackageRepositories []PackageRepositoriesState `json:"package_repositories"`
	Packages            []PackagesState            `json:"packages"`
	Recipes             []RecipesState             `json:"recipes"`
	Timeouts            *TimeoutsState             `json:"timeouts"`
}
