// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google_scc_mute_config

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource google_scc_mute_config.
type Resource struct {
	Name      string
	Args      Args
	state     *googleSccMuteConfigState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (gsmc *Resource) Type() string {
	return "google_scc_mute_config"
}

// LocalName returns the local name for [Resource].
func (gsmc *Resource) LocalName() string {
	return gsmc.Name
}

// Configuration returns the configuration (args) for [Resource].
func (gsmc *Resource) Configuration() interface{} {
	return gsmc.Args
}

// DependOn is used for other resources to depend on [Resource].
func (gsmc *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(gsmc)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (gsmc *Resource) Dependencies() terra.Dependencies {
	return gsmc.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (gsmc *Resource) LifecycleManagement() *terra.Lifecycle {
	return gsmc.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (gsmc *Resource) Attributes() googleSccMuteConfigAttributes {
	return googleSccMuteConfigAttributes{ref: terra.ReferenceResource(gsmc)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (gsmc *Resource) ImportState(state io.Reader) error {
	gsmc.state = &googleSccMuteConfigState{}
	if err := json.NewDecoder(state).Decode(gsmc.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", gsmc.Type(), gsmc.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (gsmc *Resource) State() (*googleSccMuteConfigState, bool) {
	return gsmc.state, gsmc.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (gsmc *Resource) StateMust() *googleSccMuteConfigState {
	if gsmc.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", gsmc.Type(), gsmc.LocalName()))
	}
	return gsmc.state
}

// Args contains the configurations for google_scc_mute_config.
type Args struct {
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// Filter: string, required
	Filter terra.StringValue `hcl:"filter,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// MuteConfigId: string, required
	MuteConfigId terra.StringValue `hcl:"mute_config_id,attr" validate:"required"`
	// Parent: string, required
	Parent terra.StringValue `hcl:"parent,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type googleSccMuteConfigAttributes struct {
	ref terra.Reference
}

// CreateTime returns a reference to field create_time of google_scc_mute_config.
func (gsmc googleSccMuteConfigAttributes) CreateTime() terra.StringValue {
	return terra.ReferenceAsString(gsmc.ref.Append("create_time"))
}

// Description returns a reference to field description of google_scc_mute_config.
func (gsmc googleSccMuteConfigAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(gsmc.ref.Append("description"))
}

// Filter returns a reference to field filter of google_scc_mute_config.
func (gsmc googleSccMuteConfigAttributes) Filter() terra.StringValue {
	return terra.ReferenceAsString(gsmc.ref.Append("filter"))
}

// Id returns a reference to field id of google_scc_mute_config.
func (gsmc googleSccMuteConfigAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(gsmc.ref.Append("id"))
}

// MostRecentEditor returns a reference to field most_recent_editor of google_scc_mute_config.
func (gsmc googleSccMuteConfigAttributes) MostRecentEditor() terra.StringValue {
	return terra.ReferenceAsString(gsmc.ref.Append("most_recent_editor"))
}

// MuteConfigId returns a reference to field mute_config_id of google_scc_mute_config.
func (gsmc googleSccMuteConfigAttributes) MuteConfigId() terra.StringValue {
	return terra.ReferenceAsString(gsmc.ref.Append("mute_config_id"))
}

// Name returns a reference to field name of google_scc_mute_config.
func (gsmc googleSccMuteConfigAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(gsmc.ref.Append("name"))
}

// Parent returns a reference to field parent of google_scc_mute_config.
func (gsmc googleSccMuteConfigAttributes) Parent() terra.StringValue {
	return terra.ReferenceAsString(gsmc.ref.Append("parent"))
}

// UpdateTime returns a reference to field update_time of google_scc_mute_config.
func (gsmc googleSccMuteConfigAttributes) UpdateTime() terra.StringValue {
	return terra.ReferenceAsString(gsmc.ref.Append("update_time"))
}

func (gsmc googleSccMuteConfigAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](gsmc.ref.Append("timeouts"))
}

type googleSccMuteConfigState struct {
	CreateTime       string         `json:"create_time"`
	Description      string         `json:"description"`
	Filter           string         `json:"filter"`
	Id               string         `json:"id"`
	MostRecentEditor string         `json:"most_recent_editor"`
	MuteConfigId     string         `json:"mute_config_id"`
	Name             string         `json:"name"`
	Parent           string         `json:"parent"`
	UpdateTime       string         `json:"update_time"`
	Timeouts         *TimeoutsState `json:"timeouts"`
}
