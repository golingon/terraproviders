// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google_securityposture_posture

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource google_securityposture_posture.
type Resource struct {
	Name      string
	Args      Args
	state     *googleSecurityposturePostureState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (gsp *Resource) Type() string {
	return "google_securityposture_posture"
}

// LocalName returns the local name for [Resource].
func (gsp *Resource) LocalName() string {
	return gsp.Name
}

// Configuration returns the configuration (args) for [Resource].
func (gsp *Resource) Configuration() interface{} {
	return gsp.Args
}

// DependOn is used for other resources to depend on [Resource].
func (gsp *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(gsp)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (gsp *Resource) Dependencies() terra.Dependencies {
	return gsp.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (gsp *Resource) LifecycleManagement() *terra.Lifecycle {
	return gsp.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (gsp *Resource) Attributes() googleSecurityposturePostureAttributes {
	return googleSecurityposturePostureAttributes{ref: terra.ReferenceResource(gsp)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (gsp *Resource) ImportState(state io.Reader) error {
	gsp.state = &googleSecurityposturePostureState{}
	if err := json.NewDecoder(state).Decode(gsp.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", gsp.Type(), gsp.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (gsp *Resource) State() (*googleSecurityposturePostureState, bool) {
	return gsp.state, gsp.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (gsp *Resource) StateMust() *googleSecurityposturePostureState {
	if gsp.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", gsp.Type(), gsp.LocalName()))
	}
	return gsp.state
}

// Args contains the configurations for google_securityposture_posture.
type Args struct {
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Location: string, required
	Location terra.StringValue `hcl:"location,attr" validate:"required"`
	// Parent: string, required
	Parent terra.StringValue `hcl:"parent,attr" validate:"required"`
	// PostureId: string, required
	PostureId terra.StringValue `hcl:"posture_id,attr" validate:"required"`
	// State: string, required
	State terra.StringValue `hcl:"state,attr" validate:"required"`
	// PolicySets: min=1
	PolicySets []PolicySets `hcl:"policy_sets,block" validate:"min=1"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type googleSecurityposturePostureAttributes struct {
	ref terra.Reference
}

// CreateTime returns a reference to field create_time of google_securityposture_posture.
func (gsp googleSecurityposturePostureAttributes) CreateTime() terra.StringValue {
	return terra.ReferenceAsString(gsp.ref.Append("create_time"))
}

// Description returns a reference to field description of google_securityposture_posture.
func (gsp googleSecurityposturePostureAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(gsp.ref.Append("description"))
}

// Etag returns a reference to field etag of google_securityposture_posture.
func (gsp googleSecurityposturePostureAttributes) Etag() terra.StringValue {
	return terra.ReferenceAsString(gsp.ref.Append("etag"))
}

// Id returns a reference to field id of google_securityposture_posture.
func (gsp googleSecurityposturePostureAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(gsp.ref.Append("id"))
}

// Location returns a reference to field location of google_securityposture_posture.
func (gsp googleSecurityposturePostureAttributes) Location() terra.StringValue {
	return terra.ReferenceAsString(gsp.ref.Append("location"))
}

// Name returns a reference to field name of google_securityposture_posture.
func (gsp googleSecurityposturePostureAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(gsp.ref.Append("name"))
}

// Parent returns a reference to field parent of google_securityposture_posture.
func (gsp googleSecurityposturePostureAttributes) Parent() terra.StringValue {
	return terra.ReferenceAsString(gsp.ref.Append("parent"))
}

// PostureId returns a reference to field posture_id of google_securityposture_posture.
func (gsp googleSecurityposturePostureAttributes) PostureId() terra.StringValue {
	return terra.ReferenceAsString(gsp.ref.Append("posture_id"))
}

// Reconciling returns a reference to field reconciling of google_securityposture_posture.
func (gsp googleSecurityposturePostureAttributes) Reconciling() terra.BoolValue {
	return terra.ReferenceAsBool(gsp.ref.Append("reconciling"))
}

// RevisionId returns a reference to field revision_id of google_securityposture_posture.
func (gsp googleSecurityposturePostureAttributes) RevisionId() terra.StringValue {
	return terra.ReferenceAsString(gsp.ref.Append("revision_id"))
}

// State returns a reference to field state of google_securityposture_posture.
func (gsp googleSecurityposturePostureAttributes) State() terra.StringValue {
	return terra.ReferenceAsString(gsp.ref.Append("state"))
}

// UpdateTime returns a reference to field update_time of google_securityposture_posture.
func (gsp googleSecurityposturePostureAttributes) UpdateTime() terra.StringValue {
	return terra.ReferenceAsString(gsp.ref.Append("update_time"))
}

func (gsp googleSecurityposturePostureAttributes) PolicySets() terra.ListValue[PolicySetsAttributes] {
	return terra.ReferenceAsList[PolicySetsAttributes](gsp.ref.Append("policy_sets"))
}

func (gsp googleSecurityposturePostureAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](gsp.ref.Append("timeouts"))
}

type googleSecurityposturePostureState struct {
	CreateTime  string            `json:"create_time"`
	Description string            `json:"description"`
	Etag        string            `json:"etag"`
	Id          string            `json:"id"`
	Location    string            `json:"location"`
	Name        string            `json:"name"`
	Parent      string            `json:"parent"`
	PostureId   string            `json:"posture_id"`
	Reconciling bool              `json:"reconciling"`
	RevisionId  string            `json:"revision_id"`
	State       string            `json:"state"`
	UpdateTime  string            `json:"update_time"`
	PolicySets  []PolicySetsState `json:"policy_sets"`
	Timeouts    *TimeoutsState    `json:"timeouts"`
}
