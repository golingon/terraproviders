// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google_binary_authorization_attestor

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type AttestationAuthorityNote struct {
	// NoteReference: string, required
	NoteReference terra.StringValue `hcl:"note_reference,attr" validate:"required"`
	// AttestationAuthorityNotePublicKeys: min=0
	PublicKeys []AttestationAuthorityNotePublicKeys `hcl:"public_keys,block" validate:"min=0"`
}

type AttestationAuthorityNotePublicKeys struct {
	// AsciiArmoredPgpPublicKey: string, optional
	AsciiArmoredPgpPublicKey terra.StringValue `hcl:"ascii_armored_pgp_public_key,attr"`
	// Comment: string, optional
	Comment terra.StringValue `hcl:"comment,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// AttestationAuthorityNotePublicKeysPkixPublicKey: optional
	PkixPublicKey *AttestationAuthorityNotePublicKeysPkixPublicKey `hcl:"pkix_public_key,block"`
}

type AttestationAuthorityNotePublicKeysPkixPublicKey struct {
	// PublicKeyPem: string, optional
	PublicKeyPem terra.StringValue `hcl:"public_key_pem,attr"`
	// SignatureAlgorithm: string, optional
	SignatureAlgorithm terra.StringValue `hcl:"signature_algorithm,attr"`
}

type Timeouts struct {
	// Create: string, optional
	Create terra.StringValue `hcl:"create,attr"`
	// Delete: string, optional
	Delete terra.StringValue `hcl:"delete,attr"`
	// Update: string, optional
	Update terra.StringValue `hcl:"update,attr"`
}

type AttestationAuthorityNoteAttributes struct {
	ref terra.Reference
}

func (aan AttestationAuthorityNoteAttributes) InternalRef() (terra.Reference, error) {
	return aan.ref, nil
}

func (aan AttestationAuthorityNoteAttributes) InternalWithRef(ref terra.Reference) AttestationAuthorityNoteAttributes {
	return AttestationAuthorityNoteAttributes{ref: ref}
}

func (aan AttestationAuthorityNoteAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return aan.ref.InternalTokens()
}

func (aan AttestationAuthorityNoteAttributes) DelegationServiceAccountEmail() terra.StringValue {
	return terra.ReferenceAsString(aan.ref.Append("delegation_service_account_email"))
}

func (aan AttestationAuthorityNoteAttributes) NoteReference() terra.StringValue {
	return terra.ReferenceAsString(aan.ref.Append("note_reference"))
}

func (aan AttestationAuthorityNoteAttributes) PublicKeys() terra.ListValue[AttestationAuthorityNotePublicKeysAttributes] {
	return terra.ReferenceAsList[AttestationAuthorityNotePublicKeysAttributes](aan.ref.Append("public_keys"))
}

type AttestationAuthorityNotePublicKeysAttributes struct {
	ref terra.Reference
}

func (pk AttestationAuthorityNotePublicKeysAttributes) InternalRef() (terra.Reference, error) {
	return pk.ref, nil
}

func (pk AttestationAuthorityNotePublicKeysAttributes) InternalWithRef(ref terra.Reference) AttestationAuthorityNotePublicKeysAttributes {
	return AttestationAuthorityNotePublicKeysAttributes{ref: ref}
}

func (pk AttestationAuthorityNotePublicKeysAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return pk.ref.InternalTokens()
}

func (pk AttestationAuthorityNotePublicKeysAttributes) AsciiArmoredPgpPublicKey() terra.StringValue {
	return terra.ReferenceAsString(pk.ref.Append("ascii_armored_pgp_public_key"))
}

func (pk AttestationAuthorityNotePublicKeysAttributes) Comment() terra.StringValue {
	return terra.ReferenceAsString(pk.ref.Append("comment"))
}

func (pk AttestationAuthorityNotePublicKeysAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(pk.ref.Append("id"))
}

func (pk AttestationAuthorityNotePublicKeysAttributes) PkixPublicKey() terra.ListValue[AttestationAuthorityNotePublicKeysPkixPublicKeyAttributes] {
	return terra.ReferenceAsList[AttestationAuthorityNotePublicKeysPkixPublicKeyAttributes](pk.ref.Append("pkix_public_key"))
}

type AttestationAuthorityNotePublicKeysPkixPublicKeyAttributes struct {
	ref terra.Reference
}

func (ppk AttestationAuthorityNotePublicKeysPkixPublicKeyAttributes) InternalRef() (terra.Reference, error) {
	return ppk.ref, nil
}

func (ppk AttestationAuthorityNotePublicKeysPkixPublicKeyAttributes) InternalWithRef(ref terra.Reference) AttestationAuthorityNotePublicKeysPkixPublicKeyAttributes {
	return AttestationAuthorityNotePublicKeysPkixPublicKeyAttributes{ref: ref}
}

func (ppk AttestationAuthorityNotePublicKeysPkixPublicKeyAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ppk.ref.InternalTokens()
}

func (ppk AttestationAuthorityNotePublicKeysPkixPublicKeyAttributes) PublicKeyPem() terra.StringValue {
	return terra.ReferenceAsString(ppk.ref.Append("public_key_pem"))
}

func (ppk AttestationAuthorityNotePublicKeysPkixPublicKeyAttributes) SignatureAlgorithm() terra.StringValue {
	return terra.ReferenceAsString(ppk.ref.Append("signature_algorithm"))
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("create"))
}

func (t TimeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("delete"))
}

func (t TimeoutsAttributes) Update() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("update"))
}

type AttestationAuthorityNoteState struct {
	DelegationServiceAccountEmail string                                    `json:"delegation_service_account_email"`
	NoteReference                 string                                    `json:"note_reference"`
	PublicKeys                    []AttestationAuthorityNotePublicKeysState `json:"public_keys"`
}

type AttestationAuthorityNotePublicKeysState struct {
	AsciiArmoredPgpPublicKey string                                                 `json:"ascii_armored_pgp_public_key"`
	Comment                  string                                                 `json:"comment"`
	Id                       string                                                 `json:"id"`
	PkixPublicKey            []AttestationAuthorityNotePublicKeysPkixPublicKeyState `json:"pkix_public_key"`
}

type AttestationAuthorityNotePublicKeysPkixPublicKeyState struct {
	PublicKeyPem       string `json:"public_key_pem"`
	SignatureAlgorithm string `json:"signature_algorithm"`
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
	Update string `json:"update"`
}
