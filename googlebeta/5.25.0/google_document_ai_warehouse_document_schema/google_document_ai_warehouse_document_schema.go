// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google_document_ai_warehouse_document_schema

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource google_document_ai_warehouse_document_schema.
type Resource struct {
	Name      string
	Args      Args
	state     *googleDocumentAiWarehouseDocumentSchemaState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (gdawds *Resource) Type() string {
	return "google_document_ai_warehouse_document_schema"
}

// LocalName returns the local name for [Resource].
func (gdawds *Resource) LocalName() string {
	return gdawds.Name
}

// Configuration returns the configuration (args) for [Resource].
func (gdawds *Resource) Configuration() interface{} {
	return gdawds.Args
}

// DependOn is used for other resources to depend on [Resource].
func (gdawds *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(gdawds)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (gdawds *Resource) Dependencies() terra.Dependencies {
	return gdawds.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (gdawds *Resource) LifecycleManagement() *terra.Lifecycle {
	return gdawds.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (gdawds *Resource) Attributes() googleDocumentAiWarehouseDocumentSchemaAttributes {
	return googleDocumentAiWarehouseDocumentSchemaAttributes{ref: terra.ReferenceResource(gdawds)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (gdawds *Resource) ImportState(state io.Reader) error {
	gdawds.state = &googleDocumentAiWarehouseDocumentSchemaState{}
	if err := json.NewDecoder(state).Decode(gdawds.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", gdawds.Type(), gdawds.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (gdawds *Resource) State() (*googleDocumentAiWarehouseDocumentSchemaState, bool) {
	return gdawds.state, gdawds.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (gdawds *Resource) StateMust() *googleDocumentAiWarehouseDocumentSchemaState {
	if gdawds.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", gdawds.Type(), gdawds.LocalName()))
	}
	return gdawds.state
}

// Args contains the configurations for google_document_ai_warehouse_document_schema.
type Args struct {
	// DisplayName: string, required
	DisplayName terra.StringValue `hcl:"display_name,attr" validate:"required"`
	// DocumentIsFolder: bool, optional
	DocumentIsFolder terra.BoolValue `hcl:"document_is_folder,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Location: string, required
	Location terra.StringValue `hcl:"location,attr" validate:"required"`
	// ProjectNumber: string, required
	ProjectNumber terra.StringValue `hcl:"project_number,attr" validate:"required"`
	// PropertyDefinitions: min=1
	PropertyDefinitions []PropertyDefinitions `hcl:"property_definitions,block" validate:"min=1"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type googleDocumentAiWarehouseDocumentSchemaAttributes struct {
	ref terra.Reference
}

// DisplayName returns a reference to field display_name of google_document_ai_warehouse_document_schema.
func (gdawds googleDocumentAiWarehouseDocumentSchemaAttributes) DisplayName() terra.StringValue {
	return terra.ReferenceAsString(gdawds.ref.Append("display_name"))
}

// DocumentIsFolder returns a reference to field document_is_folder of google_document_ai_warehouse_document_schema.
func (gdawds googleDocumentAiWarehouseDocumentSchemaAttributes) DocumentIsFolder() terra.BoolValue {
	return terra.ReferenceAsBool(gdawds.ref.Append("document_is_folder"))
}

// Id returns a reference to field id of google_document_ai_warehouse_document_schema.
func (gdawds googleDocumentAiWarehouseDocumentSchemaAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(gdawds.ref.Append("id"))
}

// Location returns a reference to field location of google_document_ai_warehouse_document_schema.
func (gdawds googleDocumentAiWarehouseDocumentSchemaAttributes) Location() terra.StringValue {
	return terra.ReferenceAsString(gdawds.ref.Append("location"))
}

// Name returns a reference to field name of google_document_ai_warehouse_document_schema.
func (gdawds googleDocumentAiWarehouseDocumentSchemaAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(gdawds.ref.Append("name"))
}

// ProjectNumber returns a reference to field project_number of google_document_ai_warehouse_document_schema.
func (gdawds googleDocumentAiWarehouseDocumentSchemaAttributes) ProjectNumber() terra.StringValue {
	return terra.ReferenceAsString(gdawds.ref.Append("project_number"))
}

func (gdawds googleDocumentAiWarehouseDocumentSchemaAttributes) PropertyDefinitions() terra.ListValue[PropertyDefinitionsAttributes] {
	return terra.ReferenceAsList[PropertyDefinitionsAttributes](gdawds.ref.Append("property_definitions"))
}

func (gdawds googleDocumentAiWarehouseDocumentSchemaAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](gdawds.ref.Append("timeouts"))
}

type googleDocumentAiWarehouseDocumentSchemaState struct {
	DisplayName         string                     `json:"display_name"`
	DocumentIsFolder    bool                       `json:"document_is_folder"`
	Id                  string                     `json:"id"`
	Location            string                     `json:"location"`
	Name                string                     `json:"name"`
	ProjectNumber       string                     `json:"project_number"`
	PropertyDefinitions []PropertyDefinitionsState `json:"property_definitions"`
	Timeouts            *TimeoutsState             `json:"timeouts"`
}
