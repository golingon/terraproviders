// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google_document_ai_warehouse_document_schema

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type PropertyDefinitions struct {
	// DisplayName: string, optional
	DisplayName terra.StringValue `hcl:"display_name,attr"`
	// IsFilterable: bool, optional
	IsFilterable terra.BoolValue `hcl:"is_filterable,attr"`
	// IsMetadata: bool, optional
	IsMetadata terra.BoolValue `hcl:"is_metadata,attr"`
	// IsRepeatable: bool, optional
	IsRepeatable terra.BoolValue `hcl:"is_repeatable,attr"`
	// IsRequired: bool, optional
	IsRequired terra.BoolValue `hcl:"is_required,attr"`
	// IsSearchable: bool, optional
	IsSearchable terra.BoolValue `hcl:"is_searchable,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// RetrievalImportance: string, optional
	RetrievalImportance terra.StringValue `hcl:"retrieval_importance,attr"`
	// PropertyDefinitionsDateTimeTypeOptions: optional
	DateTimeTypeOptions *PropertyDefinitionsDateTimeTypeOptions `hcl:"date_time_type_options,block"`
	// PropertyDefinitionsEnumTypeOptions: optional
	EnumTypeOptions *PropertyDefinitionsEnumTypeOptions `hcl:"enum_type_options,block"`
	// PropertyDefinitionsFloatTypeOptions: optional
	FloatTypeOptions *PropertyDefinitionsFloatTypeOptions `hcl:"float_type_options,block"`
	// PropertyDefinitionsIntegerTypeOptions: optional
	IntegerTypeOptions *PropertyDefinitionsIntegerTypeOptions `hcl:"integer_type_options,block"`
	// PropertyDefinitionsMapTypeOptions: optional
	MapTypeOptions *PropertyDefinitionsMapTypeOptions `hcl:"map_type_options,block"`
	// PropertyDefinitionsPropertyTypeOptions: optional
	PropertyTypeOptions *PropertyDefinitionsPropertyTypeOptions `hcl:"property_type_options,block"`
	// PropertyDefinitionsSchemaSources: min=0
	SchemaSources []PropertyDefinitionsSchemaSources `hcl:"schema_sources,block" validate:"min=0"`
	// PropertyDefinitionsTextTypeOptions: optional
	TextTypeOptions *PropertyDefinitionsTextTypeOptions `hcl:"text_type_options,block"`
	// PropertyDefinitionsTimestampTypeOptions: optional
	TimestampTypeOptions *PropertyDefinitionsTimestampTypeOptions `hcl:"timestamp_type_options,block"`
}

type PropertyDefinitionsDateTimeTypeOptions struct{}

type PropertyDefinitionsEnumTypeOptions struct {
	// PossibleValues: list of string, required
	PossibleValues terra.ListValue[terra.StringValue] `hcl:"possible_values,attr" validate:"required"`
	// ValidationCheckDisabled: bool, optional
	ValidationCheckDisabled terra.BoolValue `hcl:"validation_check_disabled,attr"`
}

type PropertyDefinitionsFloatTypeOptions struct{}

type PropertyDefinitionsIntegerTypeOptions struct{}

type PropertyDefinitionsMapTypeOptions struct{}

type PropertyDefinitionsPropertyTypeOptions struct {
	// PropertyDefinitionsPropertyTypeOptionsPropertyDefinitions: min=1
	PropertyDefinitions []PropertyDefinitionsPropertyTypeOptionsPropertyDefinitions `hcl:"property_definitions,block" validate:"min=1"`
}

type PropertyDefinitionsPropertyTypeOptionsPropertyDefinitions struct {
	// DisplayName: string, optional
	DisplayName terra.StringValue `hcl:"display_name,attr"`
	// IsFilterable: bool, optional
	IsFilterable terra.BoolValue `hcl:"is_filterable,attr"`
	// IsMetadata: bool, optional
	IsMetadata terra.BoolValue `hcl:"is_metadata,attr"`
	// IsRepeatable: bool, optional
	IsRepeatable terra.BoolValue `hcl:"is_repeatable,attr"`
	// IsRequired: bool, optional
	IsRequired terra.BoolValue `hcl:"is_required,attr"`
	// IsSearchable: bool, optional
	IsSearchable terra.BoolValue `hcl:"is_searchable,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// RetrievalImportance: string, optional
	RetrievalImportance terra.StringValue `hcl:"retrieval_importance,attr"`
	// PropertyDefinitionsPropertyTypeOptionsPropertyDefinitionsDateTimeTypeOptions: optional
	DateTimeTypeOptions *PropertyDefinitionsPropertyTypeOptionsPropertyDefinitionsDateTimeTypeOptions `hcl:"date_time_type_options,block"`
	// PropertyDefinitionsPropertyTypeOptionsPropertyDefinitionsEnumTypeOptions: optional
	EnumTypeOptions *PropertyDefinitionsPropertyTypeOptionsPropertyDefinitionsEnumTypeOptions `hcl:"enum_type_options,block"`
	// PropertyDefinitionsPropertyTypeOptionsPropertyDefinitionsFloatTypeOptions: optional
	FloatTypeOptions *PropertyDefinitionsPropertyTypeOptionsPropertyDefinitionsFloatTypeOptions `hcl:"float_type_options,block"`
	// PropertyDefinitionsPropertyTypeOptionsPropertyDefinitionsIntegerTypeOptions: optional
	IntegerTypeOptions *PropertyDefinitionsPropertyTypeOptionsPropertyDefinitionsIntegerTypeOptions `hcl:"integer_type_options,block"`
	// PropertyDefinitionsPropertyTypeOptionsPropertyDefinitionsMapTypeOptions: optional
	MapTypeOptions *PropertyDefinitionsPropertyTypeOptionsPropertyDefinitionsMapTypeOptions `hcl:"map_type_options,block"`
	// PropertyDefinitionsPropertyTypeOptionsPropertyDefinitionsSchemaSources: min=0
	SchemaSources []PropertyDefinitionsPropertyTypeOptionsPropertyDefinitionsSchemaSources `hcl:"schema_sources,block" validate:"min=0"`
	// PropertyDefinitionsPropertyTypeOptionsPropertyDefinitionsTextTypeOptions: optional
	TextTypeOptions *PropertyDefinitionsPropertyTypeOptionsPropertyDefinitionsTextTypeOptions `hcl:"text_type_options,block"`
	// PropertyDefinitionsPropertyTypeOptionsPropertyDefinitionsTimestampTypeOptions: optional
	TimestampTypeOptions *PropertyDefinitionsPropertyTypeOptionsPropertyDefinitionsTimestampTypeOptions `hcl:"timestamp_type_options,block"`
}

type PropertyDefinitionsPropertyTypeOptionsPropertyDefinitionsDateTimeTypeOptions struct{}

type PropertyDefinitionsPropertyTypeOptionsPropertyDefinitionsEnumTypeOptions struct {
	// PossibleValues: list of string, required
	PossibleValues terra.ListValue[terra.StringValue] `hcl:"possible_values,attr" validate:"required"`
	// ValidationCheckDisabled: bool, optional
	ValidationCheckDisabled terra.BoolValue `hcl:"validation_check_disabled,attr"`
}

type PropertyDefinitionsPropertyTypeOptionsPropertyDefinitionsFloatTypeOptions struct{}

type PropertyDefinitionsPropertyTypeOptionsPropertyDefinitionsIntegerTypeOptions struct{}

type PropertyDefinitionsPropertyTypeOptionsPropertyDefinitionsMapTypeOptions struct{}

type PropertyDefinitionsPropertyTypeOptionsPropertyDefinitionsSchemaSources struct {
	// Name: string, optional
	Name terra.StringValue `hcl:"name,attr"`
	// ProcessorType: string, optional
	ProcessorType terra.StringValue `hcl:"processor_type,attr"`
}

type PropertyDefinitionsPropertyTypeOptionsPropertyDefinitionsTextTypeOptions struct{}

type PropertyDefinitionsPropertyTypeOptionsPropertyDefinitionsTimestampTypeOptions struct{}

type PropertyDefinitionsSchemaSources struct {
	// Name: string, optional
	Name terra.StringValue `hcl:"name,attr"`
	// ProcessorType: string, optional
	ProcessorType terra.StringValue `hcl:"processor_type,attr"`
}

type PropertyDefinitionsTextTypeOptions struct{}

type PropertyDefinitionsTimestampTypeOptions struct{}

type Timeouts struct {
	// Create: string, optional
	Create terra.StringValue `hcl:"create,attr"`
	// Delete: string, optional
	Delete terra.StringValue `hcl:"delete,attr"`
}

type PropertyDefinitionsAttributes struct {
	ref terra.Reference
}

func (pd PropertyDefinitionsAttributes) InternalRef() (terra.Reference, error) {
	return pd.ref, nil
}

func (pd PropertyDefinitionsAttributes) InternalWithRef(ref terra.Reference) PropertyDefinitionsAttributes {
	return PropertyDefinitionsAttributes{ref: ref}
}

func (pd PropertyDefinitionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return pd.ref.InternalTokens()
}

func (pd PropertyDefinitionsAttributes) DisplayName() terra.StringValue {
	return terra.ReferenceAsString(pd.ref.Append("display_name"))
}

func (pd PropertyDefinitionsAttributes) IsFilterable() terra.BoolValue {
	return terra.ReferenceAsBool(pd.ref.Append("is_filterable"))
}

func (pd PropertyDefinitionsAttributes) IsMetadata() terra.BoolValue {
	return terra.ReferenceAsBool(pd.ref.Append("is_metadata"))
}

func (pd PropertyDefinitionsAttributes) IsRepeatable() terra.BoolValue {
	return terra.ReferenceAsBool(pd.ref.Append("is_repeatable"))
}

func (pd PropertyDefinitionsAttributes) IsRequired() terra.BoolValue {
	return terra.ReferenceAsBool(pd.ref.Append("is_required"))
}

func (pd PropertyDefinitionsAttributes) IsSearchable() terra.BoolValue {
	return terra.ReferenceAsBool(pd.ref.Append("is_searchable"))
}

func (pd PropertyDefinitionsAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(pd.ref.Append("name"))
}

func (pd PropertyDefinitionsAttributes) RetrievalImportance() terra.StringValue {
	return terra.ReferenceAsString(pd.ref.Append("retrieval_importance"))
}

func (pd PropertyDefinitionsAttributes) DateTimeTypeOptions() terra.ListValue[PropertyDefinitionsDateTimeTypeOptionsAttributes] {
	return terra.ReferenceAsList[PropertyDefinitionsDateTimeTypeOptionsAttributes](pd.ref.Append("date_time_type_options"))
}

func (pd PropertyDefinitionsAttributes) EnumTypeOptions() terra.ListValue[PropertyDefinitionsEnumTypeOptionsAttributes] {
	return terra.ReferenceAsList[PropertyDefinitionsEnumTypeOptionsAttributes](pd.ref.Append("enum_type_options"))
}

func (pd PropertyDefinitionsAttributes) FloatTypeOptions() terra.ListValue[PropertyDefinitionsFloatTypeOptionsAttributes] {
	return terra.ReferenceAsList[PropertyDefinitionsFloatTypeOptionsAttributes](pd.ref.Append("float_type_options"))
}

func (pd PropertyDefinitionsAttributes) IntegerTypeOptions() terra.ListValue[PropertyDefinitionsIntegerTypeOptionsAttributes] {
	return terra.ReferenceAsList[PropertyDefinitionsIntegerTypeOptionsAttributes](pd.ref.Append("integer_type_options"))
}

func (pd PropertyDefinitionsAttributes) MapTypeOptions() terra.ListValue[PropertyDefinitionsMapTypeOptionsAttributes] {
	return terra.ReferenceAsList[PropertyDefinitionsMapTypeOptionsAttributes](pd.ref.Append("map_type_options"))
}

func (pd PropertyDefinitionsAttributes) PropertyTypeOptions() terra.ListValue[PropertyDefinitionsPropertyTypeOptionsAttributes] {
	return terra.ReferenceAsList[PropertyDefinitionsPropertyTypeOptionsAttributes](pd.ref.Append("property_type_options"))
}

func (pd PropertyDefinitionsAttributes) SchemaSources() terra.ListValue[PropertyDefinitionsSchemaSourcesAttributes] {
	return terra.ReferenceAsList[PropertyDefinitionsSchemaSourcesAttributes](pd.ref.Append("schema_sources"))
}

func (pd PropertyDefinitionsAttributes) TextTypeOptions() terra.ListValue[PropertyDefinitionsTextTypeOptionsAttributes] {
	return terra.ReferenceAsList[PropertyDefinitionsTextTypeOptionsAttributes](pd.ref.Append("text_type_options"))
}

func (pd PropertyDefinitionsAttributes) TimestampTypeOptions() terra.ListValue[PropertyDefinitionsTimestampTypeOptionsAttributes] {
	return terra.ReferenceAsList[PropertyDefinitionsTimestampTypeOptionsAttributes](pd.ref.Append("timestamp_type_options"))
}

type PropertyDefinitionsDateTimeTypeOptionsAttributes struct {
	ref terra.Reference
}

func (dtto PropertyDefinitionsDateTimeTypeOptionsAttributes) InternalRef() (terra.Reference, error) {
	return dtto.ref, nil
}

func (dtto PropertyDefinitionsDateTimeTypeOptionsAttributes) InternalWithRef(ref terra.Reference) PropertyDefinitionsDateTimeTypeOptionsAttributes {
	return PropertyDefinitionsDateTimeTypeOptionsAttributes{ref: ref}
}

func (dtto PropertyDefinitionsDateTimeTypeOptionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dtto.ref.InternalTokens()
}

type PropertyDefinitionsEnumTypeOptionsAttributes struct {
	ref terra.Reference
}

func (eto PropertyDefinitionsEnumTypeOptionsAttributes) InternalRef() (terra.Reference, error) {
	return eto.ref, nil
}

func (eto PropertyDefinitionsEnumTypeOptionsAttributes) InternalWithRef(ref terra.Reference) PropertyDefinitionsEnumTypeOptionsAttributes {
	return PropertyDefinitionsEnumTypeOptionsAttributes{ref: ref}
}

func (eto PropertyDefinitionsEnumTypeOptionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return eto.ref.InternalTokens()
}

func (eto PropertyDefinitionsEnumTypeOptionsAttributes) PossibleValues() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](eto.ref.Append("possible_values"))
}

func (eto PropertyDefinitionsEnumTypeOptionsAttributes) ValidationCheckDisabled() terra.BoolValue {
	return terra.ReferenceAsBool(eto.ref.Append("validation_check_disabled"))
}

type PropertyDefinitionsFloatTypeOptionsAttributes struct {
	ref terra.Reference
}

func (fto PropertyDefinitionsFloatTypeOptionsAttributes) InternalRef() (terra.Reference, error) {
	return fto.ref, nil
}

func (fto PropertyDefinitionsFloatTypeOptionsAttributes) InternalWithRef(ref terra.Reference) PropertyDefinitionsFloatTypeOptionsAttributes {
	return PropertyDefinitionsFloatTypeOptionsAttributes{ref: ref}
}

func (fto PropertyDefinitionsFloatTypeOptionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return fto.ref.InternalTokens()
}

type PropertyDefinitionsIntegerTypeOptionsAttributes struct {
	ref terra.Reference
}

func (ito PropertyDefinitionsIntegerTypeOptionsAttributes) InternalRef() (terra.Reference, error) {
	return ito.ref, nil
}

func (ito PropertyDefinitionsIntegerTypeOptionsAttributes) InternalWithRef(ref terra.Reference) PropertyDefinitionsIntegerTypeOptionsAttributes {
	return PropertyDefinitionsIntegerTypeOptionsAttributes{ref: ref}
}

func (ito PropertyDefinitionsIntegerTypeOptionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ito.ref.InternalTokens()
}

type PropertyDefinitionsMapTypeOptionsAttributes struct {
	ref terra.Reference
}

func (mto PropertyDefinitionsMapTypeOptionsAttributes) InternalRef() (terra.Reference, error) {
	return mto.ref, nil
}

func (mto PropertyDefinitionsMapTypeOptionsAttributes) InternalWithRef(ref terra.Reference) PropertyDefinitionsMapTypeOptionsAttributes {
	return PropertyDefinitionsMapTypeOptionsAttributes{ref: ref}
}

func (mto PropertyDefinitionsMapTypeOptionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return mto.ref.InternalTokens()
}

type PropertyDefinitionsPropertyTypeOptionsAttributes struct {
	ref terra.Reference
}

func (pto PropertyDefinitionsPropertyTypeOptionsAttributes) InternalRef() (terra.Reference, error) {
	return pto.ref, nil
}

func (pto PropertyDefinitionsPropertyTypeOptionsAttributes) InternalWithRef(ref terra.Reference) PropertyDefinitionsPropertyTypeOptionsAttributes {
	return PropertyDefinitionsPropertyTypeOptionsAttributes{ref: ref}
}

func (pto PropertyDefinitionsPropertyTypeOptionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return pto.ref.InternalTokens()
}

func (pto PropertyDefinitionsPropertyTypeOptionsAttributes) PropertyDefinitions() terra.ListValue[PropertyDefinitionsPropertyTypeOptionsPropertyDefinitionsAttributes] {
	return terra.ReferenceAsList[PropertyDefinitionsPropertyTypeOptionsPropertyDefinitionsAttributes](pto.ref.Append("property_definitions"))
}

type PropertyDefinitionsPropertyTypeOptionsPropertyDefinitionsAttributes struct {
	ref terra.Reference
}

func (pd PropertyDefinitionsPropertyTypeOptionsPropertyDefinitionsAttributes) InternalRef() (terra.Reference, error) {
	return pd.ref, nil
}

func (pd PropertyDefinitionsPropertyTypeOptionsPropertyDefinitionsAttributes) InternalWithRef(ref terra.Reference) PropertyDefinitionsPropertyTypeOptionsPropertyDefinitionsAttributes {
	return PropertyDefinitionsPropertyTypeOptionsPropertyDefinitionsAttributes{ref: ref}
}

func (pd PropertyDefinitionsPropertyTypeOptionsPropertyDefinitionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return pd.ref.InternalTokens()
}

func (pd PropertyDefinitionsPropertyTypeOptionsPropertyDefinitionsAttributes) DisplayName() terra.StringValue {
	return terra.ReferenceAsString(pd.ref.Append("display_name"))
}

func (pd PropertyDefinitionsPropertyTypeOptionsPropertyDefinitionsAttributes) IsFilterable() terra.BoolValue {
	return terra.ReferenceAsBool(pd.ref.Append("is_filterable"))
}

func (pd PropertyDefinitionsPropertyTypeOptionsPropertyDefinitionsAttributes) IsMetadata() terra.BoolValue {
	return terra.ReferenceAsBool(pd.ref.Append("is_metadata"))
}

func (pd PropertyDefinitionsPropertyTypeOptionsPropertyDefinitionsAttributes) IsRepeatable() terra.BoolValue {
	return terra.ReferenceAsBool(pd.ref.Append("is_repeatable"))
}

func (pd PropertyDefinitionsPropertyTypeOptionsPropertyDefinitionsAttributes) IsRequired() terra.BoolValue {
	return terra.ReferenceAsBool(pd.ref.Append("is_required"))
}

func (pd PropertyDefinitionsPropertyTypeOptionsPropertyDefinitionsAttributes) IsSearchable() terra.BoolValue {
	return terra.ReferenceAsBool(pd.ref.Append("is_searchable"))
}

func (pd PropertyDefinitionsPropertyTypeOptionsPropertyDefinitionsAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(pd.ref.Append("name"))
}

func (pd PropertyDefinitionsPropertyTypeOptionsPropertyDefinitionsAttributes) RetrievalImportance() terra.StringValue {
	return terra.ReferenceAsString(pd.ref.Append("retrieval_importance"))
}

func (pd PropertyDefinitionsPropertyTypeOptionsPropertyDefinitionsAttributes) DateTimeTypeOptions() terra.ListValue[PropertyDefinitionsPropertyTypeOptionsPropertyDefinitionsDateTimeTypeOptionsAttributes] {
	return terra.ReferenceAsList[PropertyDefinitionsPropertyTypeOptionsPropertyDefinitionsDateTimeTypeOptionsAttributes](pd.ref.Append("date_time_type_options"))
}

func (pd PropertyDefinitionsPropertyTypeOptionsPropertyDefinitionsAttributes) EnumTypeOptions() terra.ListValue[PropertyDefinitionsPropertyTypeOptionsPropertyDefinitionsEnumTypeOptionsAttributes] {
	return terra.ReferenceAsList[PropertyDefinitionsPropertyTypeOptionsPropertyDefinitionsEnumTypeOptionsAttributes](pd.ref.Append("enum_type_options"))
}

func (pd PropertyDefinitionsPropertyTypeOptionsPropertyDefinitionsAttributes) FloatTypeOptions() terra.ListValue[PropertyDefinitionsPropertyTypeOptionsPropertyDefinitionsFloatTypeOptionsAttributes] {
	return terra.ReferenceAsList[PropertyDefinitionsPropertyTypeOptionsPropertyDefinitionsFloatTypeOptionsAttributes](pd.ref.Append("float_type_options"))
}

func (pd PropertyDefinitionsPropertyTypeOptionsPropertyDefinitionsAttributes) IntegerTypeOptions() terra.ListValue[PropertyDefinitionsPropertyTypeOptionsPropertyDefinitionsIntegerTypeOptionsAttributes] {
	return terra.ReferenceAsList[PropertyDefinitionsPropertyTypeOptionsPropertyDefinitionsIntegerTypeOptionsAttributes](pd.ref.Append("integer_type_options"))
}

func (pd PropertyDefinitionsPropertyTypeOptionsPropertyDefinitionsAttributes) MapTypeOptions() terra.ListValue[PropertyDefinitionsPropertyTypeOptionsPropertyDefinitionsMapTypeOptionsAttributes] {
	return terra.ReferenceAsList[PropertyDefinitionsPropertyTypeOptionsPropertyDefinitionsMapTypeOptionsAttributes](pd.ref.Append("map_type_options"))
}

func (pd PropertyDefinitionsPropertyTypeOptionsPropertyDefinitionsAttributes) SchemaSources() terra.ListValue[PropertyDefinitionsPropertyTypeOptionsPropertyDefinitionsSchemaSourcesAttributes] {
	return terra.ReferenceAsList[PropertyDefinitionsPropertyTypeOptionsPropertyDefinitionsSchemaSourcesAttributes](pd.ref.Append("schema_sources"))
}

func (pd PropertyDefinitionsPropertyTypeOptionsPropertyDefinitionsAttributes) TextTypeOptions() terra.ListValue[PropertyDefinitionsPropertyTypeOptionsPropertyDefinitionsTextTypeOptionsAttributes] {
	return terra.ReferenceAsList[PropertyDefinitionsPropertyTypeOptionsPropertyDefinitionsTextTypeOptionsAttributes](pd.ref.Append("text_type_options"))
}

func (pd PropertyDefinitionsPropertyTypeOptionsPropertyDefinitionsAttributes) TimestampTypeOptions() terra.ListValue[PropertyDefinitionsPropertyTypeOptionsPropertyDefinitionsTimestampTypeOptionsAttributes] {
	return terra.ReferenceAsList[PropertyDefinitionsPropertyTypeOptionsPropertyDefinitionsTimestampTypeOptionsAttributes](pd.ref.Append("timestamp_type_options"))
}

type PropertyDefinitionsPropertyTypeOptionsPropertyDefinitionsDateTimeTypeOptionsAttributes struct {
	ref terra.Reference
}

func (dtto PropertyDefinitionsPropertyTypeOptionsPropertyDefinitionsDateTimeTypeOptionsAttributes) InternalRef() (terra.Reference, error) {
	return dtto.ref, nil
}

func (dtto PropertyDefinitionsPropertyTypeOptionsPropertyDefinitionsDateTimeTypeOptionsAttributes) InternalWithRef(ref terra.Reference) PropertyDefinitionsPropertyTypeOptionsPropertyDefinitionsDateTimeTypeOptionsAttributes {
	return PropertyDefinitionsPropertyTypeOptionsPropertyDefinitionsDateTimeTypeOptionsAttributes{ref: ref}
}

func (dtto PropertyDefinitionsPropertyTypeOptionsPropertyDefinitionsDateTimeTypeOptionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dtto.ref.InternalTokens()
}

type PropertyDefinitionsPropertyTypeOptionsPropertyDefinitionsEnumTypeOptionsAttributes struct {
	ref terra.Reference
}

func (eto PropertyDefinitionsPropertyTypeOptionsPropertyDefinitionsEnumTypeOptionsAttributes) InternalRef() (terra.Reference, error) {
	return eto.ref, nil
}

func (eto PropertyDefinitionsPropertyTypeOptionsPropertyDefinitionsEnumTypeOptionsAttributes) InternalWithRef(ref terra.Reference) PropertyDefinitionsPropertyTypeOptionsPropertyDefinitionsEnumTypeOptionsAttributes {
	return PropertyDefinitionsPropertyTypeOptionsPropertyDefinitionsEnumTypeOptionsAttributes{ref: ref}
}

func (eto PropertyDefinitionsPropertyTypeOptionsPropertyDefinitionsEnumTypeOptionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return eto.ref.InternalTokens()
}

func (eto PropertyDefinitionsPropertyTypeOptionsPropertyDefinitionsEnumTypeOptionsAttributes) PossibleValues() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](eto.ref.Append("possible_values"))
}

func (eto PropertyDefinitionsPropertyTypeOptionsPropertyDefinitionsEnumTypeOptionsAttributes) ValidationCheckDisabled() terra.BoolValue {
	return terra.ReferenceAsBool(eto.ref.Append("validation_check_disabled"))
}

type PropertyDefinitionsPropertyTypeOptionsPropertyDefinitionsFloatTypeOptionsAttributes struct {
	ref terra.Reference
}

func (fto PropertyDefinitionsPropertyTypeOptionsPropertyDefinitionsFloatTypeOptionsAttributes) InternalRef() (terra.Reference, error) {
	return fto.ref, nil
}

func (fto PropertyDefinitionsPropertyTypeOptionsPropertyDefinitionsFloatTypeOptionsAttributes) InternalWithRef(ref terra.Reference) PropertyDefinitionsPropertyTypeOptionsPropertyDefinitionsFloatTypeOptionsAttributes {
	return PropertyDefinitionsPropertyTypeOptionsPropertyDefinitionsFloatTypeOptionsAttributes{ref: ref}
}

func (fto PropertyDefinitionsPropertyTypeOptionsPropertyDefinitionsFloatTypeOptionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return fto.ref.InternalTokens()
}

type PropertyDefinitionsPropertyTypeOptionsPropertyDefinitionsIntegerTypeOptionsAttributes struct {
	ref terra.Reference
}

func (ito PropertyDefinitionsPropertyTypeOptionsPropertyDefinitionsIntegerTypeOptionsAttributes) InternalRef() (terra.Reference, error) {
	return ito.ref, nil
}

func (ito PropertyDefinitionsPropertyTypeOptionsPropertyDefinitionsIntegerTypeOptionsAttributes) InternalWithRef(ref terra.Reference) PropertyDefinitionsPropertyTypeOptionsPropertyDefinitionsIntegerTypeOptionsAttributes {
	return PropertyDefinitionsPropertyTypeOptionsPropertyDefinitionsIntegerTypeOptionsAttributes{ref: ref}
}

func (ito PropertyDefinitionsPropertyTypeOptionsPropertyDefinitionsIntegerTypeOptionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ito.ref.InternalTokens()
}

type PropertyDefinitionsPropertyTypeOptionsPropertyDefinitionsMapTypeOptionsAttributes struct {
	ref terra.Reference
}

func (mto PropertyDefinitionsPropertyTypeOptionsPropertyDefinitionsMapTypeOptionsAttributes) InternalRef() (terra.Reference, error) {
	return mto.ref, nil
}

func (mto PropertyDefinitionsPropertyTypeOptionsPropertyDefinitionsMapTypeOptionsAttributes) InternalWithRef(ref terra.Reference) PropertyDefinitionsPropertyTypeOptionsPropertyDefinitionsMapTypeOptionsAttributes {
	return PropertyDefinitionsPropertyTypeOptionsPropertyDefinitionsMapTypeOptionsAttributes{ref: ref}
}

func (mto PropertyDefinitionsPropertyTypeOptionsPropertyDefinitionsMapTypeOptionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return mto.ref.InternalTokens()
}

type PropertyDefinitionsPropertyTypeOptionsPropertyDefinitionsSchemaSourcesAttributes struct {
	ref terra.Reference
}

func (ss PropertyDefinitionsPropertyTypeOptionsPropertyDefinitionsSchemaSourcesAttributes) InternalRef() (terra.Reference, error) {
	return ss.ref, nil
}

func (ss PropertyDefinitionsPropertyTypeOptionsPropertyDefinitionsSchemaSourcesAttributes) InternalWithRef(ref terra.Reference) PropertyDefinitionsPropertyTypeOptionsPropertyDefinitionsSchemaSourcesAttributes {
	return PropertyDefinitionsPropertyTypeOptionsPropertyDefinitionsSchemaSourcesAttributes{ref: ref}
}

func (ss PropertyDefinitionsPropertyTypeOptionsPropertyDefinitionsSchemaSourcesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ss.ref.InternalTokens()
}

func (ss PropertyDefinitionsPropertyTypeOptionsPropertyDefinitionsSchemaSourcesAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(ss.ref.Append("name"))
}

func (ss PropertyDefinitionsPropertyTypeOptionsPropertyDefinitionsSchemaSourcesAttributes) ProcessorType() terra.StringValue {
	return terra.ReferenceAsString(ss.ref.Append("processor_type"))
}

type PropertyDefinitionsPropertyTypeOptionsPropertyDefinitionsTextTypeOptionsAttributes struct {
	ref terra.Reference
}

func (tto PropertyDefinitionsPropertyTypeOptionsPropertyDefinitionsTextTypeOptionsAttributes) InternalRef() (terra.Reference, error) {
	return tto.ref, nil
}

func (tto PropertyDefinitionsPropertyTypeOptionsPropertyDefinitionsTextTypeOptionsAttributes) InternalWithRef(ref terra.Reference) PropertyDefinitionsPropertyTypeOptionsPropertyDefinitionsTextTypeOptionsAttributes {
	return PropertyDefinitionsPropertyTypeOptionsPropertyDefinitionsTextTypeOptionsAttributes{ref: ref}
}

func (tto PropertyDefinitionsPropertyTypeOptionsPropertyDefinitionsTextTypeOptionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return tto.ref.InternalTokens()
}

type PropertyDefinitionsPropertyTypeOptionsPropertyDefinitionsTimestampTypeOptionsAttributes struct {
	ref terra.Reference
}

func (tto PropertyDefinitionsPropertyTypeOptionsPropertyDefinitionsTimestampTypeOptionsAttributes) InternalRef() (terra.Reference, error) {
	return tto.ref, nil
}

func (tto PropertyDefinitionsPropertyTypeOptionsPropertyDefinitionsTimestampTypeOptionsAttributes) InternalWithRef(ref terra.Reference) PropertyDefinitionsPropertyTypeOptionsPropertyDefinitionsTimestampTypeOptionsAttributes {
	return PropertyDefinitionsPropertyTypeOptionsPropertyDefinitionsTimestampTypeOptionsAttributes{ref: ref}
}

func (tto PropertyDefinitionsPropertyTypeOptionsPropertyDefinitionsTimestampTypeOptionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return tto.ref.InternalTokens()
}

type PropertyDefinitionsSchemaSourcesAttributes struct {
	ref terra.Reference
}

func (ss PropertyDefinitionsSchemaSourcesAttributes) InternalRef() (terra.Reference, error) {
	return ss.ref, nil
}

func (ss PropertyDefinitionsSchemaSourcesAttributes) InternalWithRef(ref terra.Reference) PropertyDefinitionsSchemaSourcesAttributes {
	return PropertyDefinitionsSchemaSourcesAttributes{ref: ref}
}

func (ss PropertyDefinitionsSchemaSourcesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ss.ref.InternalTokens()
}

func (ss PropertyDefinitionsSchemaSourcesAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(ss.ref.Append("name"))
}

func (ss PropertyDefinitionsSchemaSourcesAttributes) ProcessorType() terra.StringValue {
	return terra.ReferenceAsString(ss.ref.Append("processor_type"))
}

type PropertyDefinitionsTextTypeOptionsAttributes struct {
	ref terra.Reference
}

func (tto PropertyDefinitionsTextTypeOptionsAttributes) InternalRef() (terra.Reference, error) {
	return tto.ref, nil
}

func (tto PropertyDefinitionsTextTypeOptionsAttributes) InternalWithRef(ref terra.Reference) PropertyDefinitionsTextTypeOptionsAttributes {
	return PropertyDefinitionsTextTypeOptionsAttributes{ref: ref}
}

func (tto PropertyDefinitionsTextTypeOptionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return tto.ref.InternalTokens()
}

type PropertyDefinitionsTimestampTypeOptionsAttributes struct {
	ref terra.Reference
}

func (tto PropertyDefinitionsTimestampTypeOptionsAttributes) InternalRef() (terra.Reference, error) {
	return tto.ref, nil
}

func (tto PropertyDefinitionsTimestampTypeOptionsAttributes) InternalWithRef(ref terra.Reference) PropertyDefinitionsTimestampTypeOptionsAttributes {
	return PropertyDefinitionsTimestampTypeOptionsAttributes{ref: ref}
}

func (tto PropertyDefinitionsTimestampTypeOptionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return tto.ref.InternalTokens()
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("create"))
}

func (t TimeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("delete"))
}

type PropertyDefinitionsState struct {
	DisplayName          string                                         `json:"display_name"`
	IsFilterable         bool                                           `json:"is_filterable"`
	IsMetadata           bool                                           `json:"is_metadata"`
	IsRepeatable         bool                                           `json:"is_repeatable"`
	IsRequired           bool                                           `json:"is_required"`
	IsSearchable         bool                                           `json:"is_searchable"`
	Name                 string                                         `json:"name"`
	RetrievalImportance  string                                         `json:"retrieval_importance"`
	DateTimeTypeOptions  []PropertyDefinitionsDateTimeTypeOptionsState  `json:"date_time_type_options"`
	EnumTypeOptions      []PropertyDefinitionsEnumTypeOptionsState      `json:"enum_type_options"`
	FloatTypeOptions     []PropertyDefinitionsFloatTypeOptionsState     `json:"float_type_options"`
	IntegerTypeOptions   []PropertyDefinitionsIntegerTypeOptionsState   `json:"integer_type_options"`
	MapTypeOptions       []PropertyDefinitionsMapTypeOptionsState       `json:"map_type_options"`
	PropertyTypeOptions  []PropertyDefinitionsPropertyTypeOptionsState  `json:"property_type_options"`
	SchemaSources        []PropertyDefinitionsSchemaSourcesState        `json:"schema_sources"`
	TextTypeOptions      []PropertyDefinitionsTextTypeOptionsState      `json:"text_type_options"`
	TimestampTypeOptions []PropertyDefinitionsTimestampTypeOptionsState `json:"timestamp_type_options"`
}

type PropertyDefinitionsDateTimeTypeOptionsState struct{}

type PropertyDefinitionsEnumTypeOptionsState struct {
	PossibleValues          []string `json:"possible_values"`
	ValidationCheckDisabled bool     `json:"validation_check_disabled"`
}

type PropertyDefinitionsFloatTypeOptionsState struct{}

type PropertyDefinitionsIntegerTypeOptionsState struct{}

type PropertyDefinitionsMapTypeOptionsState struct{}

type PropertyDefinitionsPropertyTypeOptionsState struct {
	PropertyDefinitions []PropertyDefinitionsPropertyTypeOptionsPropertyDefinitionsState `json:"property_definitions"`
}

type PropertyDefinitionsPropertyTypeOptionsPropertyDefinitionsState struct {
	DisplayName          string                                                                               `json:"display_name"`
	IsFilterable         bool                                                                                 `json:"is_filterable"`
	IsMetadata           bool                                                                                 `json:"is_metadata"`
	IsRepeatable         bool                                                                                 `json:"is_repeatable"`
	IsRequired           bool                                                                                 `json:"is_required"`
	IsSearchable         bool                                                                                 `json:"is_searchable"`
	Name                 string                                                                               `json:"name"`
	RetrievalImportance  string                                                                               `json:"retrieval_importance"`
	DateTimeTypeOptions  []PropertyDefinitionsPropertyTypeOptionsPropertyDefinitionsDateTimeTypeOptionsState  `json:"date_time_type_options"`
	EnumTypeOptions      []PropertyDefinitionsPropertyTypeOptionsPropertyDefinitionsEnumTypeOptionsState      `json:"enum_type_options"`
	FloatTypeOptions     []PropertyDefinitionsPropertyTypeOptionsPropertyDefinitionsFloatTypeOptionsState     `json:"float_type_options"`
	IntegerTypeOptions   []PropertyDefinitionsPropertyTypeOptionsPropertyDefinitionsIntegerTypeOptionsState   `json:"integer_type_options"`
	MapTypeOptions       []PropertyDefinitionsPropertyTypeOptionsPropertyDefinitionsMapTypeOptionsState       `json:"map_type_options"`
	SchemaSources        []PropertyDefinitionsPropertyTypeOptionsPropertyDefinitionsSchemaSourcesState        `json:"schema_sources"`
	TextTypeOptions      []PropertyDefinitionsPropertyTypeOptionsPropertyDefinitionsTextTypeOptionsState      `json:"text_type_options"`
	TimestampTypeOptions []PropertyDefinitionsPropertyTypeOptionsPropertyDefinitionsTimestampTypeOptionsState `json:"timestamp_type_options"`
}

type PropertyDefinitionsPropertyTypeOptionsPropertyDefinitionsDateTimeTypeOptionsState struct{}

type PropertyDefinitionsPropertyTypeOptionsPropertyDefinitionsEnumTypeOptionsState struct {
	PossibleValues          []string `json:"possible_values"`
	ValidationCheckDisabled bool     `json:"validation_check_disabled"`
}

type PropertyDefinitionsPropertyTypeOptionsPropertyDefinitionsFloatTypeOptionsState struct{}

type PropertyDefinitionsPropertyTypeOptionsPropertyDefinitionsIntegerTypeOptionsState struct{}

type PropertyDefinitionsPropertyTypeOptionsPropertyDefinitionsMapTypeOptionsState struct{}

type PropertyDefinitionsPropertyTypeOptionsPropertyDefinitionsSchemaSourcesState struct {
	Name          string `json:"name"`
	ProcessorType string `json:"processor_type"`
}

type PropertyDefinitionsPropertyTypeOptionsPropertyDefinitionsTextTypeOptionsState struct{}

type PropertyDefinitionsPropertyTypeOptionsPropertyDefinitionsTimestampTypeOptionsState struct{}

type PropertyDefinitionsSchemaSourcesState struct {
	Name          string `json:"name"`
	ProcessorType string `json:"processor_type"`
}

type PropertyDefinitionsTextTypeOptionsState struct{}

type PropertyDefinitionsTimestampTypeOptionsState struct{}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
}
