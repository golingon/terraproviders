// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google_compute_security_policy

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type AdaptiveProtectionConfig struct {
	// AdaptiveProtectionConfigAutoDeployConfig: optional
	AutoDeployConfig *AdaptiveProtectionConfigAutoDeployConfig `hcl:"auto_deploy_config,block"`
	// AdaptiveProtectionConfigLayer7DdosDefenseConfig: optional
	Layer7DdosDefenseConfig *AdaptiveProtectionConfigLayer7DdosDefenseConfig `hcl:"layer_7_ddos_defense_config,block"`
}

type AdaptiveProtectionConfigAutoDeployConfig struct {
	// ConfidenceThreshold: number, optional
	ConfidenceThreshold terra.NumberValue `hcl:"confidence_threshold,attr"`
	// ExpirationSec: number, optional
	ExpirationSec terra.NumberValue `hcl:"expiration_sec,attr"`
	// ImpactedBaselineThreshold: number, optional
	ImpactedBaselineThreshold terra.NumberValue `hcl:"impacted_baseline_threshold,attr"`
	// LoadThreshold: number, optional
	LoadThreshold terra.NumberValue `hcl:"load_threshold,attr"`
}

type AdaptiveProtectionConfigLayer7DdosDefenseConfig struct {
	// Enable: bool, optional
	Enable terra.BoolValue `hcl:"enable,attr"`
	// RuleVisibility: string, optional
	RuleVisibility terra.StringValue `hcl:"rule_visibility,attr"`
}

type AdvancedOptionsConfig struct {
	// JsonParsing: string, optional
	JsonParsing terra.StringValue `hcl:"json_parsing,attr"`
	// LogLevel: string, optional
	LogLevel terra.StringValue `hcl:"log_level,attr"`
	// UserIpRequestHeaders: set of string, optional
	UserIpRequestHeaders terra.SetValue[terra.StringValue] `hcl:"user_ip_request_headers,attr"`
	// AdvancedOptionsConfigJsonCustomConfig: optional
	JsonCustomConfig *AdvancedOptionsConfigJsonCustomConfig `hcl:"json_custom_config,block"`
}

type AdvancedOptionsConfigJsonCustomConfig struct {
	// ContentTypes: set of string, required
	ContentTypes terra.SetValue[terra.StringValue] `hcl:"content_types,attr" validate:"required"`
}

type RecaptchaOptionsConfig struct {
	// RedirectSiteKey: string, required
	RedirectSiteKey terra.StringValue `hcl:"redirect_site_key,attr" validate:"required"`
}

type Rule struct {
	// Action: string, required
	Action terra.StringValue `hcl:"action,attr" validate:"required"`
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// Preview: bool, optional
	Preview terra.BoolValue `hcl:"preview,attr"`
	// Priority: number, required
	Priority terra.NumberValue `hcl:"priority,attr" validate:"required"`
	// RuleHeaderAction: optional
	HeaderAction *RuleHeaderAction `hcl:"header_action,block"`
	// RuleMatch: required
	Match *RuleMatch `hcl:"match,block" validate:"required"`
	// RulePreconfiguredWafConfig: optional
	PreconfiguredWafConfig *RulePreconfiguredWafConfig `hcl:"preconfigured_waf_config,block"`
	// RuleRateLimitOptions: optional
	RateLimitOptions *RuleRateLimitOptions `hcl:"rate_limit_options,block"`
	// RuleRedirectOptions: optional
	RedirectOptions *RuleRedirectOptions `hcl:"redirect_options,block"`
}

type RuleHeaderAction struct {
	// RuleHeaderActionRequestHeadersToAdds: min=1
	RequestHeadersToAdds []RuleHeaderActionRequestHeadersToAdds `hcl:"request_headers_to_adds,block" validate:"min=1"`
}

type RuleHeaderActionRequestHeadersToAdds struct {
	// HeaderName: string, required
	HeaderName terra.StringValue `hcl:"header_name,attr" validate:"required"`
	// HeaderValue: string, optional
	HeaderValue terra.StringValue `hcl:"header_value,attr"`
}

type RuleMatch struct {
	// VersionedExpr: string, optional
	VersionedExpr terra.StringValue `hcl:"versioned_expr,attr"`
	// RuleMatchConfig: optional
	Config *RuleMatchConfig `hcl:"config,block"`
	// RuleMatchExpr: optional
	Expr *RuleMatchExpr `hcl:"expr,block"`
}

type RuleMatchConfig struct {
	// SrcIpRanges: set of string, required
	SrcIpRanges terra.SetValue[terra.StringValue] `hcl:"src_ip_ranges,attr" validate:"required"`
}

type RuleMatchExpr struct {
	// Expression: string, required
	Expression terra.StringValue `hcl:"expression,attr" validate:"required"`
}

type RulePreconfiguredWafConfig struct {
	// RulePreconfiguredWafConfigExclusion: min=0
	Exclusion []RulePreconfiguredWafConfigExclusion `hcl:"exclusion,block" validate:"min=0"`
}

type RulePreconfiguredWafConfigExclusion struct {
	// TargetRuleIds: set of string, optional
	TargetRuleIds terra.SetValue[terra.StringValue] `hcl:"target_rule_ids,attr"`
	// TargetRuleSet: string, required
	TargetRuleSet terra.StringValue `hcl:"target_rule_set,attr" validate:"required"`
	// RulePreconfiguredWafConfigExclusionRequestCookie: min=0
	RequestCookie []RulePreconfiguredWafConfigExclusionRequestCookie `hcl:"request_cookie,block" validate:"min=0"`
	// RulePreconfiguredWafConfigExclusionRequestHeader: min=0
	RequestHeader []RulePreconfiguredWafConfigExclusionRequestHeader `hcl:"request_header,block" validate:"min=0"`
	// RulePreconfiguredWafConfigExclusionRequestQueryParam: min=0
	RequestQueryParam []RulePreconfiguredWafConfigExclusionRequestQueryParam `hcl:"request_query_param,block" validate:"min=0"`
	// RulePreconfiguredWafConfigExclusionRequestUri: min=0
	RequestUri []RulePreconfiguredWafConfigExclusionRequestUri `hcl:"request_uri,block" validate:"min=0"`
}

type RulePreconfiguredWafConfigExclusionRequestCookie struct {
	// Operator: string, required
	Operator terra.StringValue `hcl:"operator,attr" validate:"required"`
	// Value: string, optional
	Value terra.StringValue `hcl:"value,attr"`
}

type RulePreconfiguredWafConfigExclusionRequestHeader struct {
	// Operator: string, required
	Operator terra.StringValue `hcl:"operator,attr" validate:"required"`
	// Value: string, optional
	Value terra.StringValue `hcl:"value,attr"`
}

type RulePreconfiguredWafConfigExclusionRequestQueryParam struct {
	// Operator: string, required
	Operator terra.StringValue `hcl:"operator,attr" validate:"required"`
	// Value: string, optional
	Value terra.StringValue `hcl:"value,attr"`
}

type RulePreconfiguredWafConfigExclusionRequestUri struct {
	// Operator: string, required
	Operator terra.StringValue `hcl:"operator,attr" validate:"required"`
	// Value: string, optional
	Value terra.StringValue `hcl:"value,attr"`
}

type RuleRateLimitOptions struct {
	// BanDurationSec: number, optional
	BanDurationSec terra.NumberValue `hcl:"ban_duration_sec,attr"`
	// ConformAction: string, required
	ConformAction terra.StringValue `hcl:"conform_action,attr" validate:"required"`
	// EnforceOnKey: string, optional
	EnforceOnKey terra.StringValue `hcl:"enforce_on_key,attr"`
	// EnforceOnKeyName: string, optional
	EnforceOnKeyName terra.StringValue `hcl:"enforce_on_key_name,attr"`
	// ExceedAction: string, required
	ExceedAction terra.StringValue `hcl:"exceed_action,attr" validate:"required"`
	// RuleRateLimitOptionsBanThreshold: optional
	BanThreshold *RuleRateLimitOptionsBanThreshold `hcl:"ban_threshold,block"`
	// RuleRateLimitOptionsEnforceOnKeyConfigs: min=0
	EnforceOnKeyConfigs []RuleRateLimitOptionsEnforceOnKeyConfigs `hcl:"enforce_on_key_configs,block" validate:"min=0"`
	// RuleRateLimitOptionsExceedRedirectOptions: optional
	ExceedRedirectOptions *RuleRateLimitOptionsExceedRedirectOptions `hcl:"exceed_redirect_options,block"`
	// RuleRateLimitOptionsRateLimitThreshold: required
	RateLimitThreshold *RuleRateLimitOptionsRateLimitThreshold `hcl:"rate_limit_threshold,block" validate:"required"`
}

type RuleRateLimitOptionsBanThreshold struct {
	// Count: number, required
	Count terra.NumberValue `hcl:"count,attr" validate:"required"`
	// IntervalSec: number, required
	IntervalSec terra.NumberValue `hcl:"interval_sec,attr" validate:"required"`
}

type RuleRateLimitOptionsEnforceOnKeyConfigs struct {
	// EnforceOnKeyName: string, optional
	EnforceOnKeyName terra.StringValue `hcl:"enforce_on_key_name,attr"`
	// EnforceOnKeyType: string, optional
	EnforceOnKeyType terra.StringValue `hcl:"enforce_on_key_type,attr"`
}

type RuleRateLimitOptionsExceedRedirectOptions struct {
	// Target: string, optional
	Target terra.StringValue `hcl:"target,attr"`
	// Type: string, required
	Type terra.StringValue `hcl:"type,attr" validate:"required"`
}

type RuleRateLimitOptionsRateLimitThreshold struct {
	// Count: number, required
	Count terra.NumberValue `hcl:"count,attr" validate:"required"`
	// IntervalSec: number, required
	IntervalSec terra.NumberValue `hcl:"interval_sec,attr" validate:"required"`
}

type RuleRedirectOptions struct {
	// Target: string, optional
	Target terra.StringValue `hcl:"target,attr"`
	// Type: string, required
	Type terra.StringValue `hcl:"type,attr" validate:"required"`
}

type Timeouts struct {
	// Create: string, optional
	Create terra.StringValue `hcl:"create,attr"`
	// Delete: string, optional
	Delete terra.StringValue `hcl:"delete,attr"`
	// Update: string, optional
	Update terra.StringValue `hcl:"update,attr"`
}

type AdaptiveProtectionConfigAttributes struct {
	ref terra.Reference
}

func (apc AdaptiveProtectionConfigAttributes) InternalRef() (terra.Reference, error) {
	return apc.ref, nil
}

func (apc AdaptiveProtectionConfigAttributes) InternalWithRef(ref terra.Reference) AdaptiveProtectionConfigAttributes {
	return AdaptiveProtectionConfigAttributes{ref: ref}
}

func (apc AdaptiveProtectionConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return apc.ref.InternalTokens()
}

func (apc AdaptiveProtectionConfigAttributes) AutoDeployConfig() terra.ListValue[AdaptiveProtectionConfigAutoDeployConfigAttributes] {
	return terra.ReferenceAsList[AdaptiveProtectionConfigAutoDeployConfigAttributes](apc.ref.Append("auto_deploy_config"))
}

func (apc AdaptiveProtectionConfigAttributes) Layer7DdosDefenseConfig() terra.ListValue[AdaptiveProtectionConfigLayer7DdosDefenseConfigAttributes] {
	return terra.ReferenceAsList[AdaptiveProtectionConfigLayer7DdosDefenseConfigAttributes](apc.ref.Append("layer_7_ddos_defense_config"))
}

type AdaptiveProtectionConfigAutoDeployConfigAttributes struct {
	ref terra.Reference
}

func (adc AdaptiveProtectionConfigAutoDeployConfigAttributes) InternalRef() (terra.Reference, error) {
	return adc.ref, nil
}

func (adc AdaptiveProtectionConfigAutoDeployConfigAttributes) InternalWithRef(ref terra.Reference) AdaptiveProtectionConfigAutoDeployConfigAttributes {
	return AdaptiveProtectionConfigAutoDeployConfigAttributes{ref: ref}
}

func (adc AdaptiveProtectionConfigAutoDeployConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return adc.ref.InternalTokens()
}

func (adc AdaptiveProtectionConfigAutoDeployConfigAttributes) ConfidenceThreshold() terra.NumberValue {
	return terra.ReferenceAsNumber(adc.ref.Append("confidence_threshold"))
}

func (adc AdaptiveProtectionConfigAutoDeployConfigAttributes) ExpirationSec() terra.NumberValue {
	return terra.ReferenceAsNumber(adc.ref.Append("expiration_sec"))
}

func (adc AdaptiveProtectionConfigAutoDeployConfigAttributes) ImpactedBaselineThreshold() terra.NumberValue {
	return terra.ReferenceAsNumber(adc.ref.Append("impacted_baseline_threshold"))
}

func (adc AdaptiveProtectionConfigAutoDeployConfigAttributes) LoadThreshold() terra.NumberValue {
	return terra.ReferenceAsNumber(adc.ref.Append("load_threshold"))
}

type AdaptiveProtectionConfigLayer7DdosDefenseConfigAttributes struct {
	ref terra.Reference
}

func (l7ddc AdaptiveProtectionConfigLayer7DdosDefenseConfigAttributes) InternalRef() (terra.Reference, error) {
	return l7ddc.ref, nil
}

func (l7ddc AdaptiveProtectionConfigLayer7DdosDefenseConfigAttributes) InternalWithRef(ref terra.Reference) AdaptiveProtectionConfigLayer7DdosDefenseConfigAttributes {
	return AdaptiveProtectionConfigLayer7DdosDefenseConfigAttributes{ref: ref}
}

func (l7ddc AdaptiveProtectionConfigLayer7DdosDefenseConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return l7ddc.ref.InternalTokens()
}

func (l7ddc AdaptiveProtectionConfigLayer7DdosDefenseConfigAttributes) Enable() terra.BoolValue {
	return terra.ReferenceAsBool(l7ddc.ref.Append("enable"))
}

func (l7ddc AdaptiveProtectionConfigLayer7DdosDefenseConfigAttributes) RuleVisibility() terra.StringValue {
	return terra.ReferenceAsString(l7ddc.ref.Append("rule_visibility"))
}

type AdvancedOptionsConfigAttributes struct {
	ref terra.Reference
}

func (aoc AdvancedOptionsConfigAttributes) InternalRef() (terra.Reference, error) {
	return aoc.ref, nil
}

func (aoc AdvancedOptionsConfigAttributes) InternalWithRef(ref terra.Reference) AdvancedOptionsConfigAttributes {
	return AdvancedOptionsConfigAttributes{ref: ref}
}

func (aoc AdvancedOptionsConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return aoc.ref.InternalTokens()
}

func (aoc AdvancedOptionsConfigAttributes) JsonParsing() terra.StringValue {
	return terra.ReferenceAsString(aoc.ref.Append("json_parsing"))
}

func (aoc AdvancedOptionsConfigAttributes) LogLevel() terra.StringValue {
	return terra.ReferenceAsString(aoc.ref.Append("log_level"))
}

func (aoc AdvancedOptionsConfigAttributes) UserIpRequestHeaders() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](aoc.ref.Append("user_ip_request_headers"))
}

func (aoc AdvancedOptionsConfigAttributes) JsonCustomConfig() terra.ListValue[AdvancedOptionsConfigJsonCustomConfigAttributes] {
	return terra.ReferenceAsList[AdvancedOptionsConfigJsonCustomConfigAttributes](aoc.ref.Append("json_custom_config"))
}

type AdvancedOptionsConfigJsonCustomConfigAttributes struct {
	ref terra.Reference
}

func (jcc AdvancedOptionsConfigJsonCustomConfigAttributes) InternalRef() (terra.Reference, error) {
	return jcc.ref, nil
}

func (jcc AdvancedOptionsConfigJsonCustomConfigAttributes) InternalWithRef(ref terra.Reference) AdvancedOptionsConfigJsonCustomConfigAttributes {
	return AdvancedOptionsConfigJsonCustomConfigAttributes{ref: ref}
}

func (jcc AdvancedOptionsConfigJsonCustomConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return jcc.ref.InternalTokens()
}

func (jcc AdvancedOptionsConfigJsonCustomConfigAttributes) ContentTypes() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](jcc.ref.Append("content_types"))
}

type RecaptchaOptionsConfigAttributes struct {
	ref terra.Reference
}

func (roc RecaptchaOptionsConfigAttributes) InternalRef() (terra.Reference, error) {
	return roc.ref, nil
}

func (roc RecaptchaOptionsConfigAttributes) InternalWithRef(ref terra.Reference) RecaptchaOptionsConfigAttributes {
	return RecaptchaOptionsConfigAttributes{ref: ref}
}

func (roc RecaptchaOptionsConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return roc.ref.InternalTokens()
}

func (roc RecaptchaOptionsConfigAttributes) RedirectSiteKey() terra.StringValue {
	return terra.ReferenceAsString(roc.ref.Append("redirect_site_key"))
}

type RuleAttributes struct {
	ref terra.Reference
}

func (r RuleAttributes) InternalRef() (terra.Reference, error) {
	return r.ref, nil
}

func (r RuleAttributes) InternalWithRef(ref terra.Reference) RuleAttributes {
	return RuleAttributes{ref: ref}
}

func (r RuleAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return r.ref.InternalTokens()
}

func (r RuleAttributes) Action() terra.StringValue {
	return terra.ReferenceAsString(r.ref.Append("action"))
}

func (r RuleAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(r.ref.Append("description"))
}

func (r RuleAttributes) Preview() terra.BoolValue {
	return terra.ReferenceAsBool(r.ref.Append("preview"))
}

func (r RuleAttributes) Priority() terra.NumberValue {
	return terra.ReferenceAsNumber(r.ref.Append("priority"))
}

func (r RuleAttributes) HeaderAction() terra.ListValue[RuleHeaderActionAttributes] {
	return terra.ReferenceAsList[RuleHeaderActionAttributes](r.ref.Append("header_action"))
}

func (r RuleAttributes) Match() terra.ListValue[RuleMatchAttributes] {
	return terra.ReferenceAsList[RuleMatchAttributes](r.ref.Append("match"))
}

func (r RuleAttributes) PreconfiguredWafConfig() terra.ListValue[RulePreconfiguredWafConfigAttributes] {
	return terra.ReferenceAsList[RulePreconfiguredWafConfigAttributes](r.ref.Append("preconfigured_waf_config"))
}

func (r RuleAttributes) RateLimitOptions() terra.ListValue[RuleRateLimitOptionsAttributes] {
	return terra.ReferenceAsList[RuleRateLimitOptionsAttributes](r.ref.Append("rate_limit_options"))
}

func (r RuleAttributes) RedirectOptions() terra.ListValue[RuleRedirectOptionsAttributes] {
	return terra.ReferenceAsList[RuleRedirectOptionsAttributes](r.ref.Append("redirect_options"))
}

type RuleHeaderActionAttributes struct {
	ref terra.Reference
}

func (ha RuleHeaderActionAttributes) InternalRef() (terra.Reference, error) {
	return ha.ref, nil
}

func (ha RuleHeaderActionAttributes) InternalWithRef(ref terra.Reference) RuleHeaderActionAttributes {
	return RuleHeaderActionAttributes{ref: ref}
}

func (ha RuleHeaderActionAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ha.ref.InternalTokens()
}

func (ha RuleHeaderActionAttributes) RequestHeadersToAdds() terra.ListValue[RuleHeaderActionRequestHeadersToAddsAttributes] {
	return terra.ReferenceAsList[RuleHeaderActionRequestHeadersToAddsAttributes](ha.ref.Append("request_headers_to_adds"))
}

type RuleHeaderActionRequestHeadersToAddsAttributes struct {
	ref terra.Reference
}

func (rhta RuleHeaderActionRequestHeadersToAddsAttributes) InternalRef() (terra.Reference, error) {
	return rhta.ref, nil
}

func (rhta RuleHeaderActionRequestHeadersToAddsAttributes) InternalWithRef(ref terra.Reference) RuleHeaderActionRequestHeadersToAddsAttributes {
	return RuleHeaderActionRequestHeadersToAddsAttributes{ref: ref}
}

func (rhta RuleHeaderActionRequestHeadersToAddsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rhta.ref.InternalTokens()
}

func (rhta RuleHeaderActionRequestHeadersToAddsAttributes) HeaderName() terra.StringValue {
	return terra.ReferenceAsString(rhta.ref.Append("header_name"))
}

func (rhta RuleHeaderActionRequestHeadersToAddsAttributes) HeaderValue() terra.StringValue {
	return terra.ReferenceAsString(rhta.ref.Append("header_value"))
}

type RuleMatchAttributes struct {
	ref terra.Reference
}

func (m RuleMatchAttributes) InternalRef() (terra.Reference, error) {
	return m.ref, nil
}

func (m RuleMatchAttributes) InternalWithRef(ref terra.Reference) RuleMatchAttributes {
	return RuleMatchAttributes{ref: ref}
}

func (m RuleMatchAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return m.ref.InternalTokens()
}

func (m RuleMatchAttributes) VersionedExpr() terra.StringValue {
	return terra.ReferenceAsString(m.ref.Append("versioned_expr"))
}

func (m RuleMatchAttributes) Config() terra.ListValue[RuleMatchConfigAttributes] {
	return terra.ReferenceAsList[RuleMatchConfigAttributes](m.ref.Append("config"))
}

func (m RuleMatchAttributes) Expr() terra.ListValue[RuleMatchExprAttributes] {
	return terra.ReferenceAsList[RuleMatchExprAttributes](m.ref.Append("expr"))
}

type RuleMatchConfigAttributes struct {
	ref terra.Reference
}

func (c RuleMatchConfigAttributes) InternalRef() (terra.Reference, error) {
	return c.ref, nil
}

func (c RuleMatchConfigAttributes) InternalWithRef(ref terra.Reference) RuleMatchConfigAttributes {
	return RuleMatchConfigAttributes{ref: ref}
}

func (c RuleMatchConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return c.ref.InternalTokens()
}

func (c RuleMatchConfigAttributes) SrcIpRanges() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](c.ref.Append("src_ip_ranges"))
}

type RuleMatchExprAttributes struct {
	ref terra.Reference
}

func (e RuleMatchExprAttributes) InternalRef() (terra.Reference, error) {
	return e.ref, nil
}

func (e RuleMatchExprAttributes) InternalWithRef(ref terra.Reference) RuleMatchExprAttributes {
	return RuleMatchExprAttributes{ref: ref}
}

func (e RuleMatchExprAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return e.ref.InternalTokens()
}

func (e RuleMatchExprAttributes) Expression() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("expression"))
}

type RulePreconfiguredWafConfigAttributes struct {
	ref terra.Reference
}

func (pwc RulePreconfiguredWafConfigAttributes) InternalRef() (terra.Reference, error) {
	return pwc.ref, nil
}

func (pwc RulePreconfiguredWafConfigAttributes) InternalWithRef(ref terra.Reference) RulePreconfiguredWafConfigAttributes {
	return RulePreconfiguredWafConfigAttributes{ref: ref}
}

func (pwc RulePreconfiguredWafConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return pwc.ref.InternalTokens()
}

func (pwc RulePreconfiguredWafConfigAttributes) Exclusion() terra.ListValue[RulePreconfiguredWafConfigExclusionAttributes] {
	return terra.ReferenceAsList[RulePreconfiguredWafConfigExclusionAttributes](pwc.ref.Append("exclusion"))
}

type RulePreconfiguredWafConfigExclusionAttributes struct {
	ref terra.Reference
}

func (e RulePreconfiguredWafConfigExclusionAttributes) InternalRef() (terra.Reference, error) {
	return e.ref, nil
}

func (e RulePreconfiguredWafConfigExclusionAttributes) InternalWithRef(ref terra.Reference) RulePreconfiguredWafConfigExclusionAttributes {
	return RulePreconfiguredWafConfigExclusionAttributes{ref: ref}
}

func (e RulePreconfiguredWafConfigExclusionAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return e.ref.InternalTokens()
}

func (e RulePreconfiguredWafConfigExclusionAttributes) TargetRuleIds() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](e.ref.Append("target_rule_ids"))
}

func (e RulePreconfiguredWafConfigExclusionAttributes) TargetRuleSet() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("target_rule_set"))
}

func (e RulePreconfiguredWafConfigExclusionAttributes) RequestCookie() terra.ListValue[RulePreconfiguredWafConfigExclusionRequestCookieAttributes] {
	return terra.ReferenceAsList[RulePreconfiguredWafConfigExclusionRequestCookieAttributes](e.ref.Append("request_cookie"))
}

func (e RulePreconfiguredWafConfigExclusionAttributes) RequestHeader() terra.ListValue[RulePreconfiguredWafConfigExclusionRequestHeaderAttributes] {
	return terra.ReferenceAsList[RulePreconfiguredWafConfigExclusionRequestHeaderAttributes](e.ref.Append("request_header"))
}

func (e RulePreconfiguredWafConfigExclusionAttributes) RequestQueryParam() terra.ListValue[RulePreconfiguredWafConfigExclusionRequestQueryParamAttributes] {
	return terra.ReferenceAsList[RulePreconfiguredWafConfigExclusionRequestQueryParamAttributes](e.ref.Append("request_query_param"))
}

func (e RulePreconfiguredWafConfigExclusionAttributes) RequestUri() terra.ListValue[RulePreconfiguredWafConfigExclusionRequestUriAttributes] {
	return terra.ReferenceAsList[RulePreconfiguredWafConfigExclusionRequestUriAttributes](e.ref.Append("request_uri"))
}

type RulePreconfiguredWafConfigExclusionRequestCookieAttributes struct {
	ref terra.Reference
}

func (rc RulePreconfiguredWafConfigExclusionRequestCookieAttributes) InternalRef() (terra.Reference, error) {
	return rc.ref, nil
}

func (rc RulePreconfiguredWafConfigExclusionRequestCookieAttributes) InternalWithRef(ref terra.Reference) RulePreconfiguredWafConfigExclusionRequestCookieAttributes {
	return RulePreconfiguredWafConfigExclusionRequestCookieAttributes{ref: ref}
}

func (rc RulePreconfiguredWafConfigExclusionRequestCookieAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rc.ref.InternalTokens()
}

func (rc RulePreconfiguredWafConfigExclusionRequestCookieAttributes) Operator() terra.StringValue {
	return terra.ReferenceAsString(rc.ref.Append("operator"))
}

func (rc RulePreconfiguredWafConfigExclusionRequestCookieAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(rc.ref.Append("value"))
}

type RulePreconfiguredWafConfigExclusionRequestHeaderAttributes struct {
	ref terra.Reference
}

func (rh RulePreconfiguredWafConfigExclusionRequestHeaderAttributes) InternalRef() (terra.Reference, error) {
	return rh.ref, nil
}

func (rh RulePreconfiguredWafConfigExclusionRequestHeaderAttributes) InternalWithRef(ref terra.Reference) RulePreconfiguredWafConfigExclusionRequestHeaderAttributes {
	return RulePreconfiguredWafConfigExclusionRequestHeaderAttributes{ref: ref}
}

func (rh RulePreconfiguredWafConfigExclusionRequestHeaderAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rh.ref.InternalTokens()
}

func (rh RulePreconfiguredWafConfigExclusionRequestHeaderAttributes) Operator() terra.StringValue {
	return terra.ReferenceAsString(rh.ref.Append("operator"))
}

func (rh RulePreconfiguredWafConfigExclusionRequestHeaderAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(rh.ref.Append("value"))
}

type RulePreconfiguredWafConfigExclusionRequestQueryParamAttributes struct {
	ref terra.Reference
}

func (rqp RulePreconfiguredWafConfigExclusionRequestQueryParamAttributes) InternalRef() (terra.Reference, error) {
	return rqp.ref, nil
}

func (rqp RulePreconfiguredWafConfigExclusionRequestQueryParamAttributes) InternalWithRef(ref terra.Reference) RulePreconfiguredWafConfigExclusionRequestQueryParamAttributes {
	return RulePreconfiguredWafConfigExclusionRequestQueryParamAttributes{ref: ref}
}

func (rqp RulePreconfiguredWafConfigExclusionRequestQueryParamAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rqp.ref.InternalTokens()
}

func (rqp RulePreconfiguredWafConfigExclusionRequestQueryParamAttributes) Operator() terra.StringValue {
	return terra.ReferenceAsString(rqp.ref.Append("operator"))
}

func (rqp RulePreconfiguredWafConfigExclusionRequestQueryParamAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(rqp.ref.Append("value"))
}

type RulePreconfiguredWafConfigExclusionRequestUriAttributes struct {
	ref terra.Reference
}

func (ru RulePreconfiguredWafConfigExclusionRequestUriAttributes) InternalRef() (terra.Reference, error) {
	return ru.ref, nil
}

func (ru RulePreconfiguredWafConfigExclusionRequestUriAttributes) InternalWithRef(ref terra.Reference) RulePreconfiguredWafConfigExclusionRequestUriAttributes {
	return RulePreconfiguredWafConfigExclusionRequestUriAttributes{ref: ref}
}

func (ru RulePreconfiguredWafConfigExclusionRequestUriAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ru.ref.InternalTokens()
}

func (ru RulePreconfiguredWafConfigExclusionRequestUriAttributes) Operator() terra.StringValue {
	return terra.ReferenceAsString(ru.ref.Append("operator"))
}

func (ru RulePreconfiguredWafConfigExclusionRequestUriAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(ru.ref.Append("value"))
}

type RuleRateLimitOptionsAttributes struct {
	ref terra.Reference
}

func (rlo RuleRateLimitOptionsAttributes) InternalRef() (terra.Reference, error) {
	return rlo.ref, nil
}

func (rlo RuleRateLimitOptionsAttributes) InternalWithRef(ref terra.Reference) RuleRateLimitOptionsAttributes {
	return RuleRateLimitOptionsAttributes{ref: ref}
}

func (rlo RuleRateLimitOptionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rlo.ref.InternalTokens()
}

func (rlo RuleRateLimitOptionsAttributes) BanDurationSec() terra.NumberValue {
	return terra.ReferenceAsNumber(rlo.ref.Append("ban_duration_sec"))
}

func (rlo RuleRateLimitOptionsAttributes) ConformAction() terra.StringValue {
	return terra.ReferenceAsString(rlo.ref.Append("conform_action"))
}

func (rlo RuleRateLimitOptionsAttributes) EnforceOnKey() terra.StringValue {
	return terra.ReferenceAsString(rlo.ref.Append("enforce_on_key"))
}

func (rlo RuleRateLimitOptionsAttributes) EnforceOnKeyName() terra.StringValue {
	return terra.ReferenceAsString(rlo.ref.Append("enforce_on_key_name"))
}

func (rlo RuleRateLimitOptionsAttributes) ExceedAction() terra.StringValue {
	return terra.ReferenceAsString(rlo.ref.Append("exceed_action"))
}

func (rlo RuleRateLimitOptionsAttributes) BanThreshold() terra.ListValue[RuleRateLimitOptionsBanThresholdAttributes] {
	return terra.ReferenceAsList[RuleRateLimitOptionsBanThresholdAttributes](rlo.ref.Append("ban_threshold"))
}

func (rlo RuleRateLimitOptionsAttributes) EnforceOnKeyConfigs() terra.ListValue[RuleRateLimitOptionsEnforceOnKeyConfigsAttributes] {
	return terra.ReferenceAsList[RuleRateLimitOptionsEnforceOnKeyConfigsAttributes](rlo.ref.Append("enforce_on_key_configs"))
}

func (rlo RuleRateLimitOptionsAttributes) ExceedRedirectOptions() terra.ListValue[RuleRateLimitOptionsExceedRedirectOptionsAttributes] {
	return terra.ReferenceAsList[RuleRateLimitOptionsExceedRedirectOptionsAttributes](rlo.ref.Append("exceed_redirect_options"))
}

func (rlo RuleRateLimitOptionsAttributes) RateLimitThreshold() terra.ListValue[RuleRateLimitOptionsRateLimitThresholdAttributes] {
	return terra.ReferenceAsList[RuleRateLimitOptionsRateLimitThresholdAttributes](rlo.ref.Append("rate_limit_threshold"))
}

type RuleRateLimitOptionsBanThresholdAttributes struct {
	ref terra.Reference
}

func (bt RuleRateLimitOptionsBanThresholdAttributes) InternalRef() (terra.Reference, error) {
	return bt.ref, nil
}

func (bt RuleRateLimitOptionsBanThresholdAttributes) InternalWithRef(ref terra.Reference) RuleRateLimitOptionsBanThresholdAttributes {
	return RuleRateLimitOptionsBanThresholdAttributes{ref: ref}
}

func (bt RuleRateLimitOptionsBanThresholdAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return bt.ref.InternalTokens()
}

func (bt RuleRateLimitOptionsBanThresholdAttributes) Count() terra.NumberValue {
	return terra.ReferenceAsNumber(bt.ref.Append("count"))
}

func (bt RuleRateLimitOptionsBanThresholdAttributes) IntervalSec() terra.NumberValue {
	return terra.ReferenceAsNumber(bt.ref.Append("interval_sec"))
}

type RuleRateLimitOptionsEnforceOnKeyConfigsAttributes struct {
	ref terra.Reference
}

func (eokc RuleRateLimitOptionsEnforceOnKeyConfigsAttributes) InternalRef() (terra.Reference, error) {
	return eokc.ref, nil
}

func (eokc RuleRateLimitOptionsEnforceOnKeyConfigsAttributes) InternalWithRef(ref terra.Reference) RuleRateLimitOptionsEnforceOnKeyConfigsAttributes {
	return RuleRateLimitOptionsEnforceOnKeyConfigsAttributes{ref: ref}
}

func (eokc RuleRateLimitOptionsEnforceOnKeyConfigsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return eokc.ref.InternalTokens()
}

func (eokc RuleRateLimitOptionsEnforceOnKeyConfigsAttributes) EnforceOnKeyName() terra.StringValue {
	return terra.ReferenceAsString(eokc.ref.Append("enforce_on_key_name"))
}

func (eokc RuleRateLimitOptionsEnforceOnKeyConfigsAttributes) EnforceOnKeyType() terra.StringValue {
	return terra.ReferenceAsString(eokc.ref.Append("enforce_on_key_type"))
}

type RuleRateLimitOptionsExceedRedirectOptionsAttributes struct {
	ref terra.Reference
}

func (ero RuleRateLimitOptionsExceedRedirectOptionsAttributes) InternalRef() (terra.Reference, error) {
	return ero.ref, nil
}

func (ero RuleRateLimitOptionsExceedRedirectOptionsAttributes) InternalWithRef(ref terra.Reference) RuleRateLimitOptionsExceedRedirectOptionsAttributes {
	return RuleRateLimitOptionsExceedRedirectOptionsAttributes{ref: ref}
}

func (ero RuleRateLimitOptionsExceedRedirectOptionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ero.ref.InternalTokens()
}

func (ero RuleRateLimitOptionsExceedRedirectOptionsAttributes) Target() terra.StringValue {
	return terra.ReferenceAsString(ero.ref.Append("target"))
}

func (ero RuleRateLimitOptionsExceedRedirectOptionsAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(ero.ref.Append("type"))
}

type RuleRateLimitOptionsRateLimitThresholdAttributes struct {
	ref terra.Reference
}

func (rlt RuleRateLimitOptionsRateLimitThresholdAttributes) InternalRef() (terra.Reference, error) {
	return rlt.ref, nil
}

func (rlt RuleRateLimitOptionsRateLimitThresholdAttributes) InternalWithRef(ref terra.Reference) RuleRateLimitOptionsRateLimitThresholdAttributes {
	return RuleRateLimitOptionsRateLimitThresholdAttributes{ref: ref}
}

func (rlt RuleRateLimitOptionsRateLimitThresholdAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rlt.ref.InternalTokens()
}

func (rlt RuleRateLimitOptionsRateLimitThresholdAttributes) Count() terra.NumberValue {
	return terra.ReferenceAsNumber(rlt.ref.Append("count"))
}

func (rlt RuleRateLimitOptionsRateLimitThresholdAttributes) IntervalSec() terra.NumberValue {
	return terra.ReferenceAsNumber(rlt.ref.Append("interval_sec"))
}

type RuleRedirectOptionsAttributes struct {
	ref terra.Reference
}

func (ro RuleRedirectOptionsAttributes) InternalRef() (terra.Reference, error) {
	return ro.ref, nil
}

func (ro RuleRedirectOptionsAttributes) InternalWithRef(ref terra.Reference) RuleRedirectOptionsAttributes {
	return RuleRedirectOptionsAttributes{ref: ref}
}

func (ro RuleRedirectOptionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ro.ref.InternalTokens()
}

func (ro RuleRedirectOptionsAttributes) Target() terra.StringValue {
	return terra.ReferenceAsString(ro.ref.Append("target"))
}

func (ro RuleRedirectOptionsAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(ro.ref.Append("type"))
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("create"))
}

func (t TimeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("delete"))
}

func (t TimeoutsAttributes) Update() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("update"))
}

type AdaptiveProtectionConfigState struct {
	AutoDeployConfig        []AdaptiveProtectionConfigAutoDeployConfigState        `json:"auto_deploy_config"`
	Layer7DdosDefenseConfig []AdaptiveProtectionConfigLayer7DdosDefenseConfigState `json:"layer_7_ddos_defense_config"`
}

type AdaptiveProtectionConfigAutoDeployConfigState struct {
	ConfidenceThreshold       float64 `json:"confidence_threshold"`
	ExpirationSec             float64 `json:"expiration_sec"`
	ImpactedBaselineThreshold float64 `json:"impacted_baseline_threshold"`
	LoadThreshold             float64 `json:"load_threshold"`
}

type AdaptiveProtectionConfigLayer7DdosDefenseConfigState struct {
	Enable         bool   `json:"enable"`
	RuleVisibility string `json:"rule_visibility"`
}

type AdvancedOptionsConfigState struct {
	JsonParsing          string                                       `json:"json_parsing"`
	LogLevel             string                                       `json:"log_level"`
	UserIpRequestHeaders []string                                     `json:"user_ip_request_headers"`
	JsonCustomConfig     []AdvancedOptionsConfigJsonCustomConfigState `json:"json_custom_config"`
}

type AdvancedOptionsConfigJsonCustomConfigState struct {
	ContentTypes []string `json:"content_types"`
}

type RecaptchaOptionsConfigState struct {
	RedirectSiteKey string `json:"redirect_site_key"`
}

type RuleState struct {
	Action                 string                            `json:"action"`
	Description            string                            `json:"description"`
	Preview                bool                              `json:"preview"`
	Priority               float64                           `json:"priority"`
	HeaderAction           []RuleHeaderActionState           `json:"header_action"`
	Match                  []RuleMatchState                  `json:"match"`
	PreconfiguredWafConfig []RulePreconfiguredWafConfigState `json:"preconfigured_waf_config"`
	RateLimitOptions       []RuleRateLimitOptionsState       `json:"rate_limit_options"`
	RedirectOptions        []RuleRedirectOptionsState        `json:"redirect_options"`
}

type RuleHeaderActionState struct {
	RequestHeadersToAdds []RuleHeaderActionRequestHeadersToAddsState `json:"request_headers_to_adds"`
}

type RuleHeaderActionRequestHeadersToAddsState struct {
	HeaderName  string `json:"header_name"`
	HeaderValue string `json:"header_value"`
}

type RuleMatchState struct {
	VersionedExpr string                 `json:"versioned_expr"`
	Config        []RuleMatchConfigState `json:"config"`
	Expr          []RuleMatchExprState   `json:"expr"`
}

type RuleMatchConfigState struct {
	SrcIpRanges []string `json:"src_ip_ranges"`
}

type RuleMatchExprState struct {
	Expression string `json:"expression"`
}

type RulePreconfiguredWafConfigState struct {
	Exclusion []RulePreconfiguredWafConfigExclusionState `json:"exclusion"`
}

type RulePreconfiguredWafConfigExclusionState struct {
	TargetRuleIds     []string                                                    `json:"target_rule_ids"`
	TargetRuleSet     string                                                      `json:"target_rule_set"`
	RequestCookie     []RulePreconfiguredWafConfigExclusionRequestCookieState     `json:"request_cookie"`
	RequestHeader     []RulePreconfiguredWafConfigExclusionRequestHeaderState     `json:"request_header"`
	RequestQueryParam []RulePreconfiguredWafConfigExclusionRequestQueryParamState `json:"request_query_param"`
	RequestUri        []RulePreconfiguredWafConfigExclusionRequestUriState        `json:"request_uri"`
}

type RulePreconfiguredWafConfigExclusionRequestCookieState struct {
	Operator string `json:"operator"`
	Value    string `json:"value"`
}

type RulePreconfiguredWafConfigExclusionRequestHeaderState struct {
	Operator string `json:"operator"`
	Value    string `json:"value"`
}

type RulePreconfiguredWafConfigExclusionRequestQueryParamState struct {
	Operator string `json:"operator"`
	Value    string `json:"value"`
}

type RulePreconfiguredWafConfigExclusionRequestUriState struct {
	Operator string `json:"operator"`
	Value    string `json:"value"`
}

type RuleRateLimitOptionsState struct {
	BanDurationSec        float64                                          `json:"ban_duration_sec"`
	ConformAction         string                                           `json:"conform_action"`
	EnforceOnKey          string                                           `json:"enforce_on_key"`
	EnforceOnKeyName      string                                           `json:"enforce_on_key_name"`
	ExceedAction          string                                           `json:"exceed_action"`
	BanThreshold          []RuleRateLimitOptionsBanThresholdState          `json:"ban_threshold"`
	EnforceOnKeyConfigs   []RuleRateLimitOptionsEnforceOnKeyConfigsState   `json:"enforce_on_key_configs"`
	ExceedRedirectOptions []RuleRateLimitOptionsExceedRedirectOptionsState `json:"exceed_redirect_options"`
	RateLimitThreshold    []RuleRateLimitOptionsRateLimitThresholdState    `json:"rate_limit_threshold"`
}

type RuleRateLimitOptionsBanThresholdState struct {
	Count       float64 `json:"count"`
	IntervalSec float64 `json:"interval_sec"`
}

type RuleRateLimitOptionsEnforceOnKeyConfigsState struct {
	EnforceOnKeyName string `json:"enforce_on_key_name"`
	EnforceOnKeyType string `json:"enforce_on_key_type"`
}

type RuleRateLimitOptionsExceedRedirectOptionsState struct {
	Target string `json:"target"`
	Type   string `json:"type"`
}

type RuleRateLimitOptionsRateLimitThresholdState struct {
	Count       float64 `json:"count"`
	IntervalSec float64 `json:"interval_sec"`
}

type RuleRedirectOptionsState struct {
	Target string `json:"target"`
	Type   string `json:"type"`
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
	Update string `json:"update"`
}
