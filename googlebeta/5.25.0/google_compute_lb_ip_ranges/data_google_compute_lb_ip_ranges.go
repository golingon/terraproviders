// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google_compute_lb_ip_ranges

import "github.com/golingon/lingon/pkg/terra"

// Data creates a new instance of [DataSource].
func Data(name string, args DataArgs) *DataSource {
	return &DataSource{
		Args: args,
		Name: name,
	}
}

var _ terra.DataSource = (*DataSource)(nil)

// DataSource represents the Terraform data resource google_compute_lb_ip_ranges.
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (gclir *DataSource) DataSource() string {
	return "google_compute_lb_ip_ranges"
}

// LocalName returns the local name for [DataSource].
func (gclir *DataSource) LocalName() string {
	return gclir.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (gclir *DataSource) Configuration() interface{} {
	return gclir.Args
}

// Attributes returns the attributes for [DataSource].
func (gclir *DataSource) Attributes() dataGoogleComputeLbIpRangesAttributes {
	return dataGoogleComputeLbIpRangesAttributes{ref: terra.ReferenceDataSource(gclir)}
}

// DataArgs contains the configurations for google_compute_lb_ip_ranges.
type DataArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
}

type dataGoogleComputeLbIpRangesAttributes struct {
	ref terra.Reference
}

// HttpSslTcpInternal returns a reference to field http_ssl_tcp_internal of google_compute_lb_ip_ranges.
func (gclir dataGoogleComputeLbIpRangesAttributes) HttpSslTcpInternal() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](gclir.ref.Append("http_ssl_tcp_internal"))
}

// Id returns a reference to field id of google_compute_lb_ip_ranges.
func (gclir dataGoogleComputeLbIpRangesAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(gclir.ref.Append("id"))
}

// Network returns a reference to field network of google_compute_lb_ip_ranges.
func (gclir dataGoogleComputeLbIpRangesAttributes) Network() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](gclir.ref.Append("network"))
}
