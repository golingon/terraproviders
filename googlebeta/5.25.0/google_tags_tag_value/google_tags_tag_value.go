// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google_tags_tag_value

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource google_tags_tag_value.
type Resource struct {
	Name      string
	Args      Args
	state     *googleTagsTagValueState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (gttv *Resource) Type() string {
	return "google_tags_tag_value"
}

// LocalName returns the local name for [Resource].
func (gttv *Resource) LocalName() string {
	return gttv.Name
}

// Configuration returns the configuration (args) for [Resource].
func (gttv *Resource) Configuration() interface{} {
	return gttv.Args
}

// DependOn is used for other resources to depend on [Resource].
func (gttv *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(gttv)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (gttv *Resource) Dependencies() terra.Dependencies {
	return gttv.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (gttv *Resource) LifecycleManagement() *terra.Lifecycle {
	return gttv.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (gttv *Resource) Attributes() googleTagsTagValueAttributes {
	return googleTagsTagValueAttributes{ref: terra.ReferenceResource(gttv)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (gttv *Resource) ImportState(state io.Reader) error {
	gttv.state = &googleTagsTagValueState{}
	if err := json.NewDecoder(state).Decode(gttv.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", gttv.Type(), gttv.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (gttv *Resource) State() (*googleTagsTagValueState, bool) {
	return gttv.state, gttv.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (gttv *Resource) StateMust() *googleTagsTagValueState {
	if gttv.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", gttv.Type(), gttv.LocalName()))
	}
	return gttv.state
}

// Args contains the configurations for google_tags_tag_value.
type Args struct {
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Parent: string, required
	Parent terra.StringValue `hcl:"parent,attr" validate:"required"`
	// ShortName: string, required
	ShortName terra.StringValue `hcl:"short_name,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type googleTagsTagValueAttributes struct {
	ref terra.Reference
}

// CreateTime returns a reference to field create_time of google_tags_tag_value.
func (gttv googleTagsTagValueAttributes) CreateTime() terra.StringValue {
	return terra.ReferenceAsString(gttv.ref.Append("create_time"))
}

// Description returns a reference to field description of google_tags_tag_value.
func (gttv googleTagsTagValueAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(gttv.ref.Append("description"))
}

// Id returns a reference to field id of google_tags_tag_value.
func (gttv googleTagsTagValueAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(gttv.ref.Append("id"))
}

// Name returns a reference to field name of google_tags_tag_value.
func (gttv googleTagsTagValueAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(gttv.ref.Append("name"))
}

// NamespacedName returns a reference to field namespaced_name of google_tags_tag_value.
func (gttv googleTagsTagValueAttributes) NamespacedName() terra.StringValue {
	return terra.ReferenceAsString(gttv.ref.Append("namespaced_name"))
}

// Parent returns a reference to field parent of google_tags_tag_value.
func (gttv googleTagsTagValueAttributes) Parent() terra.StringValue {
	return terra.ReferenceAsString(gttv.ref.Append("parent"))
}

// ShortName returns a reference to field short_name of google_tags_tag_value.
func (gttv googleTagsTagValueAttributes) ShortName() terra.StringValue {
	return terra.ReferenceAsString(gttv.ref.Append("short_name"))
}

// UpdateTime returns a reference to field update_time of google_tags_tag_value.
func (gttv googleTagsTagValueAttributes) UpdateTime() terra.StringValue {
	return terra.ReferenceAsString(gttv.ref.Append("update_time"))
}

func (gttv googleTagsTagValueAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](gttv.ref.Append("timeouts"))
}

type googleTagsTagValueState struct {
	CreateTime     string         `json:"create_time"`
	Description    string         `json:"description"`
	Id             string         `json:"id"`
	Name           string         `json:"name"`
	NamespacedName string         `json:"namespaced_name"`
	Parent         string         `json:"parent"`
	ShortName      string         `json:"short_name"`
	UpdateTime     string         `json:"update_time"`
	Timeouts       *TimeoutsState `json:"timeouts"`
}
