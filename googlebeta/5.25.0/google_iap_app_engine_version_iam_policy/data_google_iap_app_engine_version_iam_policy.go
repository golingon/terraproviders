// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google_iap_app_engine_version_iam_policy

import "github.com/golingon/lingon/pkg/terra"

// Data creates a new instance of [DataSource].
func Data(name string, args DataArgs) *DataSource {
	return &DataSource{
		Args: args,
		Name: name,
	}
}

var _ terra.DataSource = (*DataSource)(nil)

// DataSource represents the Terraform data resource google_iap_app_engine_version_iam_policy.
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (giaevip *DataSource) DataSource() string {
	return "google_iap_app_engine_version_iam_policy"
}

// LocalName returns the local name for [DataSource].
func (giaevip *DataSource) LocalName() string {
	return giaevip.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (giaevip *DataSource) Configuration() interface{} {
	return giaevip.Args
}

// Attributes returns the attributes for [DataSource].
func (giaevip *DataSource) Attributes() dataGoogleIapAppEngineVersionIamPolicyAttributes {
	return dataGoogleIapAppEngineVersionIamPolicyAttributes{ref: terra.ReferenceDataSource(giaevip)}
}

// DataArgs contains the configurations for google_iap_app_engine_version_iam_policy.
type DataArgs struct {
	// AppId: string, required
	AppId terra.StringValue `hcl:"app_id,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
	// Service: string, required
	Service terra.StringValue `hcl:"service,attr" validate:"required"`
	// VersionId: string, required
	VersionId terra.StringValue `hcl:"version_id,attr" validate:"required"`
}

type dataGoogleIapAppEngineVersionIamPolicyAttributes struct {
	ref terra.Reference
}

// AppId returns a reference to field app_id of google_iap_app_engine_version_iam_policy.
func (giaevip dataGoogleIapAppEngineVersionIamPolicyAttributes) AppId() terra.StringValue {
	return terra.ReferenceAsString(giaevip.ref.Append("app_id"))
}

// Etag returns a reference to field etag of google_iap_app_engine_version_iam_policy.
func (giaevip dataGoogleIapAppEngineVersionIamPolicyAttributes) Etag() terra.StringValue {
	return terra.ReferenceAsString(giaevip.ref.Append("etag"))
}

// Id returns a reference to field id of google_iap_app_engine_version_iam_policy.
func (giaevip dataGoogleIapAppEngineVersionIamPolicyAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(giaevip.ref.Append("id"))
}

// PolicyData returns a reference to field policy_data of google_iap_app_engine_version_iam_policy.
func (giaevip dataGoogleIapAppEngineVersionIamPolicyAttributes) PolicyData() terra.StringValue {
	return terra.ReferenceAsString(giaevip.ref.Append("policy_data"))
}

// Project returns a reference to field project of google_iap_app_engine_version_iam_policy.
func (giaevip dataGoogleIapAppEngineVersionIamPolicyAttributes) Project() terra.StringValue {
	return terra.ReferenceAsString(giaevip.ref.Append("project"))
}

// Service returns a reference to field service of google_iap_app_engine_version_iam_policy.
func (giaevip dataGoogleIapAppEngineVersionIamPolicyAttributes) Service() terra.StringValue {
	return terra.ReferenceAsString(giaevip.ref.Append("service"))
}

// VersionId returns a reference to field version_id of google_iap_app_engine_version_iam_policy.
func (giaevip dataGoogleIapAppEngineVersionIamPolicyAttributes) VersionId() terra.StringValue {
	return terra.ReferenceAsString(giaevip.ref.Append("version_id"))
}
