// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google_monitoring_uptime_check_config

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource google_monitoring_uptime_check_config.
type Resource struct {
	Name      string
	Args      Args
	state     *googleMonitoringUptimeCheckConfigState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (gmucc *Resource) Type() string {
	return "google_monitoring_uptime_check_config"
}

// LocalName returns the local name for [Resource].
func (gmucc *Resource) LocalName() string {
	return gmucc.Name
}

// Configuration returns the configuration (args) for [Resource].
func (gmucc *Resource) Configuration() interface{} {
	return gmucc.Args
}

// DependOn is used for other resources to depend on [Resource].
func (gmucc *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(gmucc)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (gmucc *Resource) Dependencies() terra.Dependencies {
	return gmucc.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (gmucc *Resource) LifecycleManagement() *terra.Lifecycle {
	return gmucc.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (gmucc *Resource) Attributes() googleMonitoringUptimeCheckConfigAttributes {
	return googleMonitoringUptimeCheckConfigAttributes{ref: terra.ReferenceResource(gmucc)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (gmucc *Resource) ImportState(state io.Reader) error {
	gmucc.state = &googleMonitoringUptimeCheckConfigState{}
	if err := json.NewDecoder(state).Decode(gmucc.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", gmucc.Type(), gmucc.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (gmucc *Resource) State() (*googleMonitoringUptimeCheckConfigState, bool) {
	return gmucc.state, gmucc.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (gmucc *Resource) StateMust() *googleMonitoringUptimeCheckConfigState {
	if gmucc.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", gmucc.Type(), gmucc.LocalName()))
	}
	return gmucc.state
}

// Args contains the configurations for google_monitoring_uptime_check_config.
type Args struct {
	// CheckerType: string, optional
	CheckerType terra.StringValue `hcl:"checker_type,attr"`
	// DisplayName: string, required
	DisplayName terra.StringValue `hcl:"display_name,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Period: string, optional
	Period terra.StringValue `hcl:"period,attr"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
	// SelectedRegions: list of string, optional
	SelectedRegions terra.ListValue[terra.StringValue] `hcl:"selected_regions,attr"`
	// Timeout: string, required
	Timeout terra.StringValue `hcl:"timeout,attr" validate:"required"`
	// UserLabels: map of string, optional
	UserLabels terra.MapValue[terra.StringValue] `hcl:"user_labels,attr"`
	// ContentMatchers: min=0
	ContentMatchers []ContentMatchers `hcl:"content_matchers,block" validate:"min=0"`
	// HttpCheck: optional
	HttpCheck *HttpCheck `hcl:"http_check,block"`
	// MonitoredResource: optional
	MonitoredResource *MonitoredResource `hcl:"monitored_resource,block"`
	// ResourceGroup: optional
	ResourceGroup *ResourceGroup `hcl:"resource_group,block"`
	// SyntheticMonitor: optional
	SyntheticMonitor *SyntheticMonitor `hcl:"synthetic_monitor,block"`
	// TcpCheck: optional
	TcpCheck *TcpCheck `hcl:"tcp_check,block"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type googleMonitoringUptimeCheckConfigAttributes struct {
	ref terra.Reference
}

// CheckerType returns a reference to field checker_type of google_monitoring_uptime_check_config.
func (gmucc googleMonitoringUptimeCheckConfigAttributes) CheckerType() terra.StringValue {
	return terra.ReferenceAsString(gmucc.ref.Append("checker_type"))
}

// DisplayName returns a reference to field display_name of google_monitoring_uptime_check_config.
func (gmucc googleMonitoringUptimeCheckConfigAttributes) DisplayName() terra.StringValue {
	return terra.ReferenceAsString(gmucc.ref.Append("display_name"))
}

// Id returns a reference to field id of google_monitoring_uptime_check_config.
func (gmucc googleMonitoringUptimeCheckConfigAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(gmucc.ref.Append("id"))
}

// Name returns a reference to field name of google_monitoring_uptime_check_config.
func (gmucc googleMonitoringUptimeCheckConfigAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(gmucc.ref.Append("name"))
}

// Period returns a reference to field period of google_monitoring_uptime_check_config.
func (gmucc googleMonitoringUptimeCheckConfigAttributes) Period() terra.StringValue {
	return terra.ReferenceAsString(gmucc.ref.Append("period"))
}

// Project returns a reference to field project of google_monitoring_uptime_check_config.
func (gmucc googleMonitoringUptimeCheckConfigAttributes) Project() terra.StringValue {
	return terra.ReferenceAsString(gmucc.ref.Append("project"))
}

// SelectedRegions returns a reference to field selected_regions of google_monitoring_uptime_check_config.
func (gmucc googleMonitoringUptimeCheckConfigAttributes) SelectedRegions() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](gmucc.ref.Append("selected_regions"))
}

// Timeout returns a reference to field timeout of google_monitoring_uptime_check_config.
func (gmucc googleMonitoringUptimeCheckConfigAttributes) Timeout() terra.StringValue {
	return terra.ReferenceAsString(gmucc.ref.Append("timeout"))
}

// UptimeCheckId returns a reference to field uptime_check_id of google_monitoring_uptime_check_config.
func (gmucc googleMonitoringUptimeCheckConfigAttributes) UptimeCheckId() terra.StringValue {
	return terra.ReferenceAsString(gmucc.ref.Append("uptime_check_id"))
}

// UserLabels returns a reference to field user_labels of google_monitoring_uptime_check_config.
func (gmucc googleMonitoringUptimeCheckConfigAttributes) UserLabels() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](gmucc.ref.Append("user_labels"))
}

func (gmucc googleMonitoringUptimeCheckConfigAttributes) ContentMatchers() terra.ListValue[ContentMatchersAttributes] {
	return terra.ReferenceAsList[ContentMatchersAttributes](gmucc.ref.Append("content_matchers"))
}

func (gmucc googleMonitoringUptimeCheckConfigAttributes) HttpCheck() terra.ListValue[HttpCheckAttributes] {
	return terra.ReferenceAsList[HttpCheckAttributes](gmucc.ref.Append("http_check"))
}

func (gmucc googleMonitoringUptimeCheckConfigAttributes) MonitoredResource() terra.ListValue[MonitoredResourceAttributes] {
	return terra.ReferenceAsList[MonitoredResourceAttributes](gmucc.ref.Append("monitored_resource"))
}

func (gmucc googleMonitoringUptimeCheckConfigAttributes) ResourceGroup() terra.ListValue[ResourceGroupAttributes] {
	return terra.ReferenceAsList[ResourceGroupAttributes](gmucc.ref.Append("resource_group"))
}

func (gmucc googleMonitoringUptimeCheckConfigAttributes) SyntheticMonitor() terra.ListValue[SyntheticMonitorAttributes] {
	return terra.ReferenceAsList[SyntheticMonitorAttributes](gmucc.ref.Append("synthetic_monitor"))
}

func (gmucc googleMonitoringUptimeCheckConfigAttributes) TcpCheck() terra.ListValue[TcpCheckAttributes] {
	return terra.ReferenceAsList[TcpCheckAttributes](gmucc.ref.Append("tcp_check"))
}

func (gmucc googleMonitoringUptimeCheckConfigAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](gmucc.ref.Append("timeouts"))
}

type googleMonitoringUptimeCheckConfigState struct {
	CheckerType       string                   `json:"checker_type"`
	DisplayName       string                   `json:"display_name"`
	Id                string                   `json:"id"`
	Name              string                   `json:"name"`
	Period            string                   `json:"period"`
	Project           string                   `json:"project"`
	SelectedRegions   []string                 `json:"selected_regions"`
	Timeout           string                   `json:"timeout"`
	UptimeCheckId     string                   `json:"uptime_check_id"`
	UserLabels        map[string]string        `json:"user_labels"`
	ContentMatchers   []ContentMatchersState   `json:"content_matchers"`
	HttpCheck         []HttpCheckState         `json:"http_check"`
	MonitoredResource []MonitoredResourceState `json:"monitored_resource"`
	ResourceGroup     []ResourceGroupState     `json:"resource_group"`
	SyntheticMonitor  []SyntheticMonitorState  `json:"synthetic_monitor"`
	TcpCheck          []TcpCheckState          `json:"tcp_check"`
	Timeouts          *TimeoutsState           `json:"timeouts"`
}
