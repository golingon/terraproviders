// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google_dialogflow_cx_test_case

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type TestCaseConversationTurns struct {
	// TestCaseConversationTurnsUserInput: optional
	UserInput *TestCaseConversationTurnsUserInput `hcl:"user_input,block"`
	// TestCaseConversationTurnsVirtualAgentOutput: optional
	VirtualAgentOutput *TestCaseConversationTurnsVirtualAgentOutput `hcl:"virtual_agent_output,block"`
}

type TestCaseConversationTurnsUserInput struct {
	// EnableSentimentAnalysis: bool, optional
	EnableSentimentAnalysis terra.BoolValue `hcl:"enable_sentiment_analysis,attr"`
	// InjectedParameters: string, optional
	InjectedParameters terra.StringValue `hcl:"injected_parameters,attr"`
	// IsWebhookEnabled: bool, optional
	IsWebhookEnabled terra.BoolValue `hcl:"is_webhook_enabled,attr"`
	// TestCaseConversationTurnsUserInputInput: optional
	Input *TestCaseConversationTurnsUserInputInput `hcl:"input,block"`
}

type TestCaseConversationTurnsUserInputInput struct {
	// LanguageCode: string, optional
	LanguageCode terra.StringValue `hcl:"language_code,attr"`
	// TestCaseConversationTurnsUserInputInputDtmf: optional
	Dtmf *TestCaseConversationTurnsUserInputInputDtmf `hcl:"dtmf,block"`
	// TestCaseConversationTurnsUserInputInputEvent: optional
	Event *TestCaseConversationTurnsUserInputInputEvent `hcl:"event,block"`
	// TestCaseConversationTurnsUserInputInputText: optional
	Text *TestCaseConversationTurnsUserInputInputText `hcl:"text,block"`
}

type TestCaseConversationTurnsUserInputInputDtmf struct {
	// Digits: string, optional
	Digits terra.StringValue `hcl:"digits,attr"`
	// FinishDigit: string, optional
	FinishDigit terra.StringValue `hcl:"finish_digit,attr"`
}

type TestCaseConversationTurnsUserInputInputEvent struct {
	// Event: string, required
	Event terra.StringValue `hcl:"event,attr" validate:"required"`
}

type TestCaseConversationTurnsUserInputInputText struct {
	// Text: string, required
	Text terra.StringValue `hcl:"text,attr" validate:"required"`
}

type TestCaseConversationTurnsVirtualAgentOutput struct {
	// SessionParameters: string, optional
	SessionParameters terra.StringValue `hcl:"session_parameters,attr"`
	// TestCaseConversationTurnsVirtualAgentOutputCurrentPage: optional
	CurrentPage *TestCaseConversationTurnsVirtualAgentOutputCurrentPage `hcl:"current_page,block"`
	// TestCaseConversationTurnsVirtualAgentOutputTextResponses: min=0
	TextResponses []TestCaseConversationTurnsVirtualAgentOutputTextResponses `hcl:"text_responses,block" validate:"min=0"`
	// TestCaseConversationTurnsVirtualAgentOutputTriggeredIntent: optional
	TriggeredIntent *TestCaseConversationTurnsVirtualAgentOutputTriggeredIntent `hcl:"triggered_intent,block"`
}

type TestCaseConversationTurnsVirtualAgentOutputCurrentPage struct {
	// Name: string, optional
	Name terra.StringValue `hcl:"name,attr"`
}

type TestCaseConversationTurnsVirtualAgentOutputTextResponses struct {
	// Text: list of string, optional
	Text terra.ListValue[terra.StringValue] `hcl:"text,attr"`
}

type TestCaseConversationTurnsVirtualAgentOutputTriggeredIntent struct {
	// Name: string, optional
	Name terra.StringValue `hcl:"name,attr"`
}

type TestConfig struct {
	// Flow: string, optional
	Flow terra.StringValue `hcl:"flow,attr"`
	// Page: string, optional
	Page terra.StringValue `hcl:"page,attr"`
	// TrackingParameters: list of string, optional
	TrackingParameters terra.ListValue[terra.StringValue] `hcl:"tracking_parameters,attr"`
}

type Timeouts struct {
	// Create: string, optional
	Create terra.StringValue `hcl:"create,attr"`
	// Delete: string, optional
	Delete terra.StringValue `hcl:"delete,attr"`
	// Update: string, optional
	Update terra.StringValue `hcl:"update,attr"`
}

type LastTestResultAttributes struct {
	ref terra.Reference
}

func (ltr LastTestResultAttributes) InternalRef() (terra.Reference, error) {
	return ltr.ref, nil
}

func (ltr LastTestResultAttributes) InternalWithRef(ref terra.Reference) LastTestResultAttributes {
	return LastTestResultAttributes{ref: ref}
}

func (ltr LastTestResultAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ltr.ref.InternalTokens()
}

func (ltr LastTestResultAttributes) Environment() terra.StringValue {
	return terra.ReferenceAsString(ltr.ref.Append("environment"))
}

func (ltr LastTestResultAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(ltr.ref.Append("name"))
}

func (ltr LastTestResultAttributes) TestResult() terra.StringValue {
	return terra.ReferenceAsString(ltr.ref.Append("test_result"))
}

func (ltr LastTestResultAttributes) TestTime() terra.StringValue {
	return terra.ReferenceAsString(ltr.ref.Append("test_time"))
}

func (ltr LastTestResultAttributes) ConversationTurns() terra.ListValue[LastTestResultConversationTurnsAttributes] {
	return terra.ReferenceAsList[LastTestResultConversationTurnsAttributes](ltr.ref.Append("conversation_turns"))
}

type LastTestResultConversationTurnsAttributes struct {
	ref terra.Reference
}

func (ct LastTestResultConversationTurnsAttributes) InternalRef() (terra.Reference, error) {
	return ct.ref, nil
}

func (ct LastTestResultConversationTurnsAttributes) InternalWithRef(ref terra.Reference) LastTestResultConversationTurnsAttributes {
	return LastTestResultConversationTurnsAttributes{ref: ref}
}

func (ct LastTestResultConversationTurnsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ct.ref.InternalTokens()
}

func (ct LastTestResultConversationTurnsAttributes) UserInput() terra.ListValue[LastTestResultConversationTurnsUserInputAttributes] {
	return terra.ReferenceAsList[LastTestResultConversationTurnsUserInputAttributes](ct.ref.Append("user_input"))
}

func (ct LastTestResultConversationTurnsAttributes) VirtualAgentOutput() terra.ListValue[LastTestResultConversationTurnsVirtualAgentOutputAttributes] {
	return terra.ReferenceAsList[LastTestResultConversationTurnsVirtualAgentOutputAttributes](ct.ref.Append("virtual_agent_output"))
}

type LastTestResultConversationTurnsUserInputAttributes struct {
	ref terra.Reference
}

func (ui LastTestResultConversationTurnsUserInputAttributes) InternalRef() (terra.Reference, error) {
	return ui.ref, nil
}

func (ui LastTestResultConversationTurnsUserInputAttributes) InternalWithRef(ref terra.Reference) LastTestResultConversationTurnsUserInputAttributes {
	return LastTestResultConversationTurnsUserInputAttributes{ref: ref}
}

func (ui LastTestResultConversationTurnsUserInputAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ui.ref.InternalTokens()
}

func (ui LastTestResultConversationTurnsUserInputAttributes) EnableSentimentAnalysis() terra.BoolValue {
	return terra.ReferenceAsBool(ui.ref.Append("enable_sentiment_analysis"))
}

func (ui LastTestResultConversationTurnsUserInputAttributes) InjectedParameters() terra.StringValue {
	return terra.ReferenceAsString(ui.ref.Append("injected_parameters"))
}

func (ui LastTestResultConversationTurnsUserInputAttributes) IsWebhookEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(ui.ref.Append("is_webhook_enabled"))
}

func (ui LastTestResultConversationTurnsUserInputAttributes) Input() terra.ListValue[LastTestResultConversationTurnsUserInputInputAttributes] {
	return terra.ReferenceAsList[LastTestResultConversationTurnsUserInputInputAttributes](ui.ref.Append("input"))
}

type LastTestResultConversationTurnsUserInputInputAttributes struct {
	ref terra.Reference
}

func (i LastTestResultConversationTurnsUserInputInputAttributes) InternalRef() (terra.Reference, error) {
	return i.ref, nil
}

func (i LastTestResultConversationTurnsUserInputInputAttributes) InternalWithRef(ref terra.Reference) LastTestResultConversationTurnsUserInputInputAttributes {
	return LastTestResultConversationTurnsUserInputInputAttributes{ref: ref}
}

func (i LastTestResultConversationTurnsUserInputInputAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return i.ref.InternalTokens()
}

func (i LastTestResultConversationTurnsUserInputInputAttributes) LanguageCode() terra.StringValue {
	return terra.ReferenceAsString(i.ref.Append("language_code"))
}

func (i LastTestResultConversationTurnsUserInputInputAttributes) Dtmf() terra.ListValue[LastTestResultConversationTurns13Cc42C9Attributes] {
	return terra.ReferenceAsList[LastTestResultConversationTurns13Cc42C9Attributes](i.ref.Append("dtmf"))
}

func (i LastTestResultConversationTurnsUserInputInputAttributes) Event() terra.ListValue[LastTestResultConversationTurnsD716E446Attributes] {
	return terra.ReferenceAsList[LastTestResultConversationTurnsD716E446Attributes](i.ref.Append("event"))
}

func (i LastTestResultConversationTurnsUserInputInputAttributes) Text() terra.ListValue[LastTestResultConversationTurns68Becae3Attributes] {
	return terra.ReferenceAsList[LastTestResultConversationTurns68Becae3Attributes](i.ref.Append("text"))
}

type LastTestResultConversationTurns13Cc42C9Attributes struct {
	ref terra.Reference
}

func (d LastTestResultConversationTurns13Cc42C9Attributes) InternalRef() (terra.Reference, error) {
	return d.ref, nil
}

func (d LastTestResultConversationTurns13Cc42C9Attributes) InternalWithRef(ref terra.Reference) LastTestResultConversationTurns13Cc42C9Attributes {
	return LastTestResultConversationTurns13Cc42C9Attributes{ref: ref}
}

func (d LastTestResultConversationTurns13Cc42C9Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return d.ref.InternalTokens()
}

func (d LastTestResultConversationTurns13Cc42C9Attributes) Digits() terra.StringValue {
	return terra.ReferenceAsString(d.ref.Append("digits"))
}

func (d LastTestResultConversationTurns13Cc42C9Attributes) FinishDigit() terra.StringValue {
	return terra.ReferenceAsString(d.ref.Append("finish_digit"))
}

type LastTestResultConversationTurnsD716E446Attributes struct {
	ref terra.Reference
}

func (e LastTestResultConversationTurnsD716E446Attributes) InternalRef() (terra.Reference, error) {
	return e.ref, nil
}

func (e LastTestResultConversationTurnsD716E446Attributes) InternalWithRef(ref terra.Reference) LastTestResultConversationTurnsD716E446Attributes {
	return LastTestResultConversationTurnsD716E446Attributes{ref: ref}
}

func (e LastTestResultConversationTurnsD716E446Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return e.ref.InternalTokens()
}

func (e LastTestResultConversationTurnsD716E446Attributes) Event() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("event"))
}

type LastTestResultConversationTurns68Becae3Attributes struct {
	ref terra.Reference
}

func (t LastTestResultConversationTurns68Becae3Attributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t LastTestResultConversationTurns68Becae3Attributes) InternalWithRef(ref terra.Reference) LastTestResultConversationTurns68Becae3Attributes {
	return LastTestResultConversationTurns68Becae3Attributes{ref: ref}
}

func (t LastTestResultConversationTurns68Becae3Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t LastTestResultConversationTurns68Becae3Attributes) Text() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("text"))
}

type LastTestResultConversationTurnsVirtualAgentOutputAttributes struct {
	ref terra.Reference
}

func (vao LastTestResultConversationTurnsVirtualAgentOutputAttributes) InternalRef() (terra.Reference, error) {
	return vao.ref, nil
}

func (vao LastTestResultConversationTurnsVirtualAgentOutputAttributes) InternalWithRef(ref terra.Reference) LastTestResultConversationTurnsVirtualAgentOutputAttributes {
	return LastTestResultConversationTurnsVirtualAgentOutputAttributes{ref: ref}
}

func (vao LastTestResultConversationTurnsVirtualAgentOutputAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return vao.ref.InternalTokens()
}

func (vao LastTestResultConversationTurnsVirtualAgentOutputAttributes) SessionParameters() terra.StringValue {
	return terra.ReferenceAsString(vao.ref.Append("session_parameters"))
}

func (vao LastTestResultConversationTurnsVirtualAgentOutputAttributes) CurrentPage() terra.ListValue[LastTestResultConversationTurnsVirtualAgentOutputCurrentPageAttributes] {
	return terra.ReferenceAsList[LastTestResultConversationTurnsVirtualAgentOutputCurrentPageAttributes](vao.ref.Append("current_page"))
}

func (vao LastTestResultConversationTurnsVirtualAgentOutputAttributes) Differences() terra.ListValue[LastTestResultConversationTurnsVirtualAgentOutputDifferencesAttributes] {
	return terra.ReferenceAsList[LastTestResultConversationTurnsVirtualAgentOutputDifferencesAttributes](vao.ref.Append("differences"))
}

func (vao LastTestResultConversationTurnsVirtualAgentOutputAttributes) Status() terra.ListValue[LastTestResultConversationTurnsVirtualAgentOutputStatusAttributes] {
	return terra.ReferenceAsList[LastTestResultConversationTurnsVirtualAgentOutputStatusAttributes](vao.ref.Append("status"))
}

func (vao LastTestResultConversationTurnsVirtualAgentOutputAttributes) TextResponses() terra.ListValue[LastTestResultConversationTurnsVirtualAgentOutputTextResponsesAttributes] {
	return terra.ReferenceAsList[LastTestResultConversationTurnsVirtualAgentOutputTextResponsesAttributes](vao.ref.Append("text_responses"))
}

func (vao LastTestResultConversationTurnsVirtualAgentOutputAttributes) TriggeredIntent() terra.ListValue[LastTestResultConversationTurnsVirtualAgentOutputTriggeredIntentAttributes] {
	return terra.ReferenceAsList[LastTestResultConversationTurnsVirtualAgentOutputTriggeredIntentAttributes](vao.ref.Append("triggered_intent"))
}

type LastTestResultConversationTurnsVirtualAgentOutputCurrentPageAttributes struct {
	ref terra.Reference
}

func (cp LastTestResultConversationTurnsVirtualAgentOutputCurrentPageAttributes) InternalRef() (terra.Reference, error) {
	return cp.ref, nil
}

func (cp LastTestResultConversationTurnsVirtualAgentOutputCurrentPageAttributes) InternalWithRef(ref terra.Reference) LastTestResultConversationTurnsVirtualAgentOutputCurrentPageAttributes {
	return LastTestResultConversationTurnsVirtualAgentOutputCurrentPageAttributes{ref: ref}
}

func (cp LastTestResultConversationTurnsVirtualAgentOutputCurrentPageAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cp.ref.InternalTokens()
}

func (cp LastTestResultConversationTurnsVirtualAgentOutputCurrentPageAttributes) DisplayName() terra.StringValue {
	return terra.ReferenceAsString(cp.ref.Append("display_name"))
}

func (cp LastTestResultConversationTurnsVirtualAgentOutputCurrentPageAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(cp.ref.Append("name"))
}

type LastTestResultConversationTurnsVirtualAgentOutputDifferencesAttributes struct {
	ref terra.Reference
}

func (d LastTestResultConversationTurnsVirtualAgentOutputDifferencesAttributes) InternalRef() (terra.Reference, error) {
	return d.ref, nil
}

func (d LastTestResultConversationTurnsVirtualAgentOutputDifferencesAttributes) InternalWithRef(ref terra.Reference) LastTestResultConversationTurnsVirtualAgentOutputDifferencesAttributes {
	return LastTestResultConversationTurnsVirtualAgentOutputDifferencesAttributes{ref: ref}
}

func (d LastTestResultConversationTurnsVirtualAgentOutputDifferencesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return d.ref.InternalTokens()
}

func (d LastTestResultConversationTurnsVirtualAgentOutputDifferencesAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(d.ref.Append("description"))
}

func (d LastTestResultConversationTurnsVirtualAgentOutputDifferencesAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(d.ref.Append("type"))
}

type LastTestResultConversationTurnsVirtualAgentOutputStatusAttributes struct {
	ref terra.Reference
}

func (s LastTestResultConversationTurnsVirtualAgentOutputStatusAttributes) InternalRef() (terra.Reference, error) {
	return s.ref, nil
}

func (s LastTestResultConversationTurnsVirtualAgentOutputStatusAttributes) InternalWithRef(ref terra.Reference) LastTestResultConversationTurnsVirtualAgentOutputStatusAttributes {
	return LastTestResultConversationTurnsVirtualAgentOutputStatusAttributes{ref: ref}
}

func (s LastTestResultConversationTurnsVirtualAgentOutputStatusAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return s.ref.InternalTokens()
}

func (s LastTestResultConversationTurnsVirtualAgentOutputStatusAttributes) Code() terra.NumberValue {
	return terra.ReferenceAsNumber(s.ref.Append("code"))
}

func (s LastTestResultConversationTurnsVirtualAgentOutputStatusAttributes) Details() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("details"))
}

func (s LastTestResultConversationTurnsVirtualAgentOutputStatusAttributes) Message() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("message"))
}

type LastTestResultConversationTurnsVirtualAgentOutputTextResponsesAttributes struct {
	ref terra.Reference
}

func (tr LastTestResultConversationTurnsVirtualAgentOutputTextResponsesAttributes) InternalRef() (terra.Reference, error) {
	return tr.ref, nil
}

func (tr LastTestResultConversationTurnsVirtualAgentOutputTextResponsesAttributes) InternalWithRef(ref terra.Reference) LastTestResultConversationTurnsVirtualAgentOutputTextResponsesAttributes {
	return LastTestResultConversationTurnsVirtualAgentOutputTextResponsesAttributes{ref: ref}
}

func (tr LastTestResultConversationTurnsVirtualAgentOutputTextResponsesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return tr.ref.InternalTokens()
}

func (tr LastTestResultConversationTurnsVirtualAgentOutputTextResponsesAttributes) Text() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](tr.ref.Append("text"))
}

type LastTestResultConversationTurnsVirtualAgentOutputTriggeredIntentAttributes struct {
	ref terra.Reference
}

func (ti LastTestResultConversationTurnsVirtualAgentOutputTriggeredIntentAttributes) InternalRef() (terra.Reference, error) {
	return ti.ref, nil
}

func (ti LastTestResultConversationTurnsVirtualAgentOutputTriggeredIntentAttributes) InternalWithRef(ref terra.Reference) LastTestResultConversationTurnsVirtualAgentOutputTriggeredIntentAttributes {
	return LastTestResultConversationTurnsVirtualAgentOutputTriggeredIntentAttributes{ref: ref}
}

func (ti LastTestResultConversationTurnsVirtualAgentOutputTriggeredIntentAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ti.ref.InternalTokens()
}

func (ti LastTestResultConversationTurnsVirtualAgentOutputTriggeredIntentAttributes) DisplayName() terra.StringValue {
	return terra.ReferenceAsString(ti.ref.Append("display_name"))
}

func (ti LastTestResultConversationTurnsVirtualAgentOutputTriggeredIntentAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(ti.ref.Append("name"))
}

type TestCaseConversationTurnsAttributes struct {
	ref terra.Reference
}

func (tcct TestCaseConversationTurnsAttributes) InternalRef() (terra.Reference, error) {
	return tcct.ref, nil
}

func (tcct TestCaseConversationTurnsAttributes) InternalWithRef(ref terra.Reference) TestCaseConversationTurnsAttributes {
	return TestCaseConversationTurnsAttributes{ref: ref}
}

func (tcct TestCaseConversationTurnsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return tcct.ref.InternalTokens()
}

func (tcct TestCaseConversationTurnsAttributes) UserInput() terra.ListValue[TestCaseConversationTurnsUserInputAttributes] {
	return terra.ReferenceAsList[TestCaseConversationTurnsUserInputAttributes](tcct.ref.Append("user_input"))
}

func (tcct TestCaseConversationTurnsAttributes) VirtualAgentOutput() terra.ListValue[TestCaseConversationTurnsVirtualAgentOutputAttributes] {
	return terra.ReferenceAsList[TestCaseConversationTurnsVirtualAgentOutputAttributes](tcct.ref.Append("virtual_agent_output"))
}

type TestCaseConversationTurnsUserInputAttributes struct {
	ref terra.Reference
}

func (ui TestCaseConversationTurnsUserInputAttributes) InternalRef() (terra.Reference, error) {
	return ui.ref, nil
}

func (ui TestCaseConversationTurnsUserInputAttributes) InternalWithRef(ref terra.Reference) TestCaseConversationTurnsUserInputAttributes {
	return TestCaseConversationTurnsUserInputAttributes{ref: ref}
}

func (ui TestCaseConversationTurnsUserInputAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ui.ref.InternalTokens()
}

func (ui TestCaseConversationTurnsUserInputAttributes) EnableSentimentAnalysis() terra.BoolValue {
	return terra.ReferenceAsBool(ui.ref.Append("enable_sentiment_analysis"))
}

func (ui TestCaseConversationTurnsUserInputAttributes) InjectedParameters() terra.StringValue {
	return terra.ReferenceAsString(ui.ref.Append("injected_parameters"))
}

func (ui TestCaseConversationTurnsUserInputAttributes) IsWebhookEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(ui.ref.Append("is_webhook_enabled"))
}

func (ui TestCaseConversationTurnsUserInputAttributes) Input() terra.ListValue[TestCaseConversationTurnsUserInputInputAttributes] {
	return terra.ReferenceAsList[TestCaseConversationTurnsUserInputInputAttributes](ui.ref.Append("input"))
}

type TestCaseConversationTurnsUserInputInputAttributes struct {
	ref terra.Reference
}

func (i TestCaseConversationTurnsUserInputInputAttributes) InternalRef() (terra.Reference, error) {
	return i.ref, nil
}

func (i TestCaseConversationTurnsUserInputInputAttributes) InternalWithRef(ref terra.Reference) TestCaseConversationTurnsUserInputInputAttributes {
	return TestCaseConversationTurnsUserInputInputAttributes{ref: ref}
}

func (i TestCaseConversationTurnsUserInputInputAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return i.ref.InternalTokens()
}

func (i TestCaseConversationTurnsUserInputInputAttributes) LanguageCode() terra.StringValue {
	return terra.ReferenceAsString(i.ref.Append("language_code"))
}

func (i TestCaseConversationTurnsUserInputInputAttributes) Dtmf() terra.ListValue[TestCaseConversationTurnsUserInputInputDtmfAttributes] {
	return terra.ReferenceAsList[TestCaseConversationTurnsUserInputInputDtmfAttributes](i.ref.Append("dtmf"))
}

func (i TestCaseConversationTurnsUserInputInputAttributes) Event() terra.ListValue[TestCaseConversationTurnsUserInputInputEventAttributes] {
	return terra.ReferenceAsList[TestCaseConversationTurnsUserInputInputEventAttributes](i.ref.Append("event"))
}

func (i TestCaseConversationTurnsUserInputInputAttributes) Text() terra.ListValue[TestCaseConversationTurnsUserInputInputTextAttributes] {
	return terra.ReferenceAsList[TestCaseConversationTurnsUserInputInputTextAttributes](i.ref.Append("text"))
}

type TestCaseConversationTurnsUserInputInputDtmfAttributes struct {
	ref terra.Reference
}

func (d TestCaseConversationTurnsUserInputInputDtmfAttributes) InternalRef() (terra.Reference, error) {
	return d.ref, nil
}

func (d TestCaseConversationTurnsUserInputInputDtmfAttributes) InternalWithRef(ref terra.Reference) TestCaseConversationTurnsUserInputInputDtmfAttributes {
	return TestCaseConversationTurnsUserInputInputDtmfAttributes{ref: ref}
}

func (d TestCaseConversationTurnsUserInputInputDtmfAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return d.ref.InternalTokens()
}

func (d TestCaseConversationTurnsUserInputInputDtmfAttributes) Digits() terra.StringValue {
	return terra.ReferenceAsString(d.ref.Append("digits"))
}

func (d TestCaseConversationTurnsUserInputInputDtmfAttributes) FinishDigit() terra.StringValue {
	return terra.ReferenceAsString(d.ref.Append("finish_digit"))
}

type TestCaseConversationTurnsUserInputInputEventAttributes struct {
	ref terra.Reference
}

func (e TestCaseConversationTurnsUserInputInputEventAttributes) InternalRef() (terra.Reference, error) {
	return e.ref, nil
}

func (e TestCaseConversationTurnsUserInputInputEventAttributes) InternalWithRef(ref terra.Reference) TestCaseConversationTurnsUserInputInputEventAttributes {
	return TestCaseConversationTurnsUserInputInputEventAttributes{ref: ref}
}

func (e TestCaseConversationTurnsUserInputInputEventAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return e.ref.InternalTokens()
}

func (e TestCaseConversationTurnsUserInputInputEventAttributes) Event() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("event"))
}

type TestCaseConversationTurnsUserInputInputTextAttributes struct {
	ref terra.Reference
}

func (t TestCaseConversationTurnsUserInputInputTextAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t TestCaseConversationTurnsUserInputInputTextAttributes) InternalWithRef(ref terra.Reference) TestCaseConversationTurnsUserInputInputTextAttributes {
	return TestCaseConversationTurnsUserInputInputTextAttributes{ref: ref}
}

func (t TestCaseConversationTurnsUserInputInputTextAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t TestCaseConversationTurnsUserInputInputTextAttributes) Text() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("text"))
}

type TestCaseConversationTurnsVirtualAgentOutputAttributes struct {
	ref terra.Reference
}

func (vao TestCaseConversationTurnsVirtualAgentOutputAttributes) InternalRef() (terra.Reference, error) {
	return vao.ref, nil
}

func (vao TestCaseConversationTurnsVirtualAgentOutputAttributes) InternalWithRef(ref terra.Reference) TestCaseConversationTurnsVirtualAgentOutputAttributes {
	return TestCaseConversationTurnsVirtualAgentOutputAttributes{ref: ref}
}

func (vao TestCaseConversationTurnsVirtualAgentOutputAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return vao.ref.InternalTokens()
}

func (vao TestCaseConversationTurnsVirtualAgentOutputAttributes) SessionParameters() terra.StringValue {
	return terra.ReferenceAsString(vao.ref.Append("session_parameters"))
}

func (vao TestCaseConversationTurnsVirtualAgentOutputAttributes) CurrentPage() terra.ListValue[TestCaseConversationTurnsVirtualAgentOutputCurrentPageAttributes] {
	return terra.ReferenceAsList[TestCaseConversationTurnsVirtualAgentOutputCurrentPageAttributes](vao.ref.Append("current_page"))
}

func (vao TestCaseConversationTurnsVirtualAgentOutputAttributes) TextResponses() terra.ListValue[TestCaseConversationTurnsVirtualAgentOutputTextResponsesAttributes] {
	return terra.ReferenceAsList[TestCaseConversationTurnsVirtualAgentOutputTextResponsesAttributes](vao.ref.Append("text_responses"))
}

func (vao TestCaseConversationTurnsVirtualAgentOutputAttributes) TriggeredIntent() terra.ListValue[TestCaseConversationTurnsVirtualAgentOutputTriggeredIntentAttributes] {
	return terra.ReferenceAsList[TestCaseConversationTurnsVirtualAgentOutputTriggeredIntentAttributes](vao.ref.Append("triggered_intent"))
}

type TestCaseConversationTurnsVirtualAgentOutputCurrentPageAttributes struct {
	ref terra.Reference
}

func (cp TestCaseConversationTurnsVirtualAgentOutputCurrentPageAttributes) InternalRef() (terra.Reference, error) {
	return cp.ref, nil
}

func (cp TestCaseConversationTurnsVirtualAgentOutputCurrentPageAttributes) InternalWithRef(ref terra.Reference) TestCaseConversationTurnsVirtualAgentOutputCurrentPageAttributes {
	return TestCaseConversationTurnsVirtualAgentOutputCurrentPageAttributes{ref: ref}
}

func (cp TestCaseConversationTurnsVirtualAgentOutputCurrentPageAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cp.ref.InternalTokens()
}

func (cp TestCaseConversationTurnsVirtualAgentOutputCurrentPageAttributes) DisplayName() terra.StringValue {
	return terra.ReferenceAsString(cp.ref.Append("display_name"))
}

func (cp TestCaseConversationTurnsVirtualAgentOutputCurrentPageAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(cp.ref.Append("name"))
}

type TestCaseConversationTurnsVirtualAgentOutputTextResponsesAttributes struct {
	ref terra.Reference
}

func (tr TestCaseConversationTurnsVirtualAgentOutputTextResponsesAttributes) InternalRef() (terra.Reference, error) {
	return tr.ref, nil
}

func (tr TestCaseConversationTurnsVirtualAgentOutputTextResponsesAttributes) InternalWithRef(ref terra.Reference) TestCaseConversationTurnsVirtualAgentOutputTextResponsesAttributes {
	return TestCaseConversationTurnsVirtualAgentOutputTextResponsesAttributes{ref: ref}
}

func (tr TestCaseConversationTurnsVirtualAgentOutputTextResponsesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return tr.ref.InternalTokens()
}

func (tr TestCaseConversationTurnsVirtualAgentOutputTextResponsesAttributes) Text() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](tr.ref.Append("text"))
}

type TestCaseConversationTurnsVirtualAgentOutputTriggeredIntentAttributes struct {
	ref terra.Reference
}

func (ti TestCaseConversationTurnsVirtualAgentOutputTriggeredIntentAttributes) InternalRef() (terra.Reference, error) {
	return ti.ref, nil
}

func (ti TestCaseConversationTurnsVirtualAgentOutputTriggeredIntentAttributes) InternalWithRef(ref terra.Reference) TestCaseConversationTurnsVirtualAgentOutputTriggeredIntentAttributes {
	return TestCaseConversationTurnsVirtualAgentOutputTriggeredIntentAttributes{ref: ref}
}

func (ti TestCaseConversationTurnsVirtualAgentOutputTriggeredIntentAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ti.ref.InternalTokens()
}

func (ti TestCaseConversationTurnsVirtualAgentOutputTriggeredIntentAttributes) DisplayName() terra.StringValue {
	return terra.ReferenceAsString(ti.ref.Append("display_name"))
}

func (ti TestCaseConversationTurnsVirtualAgentOutputTriggeredIntentAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(ti.ref.Append("name"))
}

type TestConfigAttributes struct {
	ref terra.Reference
}

func (tc TestConfigAttributes) InternalRef() (terra.Reference, error) {
	return tc.ref, nil
}

func (tc TestConfigAttributes) InternalWithRef(ref terra.Reference) TestConfigAttributes {
	return TestConfigAttributes{ref: ref}
}

func (tc TestConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return tc.ref.InternalTokens()
}

func (tc TestConfigAttributes) Flow() terra.StringValue {
	return terra.ReferenceAsString(tc.ref.Append("flow"))
}

func (tc TestConfigAttributes) Page() terra.StringValue {
	return terra.ReferenceAsString(tc.ref.Append("page"))
}

func (tc TestConfigAttributes) TrackingParameters() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](tc.ref.Append("tracking_parameters"))
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("create"))
}

func (t TimeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("delete"))
}

func (t TimeoutsAttributes) Update() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("update"))
}

type LastTestResultState struct {
	Environment       string                                 `json:"environment"`
	Name              string                                 `json:"name"`
	TestResult        string                                 `json:"test_result"`
	TestTime          string                                 `json:"test_time"`
	ConversationTurns []LastTestResultConversationTurnsState `json:"conversation_turns"`
}

type LastTestResultConversationTurnsState struct {
	UserInput          []LastTestResultConversationTurnsUserInputState          `json:"user_input"`
	VirtualAgentOutput []LastTestResultConversationTurnsVirtualAgentOutputState `json:"virtual_agent_output"`
}

type LastTestResultConversationTurnsUserInputState struct {
	EnableSentimentAnalysis bool                                                 `json:"enable_sentiment_analysis"`
	InjectedParameters      string                                               `json:"injected_parameters"`
	IsWebhookEnabled        bool                                                 `json:"is_webhook_enabled"`
	Input                   []LastTestResultConversationTurnsUserInputInputState `json:"input"`
}

type LastTestResultConversationTurnsUserInputInputState struct {
	LanguageCode string                                         `json:"language_code"`
	Dtmf         []LastTestResultConversationTurns13Cc42C9State `json:"dtmf"`
	Event        []LastTestResultConversationTurnsD716E446State `json:"event"`
	Text         []LastTestResultConversationTurns68Becae3State `json:"text"`
}

type LastTestResultConversationTurns13Cc42C9State struct {
	Digits      string `json:"digits"`
	FinishDigit string `json:"finish_digit"`
}

type LastTestResultConversationTurnsD716E446State struct {
	Event string `json:"event"`
}

type LastTestResultConversationTurns68Becae3State struct {
	Text string `json:"text"`
}

type LastTestResultConversationTurnsVirtualAgentOutputState struct {
	SessionParameters string                                                                  `json:"session_parameters"`
	CurrentPage       []LastTestResultConversationTurnsVirtualAgentOutputCurrentPageState     `json:"current_page"`
	Differences       []LastTestResultConversationTurnsVirtualAgentOutputDifferencesState     `json:"differences"`
	Status            []LastTestResultConversationTurnsVirtualAgentOutputStatusState          `json:"status"`
	TextResponses     []LastTestResultConversationTurnsVirtualAgentOutputTextResponsesState   `json:"text_responses"`
	TriggeredIntent   []LastTestResultConversationTurnsVirtualAgentOutputTriggeredIntentState `json:"triggered_intent"`
}

type LastTestResultConversationTurnsVirtualAgentOutputCurrentPageState struct {
	DisplayName string `json:"display_name"`
	Name        string `json:"name"`
}

type LastTestResultConversationTurnsVirtualAgentOutputDifferencesState struct {
	Description string `json:"description"`
	Type        string `json:"type"`
}

type LastTestResultConversationTurnsVirtualAgentOutputStatusState struct {
	Code    float64 `json:"code"`
	Details string  `json:"details"`
	Message string  `json:"message"`
}

type LastTestResultConversationTurnsVirtualAgentOutputTextResponsesState struct {
	Text []string `json:"text"`
}

type LastTestResultConversationTurnsVirtualAgentOutputTriggeredIntentState struct {
	DisplayName string `json:"display_name"`
	Name        string `json:"name"`
}

type TestCaseConversationTurnsState struct {
	UserInput          []TestCaseConversationTurnsUserInputState          `json:"user_input"`
	VirtualAgentOutput []TestCaseConversationTurnsVirtualAgentOutputState `json:"virtual_agent_output"`
}

type TestCaseConversationTurnsUserInputState struct {
	EnableSentimentAnalysis bool                                           `json:"enable_sentiment_analysis"`
	InjectedParameters      string                                         `json:"injected_parameters"`
	IsWebhookEnabled        bool                                           `json:"is_webhook_enabled"`
	Input                   []TestCaseConversationTurnsUserInputInputState `json:"input"`
}

type TestCaseConversationTurnsUserInputInputState struct {
	LanguageCode string                                              `json:"language_code"`
	Dtmf         []TestCaseConversationTurnsUserInputInputDtmfState  `json:"dtmf"`
	Event        []TestCaseConversationTurnsUserInputInputEventState `json:"event"`
	Text         []TestCaseConversationTurnsUserInputInputTextState  `json:"text"`
}

type TestCaseConversationTurnsUserInputInputDtmfState struct {
	Digits      string `json:"digits"`
	FinishDigit string `json:"finish_digit"`
}

type TestCaseConversationTurnsUserInputInputEventState struct {
	Event string `json:"event"`
}

type TestCaseConversationTurnsUserInputInputTextState struct {
	Text string `json:"text"`
}

type TestCaseConversationTurnsVirtualAgentOutputState struct {
	SessionParameters string                                                            `json:"session_parameters"`
	CurrentPage       []TestCaseConversationTurnsVirtualAgentOutputCurrentPageState     `json:"current_page"`
	TextResponses     []TestCaseConversationTurnsVirtualAgentOutputTextResponsesState   `json:"text_responses"`
	TriggeredIntent   []TestCaseConversationTurnsVirtualAgentOutputTriggeredIntentState `json:"triggered_intent"`
}

type TestCaseConversationTurnsVirtualAgentOutputCurrentPageState struct {
	DisplayName string `json:"display_name"`
	Name        string `json:"name"`
}

type TestCaseConversationTurnsVirtualAgentOutputTextResponsesState struct {
	Text []string `json:"text"`
}

type TestCaseConversationTurnsVirtualAgentOutputTriggeredIntentState struct {
	DisplayName string `json:"display_name"`
	Name        string `json:"name"`
}

type TestConfigState struct {
	Flow               string   `json:"flow"`
	Page               string   `json:"page"`
	TrackingParameters []string `json:"tracking_parameters"`
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
	Update string `json:"update"`
}
