// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google_certificate_manager_certificate_issuance_config

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type CertificateAuthorityConfig struct {
	// CertificateAuthorityConfigCertificateAuthorityServiceConfig: optional
	CertificateAuthorityServiceConfig *CertificateAuthorityConfigCertificateAuthorityServiceConfig `hcl:"certificate_authority_service_config,block"`
}

type CertificateAuthorityConfigCertificateAuthorityServiceConfig struct {
	// CaPool: string, required
	CaPool terra.StringValue `hcl:"ca_pool,attr" validate:"required"`
}

type Timeouts struct {
	// Create: string, optional
	Create terra.StringValue `hcl:"create,attr"`
	// Delete: string, optional
	Delete terra.StringValue `hcl:"delete,attr"`
	// Update: string, optional
	Update terra.StringValue `hcl:"update,attr"`
}

type CertificateAuthorityConfigAttributes struct {
	ref terra.Reference
}

func (cac CertificateAuthorityConfigAttributes) InternalRef() (terra.Reference, error) {
	return cac.ref, nil
}

func (cac CertificateAuthorityConfigAttributes) InternalWithRef(ref terra.Reference) CertificateAuthorityConfigAttributes {
	return CertificateAuthorityConfigAttributes{ref: ref}
}

func (cac CertificateAuthorityConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cac.ref.InternalTokens()
}

func (cac CertificateAuthorityConfigAttributes) CertificateAuthorityServiceConfig() terra.ListValue[CertificateAuthorityConfigCertificateAuthorityServiceConfigAttributes] {
	return terra.ReferenceAsList[CertificateAuthorityConfigCertificateAuthorityServiceConfigAttributes](cac.ref.Append("certificate_authority_service_config"))
}

type CertificateAuthorityConfigCertificateAuthorityServiceConfigAttributes struct {
	ref terra.Reference
}

func (casc CertificateAuthorityConfigCertificateAuthorityServiceConfigAttributes) InternalRef() (terra.Reference, error) {
	return casc.ref, nil
}

func (casc CertificateAuthorityConfigCertificateAuthorityServiceConfigAttributes) InternalWithRef(ref terra.Reference) CertificateAuthorityConfigCertificateAuthorityServiceConfigAttributes {
	return CertificateAuthorityConfigCertificateAuthorityServiceConfigAttributes{ref: ref}
}

func (casc CertificateAuthorityConfigCertificateAuthorityServiceConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return casc.ref.InternalTokens()
}

func (casc CertificateAuthorityConfigCertificateAuthorityServiceConfigAttributes) CaPool() terra.StringValue {
	return terra.ReferenceAsString(casc.ref.Append("ca_pool"))
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("create"))
}

func (t TimeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("delete"))
}

func (t TimeoutsAttributes) Update() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("update"))
}

type CertificateAuthorityConfigState struct {
	CertificateAuthorityServiceConfig []CertificateAuthorityConfigCertificateAuthorityServiceConfigState `json:"certificate_authority_service_config"`
}

type CertificateAuthorityConfigCertificateAuthorityServiceConfigState struct {
	CaPool string `json:"ca_pool"`
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
	Update string `json:"update"`
}
