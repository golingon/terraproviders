// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google_apigee_instance

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource google_apigee_instance.
type Resource struct {
	Name      string
	Args      Args
	state     *googleApigeeInstanceState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (gai *Resource) Type() string {
	return "google_apigee_instance"
}

// LocalName returns the local name for [Resource].
func (gai *Resource) LocalName() string {
	return gai.Name
}

// Configuration returns the configuration (args) for [Resource].
func (gai *Resource) Configuration() interface{} {
	return gai.Args
}

// DependOn is used for other resources to depend on [Resource].
func (gai *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(gai)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (gai *Resource) Dependencies() terra.Dependencies {
	return gai.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (gai *Resource) LifecycleManagement() *terra.Lifecycle {
	return gai.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (gai *Resource) Attributes() googleApigeeInstanceAttributes {
	return googleApigeeInstanceAttributes{ref: terra.ReferenceResource(gai)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (gai *Resource) ImportState(state io.Reader) error {
	gai.state = &googleApigeeInstanceState{}
	if err := json.NewDecoder(state).Decode(gai.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", gai.Type(), gai.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (gai *Resource) State() (*googleApigeeInstanceState, bool) {
	return gai.state, gai.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (gai *Resource) StateMust() *googleApigeeInstanceState {
	if gai.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", gai.Type(), gai.LocalName()))
	}
	return gai.state
}

// Args contains the configurations for google_apigee_instance.
type Args struct {
	// ConsumerAcceptList: list of string, optional
	ConsumerAcceptList terra.ListValue[terra.StringValue] `hcl:"consumer_accept_list,attr"`
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// DiskEncryptionKeyName: string, optional
	DiskEncryptionKeyName terra.StringValue `hcl:"disk_encryption_key_name,attr"`
	// DisplayName: string, optional
	DisplayName terra.StringValue `hcl:"display_name,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// IpRange: string, optional
	IpRange terra.StringValue `hcl:"ip_range,attr"`
	// Location: string, required
	Location terra.StringValue `hcl:"location,attr" validate:"required"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// OrgId: string, required
	OrgId terra.StringValue `hcl:"org_id,attr" validate:"required"`
	// PeeringCidrRange: string, optional
	PeeringCidrRange terra.StringValue `hcl:"peering_cidr_range,attr"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type googleApigeeInstanceAttributes struct {
	ref terra.Reference
}

// ConsumerAcceptList returns a reference to field consumer_accept_list of google_apigee_instance.
func (gai googleApigeeInstanceAttributes) ConsumerAcceptList() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](gai.ref.Append("consumer_accept_list"))
}

// Description returns a reference to field description of google_apigee_instance.
func (gai googleApigeeInstanceAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(gai.ref.Append("description"))
}

// DiskEncryptionKeyName returns a reference to field disk_encryption_key_name of google_apigee_instance.
func (gai googleApigeeInstanceAttributes) DiskEncryptionKeyName() terra.StringValue {
	return terra.ReferenceAsString(gai.ref.Append("disk_encryption_key_name"))
}

// DisplayName returns a reference to field display_name of google_apigee_instance.
func (gai googleApigeeInstanceAttributes) DisplayName() terra.StringValue {
	return terra.ReferenceAsString(gai.ref.Append("display_name"))
}

// Host returns a reference to field host of google_apigee_instance.
func (gai googleApigeeInstanceAttributes) Host() terra.StringValue {
	return terra.ReferenceAsString(gai.ref.Append("host"))
}

// Id returns a reference to field id of google_apigee_instance.
func (gai googleApigeeInstanceAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(gai.ref.Append("id"))
}

// IpRange returns a reference to field ip_range of google_apigee_instance.
func (gai googleApigeeInstanceAttributes) IpRange() terra.StringValue {
	return terra.ReferenceAsString(gai.ref.Append("ip_range"))
}

// Location returns a reference to field location of google_apigee_instance.
func (gai googleApigeeInstanceAttributes) Location() terra.StringValue {
	return terra.ReferenceAsString(gai.ref.Append("location"))
}

// Name returns a reference to field name of google_apigee_instance.
func (gai googleApigeeInstanceAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(gai.ref.Append("name"))
}

// OrgId returns a reference to field org_id of google_apigee_instance.
func (gai googleApigeeInstanceAttributes) OrgId() terra.StringValue {
	return terra.ReferenceAsString(gai.ref.Append("org_id"))
}

// PeeringCidrRange returns a reference to field peering_cidr_range of google_apigee_instance.
func (gai googleApigeeInstanceAttributes) PeeringCidrRange() terra.StringValue {
	return terra.ReferenceAsString(gai.ref.Append("peering_cidr_range"))
}

// Port returns a reference to field port of google_apigee_instance.
func (gai googleApigeeInstanceAttributes) Port() terra.StringValue {
	return terra.ReferenceAsString(gai.ref.Append("port"))
}

// ServiceAttachment returns a reference to field service_attachment of google_apigee_instance.
func (gai googleApigeeInstanceAttributes) ServiceAttachment() terra.StringValue {
	return terra.ReferenceAsString(gai.ref.Append("service_attachment"))
}

func (gai googleApigeeInstanceAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](gai.ref.Append("timeouts"))
}

type googleApigeeInstanceState struct {
	ConsumerAcceptList    []string       `json:"consumer_accept_list"`
	Description           string         `json:"description"`
	DiskEncryptionKeyName string         `json:"disk_encryption_key_name"`
	DisplayName           string         `json:"display_name"`
	Host                  string         `json:"host"`
	Id                    string         `json:"id"`
	IpRange               string         `json:"ip_range"`
	Location              string         `json:"location"`
	Name                  string         `json:"name"`
	OrgId                 string         `json:"org_id"`
	PeeringCidrRange      string         `json:"peering_cidr_range"`
	Port                  string         `json:"port"`
	ServiceAttachment     string         `json:"service_attachment"`
	Timeouts              *TimeoutsState `json:"timeouts"`
}
