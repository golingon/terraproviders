// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google_compute_image

import "github.com/golingon/lingon/pkg/terra"

// Data creates a new instance of [DataSource].
func Data(name string, args DataArgs) *DataSource {
	return &DataSource{
		Args: args,
		Name: name,
	}
}

var _ terra.DataSource = (*DataSource)(nil)

// DataSource represents the Terraform data resource google_compute_image.
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (gci *DataSource) DataSource() string {
	return "google_compute_image"
}

// LocalName returns the local name for [DataSource].
func (gci *DataSource) LocalName() string {
	return gci.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (gci *DataSource) Configuration() interface{} {
	return gci.Args
}

// Attributes returns the attributes for [DataSource].
func (gci *DataSource) Attributes() dataGoogleComputeImageAttributes {
	return dataGoogleComputeImageAttributes{ref: terra.ReferenceDataSource(gci)}
}

// DataArgs contains the configurations for google_compute_image.
type DataArgs struct {
	// Family: string, optional
	Family terra.StringValue `hcl:"family,attr"`
	// Filter: string, optional
	Filter terra.StringValue `hcl:"filter,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// MostRecent: bool, optional
	MostRecent terra.BoolValue `hcl:"most_recent,attr"`
	// Name: string, optional
	Name terra.StringValue `hcl:"name,attr"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
}

type dataGoogleComputeImageAttributes struct {
	ref terra.Reference
}

// ArchiveSizeBytes returns a reference to field archive_size_bytes of google_compute_image.
func (gci dataGoogleComputeImageAttributes) ArchiveSizeBytes() terra.NumberValue {
	return terra.ReferenceAsNumber(gci.ref.Append("archive_size_bytes"))
}

// CreationTimestamp returns a reference to field creation_timestamp of google_compute_image.
func (gci dataGoogleComputeImageAttributes) CreationTimestamp() terra.StringValue {
	return terra.ReferenceAsString(gci.ref.Append("creation_timestamp"))
}

// Description returns a reference to field description of google_compute_image.
func (gci dataGoogleComputeImageAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(gci.ref.Append("description"))
}

// DiskSizeGb returns a reference to field disk_size_gb of google_compute_image.
func (gci dataGoogleComputeImageAttributes) DiskSizeGb() terra.NumberValue {
	return terra.ReferenceAsNumber(gci.ref.Append("disk_size_gb"))
}

// Family returns a reference to field family of google_compute_image.
func (gci dataGoogleComputeImageAttributes) Family() terra.StringValue {
	return terra.ReferenceAsString(gci.ref.Append("family"))
}

// Filter returns a reference to field filter of google_compute_image.
func (gci dataGoogleComputeImageAttributes) Filter() terra.StringValue {
	return terra.ReferenceAsString(gci.ref.Append("filter"))
}

// Id returns a reference to field id of google_compute_image.
func (gci dataGoogleComputeImageAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(gci.ref.Append("id"))
}

// ImageEncryptionKeySha256 returns a reference to field image_encryption_key_sha256 of google_compute_image.
func (gci dataGoogleComputeImageAttributes) ImageEncryptionKeySha256() terra.StringValue {
	return terra.ReferenceAsString(gci.ref.Append("image_encryption_key_sha256"))
}

// ImageId returns a reference to field image_id of google_compute_image.
func (gci dataGoogleComputeImageAttributes) ImageId() terra.StringValue {
	return terra.ReferenceAsString(gci.ref.Append("image_id"))
}

// LabelFingerprint returns a reference to field label_fingerprint of google_compute_image.
func (gci dataGoogleComputeImageAttributes) LabelFingerprint() terra.StringValue {
	return terra.ReferenceAsString(gci.ref.Append("label_fingerprint"))
}

// Labels returns a reference to field labels of google_compute_image.
func (gci dataGoogleComputeImageAttributes) Labels() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](gci.ref.Append("labels"))
}

// Licenses returns a reference to field licenses of google_compute_image.
func (gci dataGoogleComputeImageAttributes) Licenses() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](gci.ref.Append("licenses"))
}

// MostRecent returns a reference to field most_recent of google_compute_image.
func (gci dataGoogleComputeImageAttributes) MostRecent() terra.BoolValue {
	return terra.ReferenceAsBool(gci.ref.Append("most_recent"))
}

// Name returns a reference to field name of google_compute_image.
func (gci dataGoogleComputeImageAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(gci.ref.Append("name"))
}

// Project returns a reference to field project of google_compute_image.
func (gci dataGoogleComputeImageAttributes) Project() terra.StringValue {
	return terra.ReferenceAsString(gci.ref.Append("project"))
}

// SelfLink returns a reference to field self_link of google_compute_image.
func (gci dataGoogleComputeImageAttributes) SelfLink() terra.StringValue {
	return terra.ReferenceAsString(gci.ref.Append("self_link"))
}

// SourceDisk returns a reference to field source_disk of google_compute_image.
func (gci dataGoogleComputeImageAttributes) SourceDisk() terra.StringValue {
	return terra.ReferenceAsString(gci.ref.Append("source_disk"))
}

// SourceDiskEncryptionKeySha256 returns a reference to field source_disk_encryption_key_sha256 of google_compute_image.
func (gci dataGoogleComputeImageAttributes) SourceDiskEncryptionKeySha256() terra.StringValue {
	return terra.ReferenceAsString(gci.ref.Append("source_disk_encryption_key_sha256"))
}

// SourceDiskId returns a reference to field source_disk_id of google_compute_image.
func (gci dataGoogleComputeImageAttributes) SourceDiskId() terra.StringValue {
	return terra.ReferenceAsString(gci.ref.Append("source_disk_id"))
}

// SourceImageId returns a reference to field source_image_id of google_compute_image.
func (gci dataGoogleComputeImageAttributes) SourceImageId() terra.StringValue {
	return terra.ReferenceAsString(gci.ref.Append("source_image_id"))
}

// Status returns a reference to field status of google_compute_image.
func (gci dataGoogleComputeImageAttributes) Status() terra.StringValue {
	return terra.ReferenceAsString(gci.ref.Append("status"))
}
