// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google_iap_web_backend_service_iam_member

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource google_iap_web_backend_service_iam_member.
type Resource struct {
	Name      string
	Args      Args
	state     *googleIapWebBackendServiceIamMemberState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (giwbsim *Resource) Type() string {
	return "google_iap_web_backend_service_iam_member"
}

// LocalName returns the local name for [Resource].
func (giwbsim *Resource) LocalName() string {
	return giwbsim.Name
}

// Configuration returns the configuration (args) for [Resource].
func (giwbsim *Resource) Configuration() interface{} {
	return giwbsim.Args
}

// DependOn is used for other resources to depend on [Resource].
func (giwbsim *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(giwbsim)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (giwbsim *Resource) Dependencies() terra.Dependencies {
	return giwbsim.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (giwbsim *Resource) LifecycleManagement() *terra.Lifecycle {
	return giwbsim.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (giwbsim *Resource) Attributes() googleIapWebBackendServiceIamMemberAttributes {
	return googleIapWebBackendServiceIamMemberAttributes{ref: terra.ReferenceResource(giwbsim)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (giwbsim *Resource) ImportState(state io.Reader) error {
	giwbsim.state = &googleIapWebBackendServiceIamMemberState{}
	if err := json.NewDecoder(state).Decode(giwbsim.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", giwbsim.Type(), giwbsim.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (giwbsim *Resource) State() (*googleIapWebBackendServiceIamMemberState, bool) {
	return giwbsim.state, giwbsim.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (giwbsim *Resource) StateMust() *googleIapWebBackendServiceIamMemberState {
	if giwbsim.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", giwbsim.Type(), giwbsim.LocalName()))
	}
	return giwbsim.state
}

// Args contains the configurations for google_iap_web_backend_service_iam_member.
type Args struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Member: string, required
	Member terra.StringValue `hcl:"member,attr" validate:"required"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
	// Role: string, required
	Role terra.StringValue `hcl:"role,attr" validate:"required"`
	// WebBackendService: string, required
	WebBackendService terra.StringValue `hcl:"web_backend_service,attr" validate:"required"`
	// Condition: optional
	Condition *Condition `hcl:"condition,block"`
}

type googleIapWebBackendServiceIamMemberAttributes struct {
	ref terra.Reference
}

// Etag returns a reference to field etag of google_iap_web_backend_service_iam_member.
func (giwbsim googleIapWebBackendServiceIamMemberAttributes) Etag() terra.StringValue {
	return terra.ReferenceAsString(giwbsim.ref.Append("etag"))
}

// Id returns a reference to field id of google_iap_web_backend_service_iam_member.
func (giwbsim googleIapWebBackendServiceIamMemberAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(giwbsim.ref.Append("id"))
}

// Member returns a reference to field member of google_iap_web_backend_service_iam_member.
func (giwbsim googleIapWebBackendServiceIamMemberAttributes) Member() terra.StringValue {
	return terra.ReferenceAsString(giwbsim.ref.Append("member"))
}

// Project returns a reference to field project of google_iap_web_backend_service_iam_member.
func (giwbsim googleIapWebBackendServiceIamMemberAttributes) Project() terra.StringValue {
	return terra.ReferenceAsString(giwbsim.ref.Append("project"))
}

// Role returns a reference to field role of google_iap_web_backend_service_iam_member.
func (giwbsim googleIapWebBackendServiceIamMemberAttributes) Role() terra.StringValue {
	return terra.ReferenceAsString(giwbsim.ref.Append("role"))
}

// WebBackendService returns a reference to field web_backend_service of google_iap_web_backend_service_iam_member.
func (giwbsim googleIapWebBackendServiceIamMemberAttributes) WebBackendService() terra.StringValue {
	return terra.ReferenceAsString(giwbsim.ref.Append("web_backend_service"))
}

func (giwbsim googleIapWebBackendServiceIamMemberAttributes) Condition() terra.ListValue[ConditionAttributes] {
	return terra.ReferenceAsList[ConditionAttributes](giwbsim.ref.Append("condition"))
}

type googleIapWebBackendServiceIamMemberState struct {
	Etag              string           `json:"etag"`
	Id                string           `json:"id"`
	Member            string           `json:"member"`
	Project           string           `json:"project"`
	Role              string           `json:"role"`
	WebBackendService string           `json:"web_backend_service"`
	Condition         []ConditionState `json:"condition"`
}
