// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google_compute_addresses

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DataAddressesAttributes struct {
	ref terra.Reference
}

func (a DataAddressesAttributes) InternalRef() (terra.Reference, error) {
	return a.ref, nil
}

func (a DataAddressesAttributes) InternalWithRef(ref terra.Reference) DataAddressesAttributes {
	return DataAddressesAttributes{ref: ref}
}

func (a DataAddressesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return a.ref.InternalTokens()
}

func (a DataAddressesAttributes) Address() terra.StringValue {
	return terra.ReferenceAsString(a.ref.Append("address"))
}

func (a DataAddressesAttributes) AddressType() terra.StringValue {
	return terra.ReferenceAsString(a.ref.Append("address_type"))
}

func (a DataAddressesAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(a.ref.Append("description"))
}

func (a DataAddressesAttributes) Labels() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](a.ref.Append("labels"))
}

func (a DataAddressesAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(a.ref.Append("name"))
}

func (a DataAddressesAttributes) Region() terra.StringValue {
	return terra.ReferenceAsString(a.ref.Append("region"))
}

func (a DataAddressesAttributes) SelfLink() terra.StringValue {
	return terra.ReferenceAsString(a.ref.Append("self_link"))
}

func (a DataAddressesAttributes) Status() terra.StringValue {
	return terra.ReferenceAsString(a.ref.Append("status"))
}

type DataAddressesState struct {
	Address     string            `json:"address"`
	AddressType string            `json:"address_type"`
	Description string            `json:"description"`
	Labels      map[string]string `json:"labels"`
	Name        string            `json:"name"`
	Region      string            `json:"region"`
	SelfLink    string            `json:"self_link"`
	Status      string            `json:"status"`
}
