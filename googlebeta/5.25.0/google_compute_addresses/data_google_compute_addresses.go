// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google_compute_addresses

import "github.com/golingon/lingon/pkg/terra"

// Data creates a new instance of [DataSource].
func Data(name string, args DataArgs) *DataSource {
	return &DataSource{
		Args: args,
		Name: name,
	}
}

var _ terra.DataSource = (*DataSource)(nil)

// DataSource represents the Terraform data resource google_compute_addresses.
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (gca *DataSource) DataSource() string {
	return "google_compute_addresses"
}

// LocalName returns the local name for [DataSource].
func (gca *DataSource) LocalName() string {
	return gca.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (gca *DataSource) Configuration() interface{} {
	return gca.Args
}

// Attributes returns the attributes for [DataSource].
func (gca *DataSource) Attributes() dataGoogleComputeAddressesAttributes {
	return dataGoogleComputeAddressesAttributes{ref: terra.ReferenceDataSource(gca)}
}

// DataArgs contains the configurations for google_compute_addresses.
type DataArgs struct {
	// Filter: string, optional
	Filter terra.StringValue `hcl:"filter,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
	// Region: string, optional
	Region terra.StringValue `hcl:"region,attr"`
}

type dataGoogleComputeAddressesAttributes struct {
	ref terra.Reference
}

// Filter returns a reference to field filter of google_compute_addresses.
func (gca dataGoogleComputeAddressesAttributes) Filter() terra.StringValue {
	return terra.ReferenceAsString(gca.ref.Append("filter"))
}

// Id returns a reference to field id of google_compute_addresses.
func (gca dataGoogleComputeAddressesAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(gca.ref.Append("id"))
}

// Project returns a reference to field project of google_compute_addresses.
func (gca dataGoogleComputeAddressesAttributes) Project() terra.StringValue {
	return terra.ReferenceAsString(gca.ref.Append("project"))
}

// Region returns a reference to field region of google_compute_addresses.
func (gca dataGoogleComputeAddressesAttributes) Region() terra.StringValue {
	return terra.ReferenceAsString(gca.ref.Append("region"))
}

func (gca dataGoogleComputeAddressesAttributes) Addresses() terra.ListValue[DataAddressesAttributes] {
	return terra.ReferenceAsList[DataAddressesAttributes](gca.ref.Append("addresses"))
}
