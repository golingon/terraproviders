// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google_logging_sink

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DataBigqueryOptionsAttributes struct {
	ref terra.Reference
}

func (bo DataBigqueryOptionsAttributes) InternalRef() (terra.Reference, error) {
	return bo.ref, nil
}

func (bo DataBigqueryOptionsAttributes) InternalWithRef(ref terra.Reference) DataBigqueryOptionsAttributes {
	return DataBigqueryOptionsAttributes{ref: ref}
}

func (bo DataBigqueryOptionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return bo.ref.InternalTokens()
}

func (bo DataBigqueryOptionsAttributes) UsePartitionedTables() terra.BoolValue {
	return terra.ReferenceAsBool(bo.ref.Append("use_partitioned_tables"))
}

type DataExclusionsAttributes struct {
	ref terra.Reference
}

func (e DataExclusionsAttributes) InternalRef() (terra.Reference, error) {
	return e.ref, nil
}

func (e DataExclusionsAttributes) InternalWithRef(ref terra.Reference) DataExclusionsAttributes {
	return DataExclusionsAttributes{ref: ref}
}

func (e DataExclusionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return e.ref.InternalTokens()
}

func (e DataExclusionsAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("description"))
}

func (e DataExclusionsAttributes) Disabled() terra.BoolValue {
	return terra.ReferenceAsBool(e.ref.Append("disabled"))
}

func (e DataExclusionsAttributes) Filter() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("filter"))
}

func (e DataExclusionsAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("name"))
}

type DataBigqueryOptionsState struct {
	UsePartitionedTables bool `json:"use_partitioned_tables"`
}

type DataExclusionsState struct {
	Description string `json:"description"`
	Disabled    bool   `json:"disabled"`
	Filter      string `json:"filter"`
	Name        string `json:"name"`
}
