// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google_sql_database_instances

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DataInstancesAttributes struct {
	ref terra.Reference
}

func (i DataInstancesAttributes) InternalRef() (terra.Reference, error) {
	return i.ref, nil
}

func (i DataInstancesAttributes) InternalWithRef(ref terra.Reference) DataInstancesAttributes {
	return DataInstancesAttributes{ref: ref}
}

func (i DataInstancesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return i.ref.InternalTokens()
}

func (i DataInstancesAttributes) AvailableMaintenanceVersions() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](i.ref.Append("available_maintenance_versions"))
}

func (i DataInstancesAttributes) ConnectionName() terra.StringValue {
	return terra.ReferenceAsString(i.ref.Append("connection_name"))
}

func (i DataInstancesAttributes) DatabaseVersion() terra.StringValue {
	return terra.ReferenceAsString(i.ref.Append("database_version"))
}

func (i DataInstancesAttributes) DeletionProtection() terra.BoolValue {
	return terra.ReferenceAsBool(i.ref.Append("deletion_protection"))
}

func (i DataInstancesAttributes) DnsName() terra.StringValue {
	return terra.ReferenceAsString(i.ref.Append("dns_name"))
}

func (i DataInstancesAttributes) EncryptionKeyName() terra.StringValue {
	return terra.ReferenceAsString(i.ref.Append("encryption_key_name"))
}

func (i DataInstancesAttributes) FirstIpAddress() terra.StringValue {
	return terra.ReferenceAsString(i.ref.Append("first_ip_address"))
}

func (i DataInstancesAttributes) InstanceType() terra.StringValue {
	return terra.ReferenceAsString(i.ref.Append("instance_type"))
}

func (i DataInstancesAttributes) MaintenanceVersion() terra.StringValue {
	return terra.ReferenceAsString(i.ref.Append("maintenance_version"))
}

func (i DataInstancesAttributes) MasterInstanceName() terra.StringValue {
	return terra.ReferenceAsString(i.ref.Append("master_instance_name"))
}

func (i DataInstancesAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(i.ref.Append("name"))
}

func (i DataInstancesAttributes) PrivateIpAddress() terra.StringValue {
	return terra.ReferenceAsString(i.ref.Append("private_ip_address"))
}

func (i DataInstancesAttributes) Project() terra.StringValue {
	return terra.ReferenceAsString(i.ref.Append("project"))
}

func (i DataInstancesAttributes) PscServiceAttachmentLink() terra.StringValue {
	return terra.ReferenceAsString(i.ref.Append("psc_service_attachment_link"))
}

func (i DataInstancesAttributes) PublicIpAddress() terra.StringValue {
	return terra.ReferenceAsString(i.ref.Append("public_ip_address"))
}

func (i DataInstancesAttributes) Region() terra.StringValue {
	return terra.ReferenceAsString(i.ref.Append("region"))
}

func (i DataInstancesAttributes) RootPassword() terra.StringValue {
	return terra.ReferenceAsString(i.ref.Append("root_password"))
}

func (i DataInstancesAttributes) SelfLink() terra.StringValue {
	return terra.ReferenceAsString(i.ref.Append("self_link"))
}

func (i DataInstancesAttributes) ServiceAccountEmailAddress() terra.StringValue {
	return terra.ReferenceAsString(i.ref.Append("service_account_email_address"))
}

func (i DataInstancesAttributes) Clone() terra.ListValue[DataInstancesCloneAttributes] {
	return terra.ReferenceAsList[DataInstancesCloneAttributes](i.ref.Append("clone"))
}

func (i DataInstancesAttributes) IpAddress() terra.ListValue[DataInstancesIpAddressAttributes] {
	return terra.ReferenceAsList[DataInstancesIpAddressAttributes](i.ref.Append("ip_address"))
}

func (i DataInstancesAttributes) ReplicaConfiguration() terra.ListValue[DataInstancesReplicaConfigurationAttributes] {
	return terra.ReferenceAsList[DataInstancesReplicaConfigurationAttributes](i.ref.Append("replica_configuration"))
}

func (i DataInstancesAttributes) RestoreBackupContext() terra.ListValue[DataInstancesRestoreBackupContextAttributes] {
	return terra.ReferenceAsList[DataInstancesRestoreBackupContextAttributes](i.ref.Append("restore_backup_context"))
}

func (i DataInstancesAttributes) ServerCaCert() terra.ListValue[DataInstancesServerCaCertAttributes] {
	return terra.ReferenceAsList[DataInstancesServerCaCertAttributes](i.ref.Append("server_ca_cert"))
}

func (i DataInstancesAttributes) Settings() terra.ListValue[DataInstancesSettingsAttributes] {
	return terra.ReferenceAsList[DataInstancesSettingsAttributes](i.ref.Append("settings"))
}

type DataInstancesCloneAttributes struct {
	ref terra.Reference
}

func (c DataInstancesCloneAttributes) InternalRef() (terra.Reference, error) {
	return c.ref, nil
}

func (c DataInstancesCloneAttributes) InternalWithRef(ref terra.Reference) DataInstancesCloneAttributes {
	return DataInstancesCloneAttributes{ref: ref}
}

func (c DataInstancesCloneAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return c.ref.InternalTokens()
}

func (c DataInstancesCloneAttributes) AllocatedIpRange() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("allocated_ip_range"))
}

func (c DataInstancesCloneAttributes) DatabaseNames() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](c.ref.Append("database_names"))
}

func (c DataInstancesCloneAttributes) PointInTime() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("point_in_time"))
}

func (c DataInstancesCloneAttributes) PreferredZone() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("preferred_zone"))
}

func (c DataInstancesCloneAttributes) SourceInstanceName() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("source_instance_name"))
}

type DataInstancesIpAddressAttributes struct {
	ref terra.Reference
}

func (ia DataInstancesIpAddressAttributes) InternalRef() (terra.Reference, error) {
	return ia.ref, nil
}

func (ia DataInstancesIpAddressAttributes) InternalWithRef(ref terra.Reference) DataInstancesIpAddressAttributes {
	return DataInstancesIpAddressAttributes{ref: ref}
}

func (ia DataInstancesIpAddressAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ia.ref.InternalTokens()
}

func (ia DataInstancesIpAddressAttributes) IpAddress() terra.StringValue {
	return terra.ReferenceAsString(ia.ref.Append("ip_address"))
}

func (ia DataInstancesIpAddressAttributes) TimeToRetire() terra.StringValue {
	return terra.ReferenceAsString(ia.ref.Append("time_to_retire"))
}

func (ia DataInstancesIpAddressAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(ia.ref.Append("type"))
}

type DataInstancesReplicaConfigurationAttributes struct {
	ref terra.Reference
}

func (rc DataInstancesReplicaConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return rc.ref, nil
}

func (rc DataInstancesReplicaConfigurationAttributes) InternalWithRef(ref terra.Reference) DataInstancesReplicaConfigurationAttributes {
	return DataInstancesReplicaConfigurationAttributes{ref: ref}
}

func (rc DataInstancesReplicaConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rc.ref.InternalTokens()
}

func (rc DataInstancesReplicaConfigurationAttributes) CaCertificate() terra.StringValue {
	return terra.ReferenceAsString(rc.ref.Append("ca_certificate"))
}

func (rc DataInstancesReplicaConfigurationAttributes) ClientCertificate() terra.StringValue {
	return terra.ReferenceAsString(rc.ref.Append("client_certificate"))
}

func (rc DataInstancesReplicaConfigurationAttributes) ClientKey() terra.StringValue {
	return terra.ReferenceAsString(rc.ref.Append("client_key"))
}

func (rc DataInstancesReplicaConfigurationAttributes) ConnectRetryInterval() terra.NumberValue {
	return terra.ReferenceAsNumber(rc.ref.Append("connect_retry_interval"))
}

func (rc DataInstancesReplicaConfigurationAttributes) DumpFilePath() terra.StringValue {
	return terra.ReferenceAsString(rc.ref.Append("dump_file_path"))
}

func (rc DataInstancesReplicaConfigurationAttributes) FailoverTarget() terra.BoolValue {
	return terra.ReferenceAsBool(rc.ref.Append("failover_target"))
}

func (rc DataInstancesReplicaConfigurationAttributes) MasterHeartbeatPeriod() terra.NumberValue {
	return terra.ReferenceAsNumber(rc.ref.Append("master_heartbeat_period"))
}

func (rc DataInstancesReplicaConfigurationAttributes) Password() terra.StringValue {
	return terra.ReferenceAsString(rc.ref.Append("password"))
}

func (rc DataInstancesReplicaConfigurationAttributes) SslCipher() terra.StringValue {
	return terra.ReferenceAsString(rc.ref.Append("ssl_cipher"))
}

func (rc DataInstancesReplicaConfigurationAttributes) Username() terra.StringValue {
	return terra.ReferenceAsString(rc.ref.Append("username"))
}

func (rc DataInstancesReplicaConfigurationAttributes) VerifyServerCertificate() terra.BoolValue {
	return terra.ReferenceAsBool(rc.ref.Append("verify_server_certificate"))
}

type DataInstancesRestoreBackupContextAttributes struct {
	ref terra.Reference
}

func (rbc DataInstancesRestoreBackupContextAttributes) InternalRef() (terra.Reference, error) {
	return rbc.ref, nil
}

func (rbc DataInstancesRestoreBackupContextAttributes) InternalWithRef(ref terra.Reference) DataInstancesRestoreBackupContextAttributes {
	return DataInstancesRestoreBackupContextAttributes{ref: ref}
}

func (rbc DataInstancesRestoreBackupContextAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rbc.ref.InternalTokens()
}

func (rbc DataInstancesRestoreBackupContextAttributes) BackupRunId() terra.NumberValue {
	return terra.ReferenceAsNumber(rbc.ref.Append("backup_run_id"))
}

func (rbc DataInstancesRestoreBackupContextAttributes) InstanceId() terra.StringValue {
	return terra.ReferenceAsString(rbc.ref.Append("instance_id"))
}

func (rbc DataInstancesRestoreBackupContextAttributes) Project() terra.StringValue {
	return terra.ReferenceAsString(rbc.ref.Append("project"))
}

type DataInstancesServerCaCertAttributes struct {
	ref terra.Reference
}

func (scc DataInstancesServerCaCertAttributes) InternalRef() (terra.Reference, error) {
	return scc.ref, nil
}

func (scc DataInstancesServerCaCertAttributes) InternalWithRef(ref terra.Reference) DataInstancesServerCaCertAttributes {
	return DataInstancesServerCaCertAttributes{ref: ref}
}

func (scc DataInstancesServerCaCertAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return scc.ref.InternalTokens()
}

func (scc DataInstancesServerCaCertAttributes) Cert() terra.StringValue {
	return terra.ReferenceAsString(scc.ref.Append("cert"))
}

func (scc DataInstancesServerCaCertAttributes) CommonName() terra.StringValue {
	return terra.ReferenceAsString(scc.ref.Append("common_name"))
}

func (scc DataInstancesServerCaCertAttributes) CreateTime() terra.StringValue {
	return terra.ReferenceAsString(scc.ref.Append("create_time"))
}

func (scc DataInstancesServerCaCertAttributes) ExpirationTime() terra.StringValue {
	return terra.ReferenceAsString(scc.ref.Append("expiration_time"))
}

func (scc DataInstancesServerCaCertAttributes) Sha1Fingerprint() terra.StringValue {
	return terra.ReferenceAsString(scc.ref.Append("sha1_fingerprint"))
}

type DataInstancesSettingsAttributes struct {
	ref terra.Reference
}

func (s DataInstancesSettingsAttributes) InternalRef() (terra.Reference, error) {
	return s.ref, nil
}

func (s DataInstancesSettingsAttributes) InternalWithRef(ref terra.Reference) DataInstancesSettingsAttributes {
	return DataInstancesSettingsAttributes{ref: ref}
}

func (s DataInstancesSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return s.ref.InternalTokens()
}

func (s DataInstancesSettingsAttributes) ActivationPolicy() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("activation_policy"))
}

func (s DataInstancesSettingsAttributes) AvailabilityType() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("availability_type"))
}

func (s DataInstancesSettingsAttributes) Collation() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("collation"))
}

func (s DataInstancesSettingsAttributes) ConnectorEnforcement() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("connector_enforcement"))
}

func (s DataInstancesSettingsAttributes) DeletionProtectionEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(s.ref.Append("deletion_protection_enabled"))
}

func (s DataInstancesSettingsAttributes) DiskAutoresize() terra.BoolValue {
	return terra.ReferenceAsBool(s.ref.Append("disk_autoresize"))
}

func (s DataInstancesSettingsAttributes) DiskAutoresizeLimit() terra.NumberValue {
	return terra.ReferenceAsNumber(s.ref.Append("disk_autoresize_limit"))
}

func (s DataInstancesSettingsAttributes) DiskSize() terra.NumberValue {
	return terra.ReferenceAsNumber(s.ref.Append("disk_size"))
}

func (s DataInstancesSettingsAttributes) DiskType() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("disk_type"))
}

func (s DataInstancesSettingsAttributes) Edition() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("edition"))
}

func (s DataInstancesSettingsAttributes) EnableGoogleMlIntegration() terra.BoolValue {
	return terra.ReferenceAsBool(s.ref.Append("enable_google_ml_integration"))
}

func (s DataInstancesSettingsAttributes) PricingPlan() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("pricing_plan"))
}

func (s DataInstancesSettingsAttributes) Tier() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("tier"))
}

func (s DataInstancesSettingsAttributes) TimeZone() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("time_zone"))
}

func (s DataInstancesSettingsAttributes) UserLabels() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](s.ref.Append("user_labels"))
}

func (s DataInstancesSettingsAttributes) Version() terra.NumberValue {
	return terra.ReferenceAsNumber(s.ref.Append("version"))
}

func (s DataInstancesSettingsAttributes) ActiveDirectoryConfig() terra.ListValue[DataInstancesSettingsActiveDirectoryConfigAttributes] {
	return terra.ReferenceAsList[DataInstancesSettingsActiveDirectoryConfigAttributes](s.ref.Append("active_directory_config"))
}

func (s DataInstancesSettingsAttributes) AdvancedMachineFeatures() terra.ListValue[DataInstancesSettingsAdvancedMachineFeaturesAttributes] {
	return terra.ReferenceAsList[DataInstancesSettingsAdvancedMachineFeaturesAttributes](s.ref.Append("advanced_machine_features"))
}

func (s DataInstancesSettingsAttributes) BackupConfiguration() terra.ListValue[DataInstancesSettingsBackupConfigurationAttributes] {
	return terra.ReferenceAsList[DataInstancesSettingsBackupConfigurationAttributes](s.ref.Append("backup_configuration"))
}

func (s DataInstancesSettingsAttributes) DataCacheConfig() terra.ListValue[DataInstancesSettingsDataCacheConfigAttributes] {
	return terra.ReferenceAsList[DataInstancesSettingsDataCacheConfigAttributes](s.ref.Append("data_cache_config"))
}

func (s DataInstancesSettingsAttributes) DatabaseFlags() terra.SetValue[DataInstancesSettingsDatabaseFlagsAttributes] {
	return terra.ReferenceAsSet[DataInstancesSettingsDatabaseFlagsAttributes](s.ref.Append("database_flags"))
}

func (s DataInstancesSettingsAttributes) DenyMaintenancePeriod() terra.ListValue[DataInstancesSettingsDenyMaintenancePeriodAttributes] {
	return terra.ReferenceAsList[DataInstancesSettingsDenyMaintenancePeriodAttributes](s.ref.Append("deny_maintenance_period"))
}

func (s DataInstancesSettingsAttributes) InsightsConfig() terra.ListValue[DataInstancesSettingsInsightsConfigAttributes] {
	return terra.ReferenceAsList[DataInstancesSettingsInsightsConfigAttributes](s.ref.Append("insights_config"))
}

func (s DataInstancesSettingsAttributes) IpConfiguration() terra.ListValue[DataInstancesSettingsIpConfigurationAttributes] {
	return terra.ReferenceAsList[DataInstancesSettingsIpConfigurationAttributes](s.ref.Append("ip_configuration"))
}

func (s DataInstancesSettingsAttributes) LocationPreference() terra.ListValue[DataInstancesSettingsLocationPreferenceAttributes] {
	return terra.ReferenceAsList[DataInstancesSettingsLocationPreferenceAttributes](s.ref.Append("location_preference"))
}

func (s DataInstancesSettingsAttributes) MaintenanceWindow() terra.ListValue[DataInstancesSettingsMaintenanceWindowAttributes] {
	return terra.ReferenceAsList[DataInstancesSettingsMaintenanceWindowAttributes](s.ref.Append("maintenance_window"))
}

func (s DataInstancesSettingsAttributes) PasswordValidationPolicy() terra.ListValue[DataInstancesSettingsPasswordValidationPolicyAttributes] {
	return terra.ReferenceAsList[DataInstancesSettingsPasswordValidationPolicyAttributes](s.ref.Append("password_validation_policy"))
}

func (s DataInstancesSettingsAttributes) SqlServerAuditConfig() terra.ListValue[DataInstancesSettingsSqlServerAuditConfigAttributes] {
	return terra.ReferenceAsList[DataInstancesSettingsSqlServerAuditConfigAttributes](s.ref.Append("sql_server_audit_config"))
}

type DataInstancesSettingsActiveDirectoryConfigAttributes struct {
	ref terra.Reference
}

func (adc DataInstancesSettingsActiveDirectoryConfigAttributes) InternalRef() (terra.Reference, error) {
	return adc.ref, nil
}

func (adc DataInstancesSettingsActiveDirectoryConfigAttributes) InternalWithRef(ref terra.Reference) DataInstancesSettingsActiveDirectoryConfigAttributes {
	return DataInstancesSettingsActiveDirectoryConfigAttributes{ref: ref}
}

func (adc DataInstancesSettingsActiveDirectoryConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return adc.ref.InternalTokens()
}

func (adc DataInstancesSettingsActiveDirectoryConfigAttributes) Domain() terra.StringValue {
	return terra.ReferenceAsString(adc.ref.Append("domain"))
}

type DataInstancesSettingsAdvancedMachineFeaturesAttributes struct {
	ref terra.Reference
}

func (amf DataInstancesSettingsAdvancedMachineFeaturesAttributes) InternalRef() (terra.Reference, error) {
	return amf.ref, nil
}

func (amf DataInstancesSettingsAdvancedMachineFeaturesAttributes) InternalWithRef(ref terra.Reference) DataInstancesSettingsAdvancedMachineFeaturesAttributes {
	return DataInstancesSettingsAdvancedMachineFeaturesAttributes{ref: ref}
}

func (amf DataInstancesSettingsAdvancedMachineFeaturesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return amf.ref.InternalTokens()
}

func (amf DataInstancesSettingsAdvancedMachineFeaturesAttributes) ThreadsPerCore() terra.NumberValue {
	return terra.ReferenceAsNumber(amf.ref.Append("threads_per_core"))
}

type DataInstancesSettingsBackupConfigurationAttributes struct {
	ref terra.Reference
}

func (bc DataInstancesSettingsBackupConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return bc.ref, nil
}

func (bc DataInstancesSettingsBackupConfigurationAttributes) InternalWithRef(ref terra.Reference) DataInstancesSettingsBackupConfigurationAttributes {
	return DataInstancesSettingsBackupConfigurationAttributes{ref: ref}
}

func (bc DataInstancesSettingsBackupConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return bc.ref.InternalTokens()
}

func (bc DataInstancesSettingsBackupConfigurationAttributes) BinaryLogEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(bc.ref.Append("binary_log_enabled"))
}

func (bc DataInstancesSettingsBackupConfigurationAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceAsBool(bc.ref.Append("enabled"))
}

func (bc DataInstancesSettingsBackupConfigurationAttributes) Location() terra.StringValue {
	return terra.ReferenceAsString(bc.ref.Append("location"))
}

func (bc DataInstancesSettingsBackupConfigurationAttributes) PointInTimeRecoveryEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(bc.ref.Append("point_in_time_recovery_enabled"))
}

func (bc DataInstancesSettingsBackupConfigurationAttributes) StartTime() terra.StringValue {
	return terra.ReferenceAsString(bc.ref.Append("start_time"))
}

func (bc DataInstancesSettingsBackupConfigurationAttributes) TransactionLogRetentionDays() terra.NumberValue {
	return terra.ReferenceAsNumber(bc.ref.Append("transaction_log_retention_days"))
}

func (bc DataInstancesSettingsBackupConfigurationAttributes) BackupRetentionSettings() terra.ListValue[DataInstancesSettingsBackupConfigurationBackupRetentionSettingsAttributes] {
	return terra.ReferenceAsList[DataInstancesSettingsBackupConfigurationBackupRetentionSettingsAttributes](bc.ref.Append("backup_retention_settings"))
}

type DataInstancesSettingsBackupConfigurationBackupRetentionSettingsAttributes struct {
	ref terra.Reference
}

func (brs DataInstancesSettingsBackupConfigurationBackupRetentionSettingsAttributes) InternalRef() (terra.Reference, error) {
	return brs.ref, nil
}

func (brs DataInstancesSettingsBackupConfigurationBackupRetentionSettingsAttributes) InternalWithRef(ref terra.Reference) DataInstancesSettingsBackupConfigurationBackupRetentionSettingsAttributes {
	return DataInstancesSettingsBackupConfigurationBackupRetentionSettingsAttributes{ref: ref}
}

func (brs DataInstancesSettingsBackupConfigurationBackupRetentionSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return brs.ref.InternalTokens()
}

func (brs DataInstancesSettingsBackupConfigurationBackupRetentionSettingsAttributes) RetainedBackups() terra.NumberValue {
	return terra.ReferenceAsNumber(brs.ref.Append("retained_backups"))
}

func (brs DataInstancesSettingsBackupConfigurationBackupRetentionSettingsAttributes) RetentionUnit() terra.StringValue {
	return terra.ReferenceAsString(brs.ref.Append("retention_unit"))
}

type DataInstancesSettingsDataCacheConfigAttributes struct {
	ref terra.Reference
}

func (dcc DataInstancesSettingsDataCacheConfigAttributes) InternalRef() (terra.Reference, error) {
	return dcc.ref, nil
}

func (dcc DataInstancesSettingsDataCacheConfigAttributes) InternalWithRef(ref terra.Reference) DataInstancesSettingsDataCacheConfigAttributes {
	return DataInstancesSettingsDataCacheConfigAttributes{ref: ref}
}

func (dcc DataInstancesSettingsDataCacheConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dcc.ref.InternalTokens()
}

func (dcc DataInstancesSettingsDataCacheConfigAttributes) DataCacheEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(dcc.ref.Append("data_cache_enabled"))
}

type DataInstancesSettingsDatabaseFlagsAttributes struct {
	ref terra.Reference
}

func (df DataInstancesSettingsDatabaseFlagsAttributes) InternalRef() (terra.Reference, error) {
	return df.ref, nil
}

func (df DataInstancesSettingsDatabaseFlagsAttributes) InternalWithRef(ref terra.Reference) DataInstancesSettingsDatabaseFlagsAttributes {
	return DataInstancesSettingsDatabaseFlagsAttributes{ref: ref}
}

func (df DataInstancesSettingsDatabaseFlagsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return df.ref.InternalTokens()
}

func (df DataInstancesSettingsDatabaseFlagsAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(df.ref.Append("name"))
}

func (df DataInstancesSettingsDatabaseFlagsAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(df.ref.Append("value"))
}

type DataInstancesSettingsDenyMaintenancePeriodAttributes struct {
	ref terra.Reference
}

func (dmp DataInstancesSettingsDenyMaintenancePeriodAttributes) InternalRef() (terra.Reference, error) {
	return dmp.ref, nil
}

func (dmp DataInstancesSettingsDenyMaintenancePeriodAttributes) InternalWithRef(ref terra.Reference) DataInstancesSettingsDenyMaintenancePeriodAttributes {
	return DataInstancesSettingsDenyMaintenancePeriodAttributes{ref: ref}
}

func (dmp DataInstancesSettingsDenyMaintenancePeriodAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dmp.ref.InternalTokens()
}

func (dmp DataInstancesSettingsDenyMaintenancePeriodAttributes) EndDate() terra.StringValue {
	return terra.ReferenceAsString(dmp.ref.Append("end_date"))
}

func (dmp DataInstancesSettingsDenyMaintenancePeriodAttributes) StartDate() terra.StringValue {
	return terra.ReferenceAsString(dmp.ref.Append("start_date"))
}

func (dmp DataInstancesSettingsDenyMaintenancePeriodAttributes) Time() terra.StringValue {
	return terra.ReferenceAsString(dmp.ref.Append("time"))
}

type DataInstancesSettingsInsightsConfigAttributes struct {
	ref terra.Reference
}

func (ic DataInstancesSettingsInsightsConfigAttributes) InternalRef() (terra.Reference, error) {
	return ic.ref, nil
}

func (ic DataInstancesSettingsInsightsConfigAttributes) InternalWithRef(ref terra.Reference) DataInstancesSettingsInsightsConfigAttributes {
	return DataInstancesSettingsInsightsConfigAttributes{ref: ref}
}

func (ic DataInstancesSettingsInsightsConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ic.ref.InternalTokens()
}

func (ic DataInstancesSettingsInsightsConfigAttributes) QueryInsightsEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(ic.ref.Append("query_insights_enabled"))
}

func (ic DataInstancesSettingsInsightsConfigAttributes) QueryPlansPerMinute() terra.NumberValue {
	return terra.ReferenceAsNumber(ic.ref.Append("query_plans_per_minute"))
}

func (ic DataInstancesSettingsInsightsConfigAttributes) QueryStringLength() terra.NumberValue {
	return terra.ReferenceAsNumber(ic.ref.Append("query_string_length"))
}

func (ic DataInstancesSettingsInsightsConfigAttributes) RecordApplicationTags() terra.BoolValue {
	return terra.ReferenceAsBool(ic.ref.Append("record_application_tags"))
}

func (ic DataInstancesSettingsInsightsConfigAttributes) RecordClientAddress() terra.BoolValue {
	return terra.ReferenceAsBool(ic.ref.Append("record_client_address"))
}

type DataInstancesSettingsIpConfigurationAttributes struct {
	ref terra.Reference
}

func (ic DataInstancesSettingsIpConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return ic.ref, nil
}

func (ic DataInstancesSettingsIpConfigurationAttributes) InternalWithRef(ref terra.Reference) DataInstancesSettingsIpConfigurationAttributes {
	return DataInstancesSettingsIpConfigurationAttributes{ref: ref}
}

func (ic DataInstancesSettingsIpConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ic.ref.InternalTokens()
}

func (ic DataInstancesSettingsIpConfigurationAttributes) AllocatedIpRange() terra.StringValue {
	return terra.ReferenceAsString(ic.ref.Append("allocated_ip_range"))
}

func (ic DataInstancesSettingsIpConfigurationAttributes) EnablePrivatePathForGoogleCloudServices() terra.BoolValue {
	return terra.ReferenceAsBool(ic.ref.Append("enable_private_path_for_google_cloud_services"))
}

func (ic DataInstancesSettingsIpConfigurationAttributes) Ipv4Enabled() terra.BoolValue {
	return terra.ReferenceAsBool(ic.ref.Append("ipv4_enabled"))
}

func (ic DataInstancesSettingsIpConfigurationAttributes) PrivateNetwork() terra.StringValue {
	return terra.ReferenceAsString(ic.ref.Append("private_network"))
}

func (ic DataInstancesSettingsIpConfigurationAttributes) RequireSsl() terra.BoolValue {
	return terra.ReferenceAsBool(ic.ref.Append("require_ssl"))
}

func (ic DataInstancesSettingsIpConfigurationAttributes) SslMode() terra.StringValue {
	return terra.ReferenceAsString(ic.ref.Append("ssl_mode"))
}

func (ic DataInstancesSettingsIpConfigurationAttributes) AuthorizedNetworks() terra.SetValue[DataInstancesSettingsIpConfigurationAuthorizedNetworksAttributes] {
	return terra.ReferenceAsSet[DataInstancesSettingsIpConfigurationAuthorizedNetworksAttributes](ic.ref.Append("authorized_networks"))
}

func (ic DataInstancesSettingsIpConfigurationAttributes) PscConfig() terra.SetValue[DataInstancesSettingsIpConfigurationPscConfigAttributes] {
	return terra.ReferenceAsSet[DataInstancesSettingsIpConfigurationPscConfigAttributes](ic.ref.Append("psc_config"))
}

type DataInstancesSettingsIpConfigurationAuthorizedNetworksAttributes struct {
	ref terra.Reference
}

func (an DataInstancesSettingsIpConfigurationAuthorizedNetworksAttributes) InternalRef() (terra.Reference, error) {
	return an.ref, nil
}

func (an DataInstancesSettingsIpConfigurationAuthorizedNetworksAttributes) InternalWithRef(ref terra.Reference) DataInstancesSettingsIpConfigurationAuthorizedNetworksAttributes {
	return DataInstancesSettingsIpConfigurationAuthorizedNetworksAttributes{ref: ref}
}

func (an DataInstancesSettingsIpConfigurationAuthorizedNetworksAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return an.ref.InternalTokens()
}

func (an DataInstancesSettingsIpConfigurationAuthorizedNetworksAttributes) ExpirationTime() terra.StringValue {
	return terra.ReferenceAsString(an.ref.Append("expiration_time"))
}

func (an DataInstancesSettingsIpConfigurationAuthorizedNetworksAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(an.ref.Append("name"))
}

func (an DataInstancesSettingsIpConfigurationAuthorizedNetworksAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(an.ref.Append("value"))
}

type DataInstancesSettingsIpConfigurationPscConfigAttributes struct {
	ref terra.Reference
}

func (pc DataInstancesSettingsIpConfigurationPscConfigAttributes) InternalRef() (terra.Reference, error) {
	return pc.ref, nil
}

func (pc DataInstancesSettingsIpConfigurationPscConfigAttributes) InternalWithRef(ref terra.Reference) DataInstancesSettingsIpConfigurationPscConfigAttributes {
	return DataInstancesSettingsIpConfigurationPscConfigAttributes{ref: ref}
}

func (pc DataInstancesSettingsIpConfigurationPscConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return pc.ref.InternalTokens()
}

func (pc DataInstancesSettingsIpConfigurationPscConfigAttributes) AllowedConsumerProjects() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](pc.ref.Append("allowed_consumer_projects"))
}

func (pc DataInstancesSettingsIpConfigurationPscConfigAttributes) PscEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(pc.ref.Append("psc_enabled"))
}

type DataInstancesSettingsLocationPreferenceAttributes struct {
	ref terra.Reference
}

func (lp DataInstancesSettingsLocationPreferenceAttributes) InternalRef() (terra.Reference, error) {
	return lp.ref, nil
}

func (lp DataInstancesSettingsLocationPreferenceAttributes) InternalWithRef(ref terra.Reference) DataInstancesSettingsLocationPreferenceAttributes {
	return DataInstancesSettingsLocationPreferenceAttributes{ref: ref}
}

func (lp DataInstancesSettingsLocationPreferenceAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return lp.ref.InternalTokens()
}

func (lp DataInstancesSettingsLocationPreferenceAttributes) FollowGaeApplication() terra.StringValue {
	return terra.ReferenceAsString(lp.ref.Append("follow_gae_application"))
}

func (lp DataInstancesSettingsLocationPreferenceAttributes) SecondaryZone() terra.StringValue {
	return terra.ReferenceAsString(lp.ref.Append("secondary_zone"))
}

func (lp DataInstancesSettingsLocationPreferenceAttributes) Zone() terra.StringValue {
	return terra.ReferenceAsString(lp.ref.Append("zone"))
}

type DataInstancesSettingsMaintenanceWindowAttributes struct {
	ref terra.Reference
}

func (mw DataInstancesSettingsMaintenanceWindowAttributes) InternalRef() (terra.Reference, error) {
	return mw.ref, nil
}

func (mw DataInstancesSettingsMaintenanceWindowAttributes) InternalWithRef(ref terra.Reference) DataInstancesSettingsMaintenanceWindowAttributes {
	return DataInstancesSettingsMaintenanceWindowAttributes{ref: ref}
}

func (mw DataInstancesSettingsMaintenanceWindowAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return mw.ref.InternalTokens()
}

func (mw DataInstancesSettingsMaintenanceWindowAttributes) Day() terra.NumberValue {
	return terra.ReferenceAsNumber(mw.ref.Append("day"))
}

func (mw DataInstancesSettingsMaintenanceWindowAttributes) Hour() terra.NumberValue {
	return terra.ReferenceAsNumber(mw.ref.Append("hour"))
}

func (mw DataInstancesSettingsMaintenanceWindowAttributes) UpdateTrack() terra.StringValue {
	return terra.ReferenceAsString(mw.ref.Append("update_track"))
}

type DataInstancesSettingsPasswordValidationPolicyAttributes struct {
	ref terra.Reference
}

func (pvp DataInstancesSettingsPasswordValidationPolicyAttributes) InternalRef() (terra.Reference, error) {
	return pvp.ref, nil
}

func (pvp DataInstancesSettingsPasswordValidationPolicyAttributes) InternalWithRef(ref terra.Reference) DataInstancesSettingsPasswordValidationPolicyAttributes {
	return DataInstancesSettingsPasswordValidationPolicyAttributes{ref: ref}
}

func (pvp DataInstancesSettingsPasswordValidationPolicyAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return pvp.ref.InternalTokens()
}

func (pvp DataInstancesSettingsPasswordValidationPolicyAttributes) Complexity() terra.StringValue {
	return terra.ReferenceAsString(pvp.ref.Append("complexity"))
}

func (pvp DataInstancesSettingsPasswordValidationPolicyAttributes) DisallowUsernameSubstring() terra.BoolValue {
	return terra.ReferenceAsBool(pvp.ref.Append("disallow_username_substring"))
}

func (pvp DataInstancesSettingsPasswordValidationPolicyAttributes) EnablePasswordPolicy() terra.BoolValue {
	return terra.ReferenceAsBool(pvp.ref.Append("enable_password_policy"))
}

func (pvp DataInstancesSettingsPasswordValidationPolicyAttributes) MinLength() terra.NumberValue {
	return terra.ReferenceAsNumber(pvp.ref.Append("min_length"))
}

func (pvp DataInstancesSettingsPasswordValidationPolicyAttributes) PasswordChangeInterval() terra.StringValue {
	return terra.ReferenceAsString(pvp.ref.Append("password_change_interval"))
}

func (pvp DataInstancesSettingsPasswordValidationPolicyAttributes) ReuseInterval() terra.NumberValue {
	return terra.ReferenceAsNumber(pvp.ref.Append("reuse_interval"))
}

type DataInstancesSettingsSqlServerAuditConfigAttributes struct {
	ref terra.Reference
}

func (ssac DataInstancesSettingsSqlServerAuditConfigAttributes) InternalRef() (terra.Reference, error) {
	return ssac.ref, nil
}

func (ssac DataInstancesSettingsSqlServerAuditConfigAttributes) InternalWithRef(ref terra.Reference) DataInstancesSettingsSqlServerAuditConfigAttributes {
	return DataInstancesSettingsSqlServerAuditConfigAttributes{ref: ref}
}

func (ssac DataInstancesSettingsSqlServerAuditConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ssac.ref.InternalTokens()
}

func (ssac DataInstancesSettingsSqlServerAuditConfigAttributes) Bucket() terra.StringValue {
	return terra.ReferenceAsString(ssac.ref.Append("bucket"))
}

func (ssac DataInstancesSettingsSqlServerAuditConfigAttributes) RetentionInterval() terra.StringValue {
	return terra.ReferenceAsString(ssac.ref.Append("retention_interval"))
}

func (ssac DataInstancesSettingsSqlServerAuditConfigAttributes) UploadInterval() terra.StringValue {
	return terra.ReferenceAsString(ssac.ref.Append("upload_interval"))
}

type DataInstancesState struct {
	AvailableMaintenanceVersions []string                                 `json:"available_maintenance_versions"`
	ConnectionName               string                                   `json:"connection_name"`
	DatabaseVersion              string                                   `json:"database_version"`
	DeletionProtection           bool                                     `json:"deletion_protection"`
	DnsName                      string                                   `json:"dns_name"`
	EncryptionKeyName            string                                   `json:"encryption_key_name"`
	FirstIpAddress               string                                   `json:"first_ip_address"`
	InstanceType                 string                                   `json:"instance_type"`
	MaintenanceVersion           string                                   `json:"maintenance_version"`
	MasterInstanceName           string                                   `json:"master_instance_name"`
	Name                         string                                   `json:"name"`
	PrivateIpAddress             string                                   `json:"private_ip_address"`
	Project                      string                                   `json:"project"`
	PscServiceAttachmentLink     string                                   `json:"psc_service_attachment_link"`
	PublicIpAddress              string                                   `json:"public_ip_address"`
	Region                       string                                   `json:"region"`
	RootPassword                 string                                   `json:"root_password"`
	SelfLink                     string                                   `json:"self_link"`
	ServiceAccountEmailAddress   string                                   `json:"service_account_email_address"`
	Clone                        []DataInstancesCloneState                `json:"clone"`
	IpAddress                    []DataInstancesIpAddressState            `json:"ip_address"`
	ReplicaConfiguration         []DataInstancesReplicaConfigurationState `json:"replica_configuration"`
	RestoreBackupContext         []DataInstancesRestoreBackupContextState `json:"restore_backup_context"`
	ServerCaCert                 []DataInstancesServerCaCertState         `json:"server_ca_cert"`
	Settings                     []DataInstancesSettingsState             `json:"settings"`
}

type DataInstancesCloneState struct {
	AllocatedIpRange   string   `json:"allocated_ip_range"`
	DatabaseNames      []string `json:"database_names"`
	PointInTime        string   `json:"point_in_time"`
	PreferredZone      string   `json:"preferred_zone"`
	SourceInstanceName string   `json:"source_instance_name"`
}

type DataInstancesIpAddressState struct {
	IpAddress    string `json:"ip_address"`
	TimeToRetire string `json:"time_to_retire"`
	Type         string `json:"type"`
}

type DataInstancesReplicaConfigurationState struct {
	CaCertificate           string  `json:"ca_certificate"`
	ClientCertificate       string  `json:"client_certificate"`
	ClientKey               string  `json:"client_key"`
	ConnectRetryInterval    float64 `json:"connect_retry_interval"`
	DumpFilePath            string  `json:"dump_file_path"`
	FailoverTarget          bool    `json:"failover_target"`
	MasterHeartbeatPeriod   float64 `json:"master_heartbeat_period"`
	Password                string  `json:"password"`
	SslCipher               string  `json:"ssl_cipher"`
	Username                string  `json:"username"`
	VerifyServerCertificate bool    `json:"verify_server_certificate"`
}

type DataInstancesRestoreBackupContextState struct {
	BackupRunId float64 `json:"backup_run_id"`
	InstanceId  string  `json:"instance_id"`
	Project     string  `json:"project"`
}

type DataInstancesServerCaCertState struct {
	Cert            string `json:"cert"`
	CommonName      string `json:"common_name"`
	CreateTime      string `json:"create_time"`
	ExpirationTime  string `json:"expiration_time"`
	Sha1Fingerprint string `json:"sha1_fingerprint"`
}

type DataInstancesSettingsState struct {
	ActivationPolicy          string                                               `json:"activation_policy"`
	AvailabilityType          string                                               `json:"availability_type"`
	Collation                 string                                               `json:"collation"`
	ConnectorEnforcement      string                                               `json:"connector_enforcement"`
	DeletionProtectionEnabled bool                                                 `json:"deletion_protection_enabled"`
	DiskAutoresize            bool                                                 `json:"disk_autoresize"`
	DiskAutoresizeLimit       float64                                              `json:"disk_autoresize_limit"`
	DiskSize                  float64                                              `json:"disk_size"`
	DiskType                  string                                               `json:"disk_type"`
	Edition                   string                                               `json:"edition"`
	EnableGoogleMlIntegration bool                                                 `json:"enable_google_ml_integration"`
	PricingPlan               string                                               `json:"pricing_plan"`
	Tier                      string                                               `json:"tier"`
	TimeZone                  string                                               `json:"time_zone"`
	UserLabels                map[string]string                                    `json:"user_labels"`
	Version                   float64                                              `json:"version"`
	ActiveDirectoryConfig     []DataInstancesSettingsActiveDirectoryConfigState    `json:"active_directory_config"`
	AdvancedMachineFeatures   []DataInstancesSettingsAdvancedMachineFeaturesState  `json:"advanced_machine_features"`
	BackupConfiguration       []DataInstancesSettingsBackupConfigurationState      `json:"backup_configuration"`
	DataCacheConfig           []DataInstancesSettingsDataCacheConfigState          `json:"data_cache_config"`
	DatabaseFlags             []DataInstancesSettingsDatabaseFlagsState            `json:"database_flags"`
	DenyMaintenancePeriod     []DataInstancesSettingsDenyMaintenancePeriodState    `json:"deny_maintenance_period"`
	InsightsConfig            []DataInstancesSettingsInsightsConfigState           `json:"insights_config"`
	IpConfiguration           []DataInstancesSettingsIpConfigurationState          `json:"ip_configuration"`
	LocationPreference        []DataInstancesSettingsLocationPreferenceState       `json:"location_preference"`
	MaintenanceWindow         []DataInstancesSettingsMaintenanceWindowState        `json:"maintenance_window"`
	PasswordValidationPolicy  []DataInstancesSettingsPasswordValidationPolicyState `json:"password_validation_policy"`
	SqlServerAuditConfig      []DataInstancesSettingsSqlServerAuditConfigState     `json:"sql_server_audit_config"`
}

type DataInstancesSettingsActiveDirectoryConfigState struct {
	Domain string `json:"domain"`
}

type DataInstancesSettingsAdvancedMachineFeaturesState struct {
	ThreadsPerCore float64 `json:"threads_per_core"`
}

type DataInstancesSettingsBackupConfigurationState struct {
	BinaryLogEnabled            bool                                                                   `json:"binary_log_enabled"`
	Enabled                     bool                                                                   `json:"enabled"`
	Location                    string                                                                 `json:"location"`
	PointInTimeRecoveryEnabled  bool                                                                   `json:"point_in_time_recovery_enabled"`
	StartTime                   string                                                                 `json:"start_time"`
	TransactionLogRetentionDays float64                                                                `json:"transaction_log_retention_days"`
	BackupRetentionSettings     []DataInstancesSettingsBackupConfigurationBackupRetentionSettingsState `json:"backup_retention_settings"`
}

type DataInstancesSettingsBackupConfigurationBackupRetentionSettingsState struct {
	RetainedBackups float64 `json:"retained_backups"`
	RetentionUnit   string  `json:"retention_unit"`
}

type DataInstancesSettingsDataCacheConfigState struct {
	DataCacheEnabled bool `json:"data_cache_enabled"`
}

type DataInstancesSettingsDatabaseFlagsState struct {
	Name  string `json:"name"`
	Value string `json:"value"`
}

type DataInstancesSettingsDenyMaintenancePeriodState struct {
	EndDate   string `json:"end_date"`
	StartDate string `json:"start_date"`
	Time      string `json:"time"`
}

type DataInstancesSettingsInsightsConfigState struct {
	QueryInsightsEnabled  bool    `json:"query_insights_enabled"`
	QueryPlansPerMinute   float64 `json:"query_plans_per_minute"`
	QueryStringLength     float64 `json:"query_string_length"`
	RecordApplicationTags bool    `json:"record_application_tags"`
	RecordClientAddress   bool    `json:"record_client_address"`
}

type DataInstancesSettingsIpConfigurationState struct {
	AllocatedIpRange                        string                                                        `json:"allocated_ip_range"`
	EnablePrivatePathForGoogleCloudServices bool                                                          `json:"enable_private_path_for_google_cloud_services"`
	Ipv4Enabled                             bool                                                          `json:"ipv4_enabled"`
	PrivateNetwork                          string                                                        `json:"private_network"`
	RequireSsl                              bool                                                          `json:"require_ssl"`
	SslMode                                 string                                                        `json:"ssl_mode"`
	AuthorizedNetworks                      []DataInstancesSettingsIpConfigurationAuthorizedNetworksState `json:"authorized_networks"`
	PscConfig                               []DataInstancesSettingsIpConfigurationPscConfigState          `json:"psc_config"`
}

type DataInstancesSettingsIpConfigurationAuthorizedNetworksState struct {
	ExpirationTime string `json:"expiration_time"`
	Name           string `json:"name"`
	Value          string `json:"value"`
}

type DataInstancesSettingsIpConfigurationPscConfigState struct {
	AllowedConsumerProjects []string `json:"allowed_consumer_projects"`
	PscEnabled              bool     `json:"psc_enabled"`
}

type DataInstancesSettingsLocationPreferenceState struct {
	FollowGaeApplication string `json:"follow_gae_application"`
	SecondaryZone        string `json:"secondary_zone"`
	Zone                 string `json:"zone"`
}

type DataInstancesSettingsMaintenanceWindowState struct {
	Day         float64 `json:"day"`
	Hour        float64 `json:"hour"`
	UpdateTrack string  `json:"update_track"`
}

type DataInstancesSettingsPasswordValidationPolicyState struct {
	Complexity                string  `json:"complexity"`
	DisallowUsernameSubstring bool    `json:"disallow_username_substring"`
	EnablePasswordPolicy      bool    `json:"enable_password_policy"`
	MinLength                 float64 `json:"min_length"`
	PasswordChangeInterval    string  `json:"password_change_interval"`
	ReuseInterval             float64 `json:"reuse_interval"`
}

type DataInstancesSettingsSqlServerAuditConfigState struct {
	Bucket            string `json:"bucket"`
	RetentionInterval string `json:"retention_interval"`
	UploadInterval    string `json:"upload_interval"`
}
