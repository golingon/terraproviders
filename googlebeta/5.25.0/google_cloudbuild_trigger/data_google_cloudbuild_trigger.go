// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google_cloudbuild_trigger

import "github.com/golingon/lingon/pkg/terra"

// Data creates a new instance of [DataSource].
func Data(name string, args DataArgs) *DataSource {
	return &DataSource{
		Args: args,
		Name: name,
	}
}

var _ terra.DataSource = (*DataSource)(nil)

// DataSource represents the Terraform data resource google_cloudbuild_trigger.
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (gct *DataSource) DataSource() string {
	return "google_cloudbuild_trigger"
}

// LocalName returns the local name for [DataSource].
func (gct *DataSource) LocalName() string {
	return gct.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (gct *DataSource) Configuration() interface{} {
	return gct.Args
}

// Attributes returns the attributes for [DataSource].
func (gct *DataSource) Attributes() dataGoogleCloudbuildTriggerAttributes {
	return dataGoogleCloudbuildTriggerAttributes{ref: terra.ReferenceDataSource(gct)}
}

// DataArgs contains the configurations for google_cloudbuild_trigger.
type DataArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Location: string, required
	Location terra.StringValue `hcl:"location,attr" validate:"required"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
	// TriggerId: string, required
	TriggerId terra.StringValue `hcl:"trigger_id,attr" validate:"required"`
}

type dataGoogleCloudbuildTriggerAttributes struct {
	ref terra.Reference
}

// CreateTime returns a reference to field create_time of google_cloudbuild_trigger.
func (gct dataGoogleCloudbuildTriggerAttributes) CreateTime() terra.StringValue {
	return terra.ReferenceAsString(gct.ref.Append("create_time"))
}

// Description returns a reference to field description of google_cloudbuild_trigger.
func (gct dataGoogleCloudbuildTriggerAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(gct.ref.Append("description"))
}

// Disabled returns a reference to field disabled of google_cloudbuild_trigger.
func (gct dataGoogleCloudbuildTriggerAttributes) Disabled() terra.BoolValue {
	return terra.ReferenceAsBool(gct.ref.Append("disabled"))
}

// Filename returns a reference to field filename of google_cloudbuild_trigger.
func (gct dataGoogleCloudbuildTriggerAttributes) Filename() terra.StringValue {
	return terra.ReferenceAsString(gct.ref.Append("filename"))
}

// Filter returns a reference to field filter of google_cloudbuild_trigger.
func (gct dataGoogleCloudbuildTriggerAttributes) Filter() terra.StringValue {
	return terra.ReferenceAsString(gct.ref.Append("filter"))
}

// Id returns a reference to field id of google_cloudbuild_trigger.
func (gct dataGoogleCloudbuildTriggerAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(gct.ref.Append("id"))
}

// IgnoredFiles returns a reference to field ignored_files of google_cloudbuild_trigger.
func (gct dataGoogleCloudbuildTriggerAttributes) IgnoredFiles() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](gct.ref.Append("ignored_files"))
}

// IncludeBuildLogs returns a reference to field include_build_logs of google_cloudbuild_trigger.
func (gct dataGoogleCloudbuildTriggerAttributes) IncludeBuildLogs() terra.StringValue {
	return terra.ReferenceAsString(gct.ref.Append("include_build_logs"))
}

// IncludedFiles returns a reference to field included_files of google_cloudbuild_trigger.
func (gct dataGoogleCloudbuildTriggerAttributes) IncludedFiles() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](gct.ref.Append("included_files"))
}

// Location returns a reference to field location of google_cloudbuild_trigger.
func (gct dataGoogleCloudbuildTriggerAttributes) Location() terra.StringValue {
	return terra.ReferenceAsString(gct.ref.Append("location"))
}

// Name returns a reference to field name of google_cloudbuild_trigger.
func (gct dataGoogleCloudbuildTriggerAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(gct.ref.Append("name"))
}

// Project returns a reference to field project of google_cloudbuild_trigger.
func (gct dataGoogleCloudbuildTriggerAttributes) Project() terra.StringValue {
	return terra.ReferenceAsString(gct.ref.Append("project"))
}

// ServiceAccount returns a reference to field service_account of google_cloudbuild_trigger.
func (gct dataGoogleCloudbuildTriggerAttributes) ServiceAccount() terra.StringValue {
	return terra.ReferenceAsString(gct.ref.Append("service_account"))
}

// Substitutions returns a reference to field substitutions of google_cloudbuild_trigger.
func (gct dataGoogleCloudbuildTriggerAttributes) Substitutions() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](gct.ref.Append("substitutions"))
}

// Tags returns a reference to field tags of google_cloudbuild_trigger.
func (gct dataGoogleCloudbuildTriggerAttributes) Tags() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](gct.ref.Append("tags"))
}

// TriggerId returns a reference to field trigger_id of google_cloudbuild_trigger.
func (gct dataGoogleCloudbuildTriggerAttributes) TriggerId() terra.StringValue {
	return terra.ReferenceAsString(gct.ref.Append("trigger_id"))
}

func (gct dataGoogleCloudbuildTriggerAttributes) ApprovalConfig() terra.ListValue[DataApprovalConfigAttributes] {
	return terra.ReferenceAsList[DataApprovalConfigAttributes](gct.ref.Append("approval_config"))
}

func (gct dataGoogleCloudbuildTriggerAttributes) BitbucketServerTriggerConfig() terra.ListValue[DataBitbucketServerTriggerConfigAttributes] {
	return terra.ReferenceAsList[DataBitbucketServerTriggerConfigAttributes](gct.ref.Append("bitbucket_server_trigger_config"))
}

func (gct dataGoogleCloudbuildTriggerAttributes) Build() terra.ListValue[DataBuildAttributes] {
	return terra.ReferenceAsList[DataBuildAttributes](gct.ref.Append("build"))
}

func (gct dataGoogleCloudbuildTriggerAttributes) GitFileSource() terra.ListValue[DataGitFileSourceAttributes] {
	return terra.ReferenceAsList[DataGitFileSourceAttributes](gct.ref.Append("git_file_source"))
}

func (gct dataGoogleCloudbuildTriggerAttributes) Github() terra.ListValue[DataGithubAttributes] {
	return terra.ReferenceAsList[DataGithubAttributes](gct.ref.Append("github"))
}

func (gct dataGoogleCloudbuildTriggerAttributes) PubsubConfig() terra.ListValue[DataPubsubConfigAttributes] {
	return terra.ReferenceAsList[DataPubsubConfigAttributes](gct.ref.Append("pubsub_config"))
}

func (gct dataGoogleCloudbuildTriggerAttributes) RepositoryEventConfig() terra.ListValue[DataRepositoryEventConfigAttributes] {
	return terra.ReferenceAsList[DataRepositoryEventConfigAttributes](gct.ref.Append("repository_event_config"))
}

func (gct dataGoogleCloudbuildTriggerAttributes) SourceToBuild() terra.ListValue[DataSourceToBuildAttributes] {
	return terra.ReferenceAsList[DataSourceToBuildAttributes](gct.ref.Append("source_to_build"))
}

func (gct dataGoogleCloudbuildTriggerAttributes) TriggerTemplate() terra.ListValue[DataTriggerTemplateAttributes] {
	return terra.ReferenceAsList[DataTriggerTemplateAttributes](gct.ref.Append("trigger_template"))
}

func (gct dataGoogleCloudbuildTriggerAttributes) WebhookConfig() terra.ListValue[DataWebhookConfigAttributes] {
	return terra.ReferenceAsList[DataWebhookConfigAttributes](gct.ref.Append("webhook_config"))
}
