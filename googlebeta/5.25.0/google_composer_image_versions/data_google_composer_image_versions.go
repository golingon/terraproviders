// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google_composer_image_versions

import "github.com/golingon/lingon/pkg/terra"

// Data creates a new instance of [DataSource].
func Data(name string, args DataArgs) *DataSource {
	return &DataSource{
		Args: args,
		Name: name,
	}
}

var _ terra.DataSource = (*DataSource)(nil)

// DataSource represents the Terraform data resource google_composer_image_versions.
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (gciv *DataSource) DataSource() string {
	return "google_composer_image_versions"
}

// LocalName returns the local name for [DataSource].
func (gciv *DataSource) LocalName() string {
	return gciv.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (gciv *DataSource) Configuration() interface{} {
	return gciv.Args
}

// Attributes returns the attributes for [DataSource].
func (gciv *DataSource) Attributes() dataGoogleComposerImageVersionsAttributes {
	return dataGoogleComposerImageVersionsAttributes{ref: terra.ReferenceDataSource(gciv)}
}

// DataArgs contains the configurations for google_composer_image_versions.
type DataArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
	// Region: string, optional
	Region terra.StringValue `hcl:"region,attr"`
}

type dataGoogleComposerImageVersionsAttributes struct {
	ref terra.Reference
}

// Id returns a reference to field id of google_composer_image_versions.
func (gciv dataGoogleComposerImageVersionsAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(gciv.ref.Append("id"))
}

// Project returns a reference to field project of google_composer_image_versions.
func (gciv dataGoogleComposerImageVersionsAttributes) Project() terra.StringValue {
	return terra.ReferenceAsString(gciv.ref.Append("project"))
}

// Region returns a reference to field region of google_composer_image_versions.
func (gciv dataGoogleComposerImageVersionsAttributes) Region() terra.StringValue {
	return terra.ReferenceAsString(gciv.ref.Append("region"))
}

func (gciv dataGoogleComposerImageVersionsAttributes) ImageVersions() terra.ListValue[DataImageVersionsAttributes] {
	return terra.ReferenceAsList[DataImageVersionsAttributes](gciv.ref.Append("image_versions"))
}
