// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google_compute_region_ssl_policy

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource google_compute_region_ssl_policy.
type Resource struct {
	Name      string
	Args      Args
	state     *googleComputeRegionSslPolicyState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (gcrsp *Resource) Type() string {
	return "google_compute_region_ssl_policy"
}

// LocalName returns the local name for [Resource].
func (gcrsp *Resource) LocalName() string {
	return gcrsp.Name
}

// Configuration returns the configuration (args) for [Resource].
func (gcrsp *Resource) Configuration() interface{} {
	return gcrsp.Args
}

// DependOn is used for other resources to depend on [Resource].
func (gcrsp *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(gcrsp)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (gcrsp *Resource) Dependencies() terra.Dependencies {
	return gcrsp.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (gcrsp *Resource) LifecycleManagement() *terra.Lifecycle {
	return gcrsp.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (gcrsp *Resource) Attributes() googleComputeRegionSslPolicyAttributes {
	return googleComputeRegionSslPolicyAttributes{ref: terra.ReferenceResource(gcrsp)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (gcrsp *Resource) ImportState(state io.Reader) error {
	gcrsp.state = &googleComputeRegionSslPolicyState{}
	if err := json.NewDecoder(state).Decode(gcrsp.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", gcrsp.Type(), gcrsp.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (gcrsp *Resource) State() (*googleComputeRegionSslPolicyState, bool) {
	return gcrsp.state, gcrsp.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (gcrsp *Resource) StateMust() *googleComputeRegionSslPolicyState {
	if gcrsp.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", gcrsp.Type(), gcrsp.LocalName()))
	}
	return gcrsp.state
}

// Args contains the configurations for google_compute_region_ssl_policy.
type Args struct {
	// CustomFeatures: set of string, optional
	CustomFeatures terra.SetValue[terra.StringValue] `hcl:"custom_features,attr"`
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// MinTlsVersion: string, optional
	MinTlsVersion terra.StringValue `hcl:"min_tls_version,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Profile: string, optional
	Profile terra.StringValue `hcl:"profile,attr"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
	// Region: string, required
	Region terra.StringValue `hcl:"region,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type googleComputeRegionSslPolicyAttributes struct {
	ref terra.Reference
}

// CreationTimestamp returns a reference to field creation_timestamp of google_compute_region_ssl_policy.
func (gcrsp googleComputeRegionSslPolicyAttributes) CreationTimestamp() terra.StringValue {
	return terra.ReferenceAsString(gcrsp.ref.Append("creation_timestamp"))
}

// CustomFeatures returns a reference to field custom_features of google_compute_region_ssl_policy.
func (gcrsp googleComputeRegionSslPolicyAttributes) CustomFeatures() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](gcrsp.ref.Append("custom_features"))
}

// Description returns a reference to field description of google_compute_region_ssl_policy.
func (gcrsp googleComputeRegionSslPolicyAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(gcrsp.ref.Append("description"))
}

// EnabledFeatures returns a reference to field enabled_features of google_compute_region_ssl_policy.
func (gcrsp googleComputeRegionSslPolicyAttributes) EnabledFeatures() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](gcrsp.ref.Append("enabled_features"))
}

// Fingerprint returns a reference to field fingerprint of google_compute_region_ssl_policy.
func (gcrsp googleComputeRegionSslPolicyAttributes) Fingerprint() terra.StringValue {
	return terra.ReferenceAsString(gcrsp.ref.Append("fingerprint"))
}

// Id returns a reference to field id of google_compute_region_ssl_policy.
func (gcrsp googleComputeRegionSslPolicyAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(gcrsp.ref.Append("id"))
}

// MinTlsVersion returns a reference to field min_tls_version of google_compute_region_ssl_policy.
func (gcrsp googleComputeRegionSslPolicyAttributes) MinTlsVersion() terra.StringValue {
	return terra.ReferenceAsString(gcrsp.ref.Append("min_tls_version"))
}

// Name returns a reference to field name of google_compute_region_ssl_policy.
func (gcrsp googleComputeRegionSslPolicyAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(gcrsp.ref.Append("name"))
}

// Profile returns a reference to field profile of google_compute_region_ssl_policy.
func (gcrsp googleComputeRegionSslPolicyAttributes) Profile() terra.StringValue {
	return terra.ReferenceAsString(gcrsp.ref.Append("profile"))
}

// Project returns a reference to field project of google_compute_region_ssl_policy.
func (gcrsp googleComputeRegionSslPolicyAttributes) Project() terra.StringValue {
	return terra.ReferenceAsString(gcrsp.ref.Append("project"))
}

// Region returns a reference to field region of google_compute_region_ssl_policy.
func (gcrsp googleComputeRegionSslPolicyAttributes) Region() terra.StringValue {
	return terra.ReferenceAsString(gcrsp.ref.Append("region"))
}

// SelfLink returns a reference to field self_link of google_compute_region_ssl_policy.
func (gcrsp googleComputeRegionSslPolicyAttributes) SelfLink() terra.StringValue {
	return terra.ReferenceAsString(gcrsp.ref.Append("self_link"))
}

func (gcrsp googleComputeRegionSslPolicyAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](gcrsp.ref.Append("timeouts"))
}

type googleComputeRegionSslPolicyState struct {
	CreationTimestamp string         `json:"creation_timestamp"`
	CustomFeatures    []string       `json:"custom_features"`
	Description       string         `json:"description"`
	EnabledFeatures   []string       `json:"enabled_features"`
	Fingerprint       string         `json:"fingerprint"`
	Id                string         `json:"id"`
	MinTlsVersion     string         `json:"min_tls_version"`
	Name              string         `json:"name"`
	Profile           string         `json:"profile"`
	Project           string         `json:"project"`
	Region            string         `json:"region"`
	SelfLink          string         `json:"self_link"`
	Timeouts          *TimeoutsState `json:"timeouts"`
}
