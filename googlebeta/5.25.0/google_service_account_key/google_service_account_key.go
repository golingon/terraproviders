// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google_service_account_key

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource google_service_account_key.
type Resource struct {
	Name      string
	Args      Args
	state     *googleServiceAccountKeyState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (gsak *Resource) Type() string {
	return "google_service_account_key"
}

// LocalName returns the local name for [Resource].
func (gsak *Resource) LocalName() string {
	return gsak.Name
}

// Configuration returns the configuration (args) for [Resource].
func (gsak *Resource) Configuration() interface{} {
	return gsak.Args
}

// DependOn is used for other resources to depend on [Resource].
func (gsak *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(gsak)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (gsak *Resource) Dependencies() terra.Dependencies {
	return gsak.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (gsak *Resource) LifecycleManagement() *terra.Lifecycle {
	return gsak.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (gsak *Resource) Attributes() googleServiceAccountKeyAttributes {
	return googleServiceAccountKeyAttributes{ref: terra.ReferenceResource(gsak)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (gsak *Resource) ImportState(state io.Reader) error {
	gsak.state = &googleServiceAccountKeyState{}
	if err := json.NewDecoder(state).Decode(gsak.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", gsak.Type(), gsak.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (gsak *Resource) State() (*googleServiceAccountKeyState, bool) {
	return gsak.state, gsak.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (gsak *Resource) StateMust() *googleServiceAccountKeyState {
	if gsak.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", gsak.Type(), gsak.LocalName()))
	}
	return gsak.state
}

// Args contains the configurations for google_service_account_key.
type Args struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Keepers: map of string, optional
	Keepers terra.MapValue[terra.StringValue] `hcl:"keepers,attr"`
	// KeyAlgorithm: string, optional
	KeyAlgorithm terra.StringValue `hcl:"key_algorithm,attr"`
	// PrivateKeyType: string, optional
	PrivateKeyType terra.StringValue `hcl:"private_key_type,attr"`
	// PublicKeyData: string, optional
	PublicKeyData terra.StringValue `hcl:"public_key_data,attr"`
	// PublicKeyType: string, optional
	PublicKeyType terra.StringValue `hcl:"public_key_type,attr"`
	// ServiceAccountId: string, required
	ServiceAccountId terra.StringValue `hcl:"service_account_id,attr" validate:"required"`
}

type googleServiceAccountKeyAttributes struct {
	ref terra.Reference
}

// Id returns a reference to field id of google_service_account_key.
func (gsak googleServiceAccountKeyAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(gsak.ref.Append("id"))
}

// Keepers returns a reference to field keepers of google_service_account_key.
func (gsak googleServiceAccountKeyAttributes) Keepers() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](gsak.ref.Append("keepers"))
}

// KeyAlgorithm returns a reference to field key_algorithm of google_service_account_key.
func (gsak googleServiceAccountKeyAttributes) KeyAlgorithm() terra.StringValue {
	return terra.ReferenceAsString(gsak.ref.Append("key_algorithm"))
}

// Name returns a reference to field name of google_service_account_key.
func (gsak googleServiceAccountKeyAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(gsak.ref.Append("name"))
}

// PrivateKey returns a reference to field private_key of google_service_account_key.
func (gsak googleServiceAccountKeyAttributes) PrivateKey() terra.StringValue {
	return terra.ReferenceAsString(gsak.ref.Append("private_key"))
}

// PrivateKeyType returns a reference to field private_key_type of google_service_account_key.
func (gsak googleServiceAccountKeyAttributes) PrivateKeyType() terra.StringValue {
	return terra.ReferenceAsString(gsak.ref.Append("private_key_type"))
}

// PublicKey returns a reference to field public_key of google_service_account_key.
func (gsak googleServiceAccountKeyAttributes) PublicKey() terra.StringValue {
	return terra.ReferenceAsString(gsak.ref.Append("public_key"))
}

// PublicKeyData returns a reference to field public_key_data of google_service_account_key.
func (gsak googleServiceAccountKeyAttributes) PublicKeyData() terra.StringValue {
	return terra.ReferenceAsString(gsak.ref.Append("public_key_data"))
}

// PublicKeyType returns a reference to field public_key_type of google_service_account_key.
func (gsak googleServiceAccountKeyAttributes) PublicKeyType() terra.StringValue {
	return terra.ReferenceAsString(gsak.ref.Append("public_key_type"))
}

// ServiceAccountId returns a reference to field service_account_id of google_service_account_key.
func (gsak googleServiceAccountKeyAttributes) ServiceAccountId() terra.StringValue {
	return terra.ReferenceAsString(gsak.ref.Append("service_account_id"))
}

// ValidAfter returns a reference to field valid_after of google_service_account_key.
func (gsak googleServiceAccountKeyAttributes) ValidAfter() terra.StringValue {
	return terra.ReferenceAsString(gsak.ref.Append("valid_after"))
}

// ValidBefore returns a reference to field valid_before of google_service_account_key.
func (gsak googleServiceAccountKeyAttributes) ValidBefore() terra.StringValue {
	return terra.ReferenceAsString(gsak.ref.Append("valid_before"))
}

type googleServiceAccountKeyState struct {
	Id               string            `json:"id"`
	Keepers          map[string]string `json:"keepers"`
	KeyAlgorithm     string            `json:"key_algorithm"`
	Name             string            `json:"name"`
	PrivateKey       string            `json:"private_key"`
	PrivateKeyType   string            `json:"private_key_type"`
	PublicKey        string            `json:"public_key"`
	PublicKeyData    string            `json:"public_key_data"`
	PublicKeyType    string            `json:"public_key_type"`
	ServiceAccountId string            `json:"service_account_id"`
	ValidAfter       string            `json:"valid_after"`
	ValidBefore      string            `json:"valid_before"`
}
