// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google_alloydb_locations

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DataLocationsAttributes struct {
	ref terra.Reference
}

func (l DataLocationsAttributes) InternalRef() (terra.Reference, error) {
	return l.ref, nil
}

func (l DataLocationsAttributes) InternalWithRef(ref terra.Reference) DataLocationsAttributes {
	return DataLocationsAttributes{ref: ref}
}

func (l DataLocationsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return l.ref.InternalTokens()
}

func (l DataLocationsAttributes) DisplayName() terra.StringValue {
	return terra.ReferenceAsString(l.ref.Append("display_name"))
}

func (l DataLocationsAttributes) Labels() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](l.ref.Append("labels"))
}

func (l DataLocationsAttributes) LocationId() terra.StringValue {
	return terra.ReferenceAsString(l.ref.Append("location_id"))
}

func (l DataLocationsAttributes) Metadata() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](l.ref.Append("metadata"))
}

func (l DataLocationsAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(l.ref.Append("name"))
}

type DataLocationsState struct {
	DisplayName string            `json:"display_name"`
	Labels      map[string]string `json:"labels"`
	LocationId  string            `json:"location_id"`
	Metadata    map[string]string `json:"metadata"`
	Name        string            `json:"name"`
}
