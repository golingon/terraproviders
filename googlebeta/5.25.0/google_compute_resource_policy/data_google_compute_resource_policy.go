// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google_compute_resource_policy

import "github.com/golingon/lingon/pkg/terra"

// Data creates a new instance of [DataSource].
func Data(name string, args DataArgs) *DataSource {
	return &DataSource{
		Args: args,
		Name: name,
	}
}

var _ terra.DataSource = (*DataSource)(nil)

// DataSource represents the Terraform data resource google_compute_resource_policy.
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (gcrp *DataSource) DataSource() string {
	return "google_compute_resource_policy"
}

// LocalName returns the local name for [DataSource].
func (gcrp *DataSource) LocalName() string {
	return gcrp.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (gcrp *DataSource) Configuration() interface{} {
	return gcrp.Args
}

// Attributes returns the attributes for [DataSource].
func (gcrp *DataSource) Attributes() dataGoogleComputeResourcePolicyAttributes {
	return dataGoogleComputeResourcePolicyAttributes{ref: terra.ReferenceDataSource(gcrp)}
}

// DataArgs contains the configurations for google_compute_resource_policy.
type DataArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
	// Region: string, optional
	Region terra.StringValue `hcl:"region,attr"`
}

type dataGoogleComputeResourcePolicyAttributes struct {
	ref terra.Reference
}

// Description returns a reference to field description of google_compute_resource_policy.
func (gcrp dataGoogleComputeResourcePolicyAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(gcrp.ref.Append("description"))
}

// Id returns a reference to field id of google_compute_resource_policy.
func (gcrp dataGoogleComputeResourcePolicyAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(gcrp.ref.Append("id"))
}

// Name returns a reference to field name of google_compute_resource_policy.
func (gcrp dataGoogleComputeResourcePolicyAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(gcrp.ref.Append("name"))
}

// Project returns a reference to field project of google_compute_resource_policy.
func (gcrp dataGoogleComputeResourcePolicyAttributes) Project() terra.StringValue {
	return terra.ReferenceAsString(gcrp.ref.Append("project"))
}

// Region returns a reference to field region of google_compute_resource_policy.
func (gcrp dataGoogleComputeResourcePolicyAttributes) Region() terra.StringValue {
	return terra.ReferenceAsString(gcrp.ref.Append("region"))
}

// SelfLink returns a reference to field self_link of google_compute_resource_policy.
func (gcrp dataGoogleComputeResourcePolicyAttributes) SelfLink() terra.StringValue {
	return terra.ReferenceAsString(gcrp.ref.Append("self_link"))
}

func (gcrp dataGoogleComputeResourcePolicyAttributes) DiskConsistencyGroupPolicy() terra.ListValue[DataDiskConsistencyGroupPolicyAttributes] {
	return terra.ReferenceAsList[DataDiskConsistencyGroupPolicyAttributes](gcrp.ref.Append("disk_consistency_group_policy"))
}

func (gcrp dataGoogleComputeResourcePolicyAttributes) GroupPlacementPolicy() terra.ListValue[DataGroupPlacementPolicyAttributes] {
	return terra.ReferenceAsList[DataGroupPlacementPolicyAttributes](gcrp.ref.Append("group_placement_policy"))
}

func (gcrp dataGoogleComputeResourcePolicyAttributes) InstanceSchedulePolicy() terra.ListValue[DataInstanceSchedulePolicyAttributes] {
	return terra.ReferenceAsList[DataInstanceSchedulePolicyAttributes](gcrp.ref.Append("instance_schedule_policy"))
}

func (gcrp dataGoogleComputeResourcePolicyAttributes) SnapshotSchedulePolicy() terra.ListValue[DataSnapshotSchedulePolicyAttributes] {
	return terra.ReferenceAsList[DataSnapshotSchedulePolicyAttributes](gcrp.ref.Append("snapshot_schedule_policy"))
}
