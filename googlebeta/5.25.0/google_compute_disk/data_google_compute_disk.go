// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google_compute_disk

import "github.com/golingon/lingon/pkg/terra"

// Data creates a new instance of [DataSource].
func Data(name string, args DataArgs) *DataSource {
	return &DataSource{
		Args: args,
		Name: name,
	}
}

var _ terra.DataSource = (*DataSource)(nil)

// DataSource represents the Terraform data resource google_compute_disk.
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (gcd *DataSource) DataSource() string {
	return "google_compute_disk"
}

// LocalName returns the local name for [DataSource].
func (gcd *DataSource) LocalName() string {
	return gcd.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (gcd *DataSource) Configuration() interface{} {
	return gcd.Args
}

// Attributes returns the attributes for [DataSource].
func (gcd *DataSource) Attributes() dataGoogleComputeDiskAttributes {
	return dataGoogleComputeDiskAttributes{ref: terra.ReferenceDataSource(gcd)}
}

// DataArgs contains the configurations for google_compute_disk.
type DataArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
	// Zone: string, optional
	Zone terra.StringValue `hcl:"zone,attr"`
}

type dataGoogleComputeDiskAttributes struct {
	ref terra.Reference
}

// CreationTimestamp returns a reference to field creation_timestamp of google_compute_disk.
func (gcd dataGoogleComputeDiskAttributes) CreationTimestamp() terra.StringValue {
	return terra.ReferenceAsString(gcd.ref.Append("creation_timestamp"))
}

// Description returns a reference to field description of google_compute_disk.
func (gcd dataGoogleComputeDiskAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(gcd.ref.Append("description"))
}

// DiskId returns a reference to field disk_id of google_compute_disk.
func (gcd dataGoogleComputeDiskAttributes) DiskId() terra.StringValue {
	return terra.ReferenceAsString(gcd.ref.Append("disk_id"))
}

// EffectiveLabels returns a reference to field effective_labels of google_compute_disk.
func (gcd dataGoogleComputeDiskAttributes) EffectiveLabels() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](gcd.ref.Append("effective_labels"))
}

// EnableConfidentialCompute returns a reference to field enable_confidential_compute of google_compute_disk.
func (gcd dataGoogleComputeDiskAttributes) EnableConfidentialCompute() terra.BoolValue {
	return terra.ReferenceAsBool(gcd.ref.Append("enable_confidential_compute"))
}

// Id returns a reference to field id of google_compute_disk.
func (gcd dataGoogleComputeDiskAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(gcd.ref.Append("id"))
}

// Image returns a reference to field image of google_compute_disk.
func (gcd dataGoogleComputeDiskAttributes) Image() terra.StringValue {
	return terra.ReferenceAsString(gcd.ref.Append("image"))
}

// Interface returns a reference to field interface of google_compute_disk.
func (gcd dataGoogleComputeDiskAttributes) Interface() terra.StringValue {
	return terra.ReferenceAsString(gcd.ref.Append("interface"))
}

// LabelFingerprint returns a reference to field label_fingerprint of google_compute_disk.
func (gcd dataGoogleComputeDiskAttributes) LabelFingerprint() terra.StringValue {
	return terra.ReferenceAsString(gcd.ref.Append("label_fingerprint"))
}

// Labels returns a reference to field labels of google_compute_disk.
func (gcd dataGoogleComputeDiskAttributes) Labels() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](gcd.ref.Append("labels"))
}

// LastAttachTimestamp returns a reference to field last_attach_timestamp of google_compute_disk.
func (gcd dataGoogleComputeDiskAttributes) LastAttachTimestamp() terra.StringValue {
	return terra.ReferenceAsString(gcd.ref.Append("last_attach_timestamp"))
}

// LastDetachTimestamp returns a reference to field last_detach_timestamp of google_compute_disk.
func (gcd dataGoogleComputeDiskAttributes) LastDetachTimestamp() terra.StringValue {
	return terra.ReferenceAsString(gcd.ref.Append("last_detach_timestamp"))
}

// Licenses returns a reference to field licenses of google_compute_disk.
func (gcd dataGoogleComputeDiskAttributes) Licenses() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](gcd.ref.Append("licenses"))
}

// MultiWriter returns a reference to field multi_writer of google_compute_disk.
func (gcd dataGoogleComputeDiskAttributes) MultiWriter() terra.BoolValue {
	return terra.ReferenceAsBool(gcd.ref.Append("multi_writer"))
}

// Name returns a reference to field name of google_compute_disk.
func (gcd dataGoogleComputeDiskAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(gcd.ref.Append("name"))
}

// PhysicalBlockSizeBytes returns a reference to field physical_block_size_bytes of google_compute_disk.
func (gcd dataGoogleComputeDiskAttributes) PhysicalBlockSizeBytes() terra.NumberValue {
	return terra.ReferenceAsNumber(gcd.ref.Append("physical_block_size_bytes"))
}

// Project returns a reference to field project of google_compute_disk.
func (gcd dataGoogleComputeDiskAttributes) Project() terra.StringValue {
	return terra.ReferenceAsString(gcd.ref.Append("project"))
}

// ProvisionedIops returns a reference to field provisioned_iops of google_compute_disk.
func (gcd dataGoogleComputeDiskAttributes) ProvisionedIops() terra.NumberValue {
	return terra.ReferenceAsNumber(gcd.ref.Append("provisioned_iops"))
}

// ProvisionedThroughput returns a reference to field provisioned_throughput of google_compute_disk.
func (gcd dataGoogleComputeDiskAttributes) ProvisionedThroughput() terra.NumberValue {
	return terra.ReferenceAsNumber(gcd.ref.Append("provisioned_throughput"))
}

// ResourcePolicies returns a reference to field resource_policies of google_compute_disk.
func (gcd dataGoogleComputeDiskAttributes) ResourcePolicies() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](gcd.ref.Append("resource_policies"))
}

// SelfLink returns a reference to field self_link of google_compute_disk.
func (gcd dataGoogleComputeDiskAttributes) SelfLink() terra.StringValue {
	return terra.ReferenceAsString(gcd.ref.Append("self_link"))
}

// Size returns a reference to field size of google_compute_disk.
func (gcd dataGoogleComputeDiskAttributes) Size() terra.NumberValue {
	return terra.ReferenceAsNumber(gcd.ref.Append("size"))
}

// Snapshot returns a reference to field snapshot of google_compute_disk.
func (gcd dataGoogleComputeDiskAttributes) Snapshot() terra.StringValue {
	return terra.ReferenceAsString(gcd.ref.Append("snapshot"))
}

// SourceDisk returns a reference to field source_disk of google_compute_disk.
func (gcd dataGoogleComputeDiskAttributes) SourceDisk() terra.StringValue {
	return terra.ReferenceAsString(gcd.ref.Append("source_disk"))
}

// SourceDiskId returns a reference to field source_disk_id of google_compute_disk.
func (gcd dataGoogleComputeDiskAttributes) SourceDiskId() terra.StringValue {
	return terra.ReferenceAsString(gcd.ref.Append("source_disk_id"))
}

// SourceImageId returns a reference to field source_image_id of google_compute_disk.
func (gcd dataGoogleComputeDiskAttributes) SourceImageId() terra.StringValue {
	return terra.ReferenceAsString(gcd.ref.Append("source_image_id"))
}

// SourceSnapshotId returns a reference to field source_snapshot_id of google_compute_disk.
func (gcd dataGoogleComputeDiskAttributes) SourceSnapshotId() terra.StringValue {
	return terra.ReferenceAsString(gcd.ref.Append("source_snapshot_id"))
}

// TerraformLabels returns a reference to field terraform_labels of google_compute_disk.
func (gcd dataGoogleComputeDiskAttributes) TerraformLabels() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](gcd.ref.Append("terraform_labels"))
}

// Type returns a reference to field type of google_compute_disk.
func (gcd dataGoogleComputeDiskAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(gcd.ref.Append("type"))
}

// Users returns a reference to field users of google_compute_disk.
func (gcd dataGoogleComputeDiskAttributes) Users() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](gcd.ref.Append("users"))
}

// Zone returns a reference to field zone of google_compute_disk.
func (gcd dataGoogleComputeDiskAttributes) Zone() terra.StringValue {
	return terra.ReferenceAsString(gcd.ref.Append("zone"))
}

func (gcd dataGoogleComputeDiskAttributes) AsyncPrimaryDisk() terra.ListValue[DataAsyncPrimaryDiskAttributes] {
	return terra.ReferenceAsList[DataAsyncPrimaryDiskAttributes](gcd.ref.Append("async_primary_disk"))
}

func (gcd dataGoogleComputeDiskAttributes) DiskEncryptionKey() terra.ListValue[DataDiskEncryptionKeyAttributes] {
	return terra.ReferenceAsList[DataDiskEncryptionKeyAttributes](gcd.ref.Append("disk_encryption_key"))
}

func (gcd dataGoogleComputeDiskAttributes) GuestOsFeatures() terra.SetValue[DataGuestOsFeaturesAttributes] {
	return terra.ReferenceAsSet[DataGuestOsFeaturesAttributes](gcd.ref.Append("guest_os_features"))
}

func (gcd dataGoogleComputeDiskAttributes) SourceImageEncryptionKey() terra.ListValue[DataSourceImageEncryptionKeyAttributes] {
	return terra.ReferenceAsList[DataSourceImageEncryptionKeyAttributes](gcd.ref.Append("source_image_encryption_key"))
}

func (gcd dataGoogleComputeDiskAttributes) SourceSnapshotEncryptionKey() terra.ListValue[DataSourceSnapshotEncryptionKeyAttributes] {
	return terra.ReferenceAsList[DataSourceSnapshotEncryptionKeyAttributes](gcd.ref.Append("source_snapshot_encryption_key"))
}
