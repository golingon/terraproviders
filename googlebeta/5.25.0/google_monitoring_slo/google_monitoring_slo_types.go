// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google_monitoring_slo

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type BasicSli struct {
	// Location: set of string, optional
	Location terra.SetValue[terra.StringValue] `hcl:"location,attr"`
	// Method: set of string, optional
	Method terra.SetValue[terra.StringValue] `hcl:"method,attr"`
	// Version: set of string, optional
	Version terra.SetValue[terra.StringValue] `hcl:"version,attr"`
	// BasicSliAvailability: optional
	Availability *BasicSliAvailability `hcl:"availability,block"`
	// BasicSliLatency: optional
	Latency *BasicSliLatency `hcl:"latency,block"`
}

type BasicSliAvailability struct {
	// Enabled: bool, optional
	Enabled terra.BoolValue `hcl:"enabled,attr"`
}

type BasicSliLatency struct {
	// Threshold: string, required
	Threshold terra.StringValue `hcl:"threshold,attr" validate:"required"`
}

type RequestBasedSli struct {
	// RequestBasedSliDistributionCut: optional
	DistributionCut *RequestBasedSliDistributionCut `hcl:"distribution_cut,block"`
	// RequestBasedSliGoodTotalRatio: optional
	GoodTotalRatio *RequestBasedSliGoodTotalRatio `hcl:"good_total_ratio,block"`
}

type RequestBasedSliDistributionCut struct {
	// DistributionFilter: string, required
	DistributionFilter terra.StringValue `hcl:"distribution_filter,attr" validate:"required"`
	// RequestBasedSliDistributionCutRange: required
	Range *RequestBasedSliDistributionCutRange `hcl:"range,block" validate:"required"`
}

type RequestBasedSliDistributionCutRange struct {
	// Max: number, optional
	Max terra.NumberValue `hcl:"max,attr"`
	// Min: number, optional
	Min terra.NumberValue `hcl:"min,attr"`
}

type RequestBasedSliGoodTotalRatio struct {
	// BadServiceFilter: string, optional
	BadServiceFilter terra.StringValue `hcl:"bad_service_filter,attr"`
	// GoodServiceFilter: string, optional
	GoodServiceFilter terra.StringValue `hcl:"good_service_filter,attr"`
	// TotalServiceFilter: string, optional
	TotalServiceFilter terra.StringValue `hcl:"total_service_filter,attr"`
}

type Timeouts struct {
	// Create: string, optional
	Create terra.StringValue `hcl:"create,attr"`
	// Delete: string, optional
	Delete terra.StringValue `hcl:"delete,attr"`
	// Update: string, optional
	Update terra.StringValue `hcl:"update,attr"`
}

type WindowsBasedSli struct {
	// GoodBadMetricFilter: string, optional
	GoodBadMetricFilter terra.StringValue `hcl:"good_bad_metric_filter,attr"`
	// WindowPeriod: string, optional
	WindowPeriod terra.StringValue `hcl:"window_period,attr"`
	// WindowsBasedSliGoodTotalRatioThreshold: optional
	GoodTotalRatioThreshold *WindowsBasedSliGoodTotalRatioThreshold `hcl:"good_total_ratio_threshold,block"`
	// WindowsBasedSliMetricMeanInRange: optional
	MetricMeanInRange *WindowsBasedSliMetricMeanInRange `hcl:"metric_mean_in_range,block"`
	// WindowsBasedSliMetricSumInRange: optional
	MetricSumInRange *WindowsBasedSliMetricSumInRange `hcl:"metric_sum_in_range,block"`
}

type WindowsBasedSliGoodTotalRatioThreshold struct {
	// Threshold: number, optional
	Threshold terra.NumberValue `hcl:"threshold,attr"`
	// WindowsBasedSliGoodTotalRatioThresholdBasicSliPerformance: optional
	BasicSliPerformance *WindowsBasedSliGoodTotalRatioThresholdBasicSliPerformance `hcl:"basic_sli_performance,block"`
	// WindowsBasedSliGoodTotalRatioThresholdPerformance: optional
	Performance *WindowsBasedSliGoodTotalRatioThresholdPerformance `hcl:"performance,block"`
}

type WindowsBasedSliGoodTotalRatioThresholdBasicSliPerformance struct {
	// Location: set of string, optional
	Location terra.SetValue[terra.StringValue] `hcl:"location,attr"`
	// Method: set of string, optional
	Method terra.SetValue[terra.StringValue] `hcl:"method,attr"`
	// Version: set of string, optional
	Version terra.SetValue[terra.StringValue] `hcl:"version,attr"`
	// WindowsBasedSliGoodTotalRatioThresholdBasicSliPerformanceAvailability: optional
	Availability *WindowsBasedSliGoodTotalRatioThresholdBasicSliPerformanceAvailability `hcl:"availability,block"`
	// WindowsBasedSliGoodTotalRatioThresholdBasicSliPerformanceLatency: optional
	Latency *WindowsBasedSliGoodTotalRatioThresholdBasicSliPerformanceLatency `hcl:"latency,block"`
}

type WindowsBasedSliGoodTotalRatioThresholdBasicSliPerformanceAvailability struct {
	// Enabled: bool, optional
	Enabled terra.BoolValue `hcl:"enabled,attr"`
}

type WindowsBasedSliGoodTotalRatioThresholdBasicSliPerformanceLatency struct {
	// Threshold: string, required
	Threshold terra.StringValue `hcl:"threshold,attr" validate:"required"`
}

type WindowsBasedSliGoodTotalRatioThresholdPerformance struct {
	// WindowsBasedSliGoodTotalRatioThresholdPerformanceDistributionCut: optional
	DistributionCut *WindowsBasedSliGoodTotalRatioThresholdPerformanceDistributionCut `hcl:"distribution_cut,block"`
	// WindowsBasedSliGoodTotalRatioThresholdPerformanceGoodTotalRatio: optional
	GoodTotalRatio *WindowsBasedSliGoodTotalRatioThresholdPerformanceGoodTotalRatio `hcl:"good_total_ratio,block"`
}

type WindowsBasedSliGoodTotalRatioThresholdPerformanceDistributionCut struct {
	// DistributionFilter: string, required
	DistributionFilter terra.StringValue `hcl:"distribution_filter,attr" validate:"required"`
	// WindowsBasedSliGoodTotalRatioThreshold259967B5: required
	Range *WindowsBasedSliGoodTotalRatioThreshold259967B5 `hcl:"range,block" validate:"required"`
}

type WindowsBasedSliGoodTotalRatioThreshold259967B5 struct {
	// Max: number, optional
	Max terra.NumberValue `hcl:"max,attr"`
	// Min: number, optional
	Min terra.NumberValue `hcl:"min,attr"`
}

type WindowsBasedSliGoodTotalRatioThresholdPerformanceGoodTotalRatio struct {
	// BadServiceFilter: string, optional
	BadServiceFilter terra.StringValue `hcl:"bad_service_filter,attr"`
	// GoodServiceFilter: string, optional
	GoodServiceFilter terra.StringValue `hcl:"good_service_filter,attr"`
	// TotalServiceFilter: string, optional
	TotalServiceFilter terra.StringValue `hcl:"total_service_filter,attr"`
}

type WindowsBasedSliMetricMeanInRange struct {
	// TimeSeries: string, required
	TimeSeries terra.StringValue `hcl:"time_series,attr" validate:"required"`
	// WindowsBasedSliMetricMeanInRangeRange: required
	Range *WindowsBasedSliMetricMeanInRangeRange `hcl:"range,block" validate:"required"`
}

type WindowsBasedSliMetricMeanInRangeRange struct {
	// Max: number, optional
	Max terra.NumberValue `hcl:"max,attr"`
	// Min: number, optional
	Min terra.NumberValue `hcl:"min,attr"`
}

type WindowsBasedSliMetricSumInRange struct {
	// TimeSeries: string, required
	TimeSeries terra.StringValue `hcl:"time_series,attr" validate:"required"`
	// WindowsBasedSliMetricSumInRangeRange: required
	Range *WindowsBasedSliMetricSumInRangeRange `hcl:"range,block" validate:"required"`
}

type WindowsBasedSliMetricSumInRangeRange struct {
	// Max: number, optional
	Max terra.NumberValue `hcl:"max,attr"`
	// Min: number, optional
	Min terra.NumberValue `hcl:"min,attr"`
}

type BasicSliAttributes struct {
	ref terra.Reference
}

func (bs BasicSliAttributes) InternalRef() (terra.Reference, error) {
	return bs.ref, nil
}

func (bs BasicSliAttributes) InternalWithRef(ref terra.Reference) BasicSliAttributes {
	return BasicSliAttributes{ref: ref}
}

func (bs BasicSliAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return bs.ref.InternalTokens()
}

func (bs BasicSliAttributes) Location() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](bs.ref.Append("location"))
}

func (bs BasicSliAttributes) Method() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](bs.ref.Append("method"))
}

func (bs BasicSliAttributes) Version() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](bs.ref.Append("version"))
}

func (bs BasicSliAttributes) Availability() terra.ListValue[BasicSliAvailabilityAttributes] {
	return terra.ReferenceAsList[BasicSliAvailabilityAttributes](bs.ref.Append("availability"))
}

func (bs BasicSliAttributes) Latency() terra.ListValue[BasicSliLatencyAttributes] {
	return terra.ReferenceAsList[BasicSliLatencyAttributes](bs.ref.Append("latency"))
}

type BasicSliAvailabilityAttributes struct {
	ref terra.Reference
}

func (a BasicSliAvailabilityAttributes) InternalRef() (terra.Reference, error) {
	return a.ref, nil
}

func (a BasicSliAvailabilityAttributes) InternalWithRef(ref terra.Reference) BasicSliAvailabilityAttributes {
	return BasicSliAvailabilityAttributes{ref: ref}
}

func (a BasicSliAvailabilityAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return a.ref.InternalTokens()
}

func (a BasicSliAvailabilityAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceAsBool(a.ref.Append("enabled"))
}

type BasicSliLatencyAttributes struct {
	ref terra.Reference
}

func (l BasicSliLatencyAttributes) InternalRef() (terra.Reference, error) {
	return l.ref, nil
}

func (l BasicSliLatencyAttributes) InternalWithRef(ref terra.Reference) BasicSliLatencyAttributes {
	return BasicSliLatencyAttributes{ref: ref}
}

func (l BasicSliLatencyAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return l.ref.InternalTokens()
}

func (l BasicSliLatencyAttributes) Threshold() terra.StringValue {
	return terra.ReferenceAsString(l.ref.Append("threshold"))
}

type RequestBasedSliAttributes struct {
	ref terra.Reference
}

func (rbs RequestBasedSliAttributes) InternalRef() (terra.Reference, error) {
	return rbs.ref, nil
}

func (rbs RequestBasedSliAttributes) InternalWithRef(ref terra.Reference) RequestBasedSliAttributes {
	return RequestBasedSliAttributes{ref: ref}
}

func (rbs RequestBasedSliAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rbs.ref.InternalTokens()
}

func (rbs RequestBasedSliAttributes) DistributionCut() terra.ListValue[RequestBasedSliDistributionCutAttributes] {
	return terra.ReferenceAsList[RequestBasedSliDistributionCutAttributes](rbs.ref.Append("distribution_cut"))
}

func (rbs RequestBasedSliAttributes) GoodTotalRatio() terra.ListValue[RequestBasedSliGoodTotalRatioAttributes] {
	return terra.ReferenceAsList[RequestBasedSliGoodTotalRatioAttributes](rbs.ref.Append("good_total_ratio"))
}

type RequestBasedSliDistributionCutAttributes struct {
	ref terra.Reference
}

func (dc RequestBasedSliDistributionCutAttributes) InternalRef() (terra.Reference, error) {
	return dc.ref, nil
}

func (dc RequestBasedSliDistributionCutAttributes) InternalWithRef(ref terra.Reference) RequestBasedSliDistributionCutAttributes {
	return RequestBasedSliDistributionCutAttributes{ref: ref}
}

func (dc RequestBasedSliDistributionCutAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dc.ref.InternalTokens()
}

func (dc RequestBasedSliDistributionCutAttributes) DistributionFilter() terra.StringValue {
	return terra.ReferenceAsString(dc.ref.Append("distribution_filter"))
}

func (dc RequestBasedSliDistributionCutAttributes) Range() terra.ListValue[RequestBasedSliDistributionCutRangeAttributes] {
	return terra.ReferenceAsList[RequestBasedSliDistributionCutRangeAttributes](dc.ref.Append("range"))
}

type RequestBasedSliDistributionCutRangeAttributes struct {
	ref terra.Reference
}

func (r RequestBasedSliDistributionCutRangeAttributes) InternalRef() (terra.Reference, error) {
	return r.ref, nil
}

func (r RequestBasedSliDistributionCutRangeAttributes) InternalWithRef(ref terra.Reference) RequestBasedSliDistributionCutRangeAttributes {
	return RequestBasedSliDistributionCutRangeAttributes{ref: ref}
}

func (r RequestBasedSliDistributionCutRangeAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return r.ref.InternalTokens()
}

func (r RequestBasedSliDistributionCutRangeAttributes) Max() terra.NumberValue {
	return terra.ReferenceAsNumber(r.ref.Append("max"))
}

func (r RequestBasedSliDistributionCutRangeAttributes) Min() terra.NumberValue {
	return terra.ReferenceAsNumber(r.ref.Append("min"))
}

type RequestBasedSliGoodTotalRatioAttributes struct {
	ref terra.Reference
}

func (gtr RequestBasedSliGoodTotalRatioAttributes) InternalRef() (terra.Reference, error) {
	return gtr.ref, nil
}

func (gtr RequestBasedSliGoodTotalRatioAttributes) InternalWithRef(ref terra.Reference) RequestBasedSliGoodTotalRatioAttributes {
	return RequestBasedSliGoodTotalRatioAttributes{ref: ref}
}

func (gtr RequestBasedSliGoodTotalRatioAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return gtr.ref.InternalTokens()
}

func (gtr RequestBasedSliGoodTotalRatioAttributes) BadServiceFilter() terra.StringValue {
	return terra.ReferenceAsString(gtr.ref.Append("bad_service_filter"))
}

func (gtr RequestBasedSliGoodTotalRatioAttributes) GoodServiceFilter() terra.StringValue {
	return terra.ReferenceAsString(gtr.ref.Append("good_service_filter"))
}

func (gtr RequestBasedSliGoodTotalRatioAttributes) TotalServiceFilter() terra.StringValue {
	return terra.ReferenceAsString(gtr.ref.Append("total_service_filter"))
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("create"))
}

func (t TimeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("delete"))
}

func (t TimeoutsAttributes) Update() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("update"))
}

type WindowsBasedSliAttributes struct {
	ref terra.Reference
}

func (wbs WindowsBasedSliAttributes) InternalRef() (terra.Reference, error) {
	return wbs.ref, nil
}

func (wbs WindowsBasedSliAttributes) InternalWithRef(ref terra.Reference) WindowsBasedSliAttributes {
	return WindowsBasedSliAttributes{ref: ref}
}

func (wbs WindowsBasedSliAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return wbs.ref.InternalTokens()
}

func (wbs WindowsBasedSliAttributes) GoodBadMetricFilter() terra.StringValue {
	return terra.ReferenceAsString(wbs.ref.Append("good_bad_metric_filter"))
}

func (wbs WindowsBasedSliAttributes) WindowPeriod() terra.StringValue {
	return terra.ReferenceAsString(wbs.ref.Append("window_period"))
}

func (wbs WindowsBasedSliAttributes) GoodTotalRatioThreshold() terra.ListValue[WindowsBasedSliGoodTotalRatioThresholdAttributes] {
	return terra.ReferenceAsList[WindowsBasedSliGoodTotalRatioThresholdAttributes](wbs.ref.Append("good_total_ratio_threshold"))
}

func (wbs WindowsBasedSliAttributes) MetricMeanInRange() terra.ListValue[WindowsBasedSliMetricMeanInRangeAttributes] {
	return terra.ReferenceAsList[WindowsBasedSliMetricMeanInRangeAttributes](wbs.ref.Append("metric_mean_in_range"))
}

func (wbs WindowsBasedSliAttributes) MetricSumInRange() terra.ListValue[WindowsBasedSliMetricSumInRangeAttributes] {
	return terra.ReferenceAsList[WindowsBasedSliMetricSumInRangeAttributes](wbs.ref.Append("metric_sum_in_range"))
}

type WindowsBasedSliGoodTotalRatioThresholdAttributes struct {
	ref terra.Reference
}

func (gtrt WindowsBasedSliGoodTotalRatioThresholdAttributes) InternalRef() (terra.Reference, error) {
	return gtrt.ref, nil
}

func (gtrt WindowsBasedSliGoodTotalRatioThresholdAttributes) InternalWithRef(ref terra.Reference) WindowsBasedSliGoodTotalRatioThresholdAttributes {
	return WindowsBasedSliGoodTotalRatioThresholdAttributes{ref: ref}
}

func (gtrt WindowsBasedSliGoodTotalRatioThresholdAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return gtrt.ref.InternalTokens()
}

func (gtrt WindowsBasedSliGoodTotalRatioThresholdAttributes) Threshold() terra.NumberValue {
	return terra.ReferenceAsNumber(gtrt.ref.Append("threshold"))
}

func (gtrt WindowsBasedSliGoodTotalRatioThresholdAttributes) BasicSliPerformance() terra.ListValue[WindowsBasedSliGoodTotalRatioThresholdBasicSliPerformanceAttributes] {
	return terra.ReferenceAsList[WindowsBasedSliGoodTotalRatioThresholdBasicSliPerformanceAttributes](gtrt.ref.Append("basic_sli_performance"))
}

func (gtrt WindowsBasedSliGoodTotalRatioThresholdAttributes) Performance() terra.ListValue[WindowsBasedSliGoodTotalRatioThresholdPerformanceAttributes] {
	return terra.ReferenceAsList[WindowsBasedSliGoodTotalRatioThresholdPerformanceAttributes](gtrt.ref.Append("performance"))
}

type WindowsBasedSliGoodTotalRatioThresholdBasicSliPerformanceAttributes struct {
	ref terra.Reference
}

func (bsp WindowsBasedSliGoodTotalRatioThresholdBasicSliPerformanceAttributes) InternalRef() (terra.Reference, error) {
	return bsp.ref, nil
}

func (bsp WindowsBasedSliGoodTotalRatioThresholdBasicSliPerformanceAttributes) InternalWithRef(ref terra.Reference) WindowsBasedSliGoodTotalRatioThresholdBasicSliPerformanceAttributes {
	return WindowsBasedSliGoodTotalRatioThresholdBasicSliPerformanceAttributes{ref: ref}
}

func (bsp WindowsBasedSliGoodTotalRatioThresholdBasicSliPerformanceAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return bsp.ref.InternalTokens()
}

func (bsp WindowsBasedSliGoodTotalRatioThresholdBasicSliPerformanceAttributes) Location() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](bsp.ref.Append("location"))
}

func (bsp WindowsBasedSliGoodTotalRatioThresholdBasicSliPerformanceAttributes) Method() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](bsp.ref.Append("method"))
}

func (bsp WindowsBasedSliGoodTotalRatioThresholdBasicSliPerformanceAttributes) Version() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](bsp.ref.Append("version"))
}

func (bsp WindowsBasedSliGoodTotalRatioThresholdBasicSliPerformanceAttributes) Availability() terra.ListValue[WindowsBasedSliGoodTotalRatioThresholdBasicSliPerformanceAvailabilityAttributes] {
	return terra.ReferenceAsList[WindowsBasedSliGoodTotalRatioThresholdBasicSliPerformanceAvailabilityAttributes](bsp.ref.Append("availability"))
}

func (bsp WindowsBasedSliGoodTotalRatioThresholdBasicSliPerformanceAttributes) Latency() terra.ListValue[WindowsBasedSliGoodTotalRatioThresholdBasicSliPerformanceLatencyAttributes] {
	return terra.ReferenceAsList[WindowsBasedSliGoodTotalRatioThresholdBasicSliPerformanceLatencyAttributes](bsp.ref.Append("latency"))
}

type WindowsBasedSliGoodTotalRatioThresholdBasicSliPerformanceAvailabilityAttributes struct {
	ref terra.Reference
}

func (a WindowsBasedSliGoodTotalRatioThresholdBasicSliPerformanceAvailabilityAttributes) InternalRef() (terra.Reference, error) {
	return a.ref, nil
}

func (a WindowsBasedSliGoodTotalRatioThresholdBasicSliPerformanceAvailabilityAttributes) InternalWithRef(ref terra.Reference) WindowsBasedSliGoodTotalRatioThresholdBasicSliPerformanceAvailabilityAttributes {
	return WindowsBasedSliGoodTotalRatioThresholdBasicSliPerformanceAvailabilityAttributes{ref: ref}
}

func (a WindowsBasedSliGoodTotalRatioThresholdBasicSliPerformanceAvailabilityAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return a.ref.InternalTokens()
}

func (a WindowsBasedSliGoodTotalRatioThresholdBasicSliPerformanceAvailabilityAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceAsBool(a.ref.Append("enabled"))
}

type WindowsBasedSliGoodTotalRatioThresholdBasicSliPerformanceLatencyAttributes struct {
	ref terra.Reference
}

func (l WindowsBasedSliGoodTotalRatioThresholdBasicSliPerformanceLatencyAttributes) InternalRef() (terra.Reference, error) {
	return l.ref, nil
}

func (l WindowsBasedSliGoodTotalRatioThresholdBasicSliPerformanceLatencyAttributes) InternalWithRef(ref terra.Reference) WindowsBasedSliGoodTotalRatioThresholdBasicSliPerformanceLatencyAttributes {
	return WindowsBasedSliGoodTotalRatioThresholdBasicSliPerformanceLatencyAttributes{ref: ref}
}

func (l WindowsBasedSliGoodTotalRatioThresholdBasicSliPerformanceLatencyAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return l.ref.InternalTokens()
}

func (l WindowsBasedSliGoodTotalRatioThresholdBasicSliPerformanceLatencyAttributes) Threshold() terra.StringValue {
	return terra.ReferenceAsString(l.ref.Append("threshold"))
}

type WindowsBasedSliGoodTotalRatioThresholdPerformanceAttributes struct {
	ref terra.Reference
}

func (p WindowsBasedSliGoodTotalRatioThresholdPerformanceAttributes) InternalRef() (terra.Reference, error) {
	return p.ref, nil
}

func (p WindowsBasedSliGoodTotalRatioThresholdPerformanceAttributes) InternalWithRef(ref terra.Reference) WindowsBasedSliGoodTotalRatioThresholdPerformanceAttributes {
	return WindowsBasedSliGoodTotalRatioThresholdPerformanceAttributes{ref: ref}
}

func (p WindowsBasedSliGoodTotalRatioThresholdPerformanceAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return p.ref.InternalTokens()
}

func (p WindowsBasedSliGoodTotalRatioThresholdPerformanceAttributes) DistributionCut() terra.ListValue[WindowsBasedSliGoodTotalRatioThresholdPerformanceDistributionCutAttributes] {
	return terra.ReferenceAsList[WindowsBasedSliGoodTotalRatioThresholdPerformanceDistributionCutAttributes](p.ref.Append("distribution_cut"))
}

func (p WindowsBasedSliGoodTotalRatioThresholdPerformanceAttributes) GoodTotalRatio() terra.ListValue[WindowsBasedSliGoodTotalRatioThresholdPerformanceGoodTotalRatioAttributes] {
	return terra.ReferenceAsList[WindowsBasedSliGoodTotalRatioThresholdPerformanceGoodTotalRatioAttributes](p.ref.Append("good_total_ratio"))
}

type WindowsBasedSliGoodTotalRatioThresholdPerformanceDistributionCutAttributes struct {
	ref terra.Reference
}

func (dc WindowsBasedSliGoodTotalRatioThresholdPerformanceDistributionCutAttributes) InternalRef() (terra.Reference, error) {
	return dc.ref, nil
}

func (dc WindowsBasedSliGoodTotalRatioThresholdPerformanceDistributionCutAttributes) InternalWithRef(ref terra.Reference) WindowsBasedSliGoodTotalRatioThresholdPerformanceDistributionCutAttributes {
	return WindowsBasedSliGoodTotalRatioThresholdPerformanceDistributionCutAttributes{ref: ref}
}

func (dc WindowsBasedSliGoodTotalRatioThresholdPerformanceDistributionCutAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dc.ref.InternalTokens()
}

func (dc WindowsBasedSliGoodTotalRatioThresholdPerformanceDistributionCutAttributes) DistributionFilter() terra.StringValue {
	return terra.ReferenceAsString(dc.ref.Append("distribution_filter"))
}

func (dc WindowsBasedSliGoodTotalRatioThresholdPerformanceDistributionCutAttributes) Range() terra.ListValue[WindowsBasedSliGoodTotalRatioThreshold259967B5Attributes] {
	return terra.ReferenceAsList[WindowsBasedSliGoodTotalRatioThreshold259967B5Attributes](dc.ref.Append("range"))
}

type WindowsBasedSliGoodTotalRatioThreshold259967B5Attributes struct {
	ref terra.Reference
}

func (r WindowsBasedSliGoodTotalRatioThreshold259967B5Attributes) InternalRef() (terra.Reference, error) {
	return r.ref, nil
}

func (r WindowsBasedSliGoodTotalRatioThreshold259967B5Attributes) InternalWithRef(ref terra.Reference) WindowsBasedSliGoodTotalRatioThreshold259967B5Attributes {
	return WindowsBasedSliGoodTotalRatioThreshold259967B5Attributes{ref: ref}
}

func (r WindowsBasedSliGoodTotalRatioThreshold259967B5Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return r.ref.InternalTokens()
}

func (r WindowsBasedSliGoodTotalRatioThreshold259967B5Attributes) Max() terra.NumberValue {
	return terra.ReferenceAsNumber(r.ref.Append("max"))
}

func (r WindowsBasedSliGoodTotalRatioThreshold259967B5Attributes) Min() terra.NumberValue {
	return terra.ReferenceAsNumber(r.ref.Append("min"))
}

type WindowsBasedSliGoodTotalRatioThresholdPerformanceGoodTotalRatioAttributes struct {
	ref terra.Reference
}

func (gtr WindowsBasedSliGoodTotalRatioThresholdPerformanceGoodTotalRatioAttributes) InternalRef() (terra.Reference, error) {
	return gtr.ref, nil
}

func (gtr WindowsBasedSliGoodTotalRatioThresholdPerformanceGoodTotalRatioAttributes) InternalWithRef(ref terra.Reference) WindowsBasedSliGoodTotalRatioThresholdPerformanceGoodTotalRatioAttributes {
	return WindowsBasedSliGoodTotalRatioThresholdPerformanceGoodTotalRatioAttributes{ref: ref}
}

func (gtr WindowsBasedSliGoodTotalRatioThresholdPerformanceGoodTotalRatioAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return gtr.ref.InternalTokens()
}

func (gtr WindowsBasedSliGoodTotalRatioThresholdPerformanceGoodTotalRatioAttributes) BadServiceFilter() terra.StringValue {
	return terra.ReferenceAsString(gtr.ref.Append("bad_service_filter"))
}

func (gtr WindowsBasedSliGoodTotalRatioThresholdPerformanceGoodTotalRatioAttributes) GoodServiceFilter() terra.StringValue {
	return terra.ReferenceAsString(gtr.ref.Append("good_service_filter"))
}

func (gtr WindowsBasedSliGoodTotalRatioThresholdPerformanceGoodTotalRatioAttributes) TotalServiceFilter() terra.StringValue {
	return terra.ReferenceAsString(gtr.ref.Append("total_service_filter"))
}

type WindowsBasedSliMetricMeanInRangeAttributes struct {
	ref terra.Reference
}

func (mmir WindowsBasedSliMetricMeanInRangeAttributes) InternalRef() (terra.Reference, error) {
	return mmir.ref, nil
}

func (mmir WindowsBasedSliMetricMeanInRangeAttributes) InternalWithRef(ref terra.Reference) WindowsBasedSliMetricMeanInRangeAttributes {
	return WindowsBasedSliMetricMeanInRangeAttributes{ref: ref}
}

func (mmir WindowsBasedSliMetricMeanInRangeAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return mmir.ref.InternalTokens()
}

func (mmir WindowsBasedSliMetricMeanInRangeAttributes) TimeSeries() terra.StringValue {
	return terra.ReferenceAsString(mmir.ref.Append("time_series"))
}

func (mmir WindowsBasedSliMetricMeanInRangeAttributes) Range() terra.ListValue[WindowsBasedSliMetricMeanInRangeRangeAttributes] {
	return terra.ReferenceAsList[WindowsBasedSliMetricMeanInRangeRangeAttributes](mmir.ref.Append("range"))
}

type WindowsBasedSliMetricMeanInRangeRangeAttributes struct {
	ref terra.Reference
}

func (r WindowsBasedSliMetricMeanInRangeRangeAttributes) InternalRef() (terra.Reference, error) {
	return r.ref, nil
}

func (r WindowsBasedSliMetricMeanInRangeRangeAttributes) InternalWithRef(ref terra.Reference) WindowsBasedSliMetricMeanInRangeRangeAttributes {
	return WindowsBasedSliMetricMeanInRangeRangeAttributes{ref: ref}
}

func (r WindowsBasedSliMetricMeanInRangeRangeAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return r.ref.InternalTokens()
}

func (r WindowsBasedSliMetricMeanInRangeRangeAttributes) Max() terra.NumberValue {
	return terra.ReferenceAsNumber(r.ref.Append("max"))
}

func (r WindowsBasedSliMetricMeanInRangeRangeAttributes) Min() terra.NumberValue {
	return terra.ReferenceAsNumber(r.ref.Append("min"))
}

type WindowsBasedSliMetricSumInRangeAttributes struct {
	ref terra.Reference
}

func (msir WindowsBasedSliMetricSumInRangeAttributes) InternalRef() (terra.Reference, error) {
	return msir.ref, nil
}

func (msir WindowsBasedSliMetricSumInRangeAttributes) InternalWithRef(ref terra.Reference) WindowsBasedSliMetricSumInRangeAttributes {
	return WindowsBasedSliMetricSumInRangeAttributes{ref: ref}
}

func (msir WindowsBasedSliMetricSumInRangeAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return msir.ref.InternalTokens()
}

func (msir WindowsBasedSliMetricSumInRangeAttributes) TimeSeries() terra.StringValue {
	return terra.ReferenceAsString(msir.ref.Append("time_series"))
}

func (msir WindowsBasedSliMetricSumInRangeAttributes) Range() terra.ListValue[WindowsBasedSliMetricSumInRangeRangeAttributes] {
	return terra.ReferenceAsList[WindowsBasedSliMetricSumInRangeRangeAttributes](msir.ref.Append("range"))
}

type WindowsBasedSliMetricSumInRangeRangeAttributes struct {
	ref terra.Reference
}

func (r WindowsBasedSliMetricSumInRangeRangeAttributes) InternalRef() (terra.Reference, error) {
	return r.ref, nil
}

func (r WindowsBasedSliMetricSumInRangeRangeAttributes) InternalWithRef(ref terra.Reference) WindowsBasedSliMetricSumInRangeRangeAttributes {
	return WindowsBasedSliMetricSumInRangeRangeAttributes{ref: ref}
}

func (r WindowsBasedSliMetricSumInRangeRangeAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return r.ref.InternalTokens()
}

func (r WindowsBasedSliMetricSumInRangeRangeAttributes) Max() terra.NumberValue {
	return terra.ReferenceAsNumber(r.ref.Append("max"))
}

func (r WindowsBasedSliMetricSumInRangeRangeAttributes) Min() terra.NumberValue {
	return terra.ReferenceAsNumber(r.ref.Append("min"))
}

type BasicSliState struct {
	Location     []string                    `json:"location"`
	Method       []string                    `json:"method"`
	Version      []string                    `json:"version"`
	Availability []BasicSliAvailabilityState `json:"availability"`
	Latency      []BasicSliLatencyState      `json:"latency"`
}

type BasicSliAvailabilityState struct {
	Enabled bool `json:"enabled"`
}

type BasicSliLatencyState struct {
	Threshold string `json:"threshold"`
}

type RequestBasedSliState struct {
	DistributionCut []RequestBasedSliDistributionCutState `json:"distribution_cut"`
	GoodTotalRatio  []RequestBasedSliGoodTotalRatioState  `json:"good_total_ratio"`
}

type RequestBasedSliDistributionCutState struct {
	DistributionFilter string                                     `json:"distribution_filter"`
	Range              []RequestBasedSliDistributionCutRangeState `json:"range"`
}

type RequestBasedSliDistributionCutRangeState struct {
	Max float64 `json:"max"`
	Min float64 `json:"min"`
}

type RequestBasedSliGoodTotalRatioState struct {
	BadServiceFilter   string `json:"bad_service_filter"`
	GoodServiceFilter  string `json:"good_service_filter"`
	TotalServiceFilter string `json:"total_service_filter"`
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
	Update string `json:"update"`
}

type WindowsBasedSliState struct {
	GoodBadMetricFilter     string                                        `json:"good_bad_metric_filter"`
	WindowPeriod            string                                        `json:"window_period"`
	GoodTotalRatioThreshold []WindowsBasedSliGoodTotalRatioThresholdState `json:"good_total_ratio_threshold"`
	MetricMeanInRange       []WindowsBasedSliMetricMeanInRangeState       `json:"metric_mean_in_range"`
	MetricSumInRange        []WindowsBasedSliMetricSumInRangeState        `json:"metric_sum_in_range"`
}

type WindowsBasedSliGoodTotalRatioThresholdState struct {
	Threshold           float64                                                          `json:"threshold"`
	BasicSliPerformance []WindowsBasedSliGoodTotalRatioThresholdBasicSliPerformanceState `json:"basic_sli_performance"`
	Performance         []WindowsBasedSliGoodTotalRatioThresholdPerformanceState         `json:"performance"`
}

type WindowsBasedSliGoodTotalRatioThresholdBasicSliPerformanceState struct {
	Location     []string                                                                     `json:"location"`
	Method       []string                                                                     `json:"method"`
	Version      []string                                                                     `json:"version"`
	Availability []WindowsBasedSliGoodTotalRatioThresholdBasicSliPerformanceAvailabilityState `json:"availability"`
	Latency      []WindowsBasedSliGoodTotalRatioThresholdBasicSliPerformanceLatencyState      `json:"latency"`
}

type WindowsBasedSliGoodTotalRatioThresholdBasicSliPerformanceAvailabilityState struct {
	Enabled bool `json:"enabled"`
}

type WindowsBasedSliGoodTotalRatioThresholdBasicSliPerformanceLatencyState struct {
	Threshold string `json:"threshold"`
}

type WindowsBasedSliGoodTotalRatioThresholdPerformanceState struct {
	DistributionCut []WindowsBasedSliGoodTotalRatioThresholdPerformanceDistributionCutState `json:"distribution_cut"`
	GoodTotalRatio  []WindowsBasedSliGoodTotalRatioThresholdPerformanceGoodTotalRatioState  `json:"good_total_ratio"`
}

type WindowsBasedSliGoodTotalRatioThresholdPerformanceDistributionCutState struct {
	DistributionFilter string                                                `json:"distribution_filter"`
	Range              []WindowsBasedSliGoodTotalRatioThreshold259967B5State `json:"range"`
}

type WindowsBasedSliGoodTotalRatioThreshold259967B5State struct {
	Max float64 `json:"max"`
	Min float64 `json:"min"`
}

type WindowsBasedSliGoodTotalRatioThresholdPerformanceGoodTotalRatioState struct {
	BadServiceFilter   string `json:"bad_service_filter"`
	GoodServiceFilter  string `json:"good_service_filter"`
	TotalServiceFilter string `json:"total_service_filter"`
}

type WindowsBasedSliMetricMeanInRangeState struct {
	TimeSeries string                                       `json:"time_series"`
	Range      []WindowsBasedSliMetricMeanInRangeRangeState `json:"range"`
}

type WindowsBasedSliMetricMeanInRangeRangeState struct {
	Max float64 `json:"max"`
	Min float64 `json:"min"`
}

type WindowsBasedSliMetricSumInRangeState struct {
	TimeSeries string                                      `json:"time_series"`
	Range      []WindowsBasedSliMetricSumInRangeRangeState `json:"range"`
}

type WindowsBasedSliMetricSumInRangeRangeState struct {
	Max float64 `json:"max"`
	Min float64 `json:"min"`
}
