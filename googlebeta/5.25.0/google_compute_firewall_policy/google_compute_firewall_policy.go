// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google_compute_firewall_policy

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource google_compute_firewall_policy.
type Resource struct {
	Name      string
	Args      Args
	state     *googleComputeFirewallPolicyState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (gcfp *Resource) Type() string {
	return "google_compute_firewall_policy"
}

// LocalName returns the local name for [Resource].
func (gcfp *Resource) LocalName() string {
	return gcfp.Name
}

// Configuration returns the configuration (args) for [Resource].
func (gcfp *Resource) Configuration() interface{} {
	return gcfp.Args
}

// DependOn is used for other resources to depend on [Resource].
func (gcfp *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(gcfp)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (gcfp *Resource) Dependencies() terra.Dependencies {
	return gcfp.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (gcfp *Resource) LifecycleManagement() *terra.Lifecycle {
	return gcfp.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (gcfp *Resource) Attributes() googleComputeFirewallPolicyAttributes {
	return googleComputeFirewallPolicyAttributes{ref: terra.ReferenceResource(gcfp)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (gcfp *Resource) ImportState(state io.Reader) error {
	gcfp.state = &googleComputeFirewallPolicyState{}
	if err := json.NewDecoder(state).Decode(gcfp.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", gcfp.Type(), gcfp.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (gcfp *Resource) State() (*googleComputeFirewallPolicyState, bool) {
	return gcfp.state, gcfp.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (gcfp *Resource) StateMust() *googleComputeFirewallPolicyState {
	if gcfp.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", gcfp.Type(), gcfp.LocalName()))
	}
	return gcfp.state
}

// Args contains the configurations for google_compute_firewall_policy.
type Args struct {
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Parent: string, required
	Parent terra.StringValue `hcl:"parent,attr" validate:"required"`
	// ShortName: string, required
	ShortName terra.StringValue `hcl:"short_name,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type googleComputeFirewallPolicyAttributes struct {
	ref terra.Reference
}

// CreationTimestamp returns a reference to field creation_timestamp of google_compute_firewall_policy.
func (gcfp googleComputeFirewallPolicyAttributes) CreationTimestamp() terra.StringValue {
	return terra.ReferenceAsString(gcfp.ref.Append("creation_timestamp"))
}

// Description returns a reference to field description of google_compute_firewall_policy.
func (gcfp googleComputeFirewallPolicyAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(gcfp.ref.Append("description"))
}

// Fingerprint returns a reference to field fingerprint of google_compute_firewall_policy.
func (gcfp googleComputeFirewallPolicyAttributes) Fingerprint() terra.StringValue {
	return terra.ReferenceAsString(gcfp.ref.Append("fingerprint"))
}

// FirewallPolicyId returns a reference to field firewall_policy_id of google_compute_firewall_policy.
func (gcfp googleComputeFirewallPolicyAttributes) FirewallPolicyId() terra.StringValue {
	return terra.ReferenceAsString(gcfp.ref.Append("firewall_policy_id"))
}

// Id returns a reference to field id of google_compute_firewall_policy.
func (gcfp googleComputeFirewallPolicyAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(gcfp.ref.Append("id"))
}

// Name returns a reference to field name of google_compute_firewall_policy.
func (gcfp googleComputeFirewallPolicyAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(gcfp.ref.Append("name"))
}

// Parent returns a reference to field parent of google_compute_firewall_policy.
func (gcfp googleComputeFirewallPolicyAttributes) Parent() terra.StringValue {
	return terra.ReferenceAsString(gcfp.ref.Append("parent"))
}

// RuleTupleCount returns a reference to field rule_tuple_count of google_compute_firewall_policy.
func (gcfp googleComputeFirewallPolicyAttributes) RuleTupleCount() terra.NumberValue {
	return terra.ReferenceAsNumber(gcfp.ref.Append("rule_tuple_count"))
}

// SelfLink returns a reference to field self_link of google_compute_firewall_policy.
func (gcfp googleComputeFirewallPolicyAttributes) SelfLink() terra.StringValue {
	return terra.ReferenceAsString(gcfp.ref.Append("self_link"))
}

// SelfLinkWithId returns a reference to field self_link_with_id of google_compute_firewall_policy.
func (gcfp googleComputeFirewallPolicyAttributes) SelfLinkWithId() terra.StringValue {
	return terra.ReferenceAsString(gcfp.ref.Append("self_link_with_id"))
}

// ShortName returns a reference to field short_name of google_compute_firewall_policy.
func (gcfp googleComputeFirewallPolicyAttributes) ShortName() terra.StringValue {
	return terra.ReferenceAsString(gcfp.ref.Append("short_name"))
}

func (gcfp googleComputeFirewallPolicyAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](gcfp.ref.Append("timeouts"))
}

type googleComputeFirewallPolicyState struct {
	CreationTimestamp string         `json:"creation_timestamp"`
	Description       string         `json:"description"`
	Fingerprint       string         `json:"fingerprint"`
	FirewallPolicyId  string         `json:"firewall_policy_id"`
	Id                string         `json:"id"`
	Name              string         `json:"name"`
	Parent            string         `json:"parent"`
	RuleTupleCount    float64        `json:"rule_tuple_count"`
	SelfLink          string         `json:"self_link"`
	SelfLinkWithId    string         `json:"self_link_with_id"`
	ShortName         string         `json:"short_name"`
	Timeouts          *TimeoutsState `json:"timeouts"`
}
