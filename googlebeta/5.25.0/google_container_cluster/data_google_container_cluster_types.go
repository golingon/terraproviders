// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google_container_cluster

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DataAddonsConfigAttributes struct {
	ref terra.Reference
}

func (ac DataAddonsConfigAttributes) InternalRef() (terra.Reference, error) {
	return ac.ref, nil
}

func (ac DataAddonsConfigAttributes) InternalWithRef(ref terra.Reference) DataAddonsConfigAttributes {
	return DataAddonsConfigAttributes{ref: ref}
}

func (ac DataAddonsConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ac.ref.InternalTokens()
}

func (ac DataAddonsConfigAttributes) CloudrunConfig() terra.ListValue[DataAddonsConfigCloudrunConfigAttributes] {
	return terra.ReferenceAsList[DataAddonsConfigCloudrunConfigAttributes](ac.ref.Append("cloudrun_config"))
}

func (ac DataAddonsConfigAttributes) ConfigConnectorConfig() terra.ListValue[DataAddonsConfigConfigConnectorConfigAttributes] {
	return terra.ReferenceAsList[DataAddonsConfigConfigConnectorConfigAttributes](ac.ref.Append("config_connector_config"))
}

func (ac DataAddonsConfigAttributes) DnsCacheConfig() terra.ListValue[DataAddonsConfigDnsCacheConfigAttributes] {
	return terra.ReferenceAsList[DataAddonsConfigDnsCacheConfigAttributes](ac.ref.Append("dns_cache_config"))
}

func (ac DataAddonsConfigAttributes) GcePersistentDiskCsiDriverConfig() terra.ListValue[DataAddonsConfigGcePersistentDiskCsiDriverConfigAttributes] {
	return terra.ReferenceAsList[DataAddonsConfigGcePersistentDiskCsiDriverConfigAttributes](ac.ref.Append("gce_persistent_disk_csi_driver_config"))
}

func (ac DataAddonsConfigAttributes) GcpFilestoreCsiDriverConfig() terra.ListValue[DataAddonsConfigGcpFilestoreCsiDriverConfigAttributes] {
	return terra.ReferenceAsList[DataAddonsConfigGcpFilestoreCsiDriverConfigAttributes](ac.ref.Append("gcp_filestore_csi_driver_config"))
}

func (ac DataAddonsConfigAttributes) GcsFuseCsiDriverConfig() terra.ListValue[DataAddonsConfigGcsFuseCsiDriverConfigAttributes] {
	return terra.ReferenceAsList[DataAddonsConfigGcsFuseCsiDriverConfigAttributes](ac.ref.Append("gcs_fuse_csi_driver_config"))
}

func (ac DataAddonsConfigAttributes) GkeBackupAgentConfig() terra.ListValue[DataAddonsConfigGkeBackupAgentConfigAttributes] {
	return terra.ReferenceAsList[DataAddonsConfigGkeBackupAgentConfigAttributes](ac.ref.Append("gke_backup_agent_config"))
}

func (ac DataAddonsConfigAttributes) HorizontalPodAutoscaling() terra.ListValue[DataAddonsConfigHorizontalPodAutoscalingAttributes] {
	return terra.ReferenceAsList[DataAddonsConfigHorizontalPodAutoscalingAttributes](ac.ref.Append("horizontal_pod_autoscaling"))
}

func (ac DataAddonsConfigAttributes) HttpLoadBalancing() terra.ListValue[DataAddonsConfigHttpLoadBalancingAttributes] {
	return terra.ReferenceAsList[DataAddonsConfigHttpLoadBalancingAttributes](ac.ref.Append("http_load_balancing"))
}

func (ac DataAddonsConfigAttributes) IstioConfig() terra.ListValue[DataAddonsConfigIstioConfigAttributes] {
	return terra.ReferenceAsList[DataAddonsConfigIstioConfigAttributes](ac.ref.Append("istio_config"))
}

func (ac DataAddonsConfigAttributes) KalmConfig() terra.ListValue[DataAddonsConfigKalmConfigAttributes] {
	return terra.ReferenceAsList[DataAddonsConfigKalmConfigAttributes](ac.ref.Append("kalm_config"))
}

func (ac DataAddonsConfigAttributes) NetworkPolicyConfig() terra.ListValue[DataAddonsConfigNetworkPolicyConfigAttributes] {
	return terra.ReferenceAsList[DataAddonsConfigNetworkPolicyConfigAttributes](ac.ref.Append("network_policy_config"))
}

func (ac DataAddonsConfigAttributes) StatefulHaConfig() terra.ListValue[DataAddonsConfigStatefulHaConfigAttributes] {
	return terra.ReferenceAsList[DataAddonsConfigStatefulHaConfigAttributes](ac.ref.Append("stateful_ha_config"))
}

type DataAddonsConfigCloudrunConfigAttributes struct {
	ref terra.Reference
}

func (cc DataAddonsConfigCloudrunConfigAttributes) InternalRef() (terra.Reference, error) {
	return cc.ref, nil
}

func (cc DataAddonsConfigCloudrunConfigAttributes) InternalWithRef(ref terra.Reference) DataAddonsConfigCloudrunConfigAttributes {
	return DataAddonsConfigCloudrunConfigAttributes{ref: ref}
}

func (cc DataAddonsConfigCloudrunConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cc.ref.InternalTokens()
}

func (cc DataAddonsConfigCloudrunConfigAttributes) Disabled() terra.BoolValue {
	return terra.ReferenceAsBool(cc.ref.Append("disabled"))
}

func (cc DataAddonsConfigCloudrunConfigAttributes) LoadBalancerType() terra.StringValue {
	return terra.ReferenceAsString(cc.ref.Append("load_balancer_type"))
}

type DataAddonsConfigConfigConnectorConfigAttributes struct {
	ref terra.Reference
}

func (ccc DataAddonsConfigConfigConnectorConfigAttributes) InternalRef() (terra.Reference, error) {
	return ccc.ref, nil
}

func (ccc DataAddonsConfigConfigConnectorConfigAttributes) InternalWithRef(ref terra.Reference) DataAddonsConfigConfigConnectorConfigAttributes {
	return DataAddonsConfigConfigConnectorConfigAttributes{ref: ref}
}

func (ccc DataAddonsConfigConfigConnectorConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ccc.ref.InternalTokens()
}

func (ccc DataAddonsConfigConfigConnectorConfigAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceAsBool(ccc.ref.Append("enabled"))
}

type DataAddonsConfigDnsCacheConfigAttributes struct {
	ref terra.Reference
}

func (dcc DataAddonsConfigDnsCacheConfigAttributes) InternalRef() (terra.Reference, error) {
	return dcc.ref, nil
}

func (dcc DataAddonsConfigDnsCacheConfigAttributes) InternalWithRef(ref terra.Reference) DataAddonsConfigDnsCacheConfigAttributes {
	return DataAddonsConfigDnsCacheConfigAttributes{ref: ref}
}

func (dcc DataAddonsConfigDnsCacheConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dcc.ref.InternalTokens()
}

func (dcc DataAddonsConfigDnsCacheConfigAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceAsBool(dcc.ref.Append("enabled"))
}

type DataAddonsConfigGcePersistentDiskCsiDriverConfigAttributes struct {
	ref terra.Reference
}

func (gpdcdc DataAddonsConfigGcePersistentDiskCsiDriverConfigAttributes) InternalRef() (terra.Reference, error) {
	return gpdcdc.ref, nil
}

func (gpdcdc DataAddonsConfigGcePersistentDiskCsiDriverConfigAttributes) InternalWithRef(ref terra.Reference) DataAddonsConfigGcePersistentDiskCsiDriverConfigAttributes {
	return DataAddonsConfigGcePersistentDiskCsiDriverConfigAttributes{ref: ref}
}

func (gpdcdc DataAddonsConfigGcePersistentDiskCsiDriverConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return gpdcdc.ref.InternalTokens()
}

func (gpdcdc DataAddonsConfigGcePersistentDiskCsiDriverConfigAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceAsBool(gpdcdc.ref.Append("enabled"))
}

type DataAddonsConfigGcpFilestoreCsiDriverConfigAttributes struct {
	ref terra.Reference
}

func (gfcdc DataAddonsConfigGcpFilestoreCsiDriverConfigAttributes) InternalRef() (terra.Reference, error) {
	return gfcdc.ref, nil
}

func (gfcdc DataAddonsConfigGcpFilestoreCsiDriverConfigAttributes) InternalWithRef(ref terra.Reference) DataAddonsConfigGcpFilestoreCsiDriverConfigAttributes {
	return DataAddonsConfigGcpFilestoreCsiDriverConfigAttributes{ref: ref}
}

func (gfcdc DataAddonsConfigGcpFilestoreCsiDriverConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return gfcdc.ref.InternalTokens()
}

func (gfcdc DataAddonsConfigGcpFilestoreCsiDriverConfigAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceAsBool(gfcdc.ref.Append("enabled"))
}

type DataAddonsConfigGcsFuseCsiDriverConfigAttributes struct {
	ref terra.Reference
}

func (gfcdc DataAddonsConfigGcsFuseCsiDriverConfigAttributes) InternalRef() (terra.Reference, error) {
	return gfcdc.ref, nil
}

func (gfcdc DataAddonsConfigGcsFuseCsiDriverConfigAttributes) InternalWithRef(ref terra.Reference) DataAddonsConfigGcsFuseCsiDriverConfigAttributes {
	return DataAddonsConfigGcsFuseCsiDriverConfigAttributes{ref: ref}
}

func (gfcdc DataAddonsConfigGcsFuseCsiDriverConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return gfcdc.ref.InternalTokens()
}

func (gfcdc DataAddonsConfigGcsFuseCsiDriverConfigAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceAsBool(gfcdc.ref.Append("enabled"))
}

type DataAddonsConfigGkeBackupAgentConfigAttributes struct {
	ref terra.Reference
}

func (gbac DataAddonsConfigGkeBackupAgentConfigAttributes) InternalRef() (terra.Reference, error) {
	return gbac.ref, nil
}

func (gbac DataAddonsConfigGkeBackupAgentConfigAttributes) InternalWithRef(ref terra.Reference) DataAddonsConfigGkeBackupAgentConfigAttributes {
	return DataAddonsConfigGkeBackupAgentConfigAttributes{ref: ref}
}

func (gbac DataAddonsConfigGkeBackupAgentConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return gbac.ref.InternalTokens()
}

func (gbac DataAddonsConfigGkeBackupAgentConfigAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceAsBool(gbac.ref.Append("enabled"))
}

type DataAddonsConfigHorizontalPodAutoscalingAttributes struct {
	ref terra.Reference
}

func (hpa DataAddonsConfigHorizontalPodAutoscalingAttributes) InternalRef() (terra.Reference, error) {
	return hpa.ref, nil
}

func (hpa DataAddonsConfigHorizontalPodAutoscalingAttributes) InternalWithRef(ref terra.Reference) DataAddonsConfigHorizontalPodAutoscalingAttributes {
	return DataAddonsConfigHorizontalPodAutoscalingAttributes{ref: ref}
}

func (hpa DataAddonsConfigHorizontalPodAutoscalingAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return hpa.ref.InternalTokens()
}

func (hpa DataAddonsConfigHorizontalPodAutoscalingAttributes) Disabled() terra.BoolValue {
	return terra.ReferenceAsBool(hpa.ref.Append("disabled"))
}

type DataAddonsConfigHttpLoadBalancingAttributes struct {
	ref terra.Reference
}

func (hlb DataAddonsConfigHttpLoadBalancingAttributes) InternalRef() (terra.Reference, error) {
	return hlb.ref, nil
}

func (hlb DataAddonsConfigHttpLoadBalancingAttributes) InternalWithRef(ref terra.Reference) DataAddonsConfigHttpLoadBalancingAttributes {
	return DataAddonsConfigHttpLoadBalancingAttributes{ref: ref}
}

func (hlb DataAddonsConfigHttpLoadBalancingAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return hlb.ref.InternalTokens()
}

func (hlb DataAddonsConfigHttpLoadBalancingAttributes) Disabled() terra.BoolValue {
	return terra.ReferenceAsBool(hlb.ref.Append("disabled"))
}

type DataAddonsConfigIstioConfigAttributes struct {
	ref terra.Reference
}

func (ic DataAddonsConfigIstioConfigAttributes) InternalRef() (terra.Reference, error) {
	return ic.ref, nil
}

func (ic DataAddonsConfigIstioConfigAttributes) InternalWithRef(ref terra.Reference) DataAddonsConfigIstioConfigAttributes {
	return DataAddonsConfigIstioConfigAttributes{ref: ref}
}

func (ic DataAddonsConfigIstioConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ic.ref.InternalTokens()
}

func (ic DataAddonsConfigIstioConfigAttributes) Auth() terra.StringValue {
	return terra.ReferenceAsString(ic.ref.Append("auth"))
}

func (ic DataAddonsConfigIstioConfigAttributes) Disabled() terra.BoolValue {
	return terra.ReferenceAsBool(ic.ref.Append("disabled"))
}

type DataAddonsConfigKalmConfigAttributes struct {
	ref terra.Reference
}

func (kc DataAddonsConfigKalmConfigAttributes) InternalRef() (terra.Reference, error) {
	return kc.ref, nil
}

func (kc DataAddonsConfigKalmConfigAttributes) InternalWithRef(ref terra.Reference) DataAddonsConfigKalmConfigAttributes {
	return DataAddonsConfigKalmConfigAttributes{ref: ref}
}

func (kc DataAddonsConfigKalmConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return kc.ref.InternalTokens()
}

func (kc DataAddonsConfigKalmConfigAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceAsBool(kc.ref.Append("enabled"))
}

type DataAddonsConfigNetworkPolicyConfigAttributes struct {
	ref terra.Reference
}

func (npc DataAddonsConfigNetworkPolicyConfigAttributes) InternalRef() (terra.Reference, error) {
	return npc.ref, nil
}

func (npc DataAddonsConfigNetworkPolicyConfigAttributes) InternalWithRef(ref terra.Reference) DataAddonsConfigNetworkPolicyConfigAttributes {
	return DataAddonsConfigNetworkPolicyConfigAttributes{ref: ref}
}

func (npc DataAddonsConfigNetworkPolicyConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return npc.ref.InternalTokens()
}

func (npc DataAddonsConfigNetworkPolicyConfigAttributes) Disabled() terra.BoolValue {
	return terra.ReferenceAsBool(npc.ref.Append("disabled"))
}

type DataAddonsConfigStatefulHaConfigAttributes struct {
	ref terra.Reference
}

func (shc DataAddonsConfigStatefulHaConfigAttributes) InternalRef() (terra.Reference, error) {
	return shc.ref, nil
}

func (shc DataAddonsConfigStatefulHaConfigAttributes) InternalWithRef(ref terra.Reference) DataAddonsConfigStatefulHaConfigAttributes {
	return DataAddonsConfigStatefulHaConfigAttributes{ref: ref}
}

func (shc DataAddonsConfigStatefulHaConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return shc.ref.InternalTokens()
}

func (shc DataAddonsConfigStatefulHaConfigAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceAsBool(shc.ref.Append("enabled"))
}

type DataAuthenticatorGroupsConfigAttributes struct {
	ref terra.Reference
}

func (agc DataAuthenticatorGroupsConfigAttributes) InternalRef() (terra.Reference, error) {
	return agc.ref, nil
}

func (agc DataAuthenticatorGroupsConfigAttributes) InternalWithRef(ref terra.Reference) DataAuthenticatorGroupsConfigAttributes {
	return DataAuthenticatorGroupsConfigAttributes{ref: ref}
}

func (agc DataAuthenticatorGroupsConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return agc.ref.InternalTokens()
}

func (agc DataAuthenticatorGroupsConfigAttributes) SecurityGroup() terra.StringValue {
	return terra.ReferenceAsString(agc.ref.Append("security_group"))
}

type DataBinaryAuthorizationAttributes struct {
	ref terra.Reference
}

func (ba DataBinaryAuthorizationAttributes) InternalRef() (terra.Reference, error) {
	return ba.ref, nil
}

func (ba DataBinaryAuthorizationAttributes) InternalWithRef(ref terra.Reference) DataBinaryAuthorizationAttributes {
	return DataBinaryAuthorizationAttributes{ref: ref}
}

func (ba DataBinaryAuthorizationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ba.ref.InternalTokens()
}

func (ba DataBinaryAuthorizationAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceAsBool(ba.ref.Append("enabled"))
}

func (ba DataBinaryAuthorizationAttributes) EvaluationMode() terra.StringValue {
	return terra.ReferenceAsString(ba.ref.Append("evaluation_mode"))
}

type DataClusterAutoscalingAttributes struct {
	ref terra.Reference
}

func (ca DataClusterAutoscalingAttributes) InternalRef() (terra.Reference, error) {
	return ca.ref, nil
}

func (ca DataClusterAutoscalingAttributes) InternalWithRef(ref terra.Reference) DataClusterAutoscalingAttributes {
	return DataClusterAutoscalingAttributes{ref: ref}
}

func (ca DataClusterAutoscalingAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ca.ref.InternalTokens()
}

func (ca DataClusterAutoscalingAttributes) AutoscalingProfile() terra.StringValue {
	return terra.ReferenceAsString(ca.ref.Append("autoscaling_profile"))
}

func (ca DataClusterAutoscalingAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceAsBool(ca.ref.Append("enabled"))
}

func (ca DataClusterAutoscalingAttributes) AutoProvisioningDefaults() terra.ListValue[DataClusterAutoscalingAutoProvisioningDefaultsAttributes] {
	return terra.ReferenceAsList[DataClusterAutoscalingAutoProvisioningDefaultsAttributes](ca.ref.Append("auto_provisioning_defaults"))
}

func (ca DataClusterAutoscalingAttributes) ResourceLimits() terra.ListValue[DataClusterAutoscalingResourceLimitsAttributes] {
	return terra.ReferenceAsList[DataClusterAutoscalingResourceLimitsAttributes](ca.ref.Append("resource_limits"))
}

type DataClusterAutoscalingAutoProvisioningDefaultsAttributes struct {
	ref terra.Reference
}

func (apd DataClusterAutoscalingAutoProvisioningDefaultsAttributes) InternalRef() (terra.Reference, error) {
	return apd.ref, nil
}

func (apd DataClusterAutoscalingAutoProvisioningDefaultsAttributes) InternalWithRef(ref terra.Reference) DataClusterAutoscalingAutoProvisioningDefaultsAttributes {
	return DataClusterAutoscalingAutoProvisioningDefaultsAttributes{ref: ref}
}

func (apd DataClusterAutoscalingAutoProvisioningDefaultsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return apd.ref.InternalTokens()
}

func (apd DataClusterAutoscalingAutoProvisioningDefaultsAttributes) BootDiskKmsKey() terra.StringValue {
	return terra.ReferenceAsString(apd.ref.Append("boot_disk_kms_key"))
}

func (apd DataClusterAutoscalingAutoProvisioningDefaultsAttributes) DiskSize() terra.NumberValue {
	return terra.ReferenceAsNumber(apd.ref.Append("disk_size"))
}

func (apd DataClusterAutoscalingAutoProvisioningDefaultsAttributes) DiskType() terra.StringValue {
	return terra.ReferenceAsString(apd.ref.Append("disk_type"))
}

func (apd DataClusterAutoscalingAutoProvisioningDefaultsAttributes) ImageType() terra.StringValue {
	return terra.ReferenceAsString(apd.ref.Append("image_type"))
}

func (apd DataClusterAutoscalingAutoProvisioningDefaultsAttributes) MinCpuPlatform() terra.StringValue {
	return terra.ReferenceAsString(apd.ref.Append("min_cpu_platform"))
}

func (apd DataClusterAutoscalingAutoProvisioningDefaultsAttributes) OauthScopes() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](apd.ref.Append("oauth_scopes"))
}

func (apd DataClusterAutoscalingAutoProvisioningDefaultsAttributes) ServiceAccount() terra.StringValue {
	return terra.ReferenceAsString(apd.ref.Append("service_account"))
}

func (apd DataClusterAutoscalingAutoProvisioningDefaultsAttributes) Management() terra.ListValue[DataClusterAutoscalingAutoProvisioningDefaultsManagementAttributes] {
	return terra.ReferenceAsList[DataClusterAutoscalingAutoProvisioningDefaultsManagementAttributes](apd.ref.Append("management"))
}

func (apd DataClusterAutoscalingAutoProvisioningDefaultsAttributes) ShieldedInstanceConfig() terra.ListValue[DataClusterAutoscalingAutoProvisioningDefaultsShieldedInstanceConfigAttributes] {
	return terra.ReferenceAsList[DataClusterAutoscalingAutoProvisioningDefaultsShieldedInstanceConfigAttributes](apd.ref.Append("shielded_instance_config"))
}

func (apd DataClusterAutoscalingAutoProvisioningDefaultsAttributes) UpgradeSettings() terra.ListValue[DataClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsAttributes] {
	return terra.ReferenceAsList[DataClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsAttributes](apd.ref.Append("upgrade_settings"))
}

type DataClusterAutoscalingAutoProvisioningDefaultsManagementAttributes struct {
	ref terra.Reference
}

func (m DataClusterAutoscalingAutoProvisioningDefaultsManagementAttributes) InternalRef() (terra.Reference, error) {
	return m.ref, nil
}

func (m DataClusterAutoscalingAutoProvisioningDefaultsManagementAttributes) InternalWithRef(ref terra.Reference) DataClusterAutoscalingAutoProvisioningDefaultsManagementAttributes {
	return DataClusterAutoscalingAutoProvisioningDefaultsManagementAttributes{ref: ref}
}

func (m DataClusterAutoscalingAutoProvisioningDefaultsManagementAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return m.ref.InternalTokens()
}

func (m DataClusterAutoscalingAutoProvisioningDefaultsManagementAttributes) AutoRepair() terra.BoolValue {
	return terra.ReferenceAsBool(m.ref.Append("auto_repair"))
}

func (m DataClusterAutoscalingAutoProvisioningDefaultsManagementAttributes) AutoUpgrade() terra.BoolValue {
	return terra.ReferenceAsBool(m.ref.Append("auto_upgrade"))
}

func (m DataClusterAutoscalingAutoProvisioningDefaultsManagementAttributes) UpgradeOptions() terra.ListValue[DataClusterAutoscalingAutoProvisioningDefaultsManagementUpgradeOptionsAttributes] {
	return terra.ReferenceAsList[DataClusterAutoscalingAutoProvisioningDefaultsManagementUpgradeOptionsAttributes](m.ref.Append("upgrade_options"))
}

type DataClusterAutoscalingAutoProvisioningDefaultsManagementUpgradeOptionsAttributes struct {
	ref terra.Reference
}

func (uo DataClusterAutoscalingAutoProvisioningDefaultsManagementUpgradeOptionsAttributes) InternalRef() (terra.Reference, error) {
	return uo.ref, nil
}

func (uo DataClusterAutoscalingAutoProvisioningDefaultsManagementUpgradeOptionsAttributes) InternalWithRef(ref terra.Reference) DataClusterAutoscalingAutoProvisioningDefaultsManagementUpgradeOptionsAttributes {
	return DataClusterAutoscalingAutoProvisioningDefaultsManagementUpgradeOptionsAttributes{ref: ref}
}

func (uo DataClusterAutoscalingAutoProvisioningDefaultsManagementUpgradeOptionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return uo.ref.InternalTokens()
}

func (uo DataClusterAutoscalingAutoProvisioningDefaultsManagementUpgradeOptionsAttributes) AutoUpgradeStartTime() terra.StringValue {
	return terra.ReferenceAsString(uo.ref.Append("auto_upgrade_start_time"))
}

func (uo DataClusterAutoscalingAutoProvisioningDefaultsManagementUpgradeOptionsAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(uo.ref.Append("description"))
}

type DataClusterAutoscalingAutoProvisioningDefaultsShieldedInstanceConfigAttributes struct {
	ref terra.Reference
}

func (sic DataClusterAutoscalingAutoProvisioningDefaultsShieldedInstanceConfigAttributes) InternalRef() (terra.Reference, error) {
	return sic.ref, nil
}

func (sic DataClusterAutoscalingAutoProvisioningDefaultsShieldedInstanceConfigAttributes) InternalWithRef(ref terra.Reference) DataClusterAutoscalingAutoProvisioningDefaultsShieldedInstanceConfigAttributes {
	return DataClusterAutoscalingAutoProvisioningDefaultsShieldedInstanceConfigAttributes{ref: ref}
}

func (sic DataClusterAutoscalingAutoProvisioningDefaultsShieldedInstanceConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sic.ref.InternalTokens()
}

func (sic DataClusterAutoscalingAutoProvisioningDefaultsShieldedInstanceConfigAttributes) EnableIntegrityMonitoring() terra.BoolValue {
	return terra.ReferenceAsBool(sic.ref.Append("enable_integrity_monitoring"))
}

func (sic DataClusterAutoscalingAutoProvisioningDefaultsShieldedInstanceConfigAttributes) EnableSecureBoot() terra.BoolValue {
	return terra.ReferenceAsBool(sic.ref.Append("enable_secure_boot"))
}

type DataClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsAttributes struct {
	ref terra.Reference
}

func (us DataClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsAttributes) InternalRef() (terra.Reference, error) {
	return us.ref, nil
}

func (us DataClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsAttributes) InternalWithRef(ref terra.Reference) DataClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsAttributes {
	return DataClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsAttributes{ref: ref}
}

func (us DataClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return us.ref.InternalTokens()
}

func (us DataClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsAttributes) MaxSurge() terra.NumberValue {
	return terra.ReferenceAsNumber(us.ref.Append("max_surge"))
}

func (us DataClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsAttributes) MaxUnavailable() terra.NumberValue {
	return terra.ReferenceAsNumber(us.ref.Append("max_unavailable"))
}

func (us DataClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsAttributes) Strategy() terra.StringValue {
	return terra.ReferenceAsString(us.ref.Append("strategy"))
}

func (us DataClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsAttributes) BlueGreenSettings() terra.ListValue[DataClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsAttributes] {
	return terra.ReferenceAsList[DataClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsAttributes](us.ref.Append("blue_green_settings"))
}

type DataClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsAttributes struct {
	ref terra.Reference
}

func (bgs DataClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsAttributes) InternalRef() (terra.Reference, error) {
	return bgs.ref, nil
}

func (bgs DataClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsAttributes) InternalWithRef(ref terra.Reference) DataClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsAttributes {
	return DataClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsAttributes{ref: ref}
}

func (bgs DataClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return bgs.ref.InternalTokens()
}

func (bgs DataClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsAttributes) NodePoolSoakDuration() terra.StringValue {
	return terra.ReferenceAsString(bgs.ref.Append("node_pool_soak_duration"))
}

func (bgs DataClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsAttributes) StandardRolloutPolicy() terra.ListValue[DataClusterAutoscalingAutoProvisioningDefaultsF08F146EAttributes] {
	return terra.ReferenceAsList[DataClusterAutoscalingAutoProvisioningDefaultsF08F146EAttributes](bgs.ref.Append("standard_rollout_policy"))
}

type DataClusterAutoscalingAutoProvisioningDefaultsF08F146EAttributes struct {
	ref terra.Reference
}

func (srp DataClusterAutoscalingAutoProvisioningDefaultsF08F146EAttributes) InternalRef() (terra.Reference, error) {
	return srp.ref, nil
}

func (srp DataClusterAutoscalingAutoProvisioningDefaultsF08F146EAttributes) InternalWithRef(ref terra.Reference) DataClusterAutoscalingAutoProvisioningDefaultsF08F146EAttributes {
	return DataClusterAutoscalingAutoProvisioningDefaultsF08F146EAttributes{ref: ref}
}

func (srp DataClusterAutoscalingAutoProvisioningDefaultsF08F146EAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return srp.ref.InternalTokens()
}

func (srp DataClusterAutoscalingAutoProvisioningDefaultsF08F146EAttributes) BatchNodeCount() terra.NumberValue {
	return terra.ReferenceAsNumber(srp.ref.Append("batch_node_count"))
}

func (srp DataClusterAutoscalingAutoProvisioningDefaultsF08F146EAttributes) BatchPercentage() terra.NumberValue {
	return terra.ReferenceAsNumber(srp.ref.Append("batch_percentage"))
}

func (srp DataClusterAutoscalingAutoProvisioningDefaultsF08F146EAttributes) BatchSoakDuration() terra.StringValue {
	return terra.ReferenceAsString(srp.ref.Append("batch_soak_duration"))
}

type DataClusterAutoscalingResourceLimitsAttributes struct {
	ref terra.Reference
}

func (rl DataClusterAutoscalingResourceLimitsAttributes) InternalRef() (terra.Reference, error) {
	return rl.ref, nil
}

func (rl DataClusterAutoscalingResourceLimitsAttributes) InternalWithRef(ref terra.Reference) DataClusterAutoscalingResourceLimitsAttributes {
	return DataClusterAutoscalingResourceLimitsAttributes{ref: ref}
}

func (rl DataClusterAutoscalingResourceLimitsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rl.ref.InternalTokens()
}

func (rl DataClusterAutoscalingResourceLimitsAttributes) Maximum() terra.NumberValue {
	return terra.ReferenceAsNumber(rl.ref.Append("maximum"))
}

func (rl DataClusterAutoscalingResourceLimitsAttributes) Minimum() terra.NumberValue {
	return terra.ReferenceAsNumber(rl.ref.Append("minimum"))
}

func (rl DataClusterAutoscalingResourceLimitsAttributes) ResourceType() terra.StringValue {
	return terra.ReferenceAsString(rl.ref.Append("resource_type"))
}

type DataClusterTelemetryAttributes struct {
	ref terra.Reference
}

func (ct DataClusterTelemetryAttributes) InternalRef() (terra.Reference, error) {
	return ct.ref, nil
}

func (ct DataClusterTelemetryAttributes) InternalWithRef(ref terra.Reference) DataClusterTelemetryAttributes {
	return DataClusterTelemetryAttributes{ref: ref}
}

func (ct DataClusterTelemetryAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ct.ref.InternalTokens()
}

func (ct DataClusterTelemetryAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(ct.ref.Append("type"))
}

type DataConfidentialNodesAttributes struct {
	ref terra.Reference
}

func (cn DataConfidentialNodesAttributes) InternalRef() (terra.Reference, error) {
	return cn.ref, nil
}

func (cn DataConfidentialNodesAttributes) InternalWithRef(ref terra.Reference) DataConfidentialNodesAttributes {
	return DataConfidentialNodesAttributes{ref: ref}
}

func (cn DataConfidentialNodesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cn.ref.InternalTokens()
}

func (cn DataConfidentialNodesAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceAsBool(cn.ref.Append("enabled"))
}

type DataCostManagementConfigAttributes struct {
	ref terra.Reference
}

func (cmc DataCostManagementConfigAttributes) InternalRef() (terra.Reference, error) {
	return cmc.ref, nil
}

func (cmc DataCostManagementConfigAttributes) InternalWithRef(ref terra.Reference) DataCostManagementConfigAttributes {
	return DataCostManagementConfigAttributes{ref: ref}
}

func (cmc DataCostManagementConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cmc.ref.InternalTokens()
}

func (cmc DataCostManagementConfigAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceAsBool(cmc.ref.Append("enabled"))
}

type DataDatabaseEncryptionAttributes struct {
	ref terra.Reference
}

func (de DataDatabaseEncryptionAttributes) InternalRef() (terra.Reference, error) {
	return de.ref, nil
}

func (de DataDatabaseEncryptionAttributes) InternalWithRef(ref terra.Reference) DataDatabaseEncryptionAttributes {
	return DataDatabaseEncryptionAttributes{ref: ref}
}

func (de DataDatabaseEncryptionAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return de.ref.InternalTokens()
}

func (de DataDatabaseEncryptionAttributes) KeyName() terra.StringValue {
	return terra.ReferenceAsString(de.ref.Append("key_name"))
}

func (de DataDatabaseEncryptionAttributes) State() terra.StringValue {
	return terra.ReferenceAsString(de.ref.Append("state"))
}

type DataDefaultSnatStatusAttributes struct {
	ref terra.Reference
}

func (dss DataDefaultSnatStatusAttributes) InternalRef() (terra.Reference, error) {
	return dss.ref, nil
}

func (dss DataDefaultSnatStatusAttributes) InternalWithRef(ref terra.Reference) DataDefaultSnatStatusAttributes {
	return DataDefaultSnatStatusAttributes{ref: ref}
}

func (dss DataDefaultSnatStatusAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dss.ref.InternalTokens()
}

func (dss DataDefaultSnatStatusAttributes) Disabled() terra.BoolValue {
	return terra.ReferenceAsBool(dss.ref.Append("disabled"))
}

type DataDnsConfigAttributes struct {
	ref terra.Reference
}

func (dc DataDnsConfigAttributes) InternalRef() (terra.Reference, error) {
	return dc.ref, nil
}

func (dc DataDnsConfigAttributes) InternalWithRef(ref terra.Reference) DataDnsConfigAttributes {
	return DataDnsConfigAttributes{ref: ref}
}

func (dc DataDnsConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dc.ref.InternalTokens()
}

func (dc DataDnsConfigAttributes) ClusterDns() terra.StringValue {
	return terra.ReferenceAsString(dc.ref.Append("cluster_dns"))
}

func (dc DataDnsConfigAttributes) ClusterDnsDomain() terra.StringValue {
	return terra.ReferenceAsString(dc.ref.Append("cluster_dns_domain"))
}

func (dc DataDnsConfigAttributes) ClusterDnsScope() terra.StringValue {
	return terra.ReferenceAsString(dc.ref.Append("cluster_dns_scope"))
}

type DataEnableK8SBetaApisAttributes struct {
	ref terra.Reference
}

func (ekba DataEnableK8SBetaApisAttributes) InternalRef() (terra.Reference, error) {
	return ekba.ref, nil
}

func (ekba DataEnableK8SBetaApisAttributes) InternalWithRef(ref terra.Reference) DataEnableK8SBetaApisAttributes {
	return DataEnableK8SBetaApisAttributes{ref: ref}
}

func (ekba DataEnableK8SBetaApisAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ekba.ref.InternalTokens()
}

func (ekba DataEnableK8SBetaApisAttributes) EnabledApis() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ekba.ref.Append("enabled_apis"))
}

type DataFleetAttributes struct {
	ref terra.Reference
}

func (f DataFleetAttributes) InternalRef() (terra.Reference, error) {
	return f.ref, nil
}

func (f DataFleetAttributes) InternalWithRef(ref terra.Reference) DataFleetAttributes {
	return DataFleetAttributes{ref: ref}
}

func (f DataFleetAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return f.ref.InternalTokens()
}

func (f DataFleetAttributes) Membership() terra.StringValue {
	return terra.ReferenceAsString(f.ref.Append("membership"))
}

func (f DataFleetAttributes) MembershipId() terra.StringValue {
	return terra.ReferenceAsString(f.ref.Append("membership_id"))
}

func (f DataFleetAttributes) MembershipLocation() terra.StringValue {
	return terra.ReferenceAsString(f.ref.Append("membership_location"))
}

func (f DataFleetAttributes) PreRegistered() terra.BoolValue {
	return terra.ReferenceAsBool(f.ref.Append("pre_registered"))
}

func (f DataFleetAttributes) Project() terra.StringValue {
	return terra.ReferenceAsString(f.ref.Append("project"))
}

type DataGatewayApiConfigAttributes struct {
	ref terra.Reference
}

func (gac DataGatewayApiConfigAttributes) InternalRef() (terra.Reference, error) {
	return gac.ref, nil
}

func (gac DataGatewayApiConfigAttributes) InternalWithRef(ref terra.Reference) DataGatewayApiConfigAttributes {
	return DataGatewayApiConfigAttributes{ref: ref}
}

func (gac DataGatewayApiConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return gac.ref.InternalTokens()
}

func (gac DataGatewayApiConfigAttributes) Channel() terra.StringValue {
	return terra.ReferenceAsString(gac.ref.Append("channel"))
}

type DataIdentityServiceConfigAttributes struct {
	ref terra.Reference
}

func (isc DataIdentityServiceConfigAttributes) InternalRef() (terra.Reference, error) {
	return isc.ref, nil
}

func (isc DataIdentityServiceConfigAttributes) InternalWithRef(ref terra.Reference) DataIdentityServiceConfigAttributes {
	return DataIdentityServiceConfigAttributes{ref: ref}
}

func (isc DataIdentityServiceConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return isc.ref.InternalTokens()
}

func (isc DataIdentityServiceConfigAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceAsBool(isc.ref.Append("enabled"))
}

type DataIpAllocationPolicyAttributes struct {
	ref terra.Reference
}

func (iap DataIpAllocationPolicyAttributes) InternalRef() (terra.Reference, error) {
	return iap.ref, nil
}

func (iap DataIpAllocationPolicyAttributes) InternalWithRef(ref terra.Reference) DataIpAllocationPolicyAttributes {
	return DataIpAllocationPolicyAttributes{ref: ref}
}

func (iap DataIpAllocationPolicyAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return iap.ref.InternalTokens()
}

func (iap DataIpAllocationPolicyAttributes) ClusterIpv4CidrBlock() terra.StringValue {
	return terra.ReferenceAsString(iap.ref.Append("cluster_ipv4_cidr_block"))
}

func (iap DataIpAllocationPolicyAttributes) ClusterSecondaryRangeName() terra.StringValue {
	return terra.ReferenceAsString(iap.ref.Append("cluster_secondary_range_name"))
}

func (iap DataIpAllocationPolicyAttributes) ServicesIpv4CidrBlock() terra.StringValue {
	return terra.ReferenceAsString(iap.ref.Append("services_ipv4_cidr_block"))
}

func (iap DataIpAllocationPolicyAttributes) ServicesSecondaryRangeName() terra.StringValue {
	return terra.ReferenceAsString(iap.ref.Append("services_secondary_range_name"))
}

func (iap DataIpAllocationPolicyAttributes) StackType() terra.StringValue {
	return terra.ReferenceAsString(iap.ref.Append("stack_type"))
}

func (iap DataIpAllocationPolicyAttributes) AdditionalPodRangesConfig() terra.ListValue[DataIpAllocationPolicyAdditionalPodRangesConfigAttributes] {
	return terra.ReferenceAsList[DataIpAllocationPolicyAdditionalPodRangesConfigAttributes](iap.ref.Append("additional_pod_ranges_config"))
}

func (iap DataIpAllocationPolicyAttributes) PodCidrOverprovisionConfig() terra.ListValue[DataIpAllocationPolicyPodCidrOverprovisionConfigAttributes] {
	return terra.ReferenceAsList[DataIpAllocationPolicyPodCidrOverprovisionConfigAttributes](iap.ref.Append("pod_cidr_overprovision_config"))
}

type DataIpAllocationPolicyAdditionalPodRangesConfigAttributes struct {
	ref terra.Reference
}

func (aprc DataIpAllocationPolicyAdditionalPodRangesConfigAttributes) InternalRef() (terra.Reference, error) {
	return aprc.ref, nil
}

func (aprc DataIpAllocationPolicyAdditionalPodRangesConfigAttributes) InternalWithRef(ref terra.Reference) DataIpAllocationPolicyAdditionalPodRangesConfigAttributes {
	return DataIpAllocationPolicyAdditionalPodRangesConfigAttributes{ref: ref}
}

func (aprc DataIpAllocationPolicyAdditionalPodRangesConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return aprc.ref.InternalTokens()
}

func (aprc DataIpAllocationPolicyAdditionalPodRangesConfigAttributes) PodRangeNames() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](aprc.ref.Append("pod_range_names"))
}

type DataIpAllocationPolicyPodCidrOverprovisionConfigAttributes struct {
	ref terra.Reference
}

func (pcoc DataIpAllocationPolicyPodCidrOverprovisionConfigAttributes) InternalRef() (terra.Reference, error) {
	return pcoc.ref, nil
}

func (pcoc DataIpAllocationPolicyPodCidrOverprovisionConfigAttributes) InternalWithRef(ref terra.Reference) DataIpAllocationPolicyPodCidrOverprovisionConfigAttributes {
	return DataIpAllocationPolicyPodCidrOverprovisionConfigAttributes{ref: ref}
}

func (pcoc DataIpAllocationPolicyPodCidrOverprovisionConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return pcoc.ref.InternalTokens()
}

func (pcoc DataIpAllocationPolicyPodCidrOverprovisionConfigAttributes) Disabled() terra.BoolValue {
	return terra.ReferenceAsBool(pcoc.ref.Append("disabled"))
}

type DataLoggingConfigAttributes struct {
	ref terra.Reference
}

func (lc DataLoggingConfigAttributes) InternalRef() (terra.Reference, error) {
	return lc.ref, nil
}

func (lc DataLoggingConfigAttributes) InternalWithRef(ref terra.Reference) DataLoggingConfigAttributes {
	return DataLoggingConfigAttributes{ref: ref}
}

func (lc DataLoggingConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return lc.ref.InternalTokens()
}

func (lc DataLoggingConfigAttributes) EnableComponents() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](lc.ref.Append("enable_components"))
}

type DataMaintenancePolicyAttributes struct {
	ref terra.Reference
}

func (mp DataMaintenancePolicyAttributes) InternalRef() (terra.Reference, error) {
	return mp.ref, nil
}

func (mp DataMaintenancePolicyAttributes) InternalWithRef(ref terra.Reference) DataMaintenancePolicyAttributes {
	return DataMaintenancePolicyAttributes{ref: ref}
}

func (mp DataMaintenancePolicyAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return mp.ref.InternalTokens()
}

func (mp DataMaintenancePolicyAttributes) DailyMaintenanceWindow() terra.ListValue[DataMaintenancePolicyDailyMaintenanceWindowAttributes] {
	return terra.ReferenceAsList[DataMaintenancePolicyDailyMaintenanceWindowAttributes](mp.ref.Append("daily_maintenance_window"))
}

func (mp DataMaintenancePolicyAttributes) MaintenanceExclusion() terra.SetValue[DataMaintenancePolicyMaintenanceExclusionAttributes] {
	return terra.ReferenceAsSet[DataMaintenancePolicyMaintenanceExclusionAttributes](mp.ref.Append("maintenance_exclusion"))
}

func (mp DataMaintenancePolicyAttributes) RecurringWindow() terra.ListValue[DataMaintenancePolicyRecurringWindowAttributes] {
	return terra.ReferenceAsList[DataMaintenancePolicyRecurringWindowAttributes](mp.ref.Append("recurring_window"))
}

type DataMaintenancePolicyDailyMaintenanceWindowAttributes struct {
	ref terra.Reference
}

func (dmw DataMaintenancePolicyDailyMaintenanceWindowAttributes) InternalRef() (terra.Reference, error) {
	return dmw.ref, nil
}

func (dmw DataMaintenancePolicyDailyMaintenanceWindowAttributes) InternalWithRef(ref terra.Reference) DataMaintenancePolicyDailyMaintenanceWindowAttributes {
	return DataMaintenancePolicyDailyMaintenanceWindowAttributes{ref: ref}
}

func (dmw DataMaintenancePolicyDailyMaintenanceWindowAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dmw.ref.InternalTokens()
}

func (dmw DataMaintenancePolicyDailyMaintenanceWindowAttributes) Duration() terra.StringValue {
	return terra.ReferenceAsString(dmw.ref.Append("duration"))
}

func (dmw DataMaintenancePolicyDailyMaintenanceWindowAttributes) StartTime() terra.StringValue {
	return terra.ReferenceAsString(dmw.ref.Append("start_time"))
}

type DataMaintenancePolicyMaintenanceExclusionAttributes struct {
	ref terra.Reference
}

func (me DataMaintenancePolicyMaintenanceExclusionAttributes) InternalRef() (terra.Reference, error) {
	return me.ref, nil
}

func (me DataMaintenancePolicyMaintenanceExclusionAttributes) InternalWithRef(ref terra.Reference) DataMaintenancePolicyMaintenanceExclusionAttributes {
	return DataMaintenancePolicyMaintenanceExclusionAttributes{ref: ref}
}

func (me DataMaintenancePolicyMaintenanceExclusionAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return me.ref.InternalTokens()
}

func (me DataMaintenancePolicyMaintenanceExclusionAttributes) EndTime() terra.StringValue {
	return terra.ReferenceAsString(me.ref.Append("end_time"))
}

func (me DataMaintenancePolicyMaintenanceExclusionAttributes) ExclusionName() terra.StringValue {
	return terra.ReferenceAsString(me.ref.Append("exclusion_name"))
}

func (me DataMaintenancePolicyMaintenanceExclusionAttributes) StartTime() terra.StringValue {
	return terra.ReferenceAsString(me.ref.Append("start_time"))
}

func (me DataMaintenancePolicyMaintenanceExclusionAttributes) ExclusionOptions() terra.ListValue[DataMaintenancePolicyMaintenanceExclusionExclusionOptionsAttributes] {
	return terra.ReferenceAsList[DataMaintenancePolicyMaintenanceExclusionExclusionOptionsAttributes](me.ref.Append("exclusion_options"))
}

type DataMaintenancePolicyMaintenanceExclusionExclusionOptionsAttributes struct {
	ref terra.Reference
}

func (eo DataMaintenancePolicyMaintenanceExclusionExclusionOptionsAttributes) InternalRef() (terra.Reference, error) {
	return eo.ref, nil
}

func (eo DataMaintenancePolicyMaintenanceExclusionExclusionOptionsAttributes) InternalWithRef(ref terra.Reference) DataMaintenancePolicyMaintenanceExclusionExclusionOptionsAttributes {
	return DataMaintenancePolicyMaintenanceExclusionExclusionOptionsAttributes{ref: ref}
}

func (eo DataMaintenancePolicyMaintenanceExclusionExclusionOptionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return eo.ref.InternalTokens()
}

func (eo DataMaintenancePolicyMaintenanceExclusionExclusionOptionsAttributes) Scope() terra.StringValue {
	return terra.ReferenceAsString(eo.ref.Append("scope"))
}

type DataMaintenancePolicyRecurringWindowAttributes struct {
	ref terra.Reference
}

func (rw DataMaintenancePolicyRecurringWindowAttributes) InternalRef() (terra.Reference, error) {
	return rw.ref, nil
}

func (rw DataMaintenancePolicyRecurringWindowAttributes) InternalWithRef(ref terra.Reference) DataMaintenancePolicyRecurringWindowAttributes {
	return DataMaintenancePolicyRecurringWindowAttributes{ref: ref}
}

func (rw DataMaintenancePolicyRecurringWindowAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rw.ref.InternalTokens()
}

func (rw DataMaintenancePolicyRecurringWindowAttributes) EndTime() terra.StringValue {
	return terra.ReferenceAsString(rw.ref.Append("end_time"))
}

func (rw DataMaintenancePolicyRecurringWindowAttributes) Recurrence() terra.StringValue {
	return terra.ReferenceAsString(rw.ref.Append("recurrence"))
}

func (rw DataMaintenancePolicyRecurringWindowAttributes) StartTime() terra.StringValue {
	return terra.ReferenceAsString(rw.ref.Append("start_time"))
}

type DataMasterAuthAttributes struct {
	ref terra.Reference
}

func (ma DataMasterAuthAttributes) InternalRef() (terra.Reference, error) {
	return ma.ref, nil
}

func (ma DataMasterAuthAttributes) InternalWithRef(ref terra.Reference) DataMasterAuthAttributes {
	return DataMasterAuthAttributes{ref: ref}
}

func (ma DataMasterAuthAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ma.ref.InternalTokens()
}

func (ma DataMasterAuthAttributes) ClientCertificate() terra.StringValue {
	return terra.ReferenceAsString(ma.ref.Append("client_certificate"))
}

func (ma DataMasterAuthAttributes) ClientKey() terra.StringValue {
	return terra.ReferenceAsString(ma.ref.Append("client_key"))
}

func (ma DataMasterAuthAttributes) ClusterCaCertificate() terra.StringValue {
	return terra.ReferenceAsString(ma.ref.Append("cluster_ca_certificate"))
}

func (ma DataMasterAuthAttributes) ClientCertificateConfig() terra.ListValue[DataMasterAuthClientCertificateConfigAttributes] {
	return terra.ReferenceAsList[DataMasterAuthClientCertificateConfigAttributes](ma.ref.Append("client_certificate_config"))
}

type DataMasterAuthClientCertificateConfigAttributes struct {
	ref terra.Reference
}

func (ccc DataMasterAuthClientCertificateConfigAttributes) InternalRef() (terra.Reference, error) {
	return ccc.ref, nil
}

func (ccc DataMasterAuthClientCertificateConfigAttributes) InternalWithRef(ref terra.Reference) DataMasterAuthClientCertificateConfigAttributes {
	return DataMasterAuthClientCertificateConfigAttributes{ref: ref}
}

func (ccc DataMasterAuthClientCertificateConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ccc.ref.InternalTokens()
}

func (ccc DataMasterAuthClientCertificateConfigAttributes) IssueClientCertificate() terra.BoolValue {
	return terra.ReferenceAsBool(ccc.ref.Append("issue_client_certificate"))
}

type DataMasterAuthorizedNetworksConfigAttributes struct {
	ref terra.Reference
}

func (manc DataMasterAuthorizedNetworksConfigAttributes) InternalRef() (terra.Reference, error) {
	return manc.ref, nil
}

func (manc DataMasterAuthorizedNetworksConfigAttributes) InternalWithRef(ref terra.Reference) DataMasterAuthorizedNetworksConfigAttributes {
	return DataMasterAuthorizedNetworksConfigAttributes{ref: ref}
}

func (manc DataMasterAuthorizedNetworksConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return manc.ref.InternalTokens()
}

func (manc DataMasterAuthorizedNetworksConfigAttributes) GcpPublicCidrsAccessEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(manc.ref.Append("gcp_public_cidrs_access_enabled"))
}

func (manc DataMasterAuthorizedNetworksConfigAttributes) CidrBlocks() terra.SetValue[DataMasterAuthorizedNetworksConfigCidrBlocksAttributes] {
	return terra.ReferenceAsSet[DataMasterAuthorizedNetworksConfigCidrBlocksAttributes](manc.ref.Append("cidr_blocks"))
}

type DataMasterAuthorizedNetworksConfigCidrBlocksAttributes struct {
	ref terra.Reference
}

func (cb DataMasterAuthorizedNetworksConfigCidrBlocksAttributes) InternalRef() (terra.Reference, error) {
	return cb.ref, nil
}

func (cb DataMasterAuthorizedNetworksConfigCidrBlocksAttributes) InternalWithRef(ref terra.Reference) DataMasterAuthorizedNetworksConfigCidrBlocksAttributes {
	return DataMasterAuthorizedNetworksConfigCidrBlocksAttributes{ref: ref}
}

func (cb DataMasterAuthorizedNetworksConfigCidrBlocksAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cb.ref.InternalTokens()
}

func (cb DataMasterAuthorizedNetworksConfigCidrBlocksAttributes) CidrBlock() terra.StringValue {
	return terra.ReferenceAsString(cb.ref.Append("cidr_block"))
}

func (cb DataMasterAuthorizedNetworksConfigCidrBlocksAttributes) DisplayName() terra.StringValue {
	return terra.ReferenceAsString(cb.ref.Append("display_name"))
}

type DataMeshCertificatesAttributes struct {
	ref terra.Reference
}

func (mc DataMeshCertificatesAttributes) InternalRef() (terra.Reference, error) {
	return mc.ref, nil
}

func (mc DataMeshCertificatesAttributes) InternalWithRef(ref terra.Reference) DataMeshCertificatesAttributes {
	return DataMeshCertificatesAttributes{ref: ref}
}

func (mc DataMeshCertificatesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return mc.ref.InternalTokens()
}

func (mc DataMeshCertificatesAttributes) EnableCertificates() terra.BoolValue {
	return terra.ReferenceAsBool(mc.ref.Append("enable_certificates"))
}

type DataMonitoringConfigAttributes struct {
	ref terra.Reference
}

func (mc DataMonitoringConfigAttributes) InternalRef() (terra.Reference, error) {
	return mc.ref, nil
}

func (mc DataMonitoringConfigAttributes) InternalWithRef(ref terra.Reference) DataMonitoringConfigAttributes {
	return DataMonitoringConfigAttributes{ref: ref}
}

func (mc DataMonitoringConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return mc.ref.InternalTokens()
}

func (mc DataMonitoringConfigAttributes) EnableComponents() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](mc.ref.Append("enable_components"))
}

func (mc DataMonitoringConfigAttributes) AdvancedDatapathObservabilityConfig() terra.ListValue[DataMonitoringConfigAdvancedDatapathObservabilityConfigAttributes] {
	return terra.ReferenceAsList[DataMonitoringConfigAdvancedDatapathObservabilityConfigAttributes](mc.ref.Append("advanced_datapath_observability_config"))
}

func (mc DataMonitoringConfigAttributes) ManagedPrometheus() terra.ListValue[DataMonitoringConfigManagedPrometheusAttributes] {
	return terra.ReferenceAsList[DataMonitoringConfigManagedPrometheusAttributes](mc.ref.Append("managed_prometheus"))
}

type DataMonitoringConfigAdvancedDatapathObservabilityConfigAttributes struct {
	ref terra.Reference
}

func (adoc DataMonitoringConfigAdvancedDatapathObservabilityConfigAttributes) InternalRef() (terra.Reference, error) {
	return adoc.ref, nil
}

func (adoc DataMonitoringConfigAdvancedDatapathObservabilityConfigAttributes) InternalWithRef(ref terra.Reference) DataMonitoringConfigAdvancedDatapathObservabilityConfigAttributes {
	return DataMonitoringConfigAdvancedDatapathObservabilityConfigAttributes{ref: ref}
}

func (adoc DataMonitoringConfigAdvancedDatapathObservabilityConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return adoc.ref.InternalTokens()
}

func (adoc DataMonitoringConfigAdvancedDatapathObservabilityConfigAttributes) EnableMetrics() terra.BoolValue {
	return terra.ReferenceAsBool(adoc.ref.Append("enable_metrics"))
}

func (adoc DataMonitoringConfigAdvancedDatapathObservabilityConfigAttributes) EnableRelay() terra.BoolValue {
	return terra.ReferenceAsBool(adoc.ref.Append("enable_relay"))
}

func (adoc DataMonitoringConfigAdvancedDatapathObservabilityConfigAttributes) RelayMode() terra.StringValue {
	return terra.ReferenceAsString(adoc.ref.Append("relay_mode"))
}

type DataMonitoringConfigManagedPrometheusAttributes struct {
	ref terra.Reference
}

func (mp DataMonitoringConfigManagedPrometheusAttributes) InternalRef() (terra.Reference, error) {
	return mp.ref, nil
}

func (mp DataMonitoringConfigManagedPrometheusAttributes) InternalWithRef(ref terra.Reference) DataMonitoringConfigManagedPrometheusAttributes {
	return DataMonitoringConfigManagedPrometheusAttributes{ref: ref}
}

func (mp DataMonitoringConfigManagedPrometheusAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return mp.ref.InternalTokens()
}

func (mp DataMonitoringConfigManagedPrometheusAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceAsBool(mp.ref.Append("enabled"))
}

type DataNetworkPolicyAttributes struct {
	ref terra.Reference
}

func (np DataNetworkPolicyAttributes) InternalRef() (terra.Reference, error) {
	return np.ref, nil
}

func (np DataNetworkPolicyAttributes) InternalWithRef(ref terra.Reference) DataNetworkPolicyAttributes {
	return DataNetworkPolicyAttributes{ref: ref}
}

func (np DataNetworkPolicyAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return np.ref.InternalTokens()
}

func (np DataNetworkPolicyAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceAsBool(np.ref.Append("enabled"))
}

func (np DataNetworkPolicyAttributes) Provider() terra.StringValue {
	return terra.ReferenceAsString(np.ref.Append("provider"))
}

type DataNodeConfigAttributes struct {
	ref terra.Reference
}

func (nc DataNodeConfigAttributes) InternalRef() (terra.Reference, error) {
	return nc.ref, nil
}

func (nc DataNodeConfigAttributes) InternalWithRef(ref terra.Reference) DataNodeConfigAttributes {
	return DataNodeConfigAttributes{ref: ref}
}

func (nc DataNodeConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return nc.ref.InternalTokens()
}

func (nc DataNodeConfigAttributes) BootDiskKmsKey() terra.StringValue {
	return terra.ReferenceAsString(nc.ref.Append("boot_disk_kms_key"))
}

func (nc DataNodeConfigAttributes) DiskSizeGb() terra.NumberValue {
	return terra.ReferenceAsNumber(nc.ref.Append("disk_size_gb"))
}

func (nc DataNodeConfigAttributes) DiskType() terra.StringValue {
	return terra.ReferenceAsString(nc.ref.Append("disk_type"))
}

func (nc DataNodeConfigAttributes) EnableConfidentialStorage() terra.BoolValue {
	return terra.ReferenceAsBool(nc.ref.Append("enable_confidential_storage"))
}

func (nc DataNodeConfigAttributes) ImageType() terra.StringValue {
	return terra.ReferenceAsString(nc.ref.Append("image_type"))
}

func (nc DataNodeConfigAttributes) Labels() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](nc.ref.Append("labels"))
}

func (nc DataNodeConfigAttributes) LocalSsdCount() terra.NumberValue {
	return terra.ReferenceAsNumber(nc.ref.Append("local_ssd_count"))
}

func (nc DataNodeConfigAttributes) LoggingVariant() terra.StringValue {
	return terra.ReferenceAsString(nc.ref.Append("logging_variant"))
}

func (nc DataNodeConfigAttributes) MachineType() terra.StringValue {
	return terra.ReferenceAsString(nc.ref.Append("machine_type"))
}

func (nc DataNodeConfigAttributes) Metadata() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](nc.ref.Append("metadata"))
}

func (nc DataNodeConfigAttributes) MinCpuPlatform() terra.StringValue {
	return terra.ReferenceAsString(nc.ref.Append("min_cpu_platform"))
}

func (nc DataNodeConfigAttributes) NodeGroup() terra.StringValue {
	return terra.ReferenceAsString(nc.ref.Append("node_group"))
}

func (nc DataNodeConfigAttributes) OauthScopes() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](nc.ref.Append("oauth_scopes"))
}

func (nc DataNodeConfigAttributes) Preemptible() terra.BoolValue {
	return terra.ReferenceAsBool(nc.ref.Append("preemptible"))
}

func (nc DataNodeConfigAttributes) ResourceLabels() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](nc.ref.Append("resource_labels"))
}

func (nc DataNodeConfigAttributes) ResourceManagerTags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](nc.ref.Append("resource_manager_tags"))
}

func (nc DataNodeConfigAttributes) ServiceAccount() terra.StringValue {
	return terra.ReferenceAsString(nc.ref.Append("service_account"))
}

func (nc DataNodeConfigAttributes) Spot() terra.BoolValue {
	return terra.ReferenceAsBool(nc.ref.Append("spot"))
}

func (nc DataNodeConfigAttributes) Tags() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](nc.ref.Append("tags"))
}

func (nc DataNodeConfigAttributes) AdvancedMachineFeatures() terra.ListValue[DataNodeConfigAdvancedMachineFeaturesAttributes] {
	return terra.ReferenceAsList[DataNodeConfigAdvancedMachineFeaturesAttributes](nc.ref.Append("advanced_machine_features"))
}

func (nc DataNodeConfigAttributes) ConfidentialNodes() terra.ListValue[DataNodeConfigConfidentialNodesAttributes] {
	return terra.ReferenceAsList[DataNodeConfigConfidentialNodesAttributes](nc.ref.Append("confidential_nodes"))
}

func (nc DataNodeConfigAttributes) EffectiveTaints() terra.ListValue[DataNodeConfigEffectiveTaintsAttributes] {
	return terra.ReferenceAsList[DataNodeConfigEffectiveTaintsAttributes](nc.ref.Append("effective_taints"))
}

func (nc DataNodeConfigAttributes) EphemeralStorageConfig() terra.ListValue[DataNodeConfigEphemeralStorageConfigAttributes] {
	return terra.ReferenceAsList[DataNodeConfigEphemeralStorageConfigAttributes](nc.ref.Append("ephemeral_storage_config"))
}

func (nc DataNodeConfigAttributes) EphemeralStorageLocalSsdConfig() terra.ListValue[DataNodeConfigEphemeralStorageLocalSsdConfigAttributes] {
	return terra.ReferenceAsList[DataNodeConfigEphemeralStorageLocalSsdConfigAttributes](nc.ref.Append("ephemeral_storage_local_ssd_config"))
}

func (nc DataNodeConfigAttributes) FastSocket() terra.ListValue[DataNodeConfigFastSocketAttributes] {
	return terra.ReferenceAsList[DataNodeConfigFastSocketAttributes](nc.ref.Append("fast_socket"))
}

func (nc DataNodeConfigAttributes) GcfsConfig() terra.ListValue[DataNodeConfigGcfsConfigAttributes] {
	return terra.ReferenceAsList[DataNodeConfigGcfsConfigAttributes](nc.ref.Append("gcfs_config"))
}

func (nc DataNodeConfigAttributes) GuestAccelerator() terra.ListValue[DataNodeConfigGuestAcceleratorAttributes] {
	return terra.ReferenceAsList[DataNodeConfigGuestAcceleratorAttributes](nc.ref.Append("guest_accelerator"))
}

func (nc DataNodeConfigAttributes) Gvnic() terra.ListValue[DataNodeConfigGvnicAttributes] {
	return terra.ReferenceAsList[DataNodeConfigGvnicAttributes](nc.ref.Append("gvnic"))
}

func (nc DataNodeConfigAttributes) HostMaintenancePolicy() terra.ListValue[DataNodeConfigHostMaintenancePolicyAttributes] {
	return terra.ReferenceAsList[DataNodeConfigHostMaintenancePolicyAttributes](nc.ref.Append("host_maintenance_policy"))
}

func (nc DataNodeConfigAttributes) KubeletConfig() terra.ListValue[DataNodeConfigKubeletConfigAttributes] {
	return terra.ReferenceAsList[DataNodeConfigKubeletConfigAttributes](nc.ref.Append("kubelet_config"))
}

func (nc DataNodeConfigAttributes) LinuxNodeConfig() terra.ListValue[DataNodeConfigLinuxNodeConfigAttributes] {
	return terra.ReferenceAsList[DataNodeConfigLinuxNodeConfigAttributes](nc.ref.Append("linux_node_config"))
}

func (nc DataNodeConfigAttributes) LocalNvmeSsdBlockConfig() terra.ListValue[DataNodeConfigLocalNvmeSsdBlockConfigAttributes] {
	return terra.ReferenceAsList[DataNodeConfigLocalNvmeSsdBlockConfigAttributes](nc.ref.Append("local_nvme_ssd_block_config"))
}

func (nc DataNodeConfigAttributes) ReservationAffinity() terra.ListValue[DataNodeConfigReservationAffinityAttributes] {
	return terra.ReferenceAsList[DataNodeConfigReservationAffinityAttributes](nc.ref.Append("reservation_affinity"))
}

func (nc DataNodeConfigAttributes) SandboxConfig() terra.ListValue[DataNodeConfigSandboxConfigAttributes] {
	return terra.ReferenceAsList[DataNodeConfigSandboxConfigAttributes](nc.ref.Append("sandbox_config"))
}

func (nc DataNodeConfigAttributes) ShieldedInstanceConfig() terra.ListValue[DataNodeConfigShieldedInstanceConfigAttributes] {
	return terra.ReferenceAsList[DataNodeConfigShieldedInstanceConfigAttributes](nc.ref.Append("shielded_instance_config"))
}

func (nc DataNodeConfigAttributes) SoleTenantConfig() terra.ListValue[DataNodeConfigSoleTenantConfigAttributes] {
	return terra.ReferenceAsList[DataNodeConfigSoleTenantConfigAttributes](nc.ref.Append("sole_tenant_config"))
}

func (nc DataNodeConfigAttributes) Taint() terra.ListValue[DataNodeConfigTaintAttributes] {
	return terra.ReferenceAsList[DataNodeConfigTaintAttributes](nc.ref.Append("taint"))
}

func (nc DataNodeConfigAttributes) WorkloadMetadataConfig() terra.ListValue[DataNodeConfigWorkloadMetadataConfigAttributes] {
	return terra.ReferenceAsList[DataNodeConfigWorkloadMetadataConfigAttributes](nc.ref.Append("workload_metadata_config"))
}

type DataNodeConfigAdvancedMachineFeaturesAttributes struct {
	ref terra.Reference
}

func (amf DataNodeConfigAdvancedMachineFeaturesAttributes) InternalRef() (terra.Reference, error) {
	return amf.ref, nil
}

func (amf DataNodeConfigAdvancedMachineFeaturesAttributes) InternalWithRef(ref terra.Reference) DataNodeConfigAdvancedMachineFeaturesAttributes {
	return DataNodeConfigAdvancedMachineFeaturesAttributes{ref: ref}
}

func (amf DataNodeConfigAdvancedMachineFeaturesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return amf.ref.InternalTokens()
}

func (amf DataNodeConfigAdvancedMachineFeaturesAttributes) ThreadsPerCore() terra.NumberValue {
	return terra.ReferenceAsNumber(amf.ref.Append("threads_per_core"))
}

type DataNodeConfigConfidentialNodesAttributes struct {
	ref terra.Reference
}

func (cn DataNodeConfigConfidentialNodesAttributes) InternalRef() (terra.Reference, error) {
	return cn.ref, nil
}

func (cn DataNodeConfigConfidentialNodesAttributes) InternalWithRef(ref terra.Reference) DataNodeConfigConfidentialNodesAttributes {
	return DataNodeConfigConfidentialNodesAttributes{ref: ref}
}

func (cn DataNodeConfigConfidentialNodesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cn.ref.InternalTokens()
}

func (cn DataNodeConfigConfidentialNodesAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceAsBool(cn.ref.Append("enabled"))
}

type DataNodeConfigEffectiveTaintsAttributes struct {
	ref terra.Reference
}

func (et DataNodeConfigEffectiveTaintsAttributes) InternalRef() (terra.Reference, error) {
	return et.ref, nil
}

func (et DataNodeConfigEffectiveTaintsAttributes) InternalWithRef(ref terra.Reference) DataNodeConfigEffectiveTaintsAttributes {
	return DataNodeConfigEffectiveTaintsAttributes{ref: ref}
}

func (et DataNodeConfigEffectiveTaintsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return et.ref.InternalTokens()
}

func (et DataNodeConfigEffectiveTaintsAttributes) Effect() terra.StringValue {
	return terra.ReferenceAsString(et.ref.Append("effect"))
}

func (et DataNodeConfigEffectiveTaintsAttributes) Key() terra.StringValue {
	return terra.ReferenceAsString(et.ref.Append("key"))
}

func (et DataNodeConfigEffectiveTaintsAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(et.ref.Append("value"))
}

type DataNodeConfigEphemeralStorageConfigAttributes struct {
	ref terra.Reference
}

func (esc DataNodeConfigEphemeralStorageConfigAttributes) InternalRef() (terra.Reference, error) {
	return esc.ref, nil
}

func (esc DataNodeConfigEphemeralStorageConfigAttributes) InternalWithRef(ref terra.Reference) DataNodeConfigEphemeralStorageConfigAttributes {
	return DataNodeConfigEphemeralStorageConfigAttributes{ref: ref}
}

func (esc DataNodeConfigEphemeralStorageConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return esc.ref.InternalTokens()
}

func (esc DataNodeConfigEphemeralStorageConfigAttributes) LocalSsdCount() terra.NumberValue {
	return terra.ReferenceAsNumber(esc.ref.Append("local_ssd_count"))
}

type DataNodeConfigEphemeralStorageLocalSsdConfigAttributes struct {
	ref terra.Reference
}

func (eslsc DataNodeConfigEphemeralStorageLocalSsdConfigAttributes) InternalRef() (terra.Reference, error) {
	return eslsc.ref, nil
}

func (eslsc DataNodeConfigEphemeralStorageLocalSsdConfigAttributes) InternalWithRef(ref terra.Reference) DataNodeConfigEphemeralStorageLocalSsdConfigAttributes {
	return DataNodeConfigEphemeralStorageLocalSsdConfigAttributes{ref: ref}
}

func (eslsc DataNodeConfigEphemeralStorageLocalSsdConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return eslsc.ref.InternalTokens()
}

func (eslsc DataNodeConfigEphemeralStorageLocalSsdConfigAttributes) LocalSsdCount() terra.NumberValue {
	return terra.ReferenceAsNumber(eslsc.ref.Append("local_ssd_count"))
}

type DataNodeConfigFastSocketAttributes struct {
	ref terra.Reference
}

func (fs DataNodeConfigFastSocketAttributes) InternalRef() (terra.Reference, error) {
	return fs.ref, nil
}

func (fs DataNodeConfigFastSocketAttributes) InternalWithRef(ref terra.Reference) DataNodeConfigFastSocketAttributes {
	return DataNodeConfigFastSocketAttributes{ref: ref}
}

func (fs DataNodeConfigFastSocketAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return fs.ref.InternalTokens()
}

func (fs DataNodeConfigFastSocketAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceAsBool(fs.ref.Append("enabled"))
}

type DataNodeConfigGcfsConfigAttributes struct {
	ref terra.Reference
}

func (gc DataNodeConfigGcfsConfigAttributes) InternalRef() (terra.Reference, error) {
	return gc.ref, nil
}

func (gc DataNodeConfigGcfsConfigAttributes) InternalWithRef(ref terra.Reference) DataNodeConfigGcfsConfigAttributes {
	return DataNodeConfigGcfsConfigAttributes{ref: ref}
}

func (gc DataNodeConfigGcfsConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return gc.ref.InternalTokens()
}

func (gc DataNodeConfigGcfsConfigAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceAsBool(gc.ref.Append("enabled"))
}

type DataNodeConfigGuestAcceleratorAttributes struct {
	ref terra.Reference
}

func (ga DataNodeConfigGuestAcceleratorAttributes) InternalRef() (terra.Reference, error) {
	return ga.ref, nil
}

func (ga DataNodeConfigGuestAcceleratorAttributes) InternalWithRef(ref terra.Reference) DataNodeConfigGuestAcceleratorAttributes {
	return DataNodeConfigGuestAcceleratorAttributes{ref: ref}
}

func (ga DataNodeConfigGuestAcceleratorAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ga.ref.InternalTokens()
}

func (ga DataNodeConfigGuestAcceleratorAttributes) Count() terra.NumberValue {
	return terra.ReferenceAsNumber(ga.ref.Append("count"))
}

func (ga DataNodeConfigGuestAcceleratorAttributes) GpuPartitionSize() terra.StringValue {
	return terra.ReferenceAsString(ga.ref.Append("gpu_partition_size"))
}

func (ga DataNodeConfigGuestAcceleratorAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(ga.ref.Append("type"))
}

func (ga DataNodeConfigGuestAcceleratorAttributes) GpuDriverInstallationConfig() terra.ListValue[DataNodeConfigGuestAcceleratorGpuDriverInstallationConfigAttributes] {
	return terra.ReferenceAsList[DataNodeConfigGuestAcceleratorGpuDriverInstallationConfigAttributes](ga.ref.Append("gpu_driver_installation_config"))
}

func (ga DataNodeConfigGuestAcceleratorAttributes) GpuSharingConfig() terra.ListValue[DataNodeConfigGuestAcceleratorGpuSharingConfigAttributes] {
	return terra.ReferenceAsList[DataNodeConfigGuestAcceleratorGpuSharingConfigAttributes](ga.ref.Append("gpu_sharing_config"))
}

type DataNodeConfigGuestAcceleratorGpuDriverInstallationConfigAttributes struct {
	ref terra.Reference
}

func (gdic DataNodeConfigGuestAcceleratorGpuDriverInstallationConfigAttributes) InternalRef() (terra.Reference, error) {
	return gdic.ref, nil
}

func (gdic DataNodeConfigGuestAcceleratorGpuDriverInstallationConfigAttributes) InternalWithRef(ref terra.Reference) DataNodeConfigGuestAcceleratorGpuDriverInstallationConfigAttributes {
	return DataNodeConfigGuestAcceleratorGpuDriverInstallationConfigAttributes{ref: ref}
}

func (gdic DataNodeConfigGuestAcceleratorGpuDriverInstallationConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return gdic.ref.InternalTokens()
}

func (gdic DataNodeConfigGuestAcceleratorGpuDriverInstallationConfigAttributes) GpuDriverVersion() terra.StringValue {
	return terra.ReferenceAsString(gdic.ref.Append("gpu_driver_version"))
}

type DataNodeConfigGuestAcceleratorGpuSharingConfigAttributes struct {
	ref terra.Reference
}

func (gsc DataNodeConfigGuestAcceleratorGpuSharingConfigAttributes) InternalRef() (terra.Reference, error) {
	return gsc.ref, nil
}

func (gsc DataNodeConfigGuestAcceleratorGpuSharingConfigAttributes) InternalWithRef(ref terra.Reference) DataNodeConfigGuestAcceleratorGpuSharingConfigAttributes {
	return DataNodeConfigGuestAcceleratorGpuSharingConfigAttributes{ref: ref}
}

func (gsc DataNodeConfigGuestAcceleratorGpuSharingConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return gsc.ref.InternalTokens()
}

func (gsc DataNodeConfigGuestAcceleratorGpuSharingConfigAttributes) GpuSharingStrategy() terra.StringValue {
	return terra.ReferenceAsString(gsc.ref.Append("gpu_sharing_strategy"))
}

func (gsc DataNodeConfigGuestAcceleratorGpuSharingConfigAttributes) MaxSharedClientsPerGpu() terra.NumberValue {
	return terra.ReferenceAsNumber(gsc.ref.Append("max_shared_clients_per_gpu"))
}

type DataNodeConfigGvnicAttributes struct {
	ref terra.Reference
}

func (g DataNodeConfigGvnicAttributes) InternalRef() (terra.Reference, error) {
	return g.ref, nil
}

func (g DataNodeConfigGvnicAttributes) InternalWithRef(ref terra.Reference) DataNodeConfigGvnicAttributes {
	return DataNodeConfigGvnicAttributes{ref: ref}
}

func (g DataNodeConfigGvnicAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return g.ref.InternalTokens()
}

func (g DataNodeConfigGvnicAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceAsBool(g.ref.Append("enabled"))
}

type DataNodeConfigHostMaintenancePolicyAttributes struct {
	ref terra.Reference
}

func (hmp DataNodeConfigHostMaintenancePolicyAttributes) InternalRef() (terra.Reference, error) {
	return hmp.ref, nil
}

func (hmp DataNodeConfigHostMaintenancePolicyAttributes) InternalWithRef(ref terra.Reference) DataNodeConfigHostMaintenancePolicyAttributes {
	return DataNodeConfigHostMaintenancePolicyAttributes{ref: ref}
}

func (hmp DataNodeConfigHostMaintenancePolicyAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return hmp.ref.InternalTokens()
}

func (hmp DataNodeConfigHostMaintenancePolicyAttributes) MaintenanceInterval() terra.StringValue {
	return terra.ReferenceAsString(hmp.ref.Append("maintenance_interval"))
}

type DataNodeConfigKubeletConfigAttributes struct {
	ref terra.Reference
}

func (kc DataNodeConfigKubeletConfigAttributes) InternalRef() (terra.Reference, error) {
	return kc.ref, nil
}

func (kc DataNodeConfigKubeletConfigAttributes) InternalWithRef(ref terra.Reference) DataNodeConfigKubeletConfigAttributes {
	return DataNodeConfigKubeletConfigAttributes{ref: ref}
}

func (kc DataNodeConfigKubeletConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return kc.ref.InternalTokens()
}

func (kc DataNodeConfigKubeletConfigAttributes) CpuCfsQuota() terra.BoolValue {
	return terra.ReferenceAsBool(kc.ref.Append("cpu_cfs_quota"))
}

func (kc DataNodeConfigKubeletConfigAttributes) CpuCfsQuotaPeriod() terra.StringValue {
	return terra.ReferenceAsString(kc.ref.Append("cpu_cfs_quota_period"))
}

func (kc DataNodeConfigKubeletConfigAttributes) CpuManagerPolicy() terra.StringValue {
	return terra.ReferenceAsString(kc.ref.Append("cpu_manager_policy"))
}

func (kc DataNodeConfigKubeletConfigAttributes) PodPidsLimit() terra.NumberValue {
	return terra.ReferenceAsNumber(kc.ref.Append("pod_pids_limit"))
}

type DataNodeConfigLinuxNodeConfigAttributes struct {
	ref terra.Reference
}

func (lnc DataNodeConfigLinuxNodeConfigAttributes) InternalRef() (terra.Reference, error) {
	return lnc.ref, nil
}

func (lnc DataNodeConfigLinuxNodeConfigAttributes) InternalWithRef(ref terra.Reference) DataNodeConfigLinuxNodeConfigAttributes {
	return DataNodeConfigLinuxNodeConfigAttributes{ref: ref}
}

func (lnc DataNodeConfigLinuxNodeConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return lnc.ref.InternalTokens()
}

func (lnc DataNodeConfigLinuxNodeConfigAttributes) CgroupMode() terra.StringValue {
	return terra.ReferenceAsString(lnc.ref.Append("cgroup_mode"))
}

func (lnc DataNodeConfigLinuxNodeConfigAttributes) Sysctls() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](lnc.ref.Append("sysctls"))
}

type DataNodeConfigLocalNvmeSsdBlockConfigAttributes struct {
	ref terra.Reference
}

func (lnsbc DataNodeConfigLocalNvmeSsdBlockConfigAttributes) InternalRef() (terra.Reference, error) {
	return lnsbc.ref, nil
}

func (lnsbc DataNodeConfigLocalNvmeSsdBlockConfigAttributes) InternalWithRef(ref terra.Reference) DataNodeConfigLocalNvmeSsdBlockConfigAttributes {
	return DataNodeConfigLocalNvmeSsdBlockConfigAttributes{ref: ref}
}

func (lnsbc DataNodeConfigLocalNvmeSsdBlockConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return lnsbc.ref.InternalTokens()
}

func (lnsbc DataNodeConfigLocalNvmeSsdBlockConfigAttributes) LocalSsdCount() terra.NumberValue {
	return terra.ReferenceAsNumber(lnsbc.ref.Append("local_ssd_count"))
}

type DataNodeConfigReservationAffinityAttributes struct {
	ref terra.Reference
}

func (ra DataNodeConfigReservationAffinityAttributes) InternalRef() (terra.Reference, error) {
	return ra.ref, nil
}

func (ra DataNodeConfigReservationAffinityAttributes) InternalWithRef(ref terra.Reference) DataNodeConfigReservationAffinityAttributes {
	return DataNodeConfigReservationAffinityAttributes{ref: ref}
}

func (ra DataNodeConfigReservationAffinityAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ra.ref.InternalTokens()
}

func (ra DataNodeConfigReservationAffinityAttributes) ConsumeReservationType() terra.StringValue {
	return terra.ReferenceAsString(ra.ref.Append("consume_reservation_type"))
}

func (ra DataNodeConfigReservationAffinityAttributes) Key() terra.StringValue {
	return terra.ReferenceAsString(ra.ref.Append("key"))
}

func (ra DataNodeConfigReservationAffinityAttributes) Values() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ra.ref.Append("values"))
}

type DataNodeConfigSandboxConfigAttributes struct {
	ref terra.Reference
}

func (sc DataNodeConfigSandboxConfigAttributes) InternalRef() (terra.Reference, error) {
	return sc.ref, nil
}

func (sc DataNodeConfigSandboxConfigAttributes) InternalWithRef(ref terra.Reference) DataNodeConfigSandboxConfigAttributes {
	return DataNodeConfigSandboxConfigAttributes{ref: ref}
}

func (sc DataNodeConfigSandboxConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sc.ref.InternalTokens()
}

func (sc DataNodeConfigSandboxConfigAttributes) SandboxType() terra.StringValue {
	return terra.ReferenceAsString(sc.ref.Append("sandbox_type"))
}

type DataNodeConfigShieldedInstanceConfigAttributes struct {
	ref terra.Reference
}

func (sic DataNodeConfigShieldedInstanceConfigAttributes) InternalRef() (terra.Reference, error) {
	return sic.ref, nil
}

func (sic DataNodeConfigShieldedInstanceConfigAttributes) InternalWithRef(ref terra.Reference) DataNodeConfigShieldedInstanceConfigAttributes {
	return DataNodeConfigShieldedInstanceConfigAttributes{ref: ref}
}

func (sic DataNodeConfigShieldedInstanceConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sic.ref.InternalTokens()
}

func (sic DataNodeConfigShieldedInstanceConfigAttributes) EnableIntegrityMonitoring() terra.BoolValue {
	return terra.ReferenceAsBool(sic.ref.Append("enable_integrity_monitoring"))
}

func (sic DataNodeConfigShieldedInstanceConfigAttributes) EnableSecureBoot() terra.BoolValue {
	return terra.ReferenceAsBool(sic.ref.Append("enable_secure_boot"))
}

type DataNodeConfigSoleTenantConfigAttributes struct {
	ref terra.Reference
}

func (stc DataNodeConfigSoleTenantConfigAttributes) InternalRef() (terra.Reference, error) {
	return stc.ref, nil
}

func (stc DataNodeConfigSoleTenantConfigAttributes) InternalWithRef(ref terra.Reference) DataNodeConfigSoleTenantConfigAttributes {
	return DataNodeConfigSoleTenantConfigAttributes{ref: ref}
}

func (stc DataNodeConfigSoleTenantConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return stc.ref.InternalTokens()
}

func (stc DataNodeConfigSoleTenantConfigAttributes) NodeAffinity() terra.SetValue[DataNodeConfigSoleTenantConfigNodeAffinityAttributes] {
	return terra.ReferenceAsSet[DataNodeConfigSoleTenantConfigNodeAffinityAttributes](stc.ref.Append("node_affinity"))
}

type DataNodeConfigSoleTenantConfigNodeAffinityAttributes struct {
	ref terra.Reference
}

func (na DataNodeConfigSoleTenantConfigNodeAffinityAttributes) InternalRef() (terra.Reference, error) {
	return na.ref, nil
}

func (na DataNodeConfigSoleTenantConfigNodeAffinityAttributes) InternalWithRef(ref terra.Reference) DataNodeConfigSoleTenantConfigNodeAffinityAttributes {
	return DataNodeConfigSoleTenantConfigNodeAffinityAttributes{ref: ref}
}

func (na DataNodeConfigSoleTenantConfigNodeAffinityAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return na.ref.InternalTokens()
}

func (na DataNodeConfigSoleTenantConfigNodeAffinityAttributes) Key() terra.StringValue {
	return terra.ReferenceAsString(na.ref.Append("key"))
}

func (na DataNodeConfigSoleTenantConfigNodeAffinityAttributes) Operator() terra.StringValue {
	return terra.ReferenceAsString(na.ref.Append("operator"))
}

func (na DataNodeConfigSoleTenantConfigNodeAffinityAttributes) Values() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](na.ref.Append("values"))
}

type DataNodeConfigTaintAttributes struct {
	ref terra.Reference
}

func (t DataNodeConfigTaintAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t DataNodeConfigTaintAttributes) InternalWithRef(ref terra.Reference) DataNodeConfigTaintAttributes {
	return DataNodeConfigTaintAttributes{ref: ref}
}

func (t DataNodeConfigTaintAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t DataNodeConfigTaintAttributes) Effect() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("effect"))
}

func (t DataNodeConfigTaintAttributes) Key() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("key"))
}

func (t DataNodeConfigTaintAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("value"))
}

type DataNodeConfigWorkloadMetadataConfigAttributes struct {
	ref terra.Reference
}

func (wmc DataNodeConfigWorkloadMetadataConfigAttributes) InternalRef() (terra.Reference, error) {
	return wmc.ref, nil
}

func (wmc DataNodeConfigWorkloadMetadataConfigAttributes) InternalWithRef(ref terra.Reference) DataNodeConfigWorkloadMetadataConfigAttributes {
	return DataNodeConfigWorkloadMetadataConfigAttributes{ref: ref}
}

func (wmc DataNodeConfigWorkloadMetadataConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return wmc.ref.InternalTokens()
}

func (wmc DataNodeConfigWorkloadMetadataConfigAttributes) Mode() terra.StringValue {
	return terra.ReferenceAsString(wmc.ref.Append("mode"))
}

type DataNodePoolAttributes struct {
	ref terra.Reference
}

func (np DataNodePoolAttributes) InternalRef() (terra.Reference, error) {
	return np.ref, nil
}

func (np DataNodePoolAttributes) InternalWithRef(ref terra.Reference) DataNodePoolAttributes {
	return DataNodePoolAttributes{ref: ref}
}

func (np DataNodePoolAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return np.ref.InternalTokens()
}

func (np DataNodePoolAttributes) InitialNodeCount() terra.NumberValue {
	return terra.ReferenceAsNumber(np.ref.Append("initial_node_count"))
}

func (np DataNodePoolAttributes) InstanceGroupUrls() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](np.ref.Append("instance_group_urls"))
}

func (np DataNodePoolAttributes) ManagedInstanceGroupUrls() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](np.ref.Append("managed_instance_group_urls"))
}

func (np DataNodePoolAttributes) MaxPodsPerNode() terra.NumberValue {
	return terra.ReferenceAsNumber(np.ref.Append("max_pods_per_node"))
}

func (np DataNodePoolAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(np.ref.Append("name"))
}

func (np DataNodePoolAttributes) NamePrefix() terra.StringValue {
	return terra.ReferenceAsString(np.ref.Append("name_prefix"))
}

func (np DataNodePoolAttributes) NodeCount() terra.NumberValue {
	return terra.ReferenceAsNumber(np.ref.Append("node_count"))
}

func (np DataNodePoolAttributes) NodeLocations() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](np.ref.Append("node_locations"))
}

func (np DataNodePoolAttributes) Version() terra.StringValue {
	return terra.ReferenceAsString(np.ref.Append("version"))
}

func (np DataNodePoolAttributes) Autoscaling() terra.ListValue[DataNodePoolAutoscalingAttributes] {
	return terra.ReferenceAsList[DataNodePoolAutoscalingAttributes](np.ref.Append("autoscaling"))
}

func (np DataNodePoolAttributes) Management() terra.ListValue[DataNodePoolManagementAttributes] {
	return terra.ReferenceAsList[DataNodePoolManagementAttributes](np.ref.Append("management"))
}

func (np DataNodePoolAttributes) NetworkConfig() terra.ListValue[DataNodePoolNetworkConfigAttributes] {
	return terra.ReferenceAsList[DataNodePoolNetworkConfigAttributes](np.ref.Append("network_config"))
}

func (np DataNodePoolAttributes) NodeConfig() terra.ListValue[DataNodePoolNodeConfigAttributes] {
	return terra.ReferenceAsList[DataNodePoolNodeConfigAttributes](np.ref.Append("node_config"))
}

func (np DataNodePoolAttributes) PlacementPolicy() terra.ListValue[DataNodePoolPlacementPolicyAttributes] {
	return terra.ReferenceAsList[DataNodePoolPlacementPolicyAttributes](np.ref.Append("placement_policy"))
}

func (np DataNodePoolAttributes) QueuedProvisioning() terra.ListValue[DataNodePoolQueuedProvisioningAttributes] {
	return terra.ReferenceAsList[DataNodePoolQueuedProvisioningAttributes](np.ref.Append("queued_provisioning"))
}

func (np DataNodePoolAttributes) UpgradeSettings() terra.ListValue[DataNodePoolUpgradeSettingsAttributes] {
	return terra.ReferenceAsList[DataNodePoolUpgradeSettingsAttributes](np.ref.Append("upgrade_settings"))
}

type DataNodePoolAutoscalingAttributes struct {
	ref terra.Reference
}

func (a DataNodePoolAutoscalingAttributes) InternalRef() (terra.Reference, error) {
	return a.ref, nil
}

func (a DataNodePoolAutoscalingAttributes) InternalWithRef(ref terra.Reference) DataNodePoolAutoscalingAttributes {
	return DataNodePoolAutoscalingAttributes{ref: ref}
}

func (a DataNodePoolAutoscalingAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return a.ref.InternalTokens()
}

func (a DataNodePoolAutoscalingAttributes) LocationPolicy() terra.StringValue {
	return terra.ReferenceAsString(a.ref.Append("location_policy"))
}

func (a DataNodePoolAutoscalingAttributes) MaxNodeCount() terra.NumberValue {
	return terra.ReferenceAsNumber(a.ref.Append("max_node_count"))
}

func (a DataNodePoolAutoscalingAttributes) MinNodeCount() terra.NumberValue {
	return terra.ReferenceAsNumber(a.ref.Append("min_node_count"))
}

func (a DataNodePoolAutoscalingAttributes) TotalMaxNodeCount() terra.NumberValue {
	return terra.ReferenceAsNumber(a.ref.Append("total_max_node_count"))
}

func (a DataNodePoolAutoscalingAttributes) TotalMinNodeCount() terra.NumberValue {
	return terra.ReferenceAsNumber(a.ref.Append("total_min_node_count"))
}

type DataNodePoolManagementAttributes struct {
	ref terra.Reference
}

func (m DataNodePoolManagementAttributes) InternalRef() (terra.Reference, error) {
	return m.ref, nil
}

func (m DataNodePoolManagementAttributes) InternalWithRef(ref terra.Reference) DataNodePoolManagementAttributes {
	return DataNodePoolManagementAttributes{ref: ref}
}

func (m DataNodePoolManagementAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return m.ref.InternalTokens()
}

func (m DataNodePoolManagementAttributes) AutoRepair() terra.BoolValue {
	return terra.ReferenceAsBool(m.ref.Append("auto_repair"))
}

func (m DataNodePoolManagementAttributes) AutoUpgrade() terra.BoolValue {
	return terra.ReferenceAsBool(m.ref.Append("auto_upgrade"))
}

type DataNodePoolNetworkConfigAttributes struct {
	ref terra.Reference
}

func (nc DataNodePoolNetworkConfigAttributes) InternalRef() (terra.Reference, error) {
	return nc.ref, nil
}

func (nc DataNodePoolNetworkConfigAttributes) InternalWithRef(ref terra.Reference) DataNodePoolNetworkConfigAttributes {
	return DataNodePoolNetworkConfigAttributes{ref: ref}
}

func (nc DataNodePoolNetworkConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return nc.ref.InternalTokens()
}

func (nc DataNodePoolNetworkConfigAttributes) CreatePodRange() terra.BoolValue {
	return terra.ReferenceAsBool(nc.ref.Append("create_pod_range"))
}

func (nc DataNodePoolNetworkConfigAttributes) EnablePrivateNodes() terra.BoolValue {
	return terra.ReferenceAsBool(nc.ref.Append("enable_private_nodes"))
}

func (nc DataNodePoolNetworkConfigAttributes) PodIpv4CidrBlock() terra.StringValue {
	return terra.ReferenceAsString(nc.ref.Append("pod_ipv4_cidr_block"))
}

func (nc DataNodePoolNetworkConfigAttributes) PodRange() terra.StringValue {
	return terra.ReferenceAsString(nc.ref.Append("pod_range"))
}

func (nc DataNodePoolNetworkConfigAttributes) AdditionalNodeNetworkConfigs() terra.ListValue[DataNodePoolNetworkConfigAdditionalNodeNetworkConfigsAttributes] {
	return terra.ReferenceAsList[DataNodePoolNetworkConfigAdditionalNodeNetworkConfigsAttributes](nc.ref.Append("additional_node_network_configs"))
}

func (nc DataNodePoolNetworkConfigAttributes) AdditionalPodNetworkConfigs() terra.ListValue[DataNodePoolNetworkConfigAdditionalPodNetworkConfigsAttributes] {
	return terra.ReferenceAsList[DataNodePoolNetworkConfigAdditionalPodNetworkConfigsAttributes](nc.ref.Append("additional_pod_network_configs"))
}

func (nc DataNodePoolNetworkConfigAttributes) NetworkPerformanceConfig() terra.ListValue[DataNodePoolNetworkConfigNetworkPerformanceConfigAttributes] {
	return terra.ReferenceAsList[DataNodePoolNetworkConfigNetworkPerformanceConfigAttributes](nc.ref.Append("network_performance_config"))
}

func (nc DataNodePoolNetworkConfigAttributes) PodCidrOverprovisionConfig() terra.ListValue[DataNodePoolNetworkConfigPodCidrOverprovisionConfigAttributes] {
	return terra.ReferenceAsList[DataNodePoolNetworkConfigPodCidrOverprovisionConfigAttributes](nc.ref.Append("pod_cidr_overprovision_config"))
}

type DataNodePoolNetworkConfigAdditionalNodeNetworkConfigsAttributes struct {
	ref terra.Reference
}

func (annc DataNodePoolNetworkConfigAdditionalNodeNetworkConfigsAttributes) InternalRef() (terra.Reference, error) {
	return annc.ref, nil
}

func (annc DataNodePoolNetworkConfigAdditionalNodeNetworkConfigsAttributes) InternalWithRef(ref terra.Reference) DataNodePoolNetworkConfigAdditionalNodeNetworkConfigsAttributes {
	return DataNodePoolNetworkConfigAdditionalNodeNetworkConfigsAttributes{ref: ref}
}

func (annc DataNodePoolNetworkConfigAdditionalNodeNetworkConfigsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return annc.ref.InternalTokens()
}

func (annc DataNodePoolNetworkConfigAdditionalNodeNetworkConfigsAttributes) Network() terra.StringValue {
	return terra.ReferenceAsString(annc.ref.Append("network"))
}

func (annc DataNodePoolNetworkConfigAdditionalNodeNetworkConfigsAttributes) Subnetwork() terra.StringValue {
	return terra.ReferenceAsString(annc.ref.Append("subnetwork"))
}

type DataNodePoolNetworkConfigAdditionalPodNetworkConfigsAttributes struct {
	ref terra.Reference
}

func (apnc DataNodePoolNetworkConfigAdditionalPodNetworkConfigsAttributes) InternalRef() (terra.Reference, error) {
	return apnc.ref, nil
}

func (apnc DataNodePoolNetworkConfigAdditionalPodNetworkConfigsAttributes) InternalWithRef(ref terra.Reference) DataNodePoolNetworkConfigAdditionalPodNetworkConfigsAttributes {
	return DataNodePoolNetworkConfigAdditionalPodNetworkConfigsAttributes{ref: ref}
}

func (apnc DataNodePoolNetworkConfigAdditionalPodNetworkConfigsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return apnc.ref.InternalTokens()
}

func (apnc DataNodePoolNetworkConfigAdditionalPodNetworkConfigsAttributes) MaxPodsPerNode() terra.NumberValue {
	return terra.ReferenceAsNumber(apnc.ref.Append("max_pods_per_node"))
}

func (apnc DataNodePoolNetworkConfigAdditionalPodNetworkConfigsAttributes) SecondaryPodRange() terra.StringValue {
	return terra.ReferenceAsString(apnc.ref.Append("secondary_pod_range"))
}

func (apnc DataNodePoolNetworkConfigAdditionalPodNetworkConfigsAttributes) Subnetwork() terra.StringValue {
	return terra.ReferenceAsString(apnc.ref.Append("subnetwork"))
}

type DataNodePoolNetworkConfigNetworkPerformanceConfigAttributes struct {
	ref terra.Reference
}

func (npc DataNodePoolNetworkConfigNetworkPerformanceConfigAttributes) InternalRef() (terra.Reference, error) {
	return npc.ref, nil
}

func (npc DataNodePoolNetworkConfigNetworkPerformanceConfigAttributes) InternalWithRef(ref terra.Reference) DataNodePoolNetworkConfigNetworkPerformanceConfigAttributes {
	return DataNodePoolNetworkConfigNetworkPerformanceConfigAttributes{ref: ref}
}

func (npc DataNodePoolNetworkConfigNetworkPerformanceConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return npc.ref.InternalTokens()
}

func (npc DataNodePoolNetworkConfigNetworkPerformanceConfigAttributes) TotalEgressBandwidthTier() terra.StringValue {
	return terra.ReferenceAsString(npc.ref.Append("total_egress_bandwidth_tier"))
}

type DataNodePoolNetworkConfigPodCidrOverprovisionConfigAttributes struct {
	ref terra.Reference
}

func (pcoc DataNodePoolNetworkConfigPodCidrOverprovisionConfigAttributes) InternalRef() (terra.Reference, error) {
	return pcoc.ref, nil
}

func (pcoc DataNodePoolNetworkConfigPodCidrOverprovisionConfigAttributes) InternalWithRef(ref terra.Reference) DataNodePoolNetworkConfigPodCidrOverprovisionConfigAttributes {
	return DataNodePoolNetworkConfigPodCidrOverprovisionConfigAttributes{ref: ref}
}

func (pcoc DataNodePoolNetworkConfigPodCidrOverprovisionConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return pcoc.ref.InternalTokens()
}

func (pcoc DataNodePoolNetworkConfigPodCidrOverprovisionConfigAttributes) Disabled() terra.BoolValue {
	return terra.ReferenceAsBool(pcoc.ref.Append("disabled"))
}

type DataNodePoolNodeConfigAttributes struct {
	ref terra.Reference
}

func (nc DataNodePoolNodeConfigAttributes) InternalRef() (terra.Reference, error) {
	return nc.ref, nil
}

func (nc DataNodePoolNodeConfigAttributes) InternalWithRef(ref terra.Reference) DataNodePoolNodeConfigAttributes {
	return DataNodePoolNodeConfigAttributes{ref: ref}
}

func (nc DataNodePoolNodeConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return nc.ref.InternalTokens()
}

func (nc DataNodePoolNodeConfigAttributes) BootDiskKmsKey() terra.StringValue {
	return terra.ReferenceAsString(nc.ref.Append("boot_disk_kms_key"))
}

func (nc DataNodePoolNodeConfigAttributes) DiskSizeGb() terra.NumberValue {
	return terra.ReferenceAsNumber(nc.ref.Append("disk_size_gb"))
}

func (nc DataNodePoolNodeConfigAttributes) DiskType() terra.StringValue {
	return terra.ReferenceAsString(nc.ref.Append("disk_type"))
}

func (nc DataNodePoolNodeConfigAttributes) EnableConfidentialStorage() terra.BoolValue {
	return terra.ReferenceAsBool(nc.ref.Append("enable_confidential_storage"))
}

func (nc DataNodePoolNodeConfigAttributes) ImageType() terra.StringValue {
	return terra.ReferenceAsString(nc.ref.Append("image_type"))
}

func (nc DataNodePoolNodeConfigAttributes) Labels() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](nc.ref.Append("labels"))
}

func (nc DataNodePoolNodeConfigAttributes) LocalSsdCount() terra.NumberValue {
	return terra.ReferenceAsNumber(nc.ref.Append("local_ssd_count"))
}

func (nc DataNodePoolNodeConfigAttributes) LoggingVariant() terra.StringValue {
	return terra.ReferenceAsString(nc.ref.Append("logging_variant"))
}

func (nc DataNodePoolNodeConfigAttributes) MachineType() terra.StringValue {
	return terra.ReferenceAsString(nc.ref.Append("machine_type"))
}

func (nc DataNodePoolNodeConfigAttributes) Metadata() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](nc.ref.Append("metadata"))
}

func (nc DataNodePoolNodeConfigAttributes) MinCpuPlatform() terra.StringValue {
	return terra.ReferenceAsString(nc.ref.Append("min_cpu_platform"))
}

func (nc DataNodePoolNodeConfigAttributes) NodeGroup() terra.StringValue {
	return terra.ReferenceAsString(nc.ref.Append("node_group"))
}

func (nc DataNodePoolNodeConfigAttributes) OauthScopes() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](nc.ref.Append("oauth_scopes"))
}

func (nc DataNodePoolNodeConfigAttributes) Preemptible() terra.BoolValue {
	return terra.ReferenceAsBool(nc.ref.Append("preemptible"))
}

func (nc DataNodePoolNodeConfigAttributes) ResourceLabels() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](nc.ref.Append("resource_labels"))
}

func (nc DataNodePoolNodeConfigAttributes) ResourceManagerTags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](nc.ref.Append("resource_manager_tags"))
}

func (nc DataNodePoolNodeConfigAttributes) ServiceAccount() terra.StringValue {
	return terra.ReferenceAsString(nc.ref.Append("service_account"))
}

func (nc DataNodePoolNodeConfigAttributes) Spot() terra.BoolValue {
	return terra.ReferenceAsBool(nc.ref.Append("spot"))
}

func (nc DataNodePoolNodeConfigAttributes) Tags() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](nc.ref.Append("tags"))
}

func (nc DataNodePoolNodeConfigAttributes) AdvancedMachineFeatures() terra.ListValue[DataNodePoolNodeConfigAdvancedMachineFeaturesAttributes] {
	return terra.ReferenceAsList[DataNodePoolNodeConfigAdvancedMachineFeaturesAttributes](nc.ref.Append("advanced_machine_features"))
}

func (nc DataNodePoolNodeConfigAttributes) ConfidentialNodes() terra.ListValue[DataNodePoolNodeConfigConfidentialNodesAttributes] {
	return terra.ReferenceAsList[DataNodePoolNodeConfigConfidentialNodesAttributes](nc.ref.Append("confidential_nodes"))
}

func (nc DataNodePoolNodeConfigAttributes) EffectiveTaints() terra.ListValue[DataNodePoolNodeConfigEffectiveTaintsAttributes] {
	return terra.ReferenceAsList[DataNodePoolNodeConfigEffectiveTaintsAttributes](nc.ref.Append("effective_taints"))
}

func (nc DataNodePoolNodeConfigAttributes) EphemeralStorageConfig() terra.ListValue[DataNodePoolNodeConfigEphemeralStorageConfigAttributes] {
	return terra.ReferenceAsList[DataNodePoolNodeConfigEphemeralStorageConfigAttributes](nc.ref.Append("ephemeral_storage_config"))
}

func (nc DataNodePoolNodeConfigAttributes) EphemeralStorageLocalSsdConfig() terra.ListValue[DataNodePoolNodeConfigEphemeralStorageLocalSsdConfigAttributes] {
	return terra.ReferenceAsList[DataNodePoolNodeConfigEphemeralStorageLocalSsdConfigAttributes](nc.ref.Append("ephemeral_storage_local_ssd_config"))
}

func (nc DataNodePoolNodeConfigAttributes) FastSocket() terra.ListValue[DataNodePoolNodeConfigFastSocketAttributes] {
	return terra.ReferenceAsList[DataNodePoolNodeConfigFastSocketAttributes](nc.ref.Append("fast_socket"))
}

func (nc DataNodePoolNodeConfigAttributes) GcfsConfig() terra.ListValue[DataNodePoolNodeConfigGcfsConfigAttributes] {
	return terra.ReferenceAsList[DataNodePoolNodeConfigGcfsConfigAttributes](nc.ref.Append("gcfs_config"))
}

func (nc DataNodePoolNodeConfigAttributes) GuestAccelerator() terra.ListValue[DataNodePoolNodeConfigGuestAcceleratorAttributes] {
	return terra.ReferenceAsList[DataNodePoolNodeConfigGuestAcceleratorAttributes](nc.ref.Append("guest_accelerator"))
}

func (nc DataNodePoolNodeConfigAttributes) Gvnic() terra.ListValue[DataNodePoolNodeConfigGvnicAttributes] {
	return terra.ReferenceAsList[DataNodePoolNodeConfigGvnicAttributes](nc.ref.Append("gvnic"))
}

func (nc DataNodePoolNodeConfigAttributes) HostMaintenancePolicy() terra.ListValue[DataNodePoolNodeConfigHostMaintenancePolicyAttributes] {
	return terra.ReferenceAsList[DataNodePoolNodeConfigHostMaintenancePolicyAttributes](nc.ref.Append("host_maintenance_policy"))
}

func (nc DataNodePoolNodeConfigAttributes) KubeletConfig() terra.ListValue[DataNodePoolNodeConfigKubeletConfigAttributes] {
	return terra.ReferenceAsList[DataNodePoolNodeConfigKubeletConfigAttributes](nc.ref.Append("kubelet_config"))
}

func (nc DataNodePoolNodeConfigAttributes) LinuxNodeConfig() terra.ListValue[DataNodePoolNodeConfigLinuxNodeConfigAttributes] {
	return terra.ReferenceAsList[DataNodePoolNodeConfigLinuxNodeConfigAttributes](nc.ref.Append("linux_node_config"))
}

func (nc DataNodePoolNodeConfigAttributes) LocalNvmeSsdBlockConfig() terra.ListValue[DataNodePoolNodeConfigLocalNvmeSsdBlockConfigAttributes] {
	return terra.ReferenceAsList[DataNodePoolNodeConfigLocalNvmeSsdBlockConfigAttributes](nc.ref.Append("local_nvme_ssd_block_config"))
}

func (nc DataNodePoolNodeConfigAttributes) ReservationAffinity() terra.ListValue[DataNodePoolNodeConfigReservationAffinityAttributes] {
	return terra.ReferenceAsList[DataNodePoolNodeConfigReservationAffinityAttributes](nc.ref.Append("reservation_affinity"))
}

func (nc DataNodePoolNodeConfigAttributes) SandboxConfig() terra.ListValue[DataNodePoolNodeConfigSandboxConfigAttributes] {
	return terra.ReferenceAsList[DataNodePoolNodeConfigSandboxConfigAttributes](nc.ref.Append("sandbox_config"))
}

func (nc DataNodePoolNodeConfigAttributes) ShieldedInstanceConfig() terra.ListValue[DataNodePoolNodeConfigShieldedInstanceConfigAttributes] {
	return terra.ReferenceAsList[DataNodePoolNodeConfigShieldedInstanceConfigAttributes](nc.ref.Append("shielded_instance_config"))
}

func (nc DataNodePoolNodeConfigAttributes) SoleTenantConfig() terra.ListValue[DataNodePoolNodeConfigSoleTenantConfigAttributes] {
	return terra.ReferenceAsList[DataNodePoolNodeConfigSoleTenantConfigAttributes](nc.ref.Append("sole_tenant_config"))
}

func (nc DataNodePoolNodeConfigAttributes) Taint() terra.ListValue[DataNodePoolNodeConfigTaintAttributes] {
	return terra.ReferenceAsList[DataNodePoolNodeConfigTaintAttributes](nc.ref.Append("taint"))
}

func (nc DataNodePoolNodeConfigAttributes) WorkloadMetadataConfig() terra.ListValue[DataNodePoolNodeConfigWorkloadMetadataConfigAttributes] {
	return terra.ReferenceAsList[DataNodePoolNodeConfigWorkloadMetadataConfigAttributes](nc.ref.Append("workload_metadata_config"))
}

type DataNodePoolNodeConfigAdvancedMachineFeaturesAttributes struct {
	ref terra.Reference
}

func (amf DataNodePoolNodeConfigAdvancedMachineFeaturesAttributes) InternalRef() (terra.Reference, error) {
	return amf.ref, nil
}

func (amf DataNodePoolNodeConfigAdvancedMachineFeaturesAttributes) InternalWithRef(ref terra.Reference) DataNodePoolNodeConfigAdvancedMachineFeaturesAttributes {
	return DataNodePoolNodeConfigAdvancedMachineFeaturesAttributes{ref: ref}
}

func (amf DataNodePoolNodeConfigAdvancedMachineFeaturesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return amf.ref.InternalTokens()
}

func (amf DataNodePoolNodeConfigAdvancedMachineFeaturesAttributes) ThreadsPerCore() terra.NumberValue {
	return terra.ReferenceAsNumber(amf.ref.Append("threads_per_core"))
}

type DataNodePoolNodeConfigConfidentialNodesAttributes struct {
	ref terra.Reference
}

func (cn DataNodePoolNodeConfigConfidentialNodesAttributes) InternalRef() (terra.Reference, error) {
	return cn.ref, nil
}

func (cn DataNodePoolNodeConfigConfidentialNodesAttributes) InternalWithRef(ref terra.Reference) DataNodePoolNodeConfigConfidentialNodesAttributes {
	return DataNodePoolNodeConfigConfidentialNodesAttributes{ref: ref}
}

func (cn DataNodePoolNodeConfigConfidentialNodesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cn.ref.InternalTokens()
}

func (cn DataNodePoolNodeConfigConfidentialNodesAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceAsBool(cn.ref.Append("enabled"))
}

type DataNodePoolNodeConfigEffectiveTaintsAttributes struct {
	ref terra.Reference
}

func (et DataNodePoolNodeConfigEffectiveTaintsAttributes) InternalRef() (terra.Reference, error) {
	return et.ref, nil
}

func (et DataNodePoolNodeConfigEffectiveTaintsAttributes) InternalWithRef(ref terra.Reference) DataNodePoolNodeConfigEffectiveTaintsAttributes {
	return DataNodePoolNodeConfigEffectiveTaintsAttributes{ref: ref}
}

func (et DataNodePoolNodeConfigEffectiveTaintsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return et.ref.InternalTokens()
}

func (et DataNodePoolNodeConfigEffectiveTaintsAttributes) Effect() terra.StringValue {
	return terra.ReferenceAsString(et.ref.Append("effect"))
}

func (et DataNodePoolNodeConfigEffectiveTaintsAttributes) Key() terra.StringValue {
	return terra.ReferenceAsString(et.ref.Append("key"))
}

func (et DataNodePoolNodeConfigEffectiveTaintsAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(et.ref.Append("value"))
}

type DataNodePoolNodeConfigEphemeralStorageConfigAttributes struct {
	ref terra.Reference
}

func (esc DataNodePoolNodeConfigEphemeralStorageConfigAttributes) InternalRef() (terra.Reference, error) {
	return esc.ref, nil
}

func (esc DataNodePoolNodeConfigEphemeralStorageConfigAttributes) InternalWithRef(ref terra.Reference) DataNodePoolNodeConfigEphemeralStorageConfigAttributes {
	return DataNodePoolNodeConfigEphemeralStorageConfigAttributes{ref: ref}
}

func (esc DataNodePoolNodeConfigEphemeralStorageConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return esc.ref.InternalTokens()
}

func (esc DataNodePoolNodeConfigEphemeralStorageConfigAttributes) LocalSsdCount() terra.NumberValue {
	return terra.ReferenceAsNumber(esc.ref.Append("local_ssd_count"))
}

type DataNodePoolNodeConfigEphemeralStorageLocalSsdConfigAttributes struct {
	ref terra.Reference
}

func (eslsc DataNodePoolNodeConfigEphemeralStorageLocalSsdConfigAttributes) InternalRef() (terra.Reference, error) {
	return eslsc.ref, nil
}

func (eslsc DataNodePoolNodeConfigEphemeralStorageLocalSsdConfigAttributes) InternalWithRef(ref terra.Reference) DataNodePoolNodeConfigEphemeralStorageLocalSsdConfigAttributes {
	return DataNodePoolNodeConfigEphemeralStorageLocalSsdConfigAttributes{ref: ref}
}

func (eslsc DataNodePoolNodeConfigEphemeralStorageLocalSsdConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return eslsc.ref.InternalTokens()
}

func (eslsc DataNodePoolNodeConfigEphemeralStorageLocalSsdConfigAttributes) LocalSsdCount() terra.NumberValue {
	return terra.ReferenceAsNumber(eslsc.ref.Append("local_ssd_count"))
}

type DataNodePoolNodeConfigFastSocketAttributes struct {
	ref terra.Reference
}

func (fs DataNodePoolNodeConfigFastSocketAttributes) InternalRef() (terra.Reference, error) {
	return fs.ref, nil
}

func (fs DataNodePoolNodeConfigFastSocketAttributes) InternalWithRef(ref terra.Reference) DataNodePoolNodeConfigFastSocketAttributes {
	return DataNodePoolNodeConfigFastSocketAttributes{ref: ref}
}

func (fs DataNodePoolNodeConfigFastSocketAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return fs.ref.InternalTokens()
}

func (fs DataNodePoolNodeConfigFastSocketAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceAsBool(fs.ref.Append("enabled"))
}

type DataNodePoolNodeConfigGcfsConfigAttributes struct {
	ref terra.Reference
}

func (gc DataNodePoolNodeConfigGcfsConfigAttributes) InternalRef() (terra.Reference, error) {
	return gc.ref, nil
}

func (gc DataNodePoolNodeConfigGcfsConfigAttributes) InternalWithRef(ref terra.Reference) DataNodePoolNodeConfigGcfsConfigAttributes {
	return DataNodePoolNodeConfigGcfsConfigAttributes{ref: ref}
}

func (gc DataNodePoolNodeConfigGcfsConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return gc.ref.InternalTokens()
}

func (gc DataNodePoolNodeConfigGcfsConfigAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceAsBool(gc.ref.Append("enabled"))
}

type DataNodePoolNodeConfigGuestAcceleratorAttributes struct {
	ref terra.Reference
}

func (ga DataNodePoolNodeConfigGuestAcceleratorAttributes) InternalRef() (terra.Reference, error) {
	return ga.ref, nil
}

func (ga DataNodePoolNodeConfigGuestAcceleratorAttributes) InternalWithRef(ref terra.Reference) DataNodePoolNodeConfigGuestAcceleratorAttributes {
	return DataNodePoolNodeConfigGuestAcceleratorAttributes{ref: ref}
}

func (ga DataNodePoolNodeConfigGuestAcceleratorAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ga.ref.InternalTokens()
}

func (ga DataNodePoolNodeConfigGuestAcceleratorAttributes) Count() terra.NumberValue {
	return terra.ReferenceAsNumber(ga.ref.Append("count"))
}

func (ga DataNodePoolNodeConfigGuestAcceleratorAttributes) GpuPartitionSize() terra.StringValue {
	return terra.ReferenceAsString(ga.ref.Append("gpu_partition_size"))
}

func (ga DataNodePoolNodeConfigGuestAcceleratorAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(ga.ref.Append("type"))
}

func (ga DataNodePoolNodeConfigGuestAcceleratorAttributes) GpuDriverInstallationConfig() terra.ListValue[DataNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigAttributes] {
	return terra.ReferenceAsList[DataNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigAttributes](ga.ref.Append("gpu_driver_installation_config"))
}

func (ga DataNodePoolNodeConfigGuestAcceleratorAttributes) GpuSharingConfig() terra.ListValue[DataNodePoolNodeConfigGuestAcceleratorGpuSharingConfigAttributes] {
	return terra.ReferenceAsList[DataNodePoolNodeConfigGuestAcceleratorGpuSharingConfigAttributes](ga.ref.Append("gpu_sharing_config"))
}

type DataNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigAttributes struct {
	ref terra.Reference
}

func (gdic DataNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigAttributes) InternalRef() (terra.Reference, error) {
	return gdic.ref, nil
}

func (gdic DataNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigAttributes) InternalWithRef(ref terra.Reference) DataNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigAttributes {
	return DataNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigAttributes{ref: ref}
}

func (gdic DataNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return gdic.ref.InternalTokens()
}

func (gdic DataNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigAttributes) GpuDriverVersion() terra.StringValue {
	return terra.ReferenceAsString(gdic.ref.Append("gpu_driver_version"))
}

type DataNodePoolNodeConfigGuestAcceleratorGpuSharingConfigAttributes struct {
	ref terra.Reference
}

func (gsc DataNodePoolNodeConfigGuestAcceleratorGpuSharingConfigAttributes) InternalRef() (terra.Reference, error) {
	return gsc.ref, nil
}

func (gsc DataNodePoolNodeConfigGuestAcceleratorGpuSharingConfigAttributes) InternalWithRef(ref terra.Reference) DataNodePoolNodeConfigGuestAcceleratorGpuSharingConfigAttributes {
	return DataNodePoolNodeConfigGuestAcceleratorGpuSharingConfigAttributes{ref: ref}
}

func (gsc DataNodePoolNodeConfigGuestAcceleratorGpuSharingConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return gsc.ref.InternalTokens()
}

func (gsc DataNodePoolNodeConfigGuestAcceleratorGpuSharingConfigAttributes) GpuSharingStrategy() terra.StringValue {
	return terra.ReferenceAsString(gsc.ref.Append("gpu_sharing_strategy"))
}

func (gsc DataNodePoolNodeConfigGuestAcceleratorGpuSharingConfigAttributes) MaxSharedClientsPerGpu() terra.NumberValue {
	return terra.ReferenceAsNumber(gsc.ref.Append("max_shared_clients_per_gpu"))
}

type DataNodePoolNodeConfigGvnicAttributes struct {
	ref terra.Reference
}

func (g DataNodePoolNodeConfigGvnicAttributes) InternalRef() (terra.Reference, error) {
	return g.ref, nil
}

func (g DataNodePoolNodeConfigGvnicAttributes) InternalWithRef(ref terra.Reference) DataNodePoolNodeConfigGvnicAttributes {
	return DataNodePoolNodeConfigGvnicAttributes{ref: ref}
}

func (g DataNodePoolNodeConfigGvnicAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return g.ref.InternalTokens()
}

func (g DataNodePoolNodeConfigGvnicAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceAsBool(g.ref.Append("enabled"))
}

type DataNodePoolNodeConfigHostMaintenancePolicyAttributes struct {
	ref terra.Reference
}

func (hmp DataNodePoolNodeConfigHostMaintenancePolicyAttributes) InternalRef() (terra.Reference, error) {
	return hmp.ref, nil
}

func (hmp DataNodePoolNodeConfigHostMaintenancePolicyAttributes) InternalWithRef(ref terra.Reference) DataNodePoolNodeConfigHostMaintenancePolicyAttributes {
	return DataNodePoolNodeConfigHostMaintenancePolicyAttributes{ref: ref}
}

func (hmp DataNodePoolNodeConfigHostMaintenancePolicyAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return hmp.ref.InternalTokens()
}

func (hmp DataNodePoolNodeConfigHostMaintenancePolicyAttributes) MaintenanceInterval() terra.StringValue {
	return terra.ReferenceAsString(hmp.ref.Append("maintenance_interval"))
}

type DataNodePoolNodeConfigKubeletConfigAttributes struct {
	ref terra.Reference
}

func (kc DataNodePoolNodeConfigKubeletConfigAttributes) InternalRef() (terra.Reference, error) {
	return kc.ref, nil
}

func (kc DataNodePoolNodeConfigKubeletConfigAttributes) InternalWithRef(ref terra.Reference) DataNodePoolNodeConfigKubeletConfigAttributes {
	return DataNodePoolNodeConfigKubeletConfigAttributes{ref: ref}
}

func (kc DataNodePoolNodeConfigKubeletConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return kc.ref.InternalTokens()
}

func (kc DataNodePoolNodeConfigKubeletConfigAttributes) CpuCfsQuota() terra.BoolValue {
	return terra.ReferenceAsBool(kc.ref.Append("cpu_cfs_quota"))
}

func (kc DataNodePoolNodeConfigKubeletConfigAttributes) CpuCfsQuotaPeriod() terra.StringValue {
	return terra.ReferenceAsString(kc.ref.Append("cpu_cfs_quota_period"))
}

func (kc DataNodePoolNodeConfigKubeletConfigAttributes) CpuManagerPolicy() terra.StringValue {
	return terra.ReferenceAsString(kc.ref.Append("cpu_manager_policy"))
}

func (kc DataNodePoolNodeConfigKubeletConfigAttributes) PodPidsLimit() terra.NumberValue {
	return terra.ReferenceAsNumber(kc.ref.Append("pod_pids_limit"))
}

type DataNodePoolNodeConfigLinuxNodeConfigAttributes struct {
	ref terra.Reference
}

func (lnc DataNodePoolNodeConfigLinuxNodeConfigAttributes) InternalRef() (terra.Reference, error) {
	return lnc.ref, nil
}

func (lnc DataNodePoolNodeConfigLinuxNodeConfigAttributes) InternalWithRef(ref terra.Reference) DataNodePoolNodeConfigLinuxNodeConfigAttributes {
	return DataNodePoolNodeConfigLinuxNodeConfigAttributes{ref: ref}
}

func (lnc DataNodePoolNodeConfigLinuxNodeConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return lnc.ref.InternalTokens()
}

func (lnc DataNodePoolNodeConfigLinuxNodeConfigAttributes) CgroupMode() terra.StringValue {
	return terra.ReferenceAsString(lnc.ref.Append("cgroup_mode"))
}

func (lnc DataNodePoolNodeConfigLinuxNodeConfigAttributes) Sysctls() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](lnc.ref.Append("sysctls"))
}

type DataNodePoolNodeConfigLocalNvmeSsdBlockConfigAttributes struct {
	ref terra.Reference
}

func (lnsbc DataNodePoolNodeConfigLocalNvmeSsdBlockConfigAttributes) InternalRef() (terra.Reference, error) {
	return lnsbc.ref, nil
}

func (lnsbc DataNodePoolNodeConfigLocalNvmeSsdBlockConfigAttributes) InternalWithRef(ref terra.Reference) DataNodePoolNodeConfigLocalNvmeSsdBlockConfigAttributes {
	return DataNodePoolNodeConfigLocalNvmeSsdBlockConfigAttributes{ref: ref}
}

func (lnsbc DataNodePoolNodeConfigLocalNvmeSsdBlockConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return lnsbc.ref.InternalTokens()
}

func (lnsbc DataNodePoolNodeConfigLocalNvmeSsdBlockConfigAttributes) LocalSsdCount() terra.NumberValue {
	return terra.ReferenceAsNumber(lnsbc.ref.Append("local_ssd_count"))
}

type DataNodePoolNodeConfigReservationAffinityAttributes struct {
	ref terra.Reference
}

func (ra DataNodePoolNodeConfigReservationAffinityAttributes) InternalRef() (terra.Reference, error) {
	return ra.ref, nil
}

func (ra DataNodePoolNodeConfigReservationAffinityAttributes) InternalWithRef(ref terra.Reference) DataNodePoolNodeConfigReservationAffinityAttributes {
	return DataNodePoolNodeConfigReservationAffinityAttributes{ref: ref}
}

func (ra DataNodePoolNodeConfigReservationAffinityAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ra.ref.InternalTokens()
}

func (ra DataNodePoolNodeConfigReservationAffinityAttributes) ConsumeReservationType() terra.StringValue {
	return terra.ReferenceAsString(ra.ref.Append("consume_reservation_type"))
}

func (ra DataNodePoolNodeConfigReservationAffinityAttributes) Key() terra.StringValue {
	return terra.ReferenceAsString(ra.ref.Append("key"))
}

func (ra DataNodePoolNodeConfigReservationAffinityAttributes) Values() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ra.ref.Append("values"))
}

type DataNodePoolNodeConfigSandboxConfigAttributes struct {
	ref terra.Reference
}

func (sc DataNodePoolNodeConfigSandboxConfigAttributes) InternalRef() (terra.Reference, error) {
	return sc.ref, nil
}

func (sc DataNodePoolNodeConfigSandboxConfigAttributes) InternalWithRef(ref terra.Reference) DataNodePoolNodeConfigSandboxConfigAttributes {
	return DataNodePoolNodeConfigSandboxConfigAttributes{ref: ref}
}

func (sc DataNodePoolNodeConfigSandboxConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sc.ref.InternalTokens()
}

func (sc DataNodePoolNodeConfigSandboxConfigAttributes) SandboxType() terra.StringValue {
	return terra.ReferenceAsString(sc.ref.Append("sandbox_type"))
}

type DataNodePoolNodeConfigShieldedInstanceConfigAttributes struct {
	ref terra.Reference
}

func (sic DataNodePoolNodeConfigShieldedInstanceConfigAttributes) InternalRef() (terra.Reference, error) {
	return sic.ref, nil
}

func (sic DataNodePoolNodeConfigShieldedInstanceConfigAttributes) InternalWithRef(ref terra.Reference) DataNodePoolNodeConfigShieldedInstanceConfigAttributes {
	return DataNodePoolNodeConfigShieldedInstanceConfigAttributes{ref: ref}
}

func (sic DataNodePoolNodeConfigShieldedInstanceConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sic.ref.InternalTokens()
}

func (sic DataNodePoolNodeConfigShieldedInstanceConfigAttributes) EnableIntegrityMonitoring() terra.BoolValue {
	return terra.ReferenceAsBool(sic.ref.Append("enable_integrity_monitoring"))
}

func (sic DataNodePoolNodeConfigShieldedInstanceConfigAttributes) EnableSecureBoot() terra.BoolValue {
	return terra.ReferenceAsBool(sic.ref.Append("enable_secure_boot"))
}

type DataNodePoolNodeConfigSoleTenantConfigAttributes struct {
	ref terra.Reference
}

func (stc DataNodePoolNodeConfigSoleTenantConfigAttributes) InternalRef() (terra.Reference, error) {
	return stc.ref, nil
}

func (stc DataNodePoolNodeConfigSoleTenantConfigAttributes) InternalWithRef(ref terra.Reference) DataNodePoolNodeConfigSoleTenantConfigAttributes {
	return DataNodePoolNodeConfigSoleTenantConfigAttributes{ref: ref}
}

func (stc DataNodePoolNodeConfigSoleTenantConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return stc.ref.InternalTokens()
}

func (stc DataNodePoolNodeConfigSoleTenantConfigAttributes) NodeAffinity() terra.SetValue[DataNodePoolNodeConfigSoleTenantConfigNodeAffinityAttributes] {
	return terra.ReferenceAsSet[DataNodePoolNodeConfigSoleTenantConfigNodeAffinityAttributes](stc.ref.Append("node_affinity"))
}

type DataNodePoolNodeConfigSoleTenantConfigNodeAffinityAttributes struct {
	ref terra.Reference
}

func (na DataNodePoolNodeConfigSoleTenantConfigNodeAffinityAttributes) InternalRef() (terra.Reference, error) {
	return na.ref, nil
}

func (na DataNodePoolNodeConfigSoleTenantConfigNodeAffinityAttributes) InternalWithRef(ref terra.Reference) DataNodePoolNodeConfigSoleTenantConfigNodeAffinityAttributes {
	return DataNodePoolNodeConfigSoleTenantConfigNodeAffinityAttributes{ref: ref}
}

func (na DataNodePoolNodeConfigSoleTenantConfigNodeAffinityAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return na.ref.InternalTokens()
}

func (na DataNodePoolNodeConfigSoleTenantConfigNodeAffinityAttributes) Key() terra.StringValue {
	return terra.ReferenceAsString(na.ref.Append("key"))
}

func (na DataNodePoolNodeConfigSoleTenantConfigNodeAffinityAttributes) Operator() terra.StringValue {
	return terra.ReferenceAsString(na.ref.Append("operator"))
}

func (na DataNodePoolNodeConfigSoleTenantConfigNodeAffinityAttributes) Values() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](na.ref.Append("values"))
}

type DataNodePoolNodeConfigTaintAttributes struct {
	ref terra.Reference
}

func (t DataNodePoolNodeConfigTaintAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t DataNodePoolNodeConfigTaintAttributes) InternalWithRef(ref terra.Reference) DataNodePoolNodeConfigTaintAttributes {
	return DataNodePoolNodeConfigTaintAttributes{ref: ref}
}

func (t DataNodePoolNodeConfigTaintAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t DataNodePoolNodeConfigTaintAttributes) Effect() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("effect"))
}

func (t DataNodePoolNodeConfigTaintAttributes) Key() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("key"))
}

func (t DataNodePoolNodeConfigTaintAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("value"))
}

type DataNodePoolNodeConfigWorkloadMetadataConfigAttributes struct {
	ref terra.Reference
}

func (wmc DataNodePoolNodeConfigWorkloadMetadataConfigAttributes) InternalRef() (terra.Reference, error) {
	return wmc.ref, nil
}

func (wmc DataNodePoolNodeConfigWorkloadMetadataConfigAttributes) InternalWithRef(ref terra.Reference) DataNodePoolNodeConfigWorkloadMetadataConfigAttributes {
	return DataNodePoolNodeConfigWorkloadMetadataConfigAttributes{ref: ref}
}

func (wmc DataNodePoolNodeConfigWorkloadMetadataConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return wmc.ref.InternalTokens()
}

func (wmc DataNodePoolNodeConfigWorkloadMetadataConfigAttributes) Mode() terra.StringValue {
	return terra.ReferenceAsString(wmc.ref.Append("mode"))
}

type DataNodePoolPlacementPolicyAttributes struct {
	ref terra.Reference
}

func (pp DataNodePoolPlacementPolicyAttributes) InternalRef() (terra.Reference, error) {
	return pp.ref, nil
}

func (pp DataNodePoolPlacementPolicyAttributes) InternalWithRef(ref terra.Reference) DataNodePoolPlacementPolicyAttributes {
	return DataNodePoolPlacementPolicyAttributes{ref: ref}
}

func (pp DataNodePoolPlacementPolicyAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return pp.ref.InternalTokens()
}

func (pp DataNodePoolPlacementPolicyAttributes) PolicyName() terra.StringValue {
	return terra.ReferenceAsString(pp.ref.Append("policy_name"))
}

func (pp DataNodePoolPlacementPolicyAttributes) TpuTopology() terra.StringValue {
	return terra.ReferenceAsString(pp.ref.Append("tpu_topology"))
}

func (pp DataNodePoolPlacementPolicyAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(pp.ref.Append("type"))
}

type DataNodePoolQueuedProvisioningAttributes struct {
	ref terra.Reference
}

func (qp DataNodePoolQueuedProvisioningAttributes) InternalRef() (terra.Reference, error) {
	return qp.ref, nil
}

func (qp DataNodePoolQueuedProvisioningAttributes) InternalWithRef(ref terra.Reference) DataNodePoolQueuedProvisioningAttributes {
	return DataNodePoolQueuedProvisioningAttributes{ref: ref}
}

func (qp DataNodePoolQueuedProvisioningAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return qp.ref.InternalTokens()
}

func (qp DataNodePoolQueuedProvisioningAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceAsBool(qp.ref.Append("enabled"))
}

type DataNodePoolUpgradeSettingsAttributes struct {
	ref terra.Reference
}

func (us DataNodePoolUpgradeSettingsAttributes) InternalRef() (terra.Reference, error) {
	return us.ref, nil
}

func (us DataNodePoolUpgradeSettingsAttributes) InternalWithRef(ref terra.Reference) DataNodePoolUpgradeSettingsAttributes {
	return DataNodePoolUpgradeSettingsAttributes{ref: ref}
}

func (us DataNodePoolUpgradeSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return us.ref.InternalTokens()
}

func (us DataNodePoolUpgradeSettingsAttributes) MaxSurge() terra.NumberValue {
	return terra.ReferenceAsNumber(us.ref.Append("max_surge"))
}

func (us DataNodePoolUpgradeSettingsAttributes) MaxUnavailable() terra.NumberValue {
	return terra.ReferenceAsNumber(us.ref.Append("max_unavailable"))
}

func (us DataNodePoolUpgradeSettingsAttributes) Strategy() terra.StringValue {
	return terra.ReferenceAsString(us.ref.Append("strategy"))
}

func (us DataNodePoolUpgradeSettingsAttributes) BlueGreenSettings() terra.ListValue[DataNodePoolUpgradeSettingsBlueGreenSettingsAttributes] {
	return terra.ReferenceAsList[DataNodePoolUpgradeSettingsBlueGreenSettingsAttributes](us.ref.Append("blue_green_settings"))
}

type DataNodePoolUpgradeSettingsBlueGreenSettingsAttributes struct {
	ref terra.Reference
}

func (bgs DataNodePoolUpgradeSettingsBlueGreenSettingsAttributes) InternalRef() (terra.Reference, error) {
	return bgs.ref, nil
}

func (bgs DataNodePoolUpgradeSettingsBlueGreenSettingsAttributes) InternalWithRef(ref terra.Reference) DataNodePoolUpgradeSettingsBlueGreenSettingsAttributes {
	return DataNodePoolUpgradeSettingsBlueGreenSettingsAttributes{ref: ref}
}

func (bgs DataNodePoolUpgradeSettingsBlueGreenSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return bgs.ref.InternalTokens()
}

func (bgs DataNodePoolUpgradeSettingsBlueGreenSettingsAttributes) NodePoolSoakDuration() terra.StringValue {
	return terra.ReferenceAsString(bgs.ref.Append("node_pool_soak_duration"))
}

func (bgs DataNodePoolUpgradeSettingsBlueGreenSettingsAttributes) StandardRolloutPolicy() terra.ListValue[DataNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyAttributes] {
	return terra.ReferenceAsList[DataNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyAttributes](bgs.ref.Append("standard_rollout_policy"))
}

type DataNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyAttributes struct {
	ref terra.Reference
}

func (srp DataNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyAttributes) InternalRef() (terra.Reference, error) {
	return srp.ref, nil
}

func (srp DataNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyAttributes) InternalWithRef(ref terra.Reference) DataNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyAttributes {
	return DataNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyAttributes{ref: ref}
}

func (srp DataNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return srp.ref.InternalTokens()
}

func (srp DataNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyAttributes) BatchNodeCount() terra.NumberValue {
	return terra.ReferenceAsNumber(srp.ref.Append("batch_node_count"))
}

func (srp DataNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyAttributes) BatchPercentage() terra.NumberValue {
	return terra.ReferenceAsNumber(srp.ref.Append("batch_percentage"))
}

func (srp DataNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyAttributes) BatchSoakDuration() terra.StringValue {
	return terra.ReferenceAsString(srp.ref.Append("batch_soak_duration"))
}

type DataNodePoolAutoConfigAttributes struct {
	ref terra.Reference
}

func (npac DataNodePoolAutoConfigAttributes) InternalRef() (terra.Reference, error) {
	return npac.ref, nil
}

func (npac DataNodePoolAutoConfigAttributes) InternalWithRef(ref terra.Reference) DataNodePoolAutoConfigAttributes {
	return DataNodePoolAutoConfigAttributes{ref: ref}
}

func (npac DataNodePoolAutoConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return npac.ref.InternalTokens()
}

func (npac DataNodePoolAutoConfigAttributes) ResourceManagerTags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](npac.ref.Append("resource_manager_tags"))
}

func (npac DataNodePoolAutoConfigAttributes) NetworkTags() terra.ListValue[DataNodePoolAutoConfigNetworkTagsAttributes] {
	return terra.ReferenceAsList[DataNodePoolAutoConfigNetworkTagsAttributes](npac.ref.Append("network_tags"))
}

type DataNodePoolAutoConfigNetworkTagsAttributes struct {
	ref terra.Reference
}

func (nt DataNodePoolAutoConfigNetworkTagsAttributes) InternalRef() (terra.Reference, error) {
	return nt.ref, nil
}

func (nt DataNodePoolAutoConfigNetworkTagsAttributes) InternalWithRef(ref terra.Reference) DataNodePoolAutoConfigNetworkTagsAttributes {
	return DataNodePoolAutoConfigNetworkTagsAttributes{ref: ref}
}

func (nt DataNodePoolAutoConfigNetworkTagsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return nt.ref.InternalTokens()
}

func (nt DataNodePoolAutoConfigNetworkTagsAttributes) Tags() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](nt.ref.Append("tags"))
}

type DataNodePoolDefaultsAttributes struct {
	ref terra.Reference
}

func (npd DataNodePoolDefaultsAttributes) InternalRef() (terra.Reference, error) {
	return npd.ref, nil
}

func (npd DataNodePoolDefaultsAttributes) InternalWithRef(ref terra.Reference) DataNodePoolDefaultsAttributes {
	return DataNodePoolDefaultsAttributes{ref: ref}
}

func (npd DataNodePoolDefaultsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return npd.ref.InternalTokens()
}

func (npd DataNodePoolDefaultsAttributes) NodeConfigDefaults() terra.ListValue[DataNodePoolDefaultsNodeConfigDefaultsAttributes] {
	return terra.ReferenceAsList[DataNodePoolDefaultsNodeConfigDefaultsAttributes](npd.ref.Append("node_config_defaults"))
}

type DataNodePoolDefaultsNodeConfigDefaultsAttributes struct {
	ref terra.Reference
}

func (ncd DataNodePoolDefaultsNodeConfigDefaultsAttributes) InternalRef() (terra.Reference, error) {
	return ncd.ref, nil
}

func (ncd DataNodePoolDefaultsNodeConfigDefaultsAttributes) InternalWithRef(ref terra.Reference) DataNodePoolDefaultsNodeConfigDefaultsAttributes {
	return DataNodePoolDefaultsNodeConfigDefaultsAttributes{ref: ref}
}

func (ncd DataNodePoolDefaultsNodeConfigDefaultsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ncd.ref.InternalTokens()
}

func (ncd DataNodePoolDefaultsNodeConfigDefaultsAttributes) LoggingVariant() terra.StringValue {
	return terra.ReferenceAsString(ncd.ref.Append("logging_variant"))
}

func (ncd DataNodePoolDefaultsNodeConfigDefaultsAttributes) GcfsConfig() terra.ListValue[DataNodePoolDefaultsNodeConfigDefaultsGcfsConfigAttributes] {
	return terra.ReferenceAsList[DataNodePoolDefaultsNodeConfigDefaultsGcfsConfigAttributes](ncd.ref.Append("gcfs_config"))
}

type DataNodePoolDefaultsNodeConfigDefaultsGcfsConfigAttributes struct {
	ref terra.Reference
}

func (gc DataNodePoolDefaultsNodeConfigDefaultsGcfsConfigAttributes) InternalRef() (terra.Reference, error) {
	return gc.ref, nil
}

func (gc DataNodePoolDefaultsNodeConfigDefaultsGcfsConfigAttributes) InternalWithRef(ref terra.Reference) DataNodePoolDefaultsNodeConfigDefaultsGcfsConfigAttributes {
	return DataNodePoolDefaultsNodeConfigDefaultsGcfsConfigAttributes{ref: ref}
}

func (gc DataNodePoolDefaultsNodeConfigDefaultsGcfsConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return gc.ref.InternalTokens()
}

func (gc DataNodePoolDefaultsNodeConfigDefaultsGcfsConfigAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceAsBool(gc.ref.Append("enabled"))
}

type DataNotificationConfigAttributes struct {
	ref terra.Reference
}

func (nc DataNotificationConfigAttributes) InternalRef() (terra.Reference, error) {
	return nc.ref, nil
}

func (nc DataNotificationConfigAttributes) InternalWithRef(ref terra.Reference) DataNotificationConfigAttributes {
	return DataNotificationConfigAttributes{ref: ref}
}

func (nc DataNotificationConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return nc.ref.InternalTokens()
}

func (nc DataNotificationConfigAttributes) Pubsub() terra.ListValue[DataNotificationConfigPubsubAttributes] {
	return terra.ReferenceAsList[DataNotificationConfigPubsubAttributes](nc.ref.Append("pubsub"))
}

type DataNotificationConfigPubsubAttributes struct {
	ref terra.Reference
}

func (p DataNotificationConfigPubsubAttributes) InternalRef() (terra.Reference, error) {
	return p.ref, nil
}

func (p DataNotificationConfigPubsubAttributes) InternalWithRef(ref terra.Reference) DataNotificationConfigPubsubAttributes {
	return DataNotificationConfigPubsubAttributes{ref: ref}
}

func (p DataNotificationConfigPubsubAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return p.ref.InternalTokens()
}

func (p DataNotificationConfigPubsubAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceAsBool(p.ref.Append("enabled"))
}

func (p DataNotificationConfigPubsubAttributes) Topic() terra.StringValue {
	return terra.ReferenceAsString(p.ref.Append("topic"))
}

func (p DataNotificationConfigPubsubAttributes) Filter() terra.ListValue[DataNotificationConfigPubsubFilterAttributes] {
	return terra.ReferenceAsList[DataNotificationConfigPubsubFilterAttributes](p.ref.Append("filter"))
}

type DataNotificationConfigPubsubFilterAttributes struct {
	ref terra.Reference
}

func (f DataNotificationConfigPubsubFilterAttributes) InternalRef() (terra.Reference, error) {
	return f.ref, nil
}

func (f DataNotificationConfigPubsubFilterAttributes) InternalWithRef(ref terra.Reference) DataNotificationConfigPubsubFilterAttributes {
	return DataNotificationConfigPubsubFilterAttributes{ref: ref}
}

func (f DataNotificationConfigPubsubFilterAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return f.ref.InternalTokens()
}

func (f DataNotificationConfigPubsubFilterAttributes) EventType() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](f.ref.Append("event_type"))
}

type DataPodSecurityPolicyConfigAttributes struct {
	ref terra.Reference
}

func (pspc DataPodSecurityPolicyConfigAttributes) InternalRef() (terra.Reference, error) {
	return pspc.ref, nil
}

func (pspc DataPodSecurityPolicyConfigAttributes) InternalWithRef(ref terra.Reference) DataPodSecurityPolicyConfigAttributes {
	return DataPodSecurityPolicyConfigAttributes{ref: ref}
}

func (pspc DataPodSecurityPolicyConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return pspc.ref.InternalTokens()
}

func (pspc DataPodSecurityPolicyConfigAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceAsBool(pspc.ref.Append("enabled"))
}

type DataPrivateClusterConfigAttributes struct {
	ref terra.Reference
}

func (pcc DataPrivateClusterConfigAttributes) InternalRef() (terra.Reference, error) {
	return pcc.ref, nil
}

func (pcc DataPrivateClusterConfigAttributes) InternalWithRef(ref terra.Reference) DataPrivateClusterConfigAttributes {
	return DataPrivateClusterConfigAttributes{ref: ref}
}

func (pcc DataPrivateClusterConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return pcc.ref.InternalTokens()
}

func (pcc DataPrivateClusterConfigAttributes) EnablePrivateEndpoint() terra.BoolValue {
	return terra.ReferenceAsBool(pcc.ref.Append("enable_private_endpoint"))
}

func (pcc DataPrivateClusterConfigAttributes) EnablePrivateNodes() terra.BoolValue {
	return terra.ReferenceAsBool(pcc.ref.Append("enable_private_nodes"))
}

func (pcc DataPrivateClusterConfigAttributes) MasterIpv4CidrBlock() terra.StringValue {
	return terra.ReferenceAsString(pcc.ref.Append("master_ipv4_cidr_block"))
}

func (pcc DataPrivateClusterConfigAttributes) PeeringName() terra.StringValue {
	return terra.ReferenceAsString(pcc.ref.Append("peering_name"))
}

func (pcc DataPrivateClusterConfigAttributes) PrivateEndpoint() terra.StringValue {
	return terra.ReferenceAsString(pcc.ref.Append("private_endpoint"))
}

func (pcc DataPrivateClusterConfigAttributes) PrivateEndpointSubnetwork() terra.StringValue {
	return terra.ReferenceAsString(pcc.ref.Append("private_endpoint_subnetwork"))
}

func (pcc DataPrivateClusterConfigAttributes) PublicEndpoint() terra.StringValue {
	return terra.ReferenceAsString(pcc.ref.Append("public_endpoint"))
}

func (pcc DataPrivateClusterConfigAttributes) MasterGlobalAccessConfig() terra.ListValue[DataPrivateClusterConfigMasterGlobalAccessConfigAttributes] {
	return terra.ReferenceAsList[DataPrivateClusterConfigMasterGlobalAccessConfigAttributes](pcc.ref.Append("master_global_access_config"))
}

type DataPrivateClusterConfigMasterGlobalAccessConfigAttributes struct {
	ref terra.Reference
}

func (mgac DataPrivateClusterConfigMasterGlobalAccessConfigAttributes) InternalRef() (terra.Reference, error) {
	return mgac.ref, nil
}

func (mgac DataPrivateClusterConfigMasterGlobalAccessConfigAttributes) InternalWithRef(ref terra.Reference) DataPrivateClusterConfigMasterGlobalAccessConfigAttributes {
	return DataPrivateClusterConfigMasterGlobalAccessConfigAttributes{ref: ref}
}

func (mgac DataPrivateClusterConfigMasterGlobalAccessConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return mgac.ref.InternalTokens()
}

func (mgac DataPrivateClusterConfigMasterGlobalAccessConfigAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceAsBool(mgac.ref.Append("enabled"))
}

type DataProtectConfigAttributes struct {
	ref terra.Reference
}

func (pc DataProtectConfigAttributes) InternalRef() (terra.Reference, error) {
	return pc.ref, nil
}

func (pc DataProtectConfigAttributes) InternalWithRef(ref terra.Reference) DataProtectConfigAttributes {
	return DataProtectConfigAttributes{ref: ref}
}

func (pc DataProtectConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return pc.ref.InternalTokens()
}

func (pc DataProtectConfigAttributes) WorkloadVulnerabilityMode() terra.StringValue {
	return terra.ReferenceAsString(pc.ref.Append("workload_vulnerability_mode"))
}

func (pc DataProtectConfigAttributes) WorkloadConfig() terra.ListValue[DataProtectConfigWorkloadConfigAttributes] {
	return terra.ReferenceAsList[DataProtectConfigWorkloadConfigAttributes](pc.ref.Append("workload_config"))
}

type DataProtectConfigWorkloadConfigAttributes struct {
	ref terra.Reference
}

func (wc DataProtectConfigWorkloadConfigAttributes) InternalRef() (terra.Reference, error) {
	return wc.ref, nil
}

func (wc DataProtectConfigWorkloadConfigAttributes) InternalWithRef(ref terra.Reference) DataProtectConfigWorkloadConfigAttributes {
	return DataProtectConfigWorkloadConfigAttributes{ref: ref}
}

func (wc DataProtectConfigWorkloadConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return wc.ref.InternalTokens()
}

func (wc DataProtectConfigWorkloadConfigAttributes) AuditMode() terra.StringValue {
	return terra.ReferenceAsString(wc.ref.Append("audit_mode"))
}

type DataReleaseChannelAttributes struct {
	ref terra.Reference
}

func (rc DataReleaseChannelAttributes) InternalRef() (terra.Reference, error) {
	return rc.ref, nil
}

func (rc DataReleaseChannelAttributes) InternalWithRef(ref terra.Reference) DataReleaseChannelAttributes {
	return DataReleaseChannelAttributes{ref: ref}
}

func (rc DataReleaseChannelAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rc.ref.InternalTokens()
}

func (rc DataReleaseChannelAttributes) Channel() terra.StringValue {
	return terra.ReferenceAsString(rc.ref.Append("channel"))
}

type DataResourceUsageExportConfigAttributes struct {
	ref terra.Reference
}

func (ruec DataResourceUsageExportConfigAttributes) InternalRef() (terra.Reference, error) {
	return ruec.ref, nil
}

func (ruec DataResourceUsageExportConfigAttributes) InternalWithRef(ref terra.Reference) DataResourceUsageExportConfigAttributes {
	return DataResourceUsageExportConfigAttributes{ref: ref}
}

func (ruec DataResourceUsageExportConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ruec.ref.InternalTokens()
}

func (ruec DataResourceUsageExportConfigAttributes) EnableNetworkEgressMetering() terra.BoolValue {
	return terra.ReferenceAsBool(ruec.ref.Append("enable_network_egress_metering"))
}

func (ruec DataResourceUsageExportConfigAttributes) EnableResourceConsumptionMetering() terra.BoolValue {
	return terra.ReferenceAsBool(ruec.ref.Append("enable_resource_consumption_metering"))
}

func (ruec DataResourceUsageExportConfigAttributes) BigqueryDestination() terra.ListValue[DataResourceUsageExportConfigBigqueryDestinationAttributes] {
	return terra.ReferenceAsList[DataResourceUsageExportConfigBigqueryDestinationAttributes](ruec.ref.Append("bigquery_destination"))
}

type DataResourceUsageExportConfigBigqueryDestinationAttributes struct {
	ref terra.Reference
}

func (bd DataResourceUsageExportConfigBigqueryDestinationAttributes) InternalRef() (terra.Reference, error) {
	return bd.ref, nil
}

func (bd DataResourceUsageExportConfigBigqueryDestinationAttributes) InternalWithRef(ref terra.Reference) DataResourceUsageExportConfigBigqueryDestinationAttributes {
	return DataResourceUsageExportConfigBigqueryDestinationAttributes{ref: ref}
}

func (bd DataResourceUsageExportConfigBigqueryDestinationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return bd.ref.InternalTokens()
}

func (bd DataResourceUsageExportConfigBigqueryDestinationAttributes) DatasetId() terra.StringValue {
	return terra.ReferenceAsString(bd.ref.Append("dataset_id"))
}

type DataSecurityPostureConfigAttributes struct {
	ref terra.Reference
}

func (spc DataSecurityPostureConfigAttributes) InternalRef() (terra.Reference, error) {
	return spc.ref, nil
}

func (spc DataSecurityPostureConfigAttributes) InternalWithRef(ref terra.Reference) DataSecurityPostureConfigAttributes {
	return DataSecurityPostureConfigAttributes{ref: ref}
}

func (spc DataSecurityPostureConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return spc.ref.InternalTokens()
}

func (spc DataSecurityPostureConfigAttributes) Mode() terra.StringValue {
	return terra.ReferenceAsString(spc.ref.Append("mode"))
}

func (spc DataSecurityPostureConfigAttributes) VulnerabilityMode() terra.StringValue {
	return terra.ReferenceAsString(spc.ref.Append("vulnerability_mode"))
}

type DataServiceExternalIpsConfigAttributes struct {
	ref terra.Reference
}

func (seic DataServiceExternalIpsConfigAttributes) InternalRef() (terra.Reference, error) {
	return seic.ref, nil
}

func (seic DataServiceExternalIpsConfigAttributes) InternalWithRef(ref terra.Reference) DataServiceExternalIpsConfigAttributes {
	return DataServiceExternalIpsConfigAttributes{ref: ref}
}

func (seic DataServiceExternalIpsConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return seic.ref.InternalTokens()
}

func (seic DataServiceExternalIpsConfigAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceAsBool(seic.ref.Append("enabled"))
}

type DataTpuConfigAttributes struct {
	ref terra.Reference
}

func (tc DataTpuConfigAttributes) InternalRef() (terra.Reference, error) {
	return tc.ref, nil
}

func (tc DataTpuConfigAttributes) InternalWithRef(ref terra.Reference) DataTpuConfigAttributes {
	return DataTpuConfigAttributes{ref: ref}
}

func (tc DataTpuConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return tc.ref.InternalTokens()
}

func (tc DataTpuConfigAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceAsBool(tc.ref.Append("enabled"))
}

func (tc DataTpuConfigAttributes) Ipv4CidrBlock() terra.StringValue {
	return terra.ReferenceAsString(tc.ref.Append("ipv4_cidr_block"))
}

func (tc DataTpuConfigAttributes) UseServiceNetworking() terra.BoolValue {
	return terra.ReferenceAsBool(tc.ref.Append("use_service_networking"))
}

type DataVerticalPodAutoscalingAttributes struct {
	ref terra.Reference
}

func (vpa DataVerticalPodAutoscalingAttributes) InternalRef() (terra.Reference, error) {
	return vpa.ref, nil
}

func (vpa DataVerticalPodAutoscalingAttributes) InternalWithRef(ref terra.Reference) DataVerticalPodAutoscalingAttributes {
	return DataVerticalPodAutoscalingAttributes{ref: ref}
}

func (vpa DataVerticalPodAutoscalingAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return vpa.ref.InternalTokens()
}

func (vpa DataVerticalPodAutoscalingAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceAsBool(vpa.ref.Append("enabled"))
}

type DataWorkloadAltsConfigAttributes struct {
	ref terra.Reference
}

func (wac DataWorkloadAltsConfigAttributes) InternalRef() (terra.Reference, error) {
	return wac.ref, nil
}

func (wac DataWorkloadAltsConfigAttributes) InternalWithRef(ref terra.Reference) DataWorkloadAltsConfigAttributes {
	return DataWorkloadAltsConfigAttributes{ref: ref}
}

func (wac DataWorkloadAltsConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return wac.ref.InternalTokens()
}

func (wac DataWorkloadAltsConfigAttributes) EnableAlts() terra.BoolValue {
	return terra.ReferenceAsBool(wac.ref.Append("enable_alts"))
}

type DataWorkloadIdentityConfigAttributes struct {
	ref terra.Reference
}

func (wic DataWorkloadIdentityConfigAttributes) InternalRef() (terra.Reference, error) {
	return wic.ref, nil
}

func (wic DataWorkloadIdentityConfigAttributes) InternalWithRef(ref terra.Reference) DataWorkloadIdentityConfigAttributes {
	return DataWorkloadIdentityConfigAttributes{ref: ref}
}

func (wic DataWorkloadIdentityConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return wic.ref.InternalTokens()
}

func (wic DataWorkloadIdentityConfigAttributes) WorkloadPool() terra.StringValue {
	return terra.ReferenceAsString(wic.ref.Append("workload_pool"))
}

type DataAddonsConfigState struct {
	CloudrunConfig                   []DataAddonsConfigCloudrunConfigState                   `json:"cloudrun_config"`
	ConfigConnectorConfig            []DataAddonsConfigConfigConnectorConfigState            `json:"config_connector_config"`
	DnsCacheConfig                   []DataAddonsConfigDnsCacheConfigState                   `json:"dns_cache_config"`
	GcePersistentDiskCsiDriverConfig []DataAddonsConfigGcePersistentDiskCsiDriverConfigState `json:"gce_persistent_disk_csi_driver_config"`
	GcpFilestoreCsiDriverConfig      []DataAddonsConfigGcpFilestoreCsiDriverConfigState      `json:"gcp_filestore_csi_driver_config"`
	GcsFuseCsiDriverConfig           []DataAddonsConfigGcsFuseCsiDriverConfigState           `json:"gcs_fuse_csi_driver_config"`
	GkeBackupAgentConfig             []DataAddonsConfigGkeBackupAgentConfigState             `json:"gke_backup_agent_config"`
	HorizontalPodAutoscaling         []DataAddonsConfigHorizontalPodAutoscalingState         `json:"horizontal_pod_autoscaling"`
	HttpLoadBalancing                []DataAddonsConfigHttpLoadBalancingState                `json:"http_load_balancing"`
	IstioConfig                      []DataAddonsConfigIstioConfigState                      `json:"istio_config"`
	KalmConfig                       []DataAddonsConfigKalmConfigState                       `json:"kalm_config"`
	NetworkPolicyConfig              []DataAddonsConfigNetworkPolicyConfigState              `json:"network_policy_config"`
	StatefulHaConfig                 []DataAddonsConfigStatefulHaConfigState                 `json:"stateful_ha_config"`
}

type DataAddonsConfigCloudrunConfigState struct {
	Disabled         bool   `json:"disabled"`
	LoadBalancerType string `json:"load_balancer_type"`
}

type DataAddonsConfigConfigConnectorConfigState struct {
	Enabled bool `json:"enabled"`
}

type DataAddonsConfigDnsCacheConfigState struct {
	Enabled bool `json:"enabled"`
}

type DataAddonsConfigGcePersistentDiskCsiDriverConfigState struct {
	Enabled bool `json:"enabled"`
}

type DataAddonsConfigGcpFilestoreCsiDriverConfigState struct {
	Enabled bool `json:"enabled"`
}

type DataAddonsConfigGcsFuseCsiDriverConfigState struct {
	Enabled bool `json:"enabled"`
}

type DataAddonsConfigGkeBackupAgentConfigState struct {
	Enabled bool `json:"enabled"`
}

type DataAddonsConfigHorizontalPodAutoscalingState struct {
	Disabled bool `json:"disabled"`
}

type DataAddonsConfigHttpLoadBalancingState struct {
	Disabled bool `json:"disabled"`
}

type DataAddonsConfigIstioConfigState struct {
	Auth     string `json:"auth"`
	Disabled bool   `json:"disabled"`
}

type DataAddonsConfigKalmConfigState struct {
	Enabled bool `json:"enabled"`
}

type DataAddonsConfigNetworkPolicyConfigState struct {
	Disabled bool `json:"disabled"`
}

type DataAddonsConfigStatefulHaConfigState struct {
	Enabled bool `json:"enabled"`
}

type DataAuthenticatorGroupsConfigState struct {
	SecurityGroup string `json:"security_group"`
}

type DataBinaryAuthorizationState struct {
	Enabled        bool   `json:"enabled"`
	EvaluationMode string `json:"evaluation_mode"`
}

type DataClusterAutoscalingState struct {
	AutoscalingProfile       string                                                `json:"autoscaling_profile"`
	Enabled                  bool                                                  `json:"enabled"`
	AutoProvisioningDefaults []DataClusterAutoscalingAutoProvisioningDefaultsState `json:"auto_provisioning_defaults"`
	ResourceLimits           []DataClusterAutoscalingResourceLimitsState           `json:"resource_limits"`
}

type DataClusterAutoscalingAutoProvisioningDefaultsState struct {
	BootDiskKmsKey         string                                                                      `json:"boot_disk_kms_key"`
	DiskSize               float64                                                                     `json:"disk_size"`
	DiskType               string                                                                      `json:"disk_type"`
	ImageType              string                                                                      `json:"image_type"`
	MinCpuPlatform         string                                                                      `json:"min_cpu_platform"`
	OauthScopes            []string                                                                    `json:"oauth_scopes"`
	ServiceAccount         string                                                                      `json:"service_account"`
	Management             []DataClusterAutoscalingAutoProvisioningDefaultsManagementState             `json:"management"`
	ShieldedInstanceConfig []DataClusterAutoscalingAutoProvisioningDefaultsShieldedInstanceConfigState `json:"shielded_instance_config"`
	UpgradeSettings        []DataClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsState        `json:"upgrade_settings"`
}

type DataClusterAutoscalingAutoProvisioningDefaultsManagementState struct {
	AutoRepair     bool                                                                          `json:"auto_repair"`
	AutoUpgrade    bool                                                                          `json:"auto_upgrade"`
	UpgradeOptions []DataClusterAutoscalingAutoProvisioningDefaultsManagementUpgradeOptionsState `json:"upgrade_options"`
}

type DataClusterAutoscalingAutoProvisioningDefaultsManagementUpgradeOptionsState struct {
	AutoUpgradeStartTime string `json:"auto_upgrade_start_time"`
	Description          string `json:"description"`
}

type DataClusterAutoscalingAutoProvisioningDefaultsShieldedInstanceConfigState struct {
	EnableIntegrityMonitoring bool `json:"enable_integrity_monitoring"`
	EnableSecureBoot          bool `json:"enable_secure_boot"`
}

type DataClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsState struct {
	MaxSurge          float64                                                                               `json:"max_surge"`
	MaxUnavailable    float64                                                                               `json:"max_unavailable"`
	Strategy          string                                                                                `json:"strategy"`
	BlueGreenSettings []DataClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsState `json:"blue_green_settings"`
}

type DataClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsState struct {
	NodePoolSoakDuration  string                                                        `json:"node_pool_soak_duration"`
	StandardRolloutPolicy []DataClusterAutoscalingAutoProvisioningDefaultsF08F146EState `json:"standard_rollout_policy"`
}

type DataClusterAutoscalingAutoProvisioningDefaultsF08F146EState struct {
	BatchNodeCount    float64 `json:"batch_node_count"`
	BatchPercentage   float64 `json:"batch_percentage"`
	BatchSoakDuration string  `json:"batch_soak_duration"`
}

type DataClusterAutoscalingResourceLimitsState struct {
	Maximum      float64 `json:"maximum"`
	Minimum      float64 `json:"minimum"`
	ResourceType string  `json:"resource_type"`
}

type DataClusterTelemetryState struct {
	Type string `json:"type"`
}

type DataConfidentialNodesState struct {
	Enabled bool `json:"enabled"`
}

type DataCostManagementConfigState struct {
	Enabled bool `json:"enabled"`
}

type DataDatabaseEncryptionState struct {
	KeyName string `json:"key_name"`
	State   string `json:"state"`
}

type DataDefaultSnatStatusState struct {
	Disabled bool `json:"disabled"`
}

type DataDnsConfigState struct {
	ClusterDns       string `json:"cluster_dns"`
	ClusterDnsDomain string `json:"cluster_dns_domain"`
	ClusterDnsScope  string `json:"cluster_dns_scope"`
}

type DataEnableK8SBetaApisState struct {
	EnabledApis []string `json:"enabled_apis"`
}

type DataFleetState struct {
	Membership         string `json:"membership"`
	MembershipId       string `json:"membership_id"`
	MembershipLocation string `json:"membership_location"`
	PreRegistered      bool   `json:"pre_registered"`
	Project            string `json:"project"`
}

type DataGatewayApiConfigState struct {
	Channel string `json:"channel"`
}

type DataIdentityServiceConfigState struct {
	Enabled bool `json:"enabled"`
}

type DataIpAllocationPolicyState struct {
	ClusterIpv4CidrBlock       string                                                  `json:"cluster_ipv4_cidr_block"`
	ClusterSecondaryRangeName  string                                                  `json:"cluster_secondary_range_name"`
	ServicesIpv4CidrBlock      string                                                  `json:"services_ipv4_cidr_block"`
	ServicesSecondaryRangeName string                                                  `json:"services_secondary_range_name"`
	StackType                  string                                                  `json:"stack_type"`
	AdditionalPodRangesConfig  []DataIpAllocationPolicyAdditionalPodRangesConfigState  `json:"additional_pod_ranges_config"`
	PodCidrOverprovisionConfig []DataIpAllocationPolicyPodCidrOverprovisionConfigState `json:"pod_cidr_overprovision_config"`
}

type DataIpAllocationPolicyAdditionalPodRangesConfigState struct {
	PodRangeNames []string `json:"pod_range_names"`
}

type DataIpAllocationPolicyPodCidrOverprovisionConfigState struct {
	Disabled bool `json:"disabled"`
}

type DataLoggingConfigState struct {
	EnableComponents []string `json:"enable_components"`
}

type DataMaintenancePolicyState struct {
	DailyMaintenanceWindow []DataMaintenancePolicyDailyMaintenanceWindowState `json:"daily_maintenance_window"`
	MaintenanceExclusion   []DataMaintenancePolicyMaintenanceExclusionState   `json:"maintenance_exclusion"`
	RecurringWindow        []DataMaintenancePolicyRecurringWindowState        `json:"recurring_window"`
}

type DataMaintenancePolicyDailyMaintenanceWindowState struct {
	Duration  string `json:"duration"`
	StartTime string `json:"start_time"`
}

type DataMaintenancePolicyMaintenanceExclusionState struct {
	EndTime          string                                                           `json:"end_time"`
	ExclusionName    string                                                           `json:"exclusion_name"`
	StartTime        string                                                           `json:"start_time"`
	ExclusionOptions []DataMaintenancePolicyMaintenanceExclusionExclusionOptionsState `json:"exclusion_options"`
}

type DataMaintenancePolicyMaintenanceExclusionExclusionOptionsState struct {
	Scope string `json:"scope"`
}

type DataMaintenancePolicyRecurringWindowState struct {
	EndTime    string `json:"end_time"`
	Recurrence string `json:"recurrence"`
	StartTime  string `json:"start_time"`
}

type DataMasterAuthState struct {
	ClientCertificate       string                                       `json:"client_certificate"`
	ClientKey               string                                       `json:"client_key"`
	ClusterCaCertificate    string                                       `json:"cluster_ca_certificate"`
	ClientCertificateConfig []DataMasterAuthClientCertificateConfigState `json:"client_certificate_config"`
}

type DataMasterAuthClientCertificateConfigState struct {
	IssueClientCertificate bool `json:"issue_client_certificate"`
}

type DataMasterAuthorizedNetworksConfigState struct {
	GcpPublicCidrsAccessEnabled bool                                                `json:"gcp_public_cidrs_access_enabled"`
	CidrBlocks                  []DataMasterAuthorizedNetworksConfigCidrBlocksState `json:"cidr_blocks"`
}

type DataMasterAuthorizedNetworksConfigCidrBlocksState struct {
	CidrBlock   string `json:"cidr_block"`
	DisplayName string `json:"display_name"`
}

type DataMeshCertificatesState struct {
	EnableCertificates bool `json:"enable_certificates"`
}

type DataMonitoringConfigState struct {
	EnableComponents                    []string                                                       `json:"enable_components"`
	AdvancedDatapathObservabilityConfig []DataMonitoringConfigAdvancedDatapathObservabilityConfigState `json:"advanced_datapath_observability_config"`
	ManagedPrometheus                   []DataMonitoringConfigManagedPrometheusState                   `json:"managed_prometheus"`
}

type DataMonitoringConfigAdvancedDatapathObservabilityConfigState struct {
	EnableMetrics bool   `json:"enable_metrics"`
	EnableRelay   bool   `json:"enable_relay"`
	RelayMode     string `json:"relay_mode"`
}

type DataMonitoringConfigManagedPrometheusState struct {
	Enabled bool `json:"enabled"`
}

type DataNetworkPolicyState struct {
	Enabled  bool   `json:"enabled"`
	Provider string `json:"provider"`
}

type DataNodeConfigState struct {
	BootDiskKmsKey                 string                                              `json:"boot_disk_kms_key"`
	DiskSizeGb                     float64                                             `json:"disk_size_gb"`
	DiskType                       string                                              `json:"disk_type"`
	EnableConfidentialStorage      bool                                                `json:"enable_confidential_storage"`
	ImageType                      string                                              `json:"image_type"`
	Labels                         map[string]string                                   `json:"labels"`
	LocalSsdCount                  float64                                             `json:"local_ssd_count"`
	LoggingVariant                 string                                              `json:"logging_variant"`
	MachineType                    string                                              `json:"machine_type"`
	Metadata                       map[string]string                                   `json:"metadata"`
	MinCpuPlatform                 string                                              `json:"min_cpu_platform"`
	NodeGroup                      string                                              `json:"node_group"`
	OauthScopes                    []string                                            `json:"oauth_scopes"`
	Preemptible                    bool                                                `json:"preemptible"`
	ResourceLabels                 map[string]string                                   `json:"resource_labels"`
	ResourceManagerTags            map[string]string                                   `json:"resource_manager_tags"`
	ServiceAccount                 string                                              `json:"service_account"`
	Spot                           bool                                                `json:"spot"`
	Tags                           []string                                            `json:"tags"`
	AdvancedMachineFeatures        []DataNodeConfigAdvancedMachineFeaturesState        `json:"advanced_machine_features"`
	ConfidentialNodes              []DataNodeConfigConfidentialNodesState              `json:"confidential_nodes"`
	EffectiveTaints                []DataNodeConfigEffectiveTaintsState                `json:"effective_taints"`
	EphemeralStorageConfig         []DataNodeConfigEphemeralStorageConfigState         `json:"ephemeral_storage_config"`
	EphemeralStorageLocalSsdConfig []DataNodeConfigEphemeralStorageLocalSsdConfigState `json:"ephemeral_storage_local_ssd_config"`
	FastSocket                     []DataNodeConfigFastSocketState                     `json:"fast_socket"`
	GcfsConfig                     []DataNodeConfigGcfsConfigState                     `json:"gcfs_config"`
	GuestAccelerator               []DataNodeConfigGuestAcceleratorState               `json:"guest_accelerator"`
	Gvnic                          []DataNodeConfigGvnicState                          `json:"gvnic"`
	HostMaintenancePolicy          []DataNodeConfigHostMaintenancePolicyState          `json:"host_maintenance_policy"`
	KubeletConfig                  []DataNodeConfigKubeletConfigState                  `json:"kubelet_config"`
	LinuxNodeConfig                []DataNodeConfigLinuxNodeConfigState                `json:"linux_node_config"`
	LocalNvmeSsdBlockConfig        []DataNodeConfigLocalNvmeSsdBlockConfigState        `json:"local_nvme_ssd_block_config"`
	ReservationAffinity            []DataNodeConfigReservationAffinityState            `json:"reservation_affinity"`
	SandboxConfig                  []DataNodeConfigSandboxConfigState                  `json:"sandbox_config"`
	ShieldedInstanceConfig         []DataNodeConfigShieldedInstanceConfigState         `json:"shielded_instance_config"`
	SoleTenantConfig               []DataNodeConfigSoleTenantConfigState               `json:"sole_tenant_config"`
	Taint                          []DataNodeConfigTaintState                          `json:"taint"`
	WorkloadMetadataConfig         []DataNodeConfigWorkloadMetadataConfigState         `json:"workload_metadata_config"`
}

type DataNodeConfigAdvancedMachineFeaturesState struct {
	ThreadsPerCore float64 `json:"threads_per_core"`
}

type DataNodeConfigConfidentialNodesState struct {
	Enabled bool `json:"enabled"`
}

type DataNodeConfigEffectiveTaintsState struct {
	Effect string `json:"effect"`
	Key    string `json:"key"`
	Value  string `json:"value"`
}

type DataNodeConfigEphemeralStorageConfigState struct {
	LocalSsdCount float64 `json:"local_ssd_count"`
}

type DataNodeConfigEphemeralStorageLocalSsdConfigState struct {
	LocalSsdCount float64 `json:"local_ssd_count"`
}

type DataNodeConfigFastSocketState struct {
	Enabled bool `json:"enabled"`
}

type DataNodeConfigGcfsConfigState struct {
	Enabled bool `json:"enabled"`
}

type DataNodeConfigGuestAcceleratorState struct {
	Count                       float64                                                          `json:"count"`
	GpuPartitionSize            string                                                           `json:"gpu_partition_size"`
	Type                        string                                                           `json:"type"`
	GpuDriverInstallationConfig []DataNodeConfigGuestAcceleratorGpuDriverInstallationConfigState `json:"gpu_driver_installation_config"`
	GpuSharingConfig            []DataNodeConfigGuestAcceleratorGpuSharingConfigState            `json:"gpu_sharing_config"`
}

type DataNodeConfigGuestAcceleratorGpuDriverInstallationConfigState struct {
	GpuDriverVersion string `json:"gpu_driver_version"`
}

type DataNodeConfigGuestAcceleratorGpuSharingConfigState struct {
	GpuSharingStrategy     string  `json:"gpu_sharing_strategy"`
	MaxSharedClientsPerGpu float64 `json:"max_shared_clients_per_gpu"`
}

type DataNodeConfigGvnicState struct {
	Enabled bool `json:"enabled"`
}

type DataNodeConfigHostMaintenancePolicyState struct {
	MaintenanceInterval string `json:"maintenance_interval"`
}

type DataNodeConfigKubeletConfigState struct {
	CpuCfsQuota       bool    `json:"cpu_cfs_quota"`
	CpuCfsQuotaPeriod string  `json:"cpu_cfs_quota_period"`
	CpuManagerPolicy  string  `json:"cpu_manager_policy"`
	PodPidsLimit      float64 `json:"pod_pids_limit"`
}

type DataNodeConfigLinuxNodeConfigState struct {
	CgroupMode string            `json:"cgroup_mode"`
	Sysctls    map[string]string `json:"sysctls"`
}

type DataNodeConfigLocalNvmeSsdBlockConfigState struct {
	LocalSsdCount float64 `json:"local_ssd_count"`
}

type DataNodeConfigReservationAffinityState struct {
	ConsumeReservationType string   `json:"consume_reservation_type"`
	Key                    string   `json:"key"`
	Values                 []string `json:"values"`
}

type DataNodeConfigSandboxConfigState struct {
	SandboxType string `json:"sandbox_type"`
}

type DataNodeConfigShieldedInstanceConfigState struct {
	EnableIntegrityMonitoring bool `json:"enable_integrity_monitoring"`
	EnableSecureBoot          bool `json:"enable_secure_boot"`
}

type DataNodeConfigSoleTenantConfigState struct {
	NodeAffinity []DataNodeConfigSoleTenantConfigNodeAffinityState `json:"node_affinity"`
}

type DataNodeConfigSoleTenantConfigNodeAffinityState struct {
	Key      string   `json:"key"`
	Operator string   `json:"operator"`
	Values   []string `json:"values"`
}

type DataNodeConfigTaintState struct {
	Effect string `json:"effect"`
	Key    string `json:"key"`
	Value  string `json:"value"`
}

type DataNodeConfigWorkloadMetadataConfigState struct {
	Mode string `json:"mode"`
}

type DataNodePoolState struct {
	InitialNodeCount         float64                               `json:"initial_node_count"`
	InstanceGroupUrls        []string                              `json:"instance_group_urls"`
	ManagedInstanceGroupUrls []string                              `json:"managed_instance_group_urls"`
	MaxPodsPerNode           float64                               `json:"max_pods_per_node"`
	Name                     string                                `json:"name"`
	NamePrefix               string                                `json:"name_prefix"`
	NodeCount                float64                               `json:"node_count"`
	NodeLocations            []string                              `json:"node_locations"`
	Version                  string                                `json:"version"`
	Autoscaling              []DataNodePoolAutoscalingState        `json:"autoscaling"`
	Management               []DataNodePoolManagementState         `json:"management"`
	NetworkConfig            []DataNodePoolNetworkConfigState      `json:"network_config"`
	NodeConfig               []DataNodePoolNodeConfigState         `json:"node_config"`
	PlacementPolicy          []DataNodePoolPlacementPolicyState    `json:"placement_policy"`
	QueuedProvisioning       []DataNodePoolQueuedProvisioningState `json:"queued_provisioning"`
	UpgradeSettings          []DataNodePoolUpgradeSettingsState    `json:"upgrade_settings"`
}

type DataNodePoolAutoscalingState struct {
	LocationPolicy    string  `json:"location_policy"`
	MaxNodeCount      float64 `json:"max_node_count"`
	MinNodeCount      float64 `json:"min_node_count"`
	TotalMaxNodeCount float64 `json:"total_max_node_count"`
	TotalMinNodeCount float64 `json:"total_min_node_count"`
}

type DataNodePoolManagementState struct {
	AutoRepair  bool `json:"auto_repair"`
	AutoUpgrade bool `json:"auto_upgrade"`
}

type DataNodePoolNetworkConfigState struct {
	CreatePodRange               bool                                                         `json:"create_pod_range"`
	EnablePrivateNodes           bool                                                         `json:"enable_private_nodes"`
	PodIpv4CidrBlock             string                                                       `json:"pod_ipv4_cidr_block"`
	PodRange                     string                                                       `json:"pod_range"`
	AdditionalNodeNetworkConfigs []DataNodePoolNetworkConfigAdditionalNodeNetworkConfigsState `json:"additional_node_network_configs"`
	AdditionalPodNetworkConfigs  []DataNodePoolNetworkConfigAdditionalPodNetworkConfigsState  `json:"additional_pod_network_configs"`
	NetworkPerformanceConfig     []DataNodePoolNetworkConfigNetworkPerformanceConfigState     `json:"network_performance_config"`
	PodCidrOverprovisionConfig   []DataNodePoolNetworkConfigPodCidrOverprovisionConfigState   `json:"pod_cidr_overprovision_config"`
}

type DataNodePoolNetworkConfigAdditionalNodeNetworkConfigsState struct {
	Network    string `json:"network"`
	Subnetwork string `json:"subnetwork"`
}

type DataNodePoolNetworkConfigAdditionalPodNetworkConfigsState struct {
	MaxPodsPerNode    float64 `json:"max_pods_per_node"`
	SecondaryPodRange string  `json:"secondary_pod_range"`
	Subnetwork        string  `json:"subnetwork"`
}

type DataNodePoolNetworkConfigNetworkPerformanceConfigState struct {
	TotalEgressBandwidthTier string `json:"total_egress_bandwidth_tier"`
}

type DataNodePoolNetworkConfigPodCidrOverprovisionConfigState struct {
	Disabled bool `json:"disabled"`
}

type DataNodePoolNodeConfigState struct {
	BootDiskKmsKey                 string                                                      `json:"boot_disk_kms_key"`
	DiskSizeGb                     float64                                                     `json:"disk_size_gb"`
	DiskType                       string                                                      `json:"disk_type"`
	EnableConfidentialStorage      bool                                                        `json:"enable_confidential_storage"`
	ImageType                      string                                                      `json:"image_type"`
	Labels                         map[string]string                                           `json:"labels"`
	LocalSsdCount                  float64                                                     `json:"local_ssd_count"`
	LoggingVariant                 string                                                      `json:"logging_variant"`
	MachineType                    string                                                      `json:"machine_type"`
	Metadata                       map[string]string                                           `json:"metadata"`
	MinCpuPlatform                 string                                                      `json:"min_cpu_platform"`
	NodeGroup                      string                                                      `json:"node_group"`
	OauthScopes                    []string                                                    `json:"oauth_scopes"`
	Preemptible                    bool                                                        `json:"preemptible"`
	ResourceLabels                 map[string]string                                           `json:"resource_labels"`
	ResourceManagerTags            map[string]string                                           `json:"resource_manager_tags"`
	ServiceAccount                 string                                                      `json:"service_account"`
	Spot                           bool                                                        `json:"spot"`
	Tags                           []string                                                    `json:"tags"`
	AdvancedMachineFeatures        []DataNodePoolNodeConfigAdvancedMachineFeaturesState        `json:"advanced_machine_features"`
	ConfidentialNodes              []DataNodePoolNodeConfigConfidentialNodesState              `json:"confidential_nodes"`
	EffectiveTaints                []DataNodePoolNodeConfigEffectiveTaintsState                `json:"effective_taints"`
	EphemeralStorageConfig         []DataNodePoolNodeConfigEphemeralStorageConfigState         `json:"ephemeral_storage_config"`
	EphemeralStorageLocalSsdConfig []DataNodePoolNodeConfigEphemeralStorageLocalSsdConfigState `json:"ephemeral_storage_local_ssd_config"`
	FastSocket                     []DataNodePoolNodeConfigFastSocketState                     `json:"fast_socket"`
	GcfsConfig                     []DataNodePoolNodeConfigGcfsConfigState                     `json:"gcfs_config"`
	GuestAccelerator               []DataNodePoolNodeConfigGuestAcceleratorState               `json:"guest_accelerator"`
	Gvnic                          []DataNodePoolNodeConfigGvnicState                          `json:"gvnic"`
	HostMaintenancePolicy          []DataNodePoolNodeConfigHostMaintenancePolicyState          `json:"host_maintenance_policy"`
	KubeletConfig                  []DataNodePoolNodeConfigKubeletConfigState                  `json:"kubelet_config"`
	LinuxNodeConfig                []DataNodePoolNodeConfigLinuxNodeConfigState                `json:"linux_node_config"`
	LocalNvmeSsdBlockConfig        []DataNodePoolNodeConfigLocalNvmeSsdBlockConfigState        `json:"local_nvme_ssd_block_config"`
	ReservationAffinity            []DataNodePoolNodeConfigReservationAffinityState            `json:"reservation_affinity"`
	SandboxConfig                  []DataNodePoolNodeConfigSandboxConfigState                  `json:"sandbox_config"`
	ShieldedInstanceConfig         []DataNodePoolNodeConfigShieldedInstanceConfigState         `json:"shielded_instance_config"`
	SoleTenantConfig               []DataNodePoolNodeConfigSoleTenantConfigState               `json:"sole_tenant_config"`
	Taint                          []DataNodePoolNodeConfigTaintState                          `json:"taint"`
	WorkloadMetadataConfig         []DataNodePoolNodeConfigWorkloadMetadataConfigState         `json:"workload_metadata_config"`
}

type DataNodePoolNodeConfigAdvancedMachineFeaturesState struct {
	ThreadsPerCore float64 `json:"threads_per_core"`
}

type DataNodePoolNodeConfigConfidentialNodesState struct {
	Enabled bool `json:"enabled"`
}

type DataNodePoolNodeConfigEffectiveTaintsState struct {
	Effect string `json:"effect"`
	Key    string `json:"key"`
	Value  string `json:"value"`
}

type DataNodePoolNodeConfigEphemeralStorageConfigState struct {
	LocalSsdCount float64 `json:"local_ssd_count"`
}

type DataNodePoolNodeConfigEphemeralStorageLocalSsdConfigState struct {
	LocalSsdCount float64 `json:"local_ssd_count"`
}

type DataNodePoolNodeConfigFastSocketState struct {
	Enabled bool `json:"enabled"`
}

type DataNodePoolNodeConfigGcfsConfigState struct {
	Enabled bool `json:"enabled"`
}

type DataNodePoolNodeConfigGuestAcceleratorState struct {
	Count                       float64                                                                  `json:"count"`
	GpuPartitionSize            string                                                                   `json:"gpu_partition_size"`
	Type                        string                                                                   `json:"type"`
	GpuDriverInstallationConfig []DataNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigState `json:"gpu_driver_installation_config"`
	GpuSharingConfig            []DataNodePoolNodeConfigGuestAcceleratorGpuSharingConfigState            `json:"gpu_sharing_config"`
}

type DataNodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfigState struct {
	GpuDriverVersion string `json:"gpu_driver_version"`
}

type DataNodePoolNodeConfigGuestAcceleratorGpuSharingConfigState struct {
	GpuSharingStrategy     string  `json:"gpu_sharing_strategy"`
	MaxSharedClientsPerGpu float64 `json:"max_shared_clients_per_gpu"`
}

type DataNodePoolNodeConfigGvnicState struct {
	Enabled bool `json:"enabled"`
}

type DataNodePoolNodeConfigHostMaintenancePolicyState struct {
	MaintenanceInterval string `json:"maintenance_interval"`
}

type DataNodePoolNodeConfigKubeletConfigState struct {
	CpuCfsQuota       bool    `json:"cpu_cfs_quota"`
	CpuCfsQuotaPeriod string  `json:"cpu_cfs_quota_period"`
	CpuManagerPolicy  string  `json:"cpu_manager_policy"`
	PodPidsLimit      float64 `json:"pod_pids_limit"`
}

type DataNodePoolNodeConfigLinuxNodeConfigState struct {
	CgroupMode string            `json:"cgroup_mode"`
	Sysctls    map[string]string `json:"sysctls"`
}

type DataNodePoolNodeConfigLocalNvmeSsdBlockConfigState struct {
	LocalSsdCount float64 `json:"local_ssd_count"`
}

type DataNodePoolNodeConfigReservationAffinityState struct {
	ConsumeReservationType string   `json:"consume_reservation_type"`
	Key                    string   `json:"key"`
	Values                 []string `json:"values"`
}

type DataNodePoolNodeConfigSandboxConfigState struct {
	SandboxType string `json:"sandbox_type"`
}

type DataNodePoolNodeConfigShieldedInstanceConfigState struct {
	EnableIntegrityMonitoring bool `json:"enable_integrity_monitoring"`
	EnableSecureBoot          bool `json:"enable_secure_boot"`
}

type DataNodePoolNodeConfigSoleTenantConfigState struct {
	NodeAffinity []DataNodePoolNodeConfigSoleTenantConfigNodeAffinityState `json:"node_affinity"`
}

type DataNodePoolNodeConfigSoleTenantConfigNodeAffinityState struct {
	Key      string   `json:"key"`
	Operator string   `json:"operator"`
	Values   []string `json:"values"`
}

type DataNodePoolNodeConfigTaintState struct {
	Effect string `json:"effect"`
	Key    string `json:"key"`
	Value  string `json:"value"`
}

type DataNodePoolNodeConfigWorkloadMetadataConfigState struct {
	Mode string `json:"mode"`
}

type DataNodePoolPlacementPolicyState struct {
	PolicyName  string `json:"policy_name"`
	TpuTopology string `json:"tpu_topology"`
	Type        string `json:"type"`
}

type DataNodePoolQueuedProvisioningState struct {
	Enabled bool `json:"enabled"`
}

type DataNodePoolUpgradeSettingsState struct {
	MaxSurge          float64                                             `json:"max_surge"`
	MaxUnavailable    float64                                             `json:"max_unavailable"`
	Strategy          string                                              `json:"strategy"`
	BlueGreenSettings []DataNodePoolUpgradeSettingsBlueGreenSettingsState `json:"blue_green_settings"`
}

type DataNodePoolUpgradeSettingsBlueGreenSettingsState struct {
	NodePoolSoakDuration  string                                                                   `json:"node_pool_soak_duration"`
	StandardRolloutPolicy []DataNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyState `json:"standard_rollout_policy"`
}

type DataNodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyState struct {
	BatchNodeCount    float64 `json:"batch_node_count"`
	BatchPercentage   float64 `json:"batch_percentage"`
	BatchSoakDuration string  `json:"batch_soak_duration"`
}

type DataNodePoolAutoConfigState struct {
	ResourceManagerTags map[string]string                        `json:"resource_manager_tags"`
	NetworkTags         []DataNodePoolAutoConfigNetworkTagsState `json:"network_tags"`
}

type DataNodePoolAutoConfigNetworkTagsState struct {
	Tags []string `json:"tags"`
}

type DataNodePoolDefaultsState struct {
	NodeConfigDefaults []DataNodePoolDefaultsNodeConfigDefaultsState `json:"node_config_defaults"`
}

type DataNodePoolDefaultsNodeConfigDefaultsState struct {
	LoggingVariant string                                                  `json:"logging_variant"`
	GcfsConfig     []DataNodePoolDefaultsNodeConfigDefaultsGcfsConfigState `json:"gcfs_config"`
}

type DataNodePoolDefaultsNodeConfigDefaultsGcfsConfigState struct {
	Enabled bool `json:"enabled"`
}

type DataNotificationConfigState struct {
	Pubsub []DataNotificationConfigPubsubState `json:"pubsub"`
}

type DataNotificationConfigPubsubState struct {
	Enabled bool                                      `json:"enabled"`
	Topic   string                                    `json:"topic"`
	Filter  []DataNotificationConfigPubsubFilterState `json:"filter"`
}

type DataNotificationConfigPubsubFilterState struct {
	EventType []string `json:"event_type"`
}

type DataPodSecurityPolicyConfigState struct {
	Enabled bool `json:"enabled"`
}

type DataPrivateClusterConfigState struct {
	EnablePrivateEndpoint     bool                                                    `json:"enable_private_endpoint"`
	EnablePrivateNodes        bool                                                    `json:"enable_private_nodes"`
	MasterIpv4CidrBlock       string                                                  `json:"master_ipv4_cidr_block"`
	PeeringName               string                                                  `json:"peering_name"`
	PrivateEndpoint           string                                                  `json:"private_endpoint"`
	PrivateEndpointSubnetwork string                                                  `json:"private_endpoint_subnetwork"`
	PublicEndpoint            string                                                  `json:"public_endpoint"`
	MasterGlobalAccessConfig  []DataPrivateClusterConfigMasterGlobalAccessConfigState `json:"master_global_access_config"`
}

type DataPrivateClusterConfigMasterGlobalAccessConfigState struct {
	Enabled bool `json:"enabled"`
}

type DataProtectConfigState struct {
	WorkloadVulnerabilityMode string                                 `json:"workload_vulnerability_mode"`
	WorkloadConfig            []DataProtectConfigWorkloadConfigState `json:"workload_config"`
}

type DataProtectConfigWorkloadConfigState struct {
	AuditMode string `json:"audit_mode"`
}

type DataReleaseChannelState struct {
	Channel string `json:"channel"`
}

type DataResourceUsageExportConfigState struct {
	EnableNetworkEgressMetering       bool                                                    `json:"enable_network_egress_metering"`
	EnableResourceConsumptionMetering bool                                                    `json:"enable_resource_consumption_metering"`
	BigqueryDestination               []DataResourceUsageExportConfigBigqueryDestinationState `json:"bigquery_destination"`
}

type DataResourceUsageExportConfigBigqueryDestinationState struct {
	DatasetId string `json:"dataset_id"`
}

type DataSecurityPostureConfigState struct {
	Mode              string `json:"mode"`
	VulnerabilityMode string `json:"vulnerability_mode"`
}

type DataServiceExternalIpsConfigState struct {
	Enabled bool `json:"enabled"`
}

type DataTpuConfigState struct {
	Enabled              bool   `json:"enabled"`
	Ipv4CidrBlock        string `json:"ipv4_cidr_block"`
	UseServiceNetworking bool   `json:"use_service_networking"`
}

type DataVerticalPodAutoscalingState struct {
	Enabled bool `json:"enabled"`
}

type DataWorkloadAltsConfigState struct {
	EnableAlts bool `json:"enable_alts"`
}

type DataWorkloadIdentityConfigState struct {
	WorkloadPool string `json:"workload_pool"`
}
