// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google_compute_organization_security_policy

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource google_compute_organization_security_policy.
type Resource struct {
	Name      string
	Args      Args
	state     *googleComputeOrganizationSecurityPolicyState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (gcosp *Resource) Type() string {
	return "google_compute_organization_security_policy"
}

// LocalName returns the local name for [Resource].
func (gcosp *Resource) LocalName() string {
	return gcosp.Name
}

// Configuration returns the configuration (args) for [Resource].
func (gcosp *Resource) Configuration() interface{} {
	return gcosp.Args
}

// DependOn is used for other resources to depend on [Resource].
func (gcosp *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(gcosp)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (gcosp *Resource) Dependencies() terra.Dependencies {
	return gcosp.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (gcosp *Resource) LifecycleManagement() *terra.Lifecycle {
	return gcosp.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (gcosp *Resource) Attributes() googleComputeOrganizationSecurityPolicyAttributes {
	return googleComputeOrganizationSecurityPolicyAttributes{ref: terra.ReferenceResource(gcosp)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (gcosp *Resource) ImportState(state io.Reader) error {
	gcosp.state = &googleComputeOrganizationSecurityPolicyState{}
	if err := json.NewDecoder(state).Decode(gcosp.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", gcosp.Type(), gcosp.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (gcosp *Resource) State() (*googleComputeOrganizationSecurityPolicyState, bool) {
	return gcosp.state, gcosp.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (gcosp *Resource) StateMust() *googleComputeOrganizationSecurityPolicyState {
	if gcosp.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", gcosp.Type(), gcosp.LocalName()))
	}
	return gcosp.state
}

// Args contains the configurations for google_compute_organization_security_policy.
type Args struct {
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// DisplayName: string, required
	DisplayName terra.StringValue `hcl:"display_name,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Parent: string, required
	Parent terra.StringValue `hcl:"parent,attr" validate:"required"`
	// Type: string, optional
	Type terra.StringValue `hcl:"type,attr"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type googleComputeOrganizationSecurityPolicyAttributes struct {
	ref terra.Reference
}

// Description returns a reference to field description of google_compute_organization_security_policy.
func (gcosp googleComputeOrganizationSecurityPolicyAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(gcosp.ref.Append("description"))
}

// DisplayName returns a reference to field display_name of google_compute_organization_security_policy.
func (gcosp googleComputeOrganizationSecurityPolicyAttributes) DisplayName() terra.StringValue {
	return terra.ReferenceAsString(gcosp.ref.Append("display_name"))
}

// Fingerprint returns a reference to field fingerprint of google_compute_organization_security_policy.
func (gcosp googleComputeOrganizationSecurityPolicyAttributes) Fingerprint() terra.StringValue {
	return terra.ReferenceAsString(gcosp.ref.Append("fingerprint"))
}

// Id returns a reference to field id of google_compute_organization_security_policy.
func (gcosp googleComputeOrganizationSecurityPolicyAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(gcosp.ref.Append("id"))
}

// Parent returns a reference to field parent of google_compute_organization_security_policy.
func (gcosp googleComputeOrganizationSecurityPolicyAttributes) Parent() terra.StringValue {
	return terra.ReferenceAsString(gcosp.ref.Append("parent"))
}

// PolicyId returns a reference to field policy_id of google_compute_organization_security_policy.
func (gcosp googleComputeOrganizationSecurityPolicyAttributes) PolicyId() terra.StringValue {
	return terra.ReferenceAsString(gcosp.ref.Append("policy_id"))
}

// Type returns a reference to field type of google_compute_organization_security_policy.
func (gcosp googleComputeOrganizationSecurityPolicyAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(gcosp.ref.Append("type"))
}

func (gcosp googleComputeOrganizationSecurityPolicyAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](gcosp.ref.Append("timeouts"))
}

type googleComputeOrganizationSecurityPolicyState struct {
	Description string         `json:"description"`
	DisplayName string         `json:"display_name"`
	Fingerprint string         `json:"fingerprint"`
	Id          string         `json:"id"`
	Parent      string         `json:"parent"`
	PolicyId    string         `json:"policy_id"`
	Type        string         `json:"type"`
	Timeouts    *TimeoutsState `json:"timeouts"`
}
