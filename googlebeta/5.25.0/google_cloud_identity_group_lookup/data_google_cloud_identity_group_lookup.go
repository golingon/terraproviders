// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google_cloud_identity_group_lookup

import "github.com/golingon/lingon/pkg/terra"

// Data creates a new instance of [DataSource].
func Data(name string, args DataArgs) *DataSource {
	return &DataSource{
		Args: args,
		Name: name,
	}
}

var _ terra.DataSource = (*DataSource)(nil)

// DataSource represents the Terraform data resource google_cloud_identity_group_lookup.
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (gcigl *DataSource) DataSource() string {
	return "google_cloud_identity_group_lookup"
}

// LocalName returns the local name for [DataSource].
func (gcigl *DataSource) LocalName() string {
	return gcigl.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (gcigl *DataSource) Configuration() interface{} {
	return gcigl.Args
}

// Attributes returns the attributes for [DataSource].
func (gcigl *DataSource) Attributes() dataGoogleCloudIdentityGroupLookupAttributes {
	return dataGoogleCloudIdentityGroupLookupAttributes{ref: terra.ReferenceDataSource(gcigl)}
}

// DataArgs contains the configurations for google_cloud_identity_group_lookup.
type DataArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// GroupKey: required
	GroupKey *DataGroupKey `hcl:"group_key,block" validate:"required"`
}

type dataGoogleCloudIdentityGroupLookupAttributes struct {
	ref terra.Reference
}

// Id returns a reference to field id of google_cloud_identity_group_lookup.
func (gcigl dataGoogleCloudIdentityGroupLookupAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(gcigl.ref.Append("id"))
}

// Name returns a reference to field name of google_cloud_identity_group_lookup.
func (gcigl dataGoogleCloudIdentityGroupLookupAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(gcigl.ref.Append("name"))
}

func (gcigl dataGoogleCloudIdentityGroupLookupAttributes) GroupKey() terra.ListValue[DataGroupKeyAttributes] {
	return terra.ReferenceAsList[DataGroupKeyAttributes](gcigl.ref.Append("group_key"))
}
