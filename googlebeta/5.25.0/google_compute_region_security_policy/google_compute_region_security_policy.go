// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google_compute_region_security_policy

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource google_compute_region_security_policy.
type Resource struct {
	Name      string
	Args      Args
	state     *googleComputeRegionSecurityPolicyState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (gcrsp *Resource) Type() string {
	return "google_compute_region_security_policy"
}

// LocalName returns the local name for [Resource].
func (gcrsp *Resource) LocalName() string {
	return gcrsp.Name
}

// Configuration returns the configuration (args) for [Resource].
func (gcrsp *Resource) Configuration() interface{} {
	return gcrsp.Args
}

// DependOn is used for other resources to depend on [Resource].
func (gcrsp *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(gcrsp)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (gcrsp *Resource) Dependencies() terra.Dependencies {
	return gcrsp.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (gcrsp *Resource) LifecycleManagement() *terra.Lifecycle {
	return gcrsp.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (gcrsp *Resource) Attributes() googleComputeRegionSecurityPolicyAttributes {
	return googleComputeRegionSecurityPolicyAttributes{ref: terra.ReferenceResource(gcrsp)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (gcrsp *Resource) ImportState(state io.Reader) error {
	gcrsp.state = &googleComputeRegionSecurityPolicyState{}
	if err := json.NewDecoder(state).Decode(gcrsp.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", gcrsp.Type(), gcrsp.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (gcrsp *Resource) State() (*googleComputeRegionSecurityPolicyState, bool) {
	return gcrsp.state, gcrsp.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (gcrsp *Resource) StateMust() *googleComputeRegionSecurityPolicyState {
	if gcrsp.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", gcrsp.Type(), gcrsp.LocalName()))
	}
	return gcrsp.state
}

// Args contains the configurations for google_compute_region_security_policy.
type Args struct {
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
	// Region: string, optional
	Region terra.StringValue `hcl:"region,attr"`
	// Type: string, optional
	Type terra.StringValue `hcl:"type,attr"`
	// DdosProtectionConfig: optional
	DdosProtectionConfig *DdosProtectionConfig `hcl:"ddos_protection_config,block"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
	// UserDefinedFields: min=0
	UserDefinedFields []UserDefinedFields `hcl:"user_defined_fields,block" validate:"min=0"`
}

type googleComputeRegionSecurityPolicyAttributes struct {
	ref terra.Reference
}

// Description returns a reference to field description of google_compute_region_security_policy.
func (gcrsp googleComputeRegionSecurityPolicyAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(gcrsp.ref.Append("description"))
}

// Fingerprint returns a reference to field fingerprint of google_compute_region_security_policy.
func (gcrsp googleComputeRegionSecurityPolicyAttributes) Fingerprint() terra.StringValue {
	return terra.ReferenceAsString(gcrsp.ref.Append("fingerprint"))
}

// Id returns a reference to field id of google_compute_region_security_policy.
func (gcrsp googleComputeRegionSecurityPolicyAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(gcrsp.ref.Append("id"))
}

// Name returns a reference to field name of google_compute_region_security_policy.
func (gcrsp googleComputeRegionSecurityPolicyAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(gcrsp.ref.Append("name"))
}

// PolicyId returns a reference to field policy_id of google_compute_region_security_policy.
func (gcrsp googleComputeRegionSecurityPolicyAttributes) PolicyId() terra.StringValue {
	return terra.ReferenceAsString(gcrsp.ref.Append("policy_id"))
}

// Project returns a reference to field project of google_compute_region_security_policy.
func (gcrsp googleComputeRegionSecurityPolicyAttributes) Project() terra.StringValue {
	return terra.ReferenceAsString(gcrsp.ref.Append("project"))
}

// Region returns a reference to field region of google_compute_region_security_policy.
func (gcrsp googleComputeRegionSecurityPolicyAttributes) Region() terra.StringValue {
	return terra.ReferenceAsString(gcrsp.ref.Append("region"))
}

// SelfLink returns a reference to field self_link of google_compute_region_security_policy.
func (gcrsp googleComputeRegionSecurityPolicyAttributes) SelfLink() terra.StringValue {
	return terra.ReferenceAsString(gcrsp.ref.Append("self_link"))
}

// SelfLinkWithPolicyId returns a reference to field self_link_with_policy_id of google_compute_region_security_policy.
func (gcrsp googleComputeRegionSecurityPolicyAttributes) SelfLinkWithPolicyId() terra.StringValue {
	return terra.ReferenceAsString(gcrsp.ref.Append("self_link_with_policy_id"))
}

// Type returns a reference to field type of google_compute_region_security_policy.
func (gcrsp googleComputeRegionSecurityPolicyAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(gcrsp.ref.Append("type"))
}

func (gcrsp googleComputeRegionSecurityPolicyAttributes) DdosProtectionConfig() terra.ListValue[DdosProtectionConfigAttributes] {
	return terra.ReferenceAsList[DdosProtectionConfigAttributes](gcrsp.ref.Append("ddos_protection_config"))
}

func (gcrsp googleComputeRegionSecurityPolicyAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](gcrsp.ref.Append("timeouts"))
}

func (gcrsp googleComputeRegionSecurityPolicyAttributes) UserDefinedFields() terra.ListValue[UserDefinedFieldsAttributes] {
	return terra.ReferenceAsList[UserDefinedFieldsAttributes](gcrsp.ref.Append("user_defined_fields"))
}

type googleComputeRegionSecurityPolicyState struct {
	Description          string                      `json:"description"`
	Fingerprint          string                      `json:"fingerprint"`
	Id                   string                      `json:"id"`
	Name                 string                      `json:"name"`
	PolicyId             string                      `json:"policy_id"`
	Project              string                      `json:"project"`
	Region               string                      `json:"region"`
	SelfLink             string                      `json:"self_link"`
	SelfLinkWithPolicyId string                      `json:"self_link_with_policy_id"`
	Type                 string                      `json:"type"`
	DdosProtectionConfig []DdosProtectionConfigState `json:"ddos_protection_config"`
	Timeouts             *TimeoutsState              `json:"timeouts"`
	UserDefinedFields    []UserDefinedFieldsState    `json:"user_defined_fields"`
}
