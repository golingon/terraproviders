// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google_compute_region_security_policy

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DdosProtectionConfig struct {
	// DdosProtection: string, required
	DdosProtection terra.StringValue `hcl:"ddos_protection,attr" validate:"required"`
}

type Timeouts struct {
	// Create: string, optional
	Create terra.StringValue `hcl:"create,attr"`
	// Delete: string, optional
	Delete terra.StringValue `hcl:"delete,attr"`
	// Update: string, optional
	Update terra.StringValue `hcl:"update,attr"`
}

type UserDefinedFields struct {
	// Base: string, required
	Base terra.StringValue `hcl:"base,attr" validate:"required"`
	// Mask: string, optional
	Mask terra.StringValue `hcl:"mask,attr"`
	// Name: string, optional
	Name terra.StringValue `hcl:"name,attr"`
	// Offset: number, optional
	Offset terra.NumberValue `hcl:"offset,attr"`
	// Size: number, optional
	Size terra.NumberValue `hcl:"size,attr"`
}

type DdosProtectionConfigAttributes struct {
	ref terra.Reference
}

func (dpc DdosProtectionConfigAttributes) InternalRef() (terra.Reference, error) {
	return dpc.ref, nil
}

func (dpc DdosProtectionConfigAttributes) InternalWithRef(ref terra.Reference) DdosProtectionConfigAttributes {
	return DdosProtectionConfigAttributes{ref: ref}
}

func (dpc DdosProtectionConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dpc.ref.InternalTokens()
}

func (dpc DdosProtectionConfigAttributes) DdosProtection() terra.StringValue {
	return terra.ReferenceAsString(dpc.ref.Append("ddos_protection"))
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("create"))
}

func (t TimeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("delete"))
}

func (t TimeoutsAttributes) Update() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("update"))
}

type UserDefinedFieldsAttributes struct {
	ref terra.Reference
}

func (udf UserDefinedFieldsAttributes) InternalRef() (terra.Reference, error) {
	return udf.ref, nil
}

func (udf UserDefinedFieldsAttributes) InternalWithRef(ref terra.Reference) UserDefinedFieldsAttributes {
	return UserDefinedFieldsAttributes{ref: ref}
}

func (udf UserDefinedFieldsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return udf.ref.InternalTokens()
}

func (udf UserDefinedFieldsAttributes) Base() terra.StringValue {
	return terra.ReferenceAsString(udf.ref.Append("base"))
}

func (udf UserDefinedFieldsAttributes) Mask() terra.StringValue {
	return terra.ReferenceAsString(udf.ref.Append("mask"))
}

func (udf UserDefinedFieldsAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(udf.ref.Append("name"))
}

func (udf UserDefinedFieldsAttributes) Offset() terra.NumberValue {
	return terra.ReferenceAsNumber(udf.ref.Append("offset"))
}

func (udf UserDefinedFieldsAttributes) Size() terra.NumberValue {
	return terra.ReferenceAsNumber(udf.ref.Append("size"))
}

type DdosProtectionConfigState struct {
	DdosProtection string `json:"ddos_protection"`
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
	Update string `json:"update"`
}

type UserDefinedFieldsState struct {
	Base   string  `json:"base"`
	Mask   string  `json:"mask"`
	Name   string  `json:"name"`
	Offset float64 `json:"offset"`
	Size   float64 `json:"size"`
}
