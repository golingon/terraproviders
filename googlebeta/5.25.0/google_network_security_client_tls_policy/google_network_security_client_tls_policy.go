// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google_network_security_client_tls_policy

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource google_network_security_client_tls_policy.
type Resource struct {
	Name      string
	Args      Args
	state     *googleNetworkSecurityClientTlsPolicyState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (gnsctp *Resource) Type() string {
	return "google_network_security_client_tls_policy"
}

// LocalName returns the local name for [Resource].
func (gnsctp *Resource) LocalName() string {
	return gnsctp.Name
}

// Configuration returns the configuration (args) for [Resource].
func (gnsctp *Resource) Configuration() interface{} {
	return gnsctp.Args
}

// DependOn is used for other resources to depend on [Resource].
func (gnsctp *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(gnsctp)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (gnsctp *Resource) Dependencies() terra.Dependencies {
	return gnsctp.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (gnsctp *Resource) LifecycleManagement() *terra.Lifecycle {
	return gnsctp.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (gnsctp *Resource) Attributes() googleNetworkSecurityClientTlsPolicyAttributes {
	return googleNetworkSecurityClientTlsPolicyAttributes{ref: terra.ReferenceResource(gnsctp)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (gnsctp *Resource) ImportState(state io.Reader) error {
	gnsctp.state = &googleNetworkSecurityClientTlsPolicyState{}
	if err := json.NewDecoder(state).Decode(gnsctp.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", gnsctp.Type(), gnsctp.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (gnsctp *Resource) State() (*googleNetworkSecurityClientTlsPolicyState, bool) {
	return gnsctp.state, gnsctp.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (gnsctp *Resource) StateMust() *googleNetworkSecurityClientTlsPolicyState {
	if gnsctp.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", gnsctp.Type(), gnsctp.LocalName()))
	}
	return gnsctp.state
}

// Args contains the configurations for google_network_security_client_tls_policy.
type Args struct {
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Labels: map of string, optional
	Labels terra.MapValue[terra.StringValue] `hcl:"labels,attr"`
	// Location: string, optional
	Location terra.StringValue `hcl:"location,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
	// Sni: string, optional
	Sni terra.StringValue `hcl:"sni,attr"`
	// ClientCertificate: optional
	ClientCertificate *ClientCertificate `hcl:"client_certificate,block"`
	// ServerValidationCa: min=0
	ServerValidationCa []ServerValidationCa `hcl:"server_validation_ca,block" validate:"min=0"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type googleNetworkSecurityClientTlsPolicyAttributes struct {
	ref terra.Reference
}

// CreateTime returns a reference to field create_time of google_network_security_client_tls_policy.
func (gnsctp googleNetworkSecurityClientTlsPolicyAttributes) CreateTime() terra.StringValue {
	return terra.ReferenceAsString(gnsctp.ref.Append("create_time"))
}

// Description returns a reference to field description of google_network_security_client_tls_policy.
func (gnsctp googleNetworkSecurityClientTlsPolicyAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(gnsctp.ref.Append("description"))
}

// EffectiveLabels returns a reference to field effective_labels of google_network_security_client_tls_policy.
func (gnsctp googleNetworkSecurityClientTlsPolicyAttributes) EffectiveLabels() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](gnsctp.ref.Append("effective_labels"))
}

// Id returns a reference to field id of google_network_security_client_tls_policy.
func (gnsctp googleNetworkSecurityClientTlsPolicyAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(gnsctp.ref.Append("id"))
}

// Labels returns a reference to field labels of google_network_security_client_tls_policy.
func (gnsctp googleNetworkSecurityClientTlsPolicyAttributes) Labels() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](gnsctp.ref.Append("labels"))
}

// Location returns a reference to field location of google_network_security_client_tls_policy.
func (gnsctp googleNetworkSecurityClientTlsPolicyAttributes) Location() terra.StringValue {
	return terra.ReferenceAsString(gnsctp.ref.Append("location"))
}

// Name returns a reference to field name of google_network_security_client_tls_policy.
func (gnsctp googleNetworkSecurityClientTlsPolicyAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(gnsctp.ref.Append("name"))
}

// Project returns a reference to field project of google_network_security_client_tls_policy.
func (gnsctp googleNetworkSecurityClientTlsPolicyAttributes) Project() terra.StringValue {
	return terra.ReferenceAsString(gnsctp.ref.Append("project"))
}

// Sni returns a reference to field sni of google_network_security_client_tls_policy.
func (gnsctp googleNetworkSecurityClientTlsPolicyAttributes) Sni() terra.StringValue {
	return terra.ReferenceAsString(gnsctp.ref.Append("sni"))
}

// TerraformLabels returns a reference to field terraform_labels of google_network_security_client_tls_policy.
func (gnsctp googleNetworkSecurityClientTlsPolicyAttributes) TerraformLabels() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](gnsctp.ref.Append("terraform_labels"))
}

// UpdateTime returns a reference to field update_time of google_network_security_client_tls_policy.
func (gnsctp googleNetworkSecurityClientTlsPolicyAttributes) UpdateTime() terra.StringValue {
	return terra.ReferenceAsString(gnsctp.ref.Append("update_time"))
}

func (gnsctp googleNetworkSecurityClientTlsPolicyAttributes) ClientCertificate() terra.ListValue[ClientCertificateAttributes] {
	return terra.ReferenceAsList[ClientCertificateAttributes](gnsctp.ref.Append("client_certificate"))
}

func (gnsctp googleNetworkSecurityClientTlsPolicyAttributes) ServerValidationCa() terra.ListValue[ServerValidationCaAttributes] {
	return terra.ReferenceAsList[ServerValidationCaAttributes](gnsctp.ref.Append("server_validation_ca"))
}

func (gnsctp googleNetworkSecurityClientTlsPolicyAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](gnsctp.ref.Append("timeouts"))
}

type googleNetworkSecurityClientTlsPolicyState struct {
	CreateTime         string                    `json:"create_time"`
	Description        string                    `json:"description"`
	EffectiveLabels    map[string]string         `json:"effective_labels"`
	Id                 string                    `json:"id"`
	Labels             map[string]string         `json:"labels"`
	Location           string                    `json:"location"`
	Name               string                    `json:"name"`
	Project            string                    `json:"project"`
	Sni                string                    `json:"sni"`
	TerraformLabels    map[string]string         `json:"terraform_labels"`
	UpdateTime         string                    `json:"update_time"`
	ClientCertificate  []ClientCertificateState  `json:"client_certificate"`
	ServerValidationCa []ServerValidationCaState `json:"server_validation_ca"`
	Timeouts           *TimeoutsState            `json:"timeouts"`
}
