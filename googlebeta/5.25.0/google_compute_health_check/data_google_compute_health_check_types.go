// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google_compute_health_check

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DataGrpcHealthCheckAttributes struct {
	ref terra.Reference
}

func (ghc DataGrpcHealthCheckAttributes) InternalRef() (terra.Reference, error) {
	return ghc.ref, nil
}

func (ghc DataGrpcHealthCheckAttributes) InternalWithRef(ref terra.Reference) DataGrpcHealthCheckAttributes {
	return DataGrpcHealthCheckAttributes{ref: ref}
}

func (ghc DataGrpcHealthCheckAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ghc.ref.InternalTokens()
}

func (ghc DataGrpcHealthCheckAttributes) GrpcServiceName() terra.StringValue {
	return terra.ReferenceAsString(ghc.ref.Append("grpc_service_name"))
}

func (ghc DataGrpcHealthCheckAttributes) Port() terra.NumberValue {
	return terra.ReferenceAsNumber(ghc.ref.Append("port"))
}

func (ghc DataGrpcHealthCheckAttributes) PortName() terra.StringValue {
	return terra.ReferenceAsString(ghc.ref.Append("port_name"))
}

func (ghc DataGrpcHealthCheckAttributes) PortSpecification() terra.StringValue {
	return terra.ReferenceAsString(ghc.ref.Append("port_specification"))
}

type DataHttp2HealthCheckAttributes struct {
	ref terra.Reference
}

func (hhc DataHttp2HealthCheckAttributes) InternalRef() (terra.Reference, error) {
	return hhc.ref, nil
}

func (hhc DataHttp2HealthCheckAttributes) InternalWithRef(ref terra.Reference) DataHttp2HealthCheckAttributes {
	return DataHttp2HealthCheckAttributes{ref: ref}
}

func (hhc DataHttp2HealthCheckAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return hhc.ref.InternalTokens()
}

func (hhc DataHttp2HealthCheckAttributes) Host() terra.StringValue {
	return terra.ReferenceAsString(hhc.ref.Append("host"))
}

func (hhc DataHttp2HealthCheckAttributes) Port() terra.NumberValue {
	return terra.ReferenceAsNumber(hhc.ref.Append("port"))
}

func (hhc DataHttp2HealthCheckAttributes) PortName() terra.StringValue {
	return terra.ReferenceAsString(hhc.ref.Append("port_name"))
}

func (hhc DataHttp2HealthCheckAttributes) PortSpecification() terra.StringValue {
	return terra.ReferenceAsString(hhc.ref.Append("port_specification"))
}

func (hhc DataHttp2HealthCheckAttributes) ProxyHeader() terra.StringValue {
	return terra.ReferenceAsString(hhc.ref.Append("proxy_header"))
}

func (hhc DataHttp2HealthCheckAttributes) RequestPath() terra.StringValue {
	return terra.ReferenceAsString(hhc.ref.Append("request_path"))
}

func (hhc DataHttp2HealthCheckAttributes) Response() terra.StringValue {
	return terra.ReferenceAsString(hhc.ref.Append("response"))
}

type DataHttpHealthCheckAttributes struct {
	ref terra.Reference
}

func (hhc DataHttpHealthCheckAttributes) InternalRef() (terra.Reference, error) {
	return hhc.ref, nil
}

func (hhc DataHttpHealthCheckAttributes) InternalWithRef(ref terra.Reference) DataHttpHealthCheckAttributes {
	return DataHttpHealthCheckAttributes{ref: ref}
}

func (hhc DataHttpHealthCheckAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return hhc.ref.InternalTokens()
}

func (hhc DataHttpHealthCheckAttributes) Host() terra.StringValue {
	return terra.ReferenceAsString(hhc.ref.Append("host"))
}

func (hhc DataHttpHealthCheckAttributes) Port() terra.NumberValue {
	return terra.ReferenceAsNumber(hhc.ref.Append("port"))
}

func (hhc DataHttpHealthCheckAttributes) PortName() terra.StringValue {
	return terra.ReferenceAsString(hhc.ref.Append("port_name"))
}

func (hhc DataHttpHealthCheckAttributes) PortSpecification() terra.StringValue {
	return terra.ReferenceAsString(hhc.ref.Append("port_specification"))
}

func (hhc DataHttpHealthCheckAttributes) ProxyHeader() terra.StringValue {
	return terra.ReferenceAsString(hhc.ref.Append("proxy_header"))
}

func (hhc DataHttpHealthCheckAttributes) RequestPath() terra.StringValue {
	return terra.ReferenceAsString(hhc.ref.Append("request_path"))
}

func (hhc DataHttpHealthCheckAttributes) Response() terra.StringValue {
	return terra.ReferenceAsString(hhc.ref.Append("response"))
}

type DataHttpsHealthCheckAttributes struct {
	ref terra.Reference
}

func (hhc DataHttpsHealthCheckAttributes) InternalRef() (terra.Reference, error) {
	return hhc.ref, nil
}

func (hhc DataHttpsHealthCheckAttributes) InternalWithRef(ref terra.Reference) DataHttpsHealthCheckAttributes {
	return DataHttpsHealthCheckAttributes{ref: ref}
}

func (hhc DataHttpsHealthCheckAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return hhc.ref.InternalTokens()
}

func (hhc DataHttpsHealthCheckAttributes) Host() terra.StringValue {
	return terra.ReferenceAsString(hhc.ref.Append("host"))
}

func (hhc DataHttpsHealthCheckAttributes) Port() terra.NumberValue {
	return terra.ReferenceAsNumber(hhc.ref.Append("port"))
}

func (hhc DataHttpsHealthCheckAttributes) PortName() terra.StringValue {
	return terra.ReferenceAsString(hhc.ref.Append("port_name"))
}

func (hhc DataHttpsHealthCheckAttributes) PortSpecification() terra.StringValue {
	return terra.ReferenceAsString(hhc.ref.Append("port_specification"))
}

func (hhc DataHttpsHealthCheckAttributes) ProxyHeader() terra.StringValue {
	return terra.ReferenceAsString(hhc.ref.Append("proxy_header"))
}

func (hhc DataHttpsHealthCheckAttributes) RequestPath() terra.StringValue {
	return terra.ReferenceAsString(hhc.ref.Append("request_path"))
}

func (hhc DataHttpsHealthCheckAttributes) Response() terra.StringValue {
	return terra.ReferenceAsString(hhc.ref.Append("response"))
}

type DataLogConfigAttributes struct {
	ref terra.Reference
}

func (lc DataLogConfigAttributes) InternalRef() (terra.Reference, error) {
	return lc.ref, nil
}

func (lc DataLogConfigAttributes) InternalWithRef(ref terra.Reference) DataLogConfigAttributes {
	return DataLogConfigAttributes{ref: ref}
}

func (lc DataLogConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return lc.ref.InternalTokens()
}

func (lc DataLogConfigAttributes) Enable() terra.BoolValue {
	return terra.ReferenceAsBool(lc.ref.Append("enable"))
}

type DataSslHealthCheckAttributes struct {
	ref terra.Reference
}

func (shc DataSslHealthCheckAttributes) InternalRef() (terra.Reference, error) {
	return shc.ref, nil
}

func (shc DataSslHealthCheckAttributes) InternalWithRef(ref terra.Reference) DataSslHealthCheckAttributes {
	return DataSslHealthCheckAttributes{ref: ref}
}

func (shc DataSslHealthCheckAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return shc.ref.InternalTokens()
}

func (shc DataSslHealthCheckAttributes) Port() terra.NumberValue {
	return terra.ReferenceAsNumber(shc.ref.Append("port"))
}

func (shc DataSslHealthCheckAttributes) PortName() terra.StringValue {
	return terra.ReferenceAsString(shc.ref.Append("port_name"))
}

func (shc DataSslHealthCheckAttributes) PortSpecification() terra.StringValue {
	return terra.ReferenceAsString(shc.ref.Append("port_specification"))
}

func (shc DataSslHealthCheckAttributes) ProxyHeader() terra.StringValue {
	return terra.ReferenceAsString(shc.ref.Append("proxy_header"))
}

func (shc DataSslHealthCheckAttributes) Request() terra.StringValue {
	return terra.ReferenceAsString(shc.ref.Append("request"))
}

func (shc DataSslHealthCheckAttributes) Response() terra.StringValue {
	return terra.ReferenceAsString(shc.ref.Append("response"))
}

type DataTcpHealthCheckAttributes struct {
	ref terra.Reference
}

func (thc DataTcpHealthCheckAttributes) InternalRef() (terra.Reference, error) {
	return thc.ref, nil
}

func (thc DataTcpHealthCheckAttributes) InternalWithRef(ref terra.Reference) DataTcpHealthCheckAttributes {
	return DataTcpHealthCheckAttributes{ref: ref}
}

func (thc DataTcpHealthCheckAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return thc.ref.InternalTokens()
}

func (thc DataTcpHealthCheckAttributes) Port() terra.NumberValue {
	return terra.ReferenceAsNumber(thc.ref.Append("port"))
}

func (thc DataTcpHealthCheckAttributes) PortName() terra.StringValue {
	return terra.ReferenceAsString(thc.ref.Append("port_name"))
}

func (thc DataTcpHealthCheckAttributes) PortSpecification() terra.StringValue {
	return terra.ReferenceAsString(thc.ref.Append("port_specification"))
}

func (thc DataTcpHealthCheckAttributes) ProxyHeader() terra.StringValue {
	return terra.ReferenceAsString(thc.ref.Append("proxy_header"))
}

func (thc DataTcpHealthCheckAttributes) Request() terra.StringValue {
	return terra.ReferenceAsString(thc.ref.Append("request"))
}

func (thc DataTcpHealthCheckAttributes) Response() terra.StringValue {
	return terra.ReferenceAsString(thc.ref.Append("response"))
}

type DataGrpcHealthCheckState struct {
	GrpcServiceName   string  `json:"grpc_service_name"`
	Port              float64 `json:"port"`
	PortName          string  `json:"port_name"`
	PortSpecification string  `json:"port_specification"`
}

type DataHttp2HealthCheckState struct {
	Host              string  `json:"host"`
	Port              float64 `json:"port"`
	PortName          string  `json:"port_name"`
	PortSpecification string  `json:"port_specification"`
	ProxyHeader       string  `json:"proxy_header"`
	RequestPath       string  `json:"request_path"`
	Response          string  `json:"response"`
}

type DataHttpHealthCheckState struct {
	Host              string  `json:"host"`
	Port              float64 `json:"port"`
	PortName          string  `json:"port_name"`
	PortSpecification string  `json:"port_specification"`
	ProxyHeader       string  `json:"proxy_header"`
	RequestPath       string  `json:"request_path"`
	Response          string  `json:"response"`
}

type DataHttpsHealthCheckState struct {
	Host              string  `json:"host"`
	Port              float64 `json:"port"`
	PortName          string  `json:"port_name"`
	PortSpecification string  `json:"port_specification"`
	ProxyHeader       string  `json:"proxy_header"`
	RequestPath       string  `json:"request_path"`
	Response          string  `json:"response"`
}

type DataLogConfigState struct {
	Enable bool `json:"enable"`
}

type DataSslHealthCheckState struct {
	Port              float64 `json:"port"`
	PortName          string  `json:"port_name"`
	PortSpecification string  `json:"port_specification"`
	ProxyHeader       string  `json:"proxy_header"`
	Request           string  `json:"request"`
	Response          string  `json:"response"`
}

type DataTcpHealthCheckState struct {
	Port              float64 `json:"port"`
	PortName          string  `json:"port_name"`
	PortSpecification string  `json:"port_specification"`
	ProxyHeader       string  `json:"proxy_header"`
	Request           string  `json:"request"`
	Response          string  `json:"response"`
}
