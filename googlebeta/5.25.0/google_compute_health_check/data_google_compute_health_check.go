// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google_compute_health_check

import "github.com/golingon/lingon/pkg/terra"

// Data creates a new instance of [DataSource].
func Data(name string, args DataArgs) *DataSource {
	return &DataSource{
		Args: args,
		Name: name,
	}
}

var _ terra.DataSource = (*DataSource)(nil)

// DataSource represents the Terraform data resource google_compute_health_check.
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (gchc *DataSource) DataSource() string {
	return "google_compute_health_check"
}

// LocalName returns the local name for [DataSource].
func (gchc *DataSource) LocalName() string {
	return gchc.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (gchc *DataSource) Configuration() interface{} {
	return gchc.Args
}

// Attributes returns the attributes for [DataSource].
func (gchc *DataSource) Attributes() dataGoogleComputeHealthCheckAttributes {
	return dataGoogleComputeHealthCheckAttributes{ref: terra.ReferenceDataSource(gchc)}
}

// DataArgs contains the configurations for google_compute_health_check.
type DataArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
}

type dataGoogleComputeHealthCheckAttributes struct {
	ref terra.Reference
}

// CheckIntervalSec returns a reference to field check_interval_sec of google_compute_health_check.
func (gchc dataGoogleComputeHealthCheckAttributes) CheckIntervalSec() terra.NumberValue {
	return terra.ReferenceAsNumber(gchc.ref.Append("check_interval_sec"))
}

// CreationTimestamp returns a reference to field creation_timestamp of google_compute_health_check.
func (gchc dataGoogleComputeHealthCheckAttributes) CreationTimestamp() terra.StringValue {
	return terra.ReferenceAsString(gchc.ref.Append("creation_timestamp"))
}

// Description returns a reference to field description of google_compute_health_check.
func (gchc dataGoogleComputeHealthCheckAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(gchc.ref.Append("description"))
}

// HealthyThreshold returns a reference to field healthy_threshold of google_compute_health_check.
func (gchc dataGoogleComputeHealthCheckAttributes) HealthyThreshold() terra.NumberValue {
	return terra.ReferenceAsNumber(gchc.ref.Append("healthy_threshold"))
}

// Id returns a reference to field id of google_compute_health_check.
func (gchc dataGoogleComputeHealthCheckAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(gchc.ref.Append("id"))
}

// Name returns a reference to field name of google_compute_health_check.
func (gchc dataGoogleComputeHealthCheckAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(gchc.ref.Append("name"))
}

// Project returns a reference to field project of google_compute_health_check.
func (gchc dataGoogleComputeHealthCheckAttributes) Project() terra.StringValue {
	return terra.ReferenceAsString(gchc.ref.Append("project"))
}

// SelfLink returns a reference to field self_link of google_compute_health_check.
func (gchc dataGoogleComputeHealthCheckAttributes) SelfLink() terra.StringValue {
	return terra.ReferenceAsString(gchc.ref.Append("self_link"))
}

// TimeoutSec returns a reference to field timeout_sec of google_compute_health_check.
func (gchc dataGoogleComputeHealthCheckAttributes) TimeoutSec() terra.NumberValue {
	return terra.ReferenceAsNumber(gchc.ref.Append("timeout_sec"))
}

// Type returns a reference to field type of google_compute_health_check.
func (gchc dataGoogleComputeHealthCheckAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(gchc.ref.Append("type"))
}

// UnhealthyThreshold returns a reference to field unhealthy_threshold of google_compute_health_check.
func (gchc dataGoogleComputeHealthCheckAttributes) UnhealthyThreshold() terra.NumberValue {
	return terra.ReferenceAsNumber(gchc.ref.Append("unhealthy_threshold"))
}

func (gchc dataGoogleComputeHealthCheckAttributes) GrpcHealthCheck() terra.ListValue[DataGrpcHealthCheckAttributes] {
	return terra.ReferenceAsList[DataGrpcHealthCheckAttributes](gchc.ref.Append("grpc_health_check"))
}

func (gchc dataGoogleComputeHealthCheckAttributes) Http2HealthCheck() terra.ListValue[DataHttp2HealthCheckAttributes] {
	return terra.ReferenceAsList[DataHttp2HealthCheckAttributes](gchc.ref.Append("http2_health_check"))
}

func (gchc dataGoogleComputeHealthCheckAttributes) HttpHealthCheck() terra.ListValue[DataHttpHealthCheckAttributes] {
	return terra.ReferenceAsList[DataHttpHealthCheckAttributes](gchc.ref.Append("http_health_check"))
}

func (gchc dataGoogleComputeHealthCheckAttributes) HttpsHealthCheck() terra.ListValue[DataHttpsHealthCheckAttributes] {
	return terra.ReferenceAsList[DataHttpsHealthCheckAttributes](gchc.ref.Append("https_health_check"))
}

func (gchc dataGoogleComputeHealthCheckAttributes) LogConfig() terra.ListValue[DataLogConfigAttributes] {
	return terra.ReferenceAsList[DataLogConfigAttributes](gchc.ref.Append("log_config"))
}

func (gchc dataGoogleComputeHealthCheckAttributes) SslHealthCheck() terra.ListValue[DataSslHealthCheckAttributes] {
	return terra.ReferenceAsList[DataSslHealthCheckAttributes](gchc.ref.Append("ssl_health_check"))
}

func (gchc dataGoogleComputeHealthCheckAttributes) TcpHealthCheck() terra.ListValue[DataTcpHealthCheckAttributes] {
	return terra.ReferenceAsList[DataTcpHealthCheckAttributes](gchc.ref.Append("tcp_health_check"))
}
