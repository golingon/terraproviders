// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google_access_context_manager_service_perimeters

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource google_access_context_manager_service_perimeters.
type Resource struct {
	Name      string
	Args      Args
	state     *googleAccessContextManagerServicePerimetersState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (gacmsp *Resource) Type() string {
	return "google_access_context_manager_service_perimeters"
}

// LocalName returns the local name for [Resource].
func (gacmsp *Resource) LocalName() string {
	return gacmsp.Name
}

// Configuration returns the configuration (args) for [Resource].
func (gacmsp *Resource) Configuration() interface{} {
	return gacmsp.Args
}

// DependOn is used for other resources to depend on [Resource].
func (gacmsp *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(gacmsp)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (gacmsp *Resource) Dependencies() terra.Dependencies {
	return gacmsp.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (gacmsp *Resource) LifecycleManagement() *terra.Lifecycle {
	return gacmsp.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (gacmsp *Resource) Attributes() googleAccessContextManagerServicePerimetersAttributes {
	return googleAccessContextManagerServicePerimetersAttributes{ref: terra.ReferenceResource(gacmsp)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (gacmsp *Resource) ImportState(state io.Reader) error {
	gacmsp.state = &googleAccessContextManagerServicePerimetersState{}
	if err := json.NewDecoder(state).Decode(gacmsp.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", gacmsp.Type(), gacmsp.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (gacmsp *Resource) State() (*googleAccessContextManagerServicePerimetersState, bool) {
	return gacmsp.state, gacmsp.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (gacmsp *Resource) StateMust() *googleAccessContextManagerServicePerimetersState {
	if gacmsp.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", gacmsp.Type(), gacmsp.LocalName()))
	}
	return gacmsp.state
}

// Args contains the configurations for google_access_context_manager_service_perimeters.
type Args struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Parent: string, required
	Parent terra.StringValue `hcl:"parent,attr" validate:"required"`
	// ServicePerimeters: min=0
	ServicePerimeters []ServicePerimeters `hcl:"service_perimeters,block" validate:"min=0"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type googleAccessContextManagerServicePerimetersAttributes struct {
	ref terra.Reference
}

// Id returns a reference to field id of google_access_context_manager_service_perimeters.
func (gacmsp googleAccessContextManagerServicePerimetersAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(gacmsp.ref.Append("id"))
}

// Parent returns a reference to field parent of google_access_context_manager_service_perimeters.
func (gacmsp googleAccessContextManagerServicePerimetersAttributes) Parent() terra.StringValue {
	return terra.ReferenceAsString(gacmsp.ref.Append("parent"))
}

func (gacmsp googleAccessContextManagerServicePerimetersAttributes) ServicePerimeters() terra.ListValue[ServicePerimetersAttributes] {
	return terra.ReferenceAsList[ServicePerimetersAttributes](gacmsp.ref.Append("service_perimeters"))
}

func (gacmsp googleAccessContextManagerServicePerimetersAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](gacmsp.ref.Append("timeouts"))
}

type googleAccessContextManagerServicePerimetersState struct {
	Id                string                   `json:"id"`
	Parent            string                   `json:"parent"`
	ServicePerimeters []ServicePerimetersState `json:"service_perimeters"`
	Timeouts          *TimeoutsState           `json:"timeouts"`
}
