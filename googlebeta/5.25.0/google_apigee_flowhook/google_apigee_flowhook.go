// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google_apigee_flowhook

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource google_apigee_flowhook.
type Resource struct {
	Name      string
	Args      Args
	state     *googleApigeeFlowhookState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (gaf *Resource) Type() string {
	return "google_apigee_flowhook"
}

// LocalName returns the local name for [Resource].
func (gaf *Resource) LocalName() string {
	return gaf.Name
}

// Configuration returns the configuration (args) for [Resource].
func (gaf *Resource) Configuration() interface{} {
	return gaf.Args
}

// DependOn is used for other resources to depend on [Resource].
func (gaf *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(gaf)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (gaf *Resource) Dependencies() terra.Dependencies {
	return gaf.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (gaf *Resource) LifecycleManagement() *terra.Lifecycle {
	return gaf.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (gaf *Resource) Attributes() googleApigeeFlowhookAttributes {
	return googleApigeeFlowhookAttributes{ref: terra.ReferenceResource(gaf)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (gaf *Resource) ImportState(state io.Reader) error {
	gaf.state = &googleApigeeFlowhookState{}
	if err := json.NewDecoder(state).Decode(gaf.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", gaf.Type(), gaf.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (gaf *Resource) State() (*googleApigeeFlowhookState, bool) {
	return gaf.state, gaf.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (gaf *Resource) StateMust() *googleApigeeFlowhookState {
	if gaf.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", gaf.Type(), gaf.LocalName()))
	}
	return gaf.state
}

// Args contains the configurations for google_apigee_flowhook.
type Args struct {
	// ContinueOnError: bool, optional
	ContinueOnError terra.BoolValue `hcl:"continue_on_error,attr"`
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// Environment: string, required
	Environment terra.StringValue `hcl:"environment,attr" validate:"required"`
	// FlowHookPoint: string, required
	FlowHookPoint terra.StringValue `hcl:"flow_hook_point,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// OrgId: string, required
	OrgId terra.StringValue `hcl:"org_id,attr" validate:"required"`
	// Sharedflow: string, required
	Sharedflow terra.StringValue `hcl:"sharedflow,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type googleApigeeFlowhookAttributes struct {
	ref terra.Reference
}

// ContinueOnError returns a reference to field continue_on_error of google_apigee_flowhook.
func (gaf googleApigeeFlowhookAttributes) ContinueOnError() terra.BoolValue {
	return terra.ReferenceAsBool(gaf.ref.Append("continue_on_error"))
}

// Description returns a reference to field description of google_apigee_flowhook.
func (gaf googleApigeeFlowhookAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(gaf.ref.Append("description"))
}

// Environment returns a reference to field environment of google_apigee_flowhook.
func (gaf googleApigeeFlowhookAttributes) Environment() terra.StringValue {
	return terra.ReferenceAsString(gaf.ref.Append("environment"))
}

// FlowHookPoint returns a reference to field flow_hook_point of google_apigee_flowhook.
func (gaf googleApigeeFlowhookAttributes) FlowHookPoint() terra.StringValue {
	return terra.ReferenceAsString(gaf.ref.Append("flow_hook_point"))
}

// Id returns a reference to field id of google_apigee_flowhook.
func (gaf googleApigeeFlowhookAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(gaf.ref.Append("id"))
}

// OrgId returns a reference to field org_id of google_apigee_flowhook.
func (gaf googleApigeeFlowhookAttributes) OrgId() terra.StringValue {
	return terra.ReferenceAsString(gaf.ref.Append("org_id"))
}

// Sharedflow returns a reference to field sharedflow of google_apigee_flowhook.
func (gaf googleApigeeFlowhookAttributes) Sharedflow() terra.StringValue {
	return terra.ReferenceAsString(gaf.ref.Append("sharedflow"))
}

func (gaf googleApigeeFlowhookAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](gaf.ref.Append("timeouts"))
}

type googleApigeeFlowhookState struct {
	ContinueOnError bool           `json:"continue_on_error"`
	Description     string         `json:"description"`
	Environment     string         `json:"environment"`
	FlowHookPoint   string         `json:"flow_hook_point"`
	Id              string         `json:"id"`
	OrgId           string         `json:"org_id"`
	Sharedflow      string         `json:"sharedflow"`
	Timeouts        *TimeoutsState `json:"timeouts"`
}
