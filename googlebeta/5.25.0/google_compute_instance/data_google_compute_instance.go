// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google_compute_instance

import "github.com/golingon/lingon/pkg/terra"

// Data creates a new instance of [DataSource].
func Data(name string, args DataArgs) *DataSource {
	return &DataSource{
		Args: args,
		Name: name,
	}
}

var _ terra.DataSource = (*DataSource)(nil)

// DataSource represents the Terraform data resource google_compute_instance.
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (gci *DataSource) DataSource() string {
	return "google_compute_instance"
}

// LocalName returns the local name for [DataSource].
func (gci *DataSource) LocalName() string {
	return gci.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (gci *DataSource) Configuration() interface{} {
	return gci.Args
}

// Attributes returns the attributes for [DataSource].
func (gci *DataSource) Attributes() dataGoogleComputeInstanceAttributes {
	return dataGoogleComputeInstanceAttributes{ref: terra.ReferenceDataSource(gci)}
}

// DataArgs contains the configurations for google_compute_instance.
type DataArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, optional
	Name terra.StringValue `hcl:"name,attr"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
	// SelfLink: string, optional
	SelfLink terra.StringValue `hcl:"self_link,attr"`
	// Zone: string, optional
	Zone terra.StringValue `hcl:"zone,attr"`
}

type dataGoogleComputeInstanceAttributes struct {
	ref terra.Reference
}

// AllowStoppingForUpdate returns a reference to field allow_stopping_for_update of google_compute_instance.
func (gci dataGoogleComputeInstanceAttributes) AllowStoppingForUpdate() terra.BoolValue {
	return terra.ReferenceAsBool(gci.ref.Append("allow_stopping_for_update"))
}

// CanIpForward returns a reference to field can_ip_forward of google_compute_instance.
func (gci dataGoogleComputeInstanceAttributes) CanIpForward() terra.BoolValue {
	return terra.ReferenceAsBool(gci.ref.Append("can_ip_forward"))
}

// CpuPlatform returns a reference to field cpu_platform of google_compute_instance.
func (gci dataGoogleComputeInstanceAttributes) CpuPlatform() terra.StringValue {
	return terra.ReferenceAsString(gci.ref.Append("cpu_platform"))
}

// CurrentStatus returns a reference to field current_status of google_compute_instance.
func (gci dataGoogleComputeInstanceAttributes) CurrentStatus() terra.StringValue {
	return terra.ReferenceAsString(gci.ref.Append("current_status"))
}

// DeletionProtection returns a reference to field deletion_protection of google_compute_instance.
func (gci dataGoogleComputeInstanceAttributes) DeletionProtection() terra.BoolValue {
	return terra.ReferenceAsBool(gci.ref.Append("deletion_protection"))
}

// Description returns a reference to field description of google_compute_instance.
func (gci dataGoogleComputeInstanceAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(gci.ref.Append("description"))
}

// DesiredStatus returns a reference to field desired_status of google_compute_instance.
func (gci dataGoogleComputeInstanceAttributes) DesiredStatus() terra.StringValue {
	return terra.ReferenceAsString(gci.ref.Append("desired_status"))
}

// EffectiveLabels returns a reference to field effective_labels of google_compute_instance.
func (gci dataGoogleComputeInstanceAttributes) EffectiveLabels() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](gci.ref.Append("effective_labels"))
}

// EnableDisplay returns a reference to field enable_display of google_compute_instance.
func (gci dataGoogleComputeInstanceAttributes) EnableDisplay() terra.BoolValue {
	return terra.ReferenceAsBool(gci.ref.Append("enable_display"))
}

// Hostname returns a reference to field hostname of google_compute_instance.
func (gci dataGoogleComputeInstanceAttributes) Hostname() terra.StringValue {
	return terra.ReferenceAsString(gci.ref.Append("hostname"))
}

// Id returns a reference to field id of google_compute_instance.
func (gci dataGoogleComputeInstanceAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(gci.ref.Append("id"))
}

// InstanceId returns a reference to field instance_id of google_compute_instance.
func (gci dataGoogleComputeInstanceAttributes) InstanceId() terra.StringValue {
	return terra.ReferenceAsString(gci.ref.Append("instance_id"))
}

// LabelFingerprint returns a reference to field label_fingerprint of google_compute_instance.
func (gci dataGoogleComputeInstanceAttributes) LabelFingerprint() terra.StringValue {
	return terra.ReferenceAsString(gci.ref.Append("label_fingerprint"))
}

// Labels returns a reference to field labels of google_compute_instance.
func (gci dataGoogleComputeInstanceAttributes) Labels() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](gci.ref.Append("labels"))
}

// MachineType returns a reference to field machine_type of google_compute_instance.
func (gci dataGoogleComputeInstanceAttributes) MachineType() terra.StringValue {
	return terra.ReferenceAsString(gci.ref.Append("machine_type"))
}

// Metadata returns a reference to field metadata of google_compute_instance.
func (gci dataGoogleComputeInstanceAttributes) Metadata() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](gci.ref.Append("metadata"))
}

// MetadataFingerprint returns a reference to field metadata_fingerprint of google_compute_instance.
func (gci dataGoogleComputeInstanceAttributes) MetadataFingerprint() terra.StringValue {
	return terra.ReferenceAsString(gci.ref.Append("metadata_fingerprint"))
}

// MetadataStartupScript returns a reference to field metadata_startup_script of google_compute_instance.
func (gci dataGoogleComputeInstanceAttributes) MetadataStartupScript() terra.StringValue {
	return terra.ReferenceAsString(gci.ref.Append("metadata_startup_script"))
}

// MinCpuPlatform returns a reference to field min_cpu_platform of google_compute_instance.
func (gci dataGoogleComputeInstanceAttributes) MinCpuPlatform() terra.StringValue {
	return terra.ReferenceAsString(gci.ref.Append("min_cpu_platform"))
}

// Name returns a reference to field name of google_compute_instance.
func (gci dataGoogleComputeInstanceAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(gci.ref.Append("name"))
}

// Project returns a reference to field project of google_compute_instance.
func (gci dataGoogleComputeInstanceAttributes) Project() terra.StringValue {
	return terra.ReferenceAsString(gci.ref.Append("project"))
}

// ResourcePolicies returns a reference to field resource_policies of google_compute_instance.
func (gci dataGoogleComputeInstanceAttributes) ResourcePolicies() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](gci.ref.Append("resource_policies"))
}

// SelfLink returns a reference to field self_link of google_compute_instance.
func (gci dataGoogleComputeInstanceAttributes) SelfLink() terra.StringValue {
	return terra.ReferenceAsString(gci.ref.Append("self_link"))
}

// Tags returns a reference to field tags of google_compute_instance.
func (gci dataGoogleComputeInstanceAttributes) Tags() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](gci.ref.Append("tags"))
}

// TagsFingerprint returns a reference to field tags_fingerprint of google_compute_instance.
func (gci dataGoogleComputeInstanceAttributes) TagsFingerprint() terra.StringValue {
	return terra.ReferenceAsString(gci.ref.Append("tags_fingerprint"))
}

// TerraformLabels returns a reference to field terraform_labels of google_compute_instance.
func (gci dataGoogleComputeInstanceAttributes) TerraformLabels() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](gci.ref.Append("terraform_labels"))
}

// Zone returns a reference to field zone of google_compute_instance.
func (gci dataGoogleComputeInstanceAttributes) Zone() terra.StringValue {
	return terra.ReferenceAsString(gci.ref.Append("zone"))
}

func (gci dataGoogleComputeInstanceAttributes) AdvancedMachineFeatures() terra.ListValue[DataAdvancedMachineFeaturesAttributes] {
	return terra.ReferenceAsList[DataAdvancedMachineFeaturesAttributes](gci.ref.Append("advanced_machine_features"))
}

func (gci dataGoogleComputeInstanceAttributes) AttachedDisk() terra.ListValue[DataAttachedDiskAttributes] {
	return terra.ReferenceAsList[DataAttachedDiskAttributes](gci.ref.Append("attached_disk"))
}

func (gci dataGoogleComputeInstanceAttributes) BootDisk() terra.ListValue[DataBootDiskAttributes] {
	return terra.ReferenceAsList[DataBootDiskAttributes](gci.ref.Append("boot_disk"))
}

func (gci dataGoogleComputeInstanceAttributes) ConfidentialInstanceConfig() terra.ListValue[DataConfidentialInstanceConfigAttributes] {
	return terra.ReferenceAsList[DataConfidentialInstanceConfigAttributes](gci.ref.Append("confidential_instance_config"))
}

func (gci dataGoogleComputeInstanceAttributes) GuestAccelerator() terra.ListValue[DataGuestAcceleratorAttributes] {
	return terra.ReferenceAsList[DataGuestAcceleratorAttributes](gci.ref.Append("guest_accelerator"))
}

func (gci dataGoogleComputeInstanceAttributes) NetworkInterface() terra.ListValue[DataNetworkInterfaceAttributes] {
	return terra.ReferenceAsList[DataNetworkInterfaceAttributes](gci.ref.Append("network_interface"))
}

func (gci dataGoogleComputeInstanceAttributes) NetworkPerformanceConfig() terra.ListValue[DataNetworkPerformanceConfigAttributes] {
	return terra.ReferenceAsList[DataNetworkPerformanceConfigAttributes](gci.ref.Append("network_performance_config"))
}

func (gci dataGoogleComputeInstanceAttributes) Params() terra.ListValue[DataParamsAttributes] {
	return terra.ReferenceAsList[DataParamsAttributes](gci.ref.Append("params"))
}

func (gci dataGoogleComputeInstanceAttributes) ReservationAffinity() terra.ListValue[DataReservationAffinityAttributes] {
	return terra.ReferenceAsList[DataReservationAffinityAttributes](gci.ref.Append("reservation_affinity"))
}

func (gci dataGoogleComputeInstanceAttributes) Scheduling() terra.ListValue[DataSchedulingAttributes] {
	return terra.ReferenceAsList[DataSchedulingAttributes](gci.ref.Append("scheduling"))
}

func (gci dataGoogleComputeInstanceAttributes) ScratchDisk() terra.ListValue[DataScratchDiskAttributes] {
	return terra.ReferenceAsList[DataScratchDiskAttributes](gci.ref.Append("scratch_disk"))
}

func (gci dataGoogleComputeInstanceAttributes) ServiceAccount() terra.ListValue[DataServiceAccountAttributes] {
	return terra.ReferenceAsList[DataServiceAccountAttributes](gci.ref.Append("service_account"))
}

func (gci dataGoogleComputeInstanceAttributes) ShieldedInstanceConfig() terra.ListValue[DataShieldedInstanceConfigAttributes] {
	return terra.ReferenceAsList[DataShieldedInstanceConfigAttributes](gci.ref.Append("shielded_instance_config"))
}
