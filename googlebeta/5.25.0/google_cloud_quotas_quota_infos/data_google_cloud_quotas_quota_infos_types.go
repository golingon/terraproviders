// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google_cloud_quotas_quota_infos

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DataQuotaInfosAttributes struct {
	ref terra.Reference
}

func (qi DataQuotaInfosAttributes) InternalRef() (terra.Reference, error) {
	return qi.ref, nil
}

func (qi DataQuotaInfosAttributes) InternalWithRef(ref terra.Reference) DataQuotaInfosAttributes {
	return DataQuotaInfosAttributes{ref: ref}
}

func (qi DataQuotaInfosAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return qi.ref.InternalTokens()
}

func (qi DataQuotaInfosAttributes) ContainerType() terra.StringValue {
	return terra.ReferenceAsString(qi.ref.Append("container_type"))
}

func (qi DataQuotaInfosAttributes) Dimensions() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](qi.ref.Append("dimensions"))
}

func (qi DataQuotaInfosAttributes) IsConcurrent() terra.BoolValue {
	return terra.ReferenceAsBool(qi.ref.Append("is_concurrent"))
}

func (qi DataQuotaInfosAttributes) IsFixed() terra.BoolValue {
	return terra.ReferenceAsBool(qi.ref.Append("is_fixed"))
}

func (qi DataQuotaInfosAttributes) IsPrecise() terra.BoolValue {
	return terra.ReferenceAsBool(qi.ref.Append("is_precise"))
}

func (qi DataQuotaInfosAttributes) Metric() terra.StringValue {
	return terra.ReferenceAsString(qi.ref.Append("metric"))
}

func (qi DataQuotaInfosAttributes) MetricDisplayName() terra.StringValue {
	return terra.ReferenceAsString(qi.ref.Append("metric_display_name"))
}

func (qi DataQuotaInfosAttributes) MetricUnit() terra.StringValue {
	return terra.ReferenceAsString(qi.ref.Append("metric_unit"))
}

func (qi DataQuotaInfosAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(qi.ref.Append("name"))
}

func (qi DataQuotaInfosAttributes) QuotaDisplayName() terra.StringValue {
	return terra.ReferenceAsString(qi.ref.Append("quota_display_name"))
}

func (qi DataQuotaInfosAttributes) QuotaId() terra.StringValue {
	return terra.ReferenceAsString(qi.ref.Append("quota_id"))
}

func (qi DataQuotaInfosAttributes) RefreshInterval() terra.StringValue {
	return terra.ReferenceAsString(qi.ref.Append("refresh_interval"))
}

func (qi DataQuotaInfosAttributes) Service() terra.StringValue {
	return terra.ReferenceAsString(qi.ref.Append("service"))
}

func (qi DataQuotaInfosAttributes) ServiceRequestQuotaUri() terra.StringValue {
	return terra.ReferenceAsString(qi.ref.Append("service_request_quota_uri"))
}

func (qi DataQuotaInfosAttributes) DimensionsInfos() terra.ListValue[DataQuotaInfosDimensionsInfosAttributes] {
	return terra.ReferenceAsList[DataQuotaInfosDimensionsInfosAttributes](qi.ref.Append("dimensions_infos"))
}

func (qi DataQuotaInfosAttributes) QuotaIncreaseEligibility() terra.ListValue[DataQuotaInfosQuotaIncreaseEligibilityAttributes] {
	return terra.ReferenceAsList[DataQuotaInfosQuotaIncreaseEligibilityAttributes](qi.ref.Append("quota_increase_eligibility"))
}

type DataQuotaInfosDimensionsInfosAttributes struct {
	ref terra.Reference
}

func (di DataQuotaInfosDimensionsInfosAttributes) InternalRef() (terra.Reference, error) {
	return di.ref, nil
}

func (di DataQuotaInfosDimensionsInfosAttributes) InternalWithRef(ref terra.Reference) DataQuotaInfosDimensionsInfosAttributes {
	return DataQuotaInfosDimensionsInfosAttributes{ref: ref}
}

func (di DataQuotaInfosDimensionsInfosAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return di.ref.InternalTokens()
}

func (di DataQuotaInfosDimensionsInfosAttributes) ApplicableLocations() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](di.ref.Append("applicable_locations"))
}

func (di DataQuotaInfosDimensionsInfosAttributes) Dimensions() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](di.ref.Append("dimensions"))
}

func (di DataQuotaInfosDimensionsInfosAttributes) Details() terra.ListValue[DataQuotaInfosDimensionsInfosDetailsAttributes] {
	return terra.ReferenceAsList[DataQuotaInfosDimensionsInfosDetailsAttributes](di.ref.Append("details"))
}

type DataQuotaInfosDimensionsInfosDetailsAttributes struct {
	ref terra.Reference
}

func (d DataQuotaInfosDimensionsInfosDetailsAttributes) InternalRef() (terra.Reference, error) {
	return d.ref, nil
}

func (d DataQuotaInfosDimensionsInfosDetailsAttributes) InternalWithRef(ref terra.Reference) DataQuotaInfosDimensionsInfosDetailsAttributes {
	return DataQuotaInfosDimensionsInfosDetailsAttributes{ref: ref}
}

func (d DataQuotaInfosDimensionsInfosDetailsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return d.ref.InternalTokens()
}

func (d DataQuotaInfosDimensionsInfosDetailsAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(d.ref.Append("value"))
}

type DataQuotaInfosQuotaIncreaseEligibilityAttributes struct {
	ref terra.Reference
}

func (qie DataQuotaInfosQuotaIncreaseEligibilityAttributes) InternalRef() (terra.Reference, error) {
	return qie.ref, nil
}

func (qie DataQuotaInfosQuotaIncreaseEligibilityAttributes) InternalWithRef(ref terra.Reference) DataQuotaInfosQuotaIncreaseEligibilityAttributes {
	return DataQuotaInfosQuotaIncreaseEligibilityAttributes{ref: ref}
}

func (qie DataQuotaInfosQuotaIncreaseEligibilityAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return qie.ref.InternalTokens()
}

func (qie DataQuotaInfosQuotaIncreaseEligibilityAttributes) IneligibilityReason() terra.StringValue {
	return terra.ReferenceAsString(qie.ref.Append("ineligibility_reason"))
}

func (qie DataQuotaInfosQuotaIncreaseEligibilityAttributes) IsEligible() terra.BoolValue {
	return terra.ReferenceAsBool(qie.ref.Append("is_eligible"))
}

type DataQuotaInfosState struct {
	ContainerType            string                                        `json:"container_type"`
	Dimensions               []string                                      `json:"dimensions"`
	IsConcurrent             bool                                          `json:"is_concurrent"`
	IsFixed                  bool                                          `json:"is_fixed"`
	IsPrecise                bool                                          `json:"is_precise"`
	Metric                   string                                        `json:"metric"`
	MetricDisplayName        string                                        `json:"metric_display_name"`
	MetricUnit               string                                        `json:"metric_unit"`
	Name                     string                                        `json:"name"`
	QuotaDisplayName         string                                        `json:"quota_display_name"`
	QuotaId                  string                                        `json:"quota_id"`
	RefreshInterval          string                                        `json:"refresh_interval"`
	Service                  string                                        `json:"service"`
	ServiceRequestQuotaUri   string                                        `json:"service_request_quota_uri"`
	DimensionsInfos          []DataQuotaInfosDimensionsInfosState          `json:"dimensions_infos"`
	QuotaIncreaseEligibility []DataQuotaInfosQuotaIncreaseEligibilityState `json:"quota_increase_eligibility"`
}

type DataQuotaInfosDimensionsInfosState struct {
	ApplicableLocations []string                                    `json:"applicable_locations"`
	Dimensions          map[string]string                           `json:"dimensions"`
	Details             []DataQuotaInfosDimensionsInfosDetailsState `json:"details"`
}

type DataQuotaInfosDimensionsInfosDetailsState struct {
	Value string `json:"value"`
}

type DataQuotaInfosQuotaIncreaseEligibilityState struct {
	IneligibilityReason string `json:"ineligibility_reason"`
	IsEligible          bool   `json:"is_eligible"`
}
