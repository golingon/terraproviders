// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google_os_login_ssh_public_key

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource google_os_login_ssh_public_key.
type Resource struct {
	Name      string
	Args      Args
	state     *googleOsLoginSshPublicKeyState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (golspk *Resource) Type() string {
	return "google_os_login_ssh_public_key"
}

// LocalName returns the local name for [Resource].
func (golspk *Resource) LocalName() string {
	return golspk.Name
}

// Configuration returns the configuration (args) for [Resource].
func (golspk *Resource) Configuration() interface{} {
	return golspk.Args
}

// DependOn is used for other resources to depend on [Resource].
func (golspk *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(golspk)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (golspk *Resource) Dependencies() terra.Dependencies {
	return golspk.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (golspk *Resource) LifecycleManagement() *terra.Lifecycle {
	return golspk.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (golspk *Resource) Attributes() googleOsLoginSshPublicKeyAttributes {
	return googleOsLoginSshPublicKeyAttributes{ref: terra.ReferenceResource(golspk)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (golspk *Resource) ImportState(state io.Reader) error {
	golspk.state = &googleOsLoginSshPublicKeyState{}
	if err := json.NewDecoder(state).Decode(golspk.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", golspk.Type(), golspk.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (golspk *Resource) State() (*googleOsLoginSshPublicKeyState, bool) {
	return golspk.state, golspk.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (golspk *Resource) StateMust() *googleOsLoginSshPublicKeyState {
	if golspk.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", golspk.Type(), golspk.LocalName()))
	}
	return golspk.state
}

// Args contains the configurations for google_os_login_ssh_public_key.
type Args struct {
	// ExpirationTimeUsec: string, optional
	ExpirationTimeUsec terra.StringValue `hcl:"expiration_time_usec,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Key: string, required
	Key terra.StringValue `hcl:"key,attr" validate:"required"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
	// User: string, required
	User terra.StringValue `hcl:"user,attr" validate:"required"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type googleOsLoginSshPublicKeyAttributes struct {
	ref terra.Reference
}

// ExpirationTimeUsec returns a reference to field expiration_time_usec of google_os_login_ssh_public_key.
func (golspk googleOsLoginSshPublicKeyAttributes) ExpirationTimeUsec() terra.StringValue {
	return terra.ReferenceAsString(golspk.ref.Append("expiration_time_usec"))
}

// Fingerprint returns a reference to field fingerprint of google_os_login_ssh_public_key.
func (golspk googleOsLoginSshPublicKeyAttributes) Fingerprint() terra.StringValue {
	return terra.ReferenceAsString(golspk.ref.Append("fingerprint"))
}

// Id returns a reference to field id of google_os_login_ssh_public_key.
func (golspk googleOsLoginSshPublicKeyAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(golspk.ref.Append("id"))
}

// Key returns a reference to field key of google_os_login_ssh_public_key.
func (golspk googleOsLoginSshPublicKeyAttributes) Key() terra.StringValue {
	return terra.ReferenceAsString(golspk.ref.Append("key"))
}

// Project returns a reference to field project of google_os_login_ssh_public_key.
func (golspk googleOsLoginSshPublicKeyAttributes) Project() terra.StringValue {
	return terra.ReferenceAsString(golspk.ref.Append("project"))
}

// User returns a reference to field user of google_os_login_ssh_public_key.
func (golspk googleOsLoginSshPublicKeyAttributes) User() terra.StringValue {
	return terra.ReferenceAsString(golspk.ref.Append("user"))
}

func (golspk googleOsLoginSshPublicKeyAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](golspk.ref.Append("timeouts"))
}

type googleOsLoginSshPublicKeyState struct {
	ExpirationTimeUsec string         `json:"expiration_time_usec"`
	Fingerprint        string         `json:"fingerprint"`
	Id                 string         `json:"id"`
	Key                string         `json:"key"`
	Project            string         `json:"project"`
	User               string         `json:"user"`
	Timeouts           *TimeoutsState `json:"timeouts"`
}
