// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google_dialogflow_cx_webhook

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

// New creates a new instance of [Resource].
func New(name string, args Args) *Resource {
	return &Resource{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource google_dialogflow_cx_webhook.
type Resource struct {
	Name      string
	Args      Args
	state     *googleDialogflowCxWebhookState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (gdcw *Resource) Type() string {
	return "google_dialogflow_cx_webhook"
}

// LocalName returns the local name for [Resource].
func (gdcw *Resource) LocalName() string {
	return gdcw.Name
}

// Configuration returns the configuration (args) for [Resource].
func (gdcw *Resource) Configuration() interface{} {
	return gdcw.Args
}

// DependOn is used for other resources to depend on [Resource].
func (gdcw *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(gdcw)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (gdcw *Resource) Dependencies() terra.Dependencies {
	return gdcw.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (gdcw *Resource) LifecycleManagement() *terra.Lifecycle {
	return gdcw.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (gdcw *Resource) Attributes() googleDialogflowCxWebhookAttributes {
	return googleDialogflowCxWebhookAttributes{ref: terra.ReferenceResource(gdcw)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (gdcw *Resource) ImportState(state io.Reader) error {
	gdcw.state = &googleDialogflowCxWebhookState{}
	if err := json.NewDecoder(state).Decode(gdcw.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", gdcw.Type(), gdcw.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (gdcw *Resource) State() (*googleDialogflowCxWebhookState, bool) {
	return gdcw.state, gdcw.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (gdcw *Resource) StateMust() *googleDialogflowCxWebhookState {
	if gdcw.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", gdcw.Type(), gdcw.LocalName()))
	}
	return gdcw.state
}

// Args contains the configurations for google_dialogflow_cx_webhook.
type Args struct {
	// Disabled: bool, optional
	Disabled terra.BoolValue `hcl:"disabled,attr"`
	// DisplayName: string, required
	DisplayName terra.StringValue `hcl:"display_name,attr" validate:"required"`
	// EnableSpellCorrection: bool, optional
	EnableSpellCorrection terra.BoolValue `hcl:"enable_spell_correction,attr"`
	// EnableStackdriverLogging: bool, optional
	EnableStackdriverLogging terra.BoolValue `hcl:"enable_stackdriver_logging,attr"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Parent: string, optional
	Parent terra.StringValue `hcl:"parent,attr"`
	// SecuritySettings: string, optional
	SecuritySettings terra.StringValue `hcl:"security_settings,attr"`
	// Timeout: string, optional
	Timeout terra.StringValue `hcl:"timeout,attr"`
	// GenericWebService: optional
	GenericWebService *GenericWebService `hcl:"generic_web_service,block"`
	// ServiceDirectory: optional
	ServiceDirectory *ServiceDirectory `hcl:"service_directory,block"`
	// Timeouts: optional
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type googleDialogflowCxWebhookAttributes struct {
	ref terra.Reference
}

// Disabled returns a reference to field disabled of google_dialogflow_cx_webhook.
func (gdcw googleDialogflowCxWebhookAttributes) Disabled() terra.BoolValue {
	return terra.ReferenceAsBool(gdcw.ref.Append("disabled"))
}

// DisplayName returns a reference to field display_name of google_dialogflow_cx_webhook.
func (gdcw googleDialogflowCxWebhookAttributes) DisplayName() terra.StringValue {
	return terra.ReferenceAsString(gdcw.ref.Append("display_name"))
}

// EnableSpellCorrection returns a reference to field enable_spell_correction of google_dialogflow_cx_webhook.
func (gdcw googleDialogflowCxWebhookAttributes) EnableSpellCorrection() terra.BoolValue {
	return terra.ReferenceAsBool(gdcw.ref.Append("enable_spell_correction"))
}

// EnableStackdriverLogging returns a reference to field enable_stackdriver_logging of google_dialogflow_cx_webhook.
func (gdcw googleDialogflowCxWebhookAttributes) EnableStackdriverLogging() terra.BoolValue {
	return terra.ReferenceAsBool(gdcw.ref.Append("enable_stackdriver_logging"))
}

// Id returns a reference to field id of google_dialogflow_cx_webhook.
func (gdcw googleDialogflowCxWebhookAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(gdcw.ref.Append("id"))
}

// Name returns a reference to field name of google_dialogflow_cx_webhook.
func (gdcw googleDialogflowCxWebhookAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(gdcw.ref.Append("name"))
}

// Parent returns a reference to field parent of google_dialogflow_cx_webhook.
func (gdcw googleDialogflowCxWebhookAttributes) Parent() terra.StringValue {
	return terra.ReferenceAsString(gdcw.ref.Append("parent"))
}

// SecuritySettings returns a reference to field security_settings of google_dialogflow_cx_webhook.
func (gdcw googleDialogflowCxWebhookAttributes) SecuritySettings() terra.StringValue {
	return terra.ReferenceAsString(gdcw.ref.Append("security_settings"))
}

// StartFlow returns a reference to field start_flow of google_dialogflow_cx_webhook.
func (gdcw googleDialogflowCxWebhookAttributes) StartFlow() terra.StringValue {
	return terra.ReferenceAsString(gdcw.ref.Append("start_flow"))
}

// Timeout returns a reference to field timeout of google_dialogflow_cx_webhook.
func (gdcw googleDialogflowCxWebhookAttributes) Timeout() terra.StringValue {
	return terra.ReferenceAsString(gdcw.ref.Append("timeout"))
}

func (gdcw googleDialogflowCxWebhookAttributes) GenericWebService() terra.ListValue[GenericWebServiceAttributes] {
	return terra.ReferenceAsList[GenericWebServiceAttributes](gdcw.ref.Append("generic_web_service"))
}

func (gdcw googleDialogflowCxWebhookAttributes) ServiceDirectory() terra.ListValue[ServiceDirectoryAttributes] {
	return terra.ReferenceAsList[ServiceDirectoryAttributes](gdcw.ref.Append("service_directory"))
}

func (gdcw googleDialogflowCxWebhookAttributes) Timeouts() TimeoutsAttributes {
	return terra.ReferenceAsSingle[TimeoutsAttributes](gdcw.ref.Append("timeouts"))
}

type googleDialogflowCxWebhookState struct {
	Disabled                 bool                     `json:"disabled"`
	DisplayName              string                   `json:"display_name"`
	EnableSpellCorrection    bool                     `json:"enable_spell_correction"`
	EnableStackdriverLogging bool                     `json:"enable_stackdriver_logging"`
	Id                       string                   `json:"id"`
	Name                     string                   `json:"name"`
	Parent                   string                   `json:"parent"`
	SecuritySettings         string                   `json:"security_settings"`
	StartFlow                string                   `json:"start_flow"`
	Timeout                  string                   `json:"timeout"`
	GenericWebService        []GenericWebServiceState `json:"generic_web_service"`
	ServiceDirectory         []ServiceDirectoryState  `json:"service_directory"`
	Timeouts                 *TimeoutsState           `json:"timeouts"`
}
