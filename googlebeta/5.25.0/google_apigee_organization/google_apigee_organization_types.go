// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package google_apigee_organization

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type Properties struct {
	// PropertiesProperty: min=0
	Property []PropertiesProperty `hcl:"property,block" validate:"min=0"`
}

type PropertiesProperty struct {
	// Name: string, optional
	Name terra.StringValue `hcl:"name,attr"`
	// Value: string, optional
	Value terra.StringValue `hcl:"value,attr"`
}

type Timeouts struct {
	// Create: string, optional
	Create terra.StringValue `hcl:"create,attr"`
	// Delete: string, optional
	Delete terra.StringValue `hcl:"delete,attr"`
	// Update: string, optional
	Update terra.StringValue `hcl:"update,attr"`
}

type PropertiesAttributes struct {
	ref terra.Reference
}

func (p PropertiesAttributes) InternalRef() (terra.Reference, error) {
	return p.ref, nil
}

func (p PropertiesAttributes) InternalWithRef(ref terra.Reference) PropertiesAttributes {
	return PropertiesAttributes{ref: ref}
}

func (p PropertiesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return p.ref.InternalTokens()
}

func (p PropertiesAttributes) Property() terra.ListValue[PropertiesPropertyAttributes] {
	return terra.ReferenceAsList[PropertiesPropertyAttributes](p.ref.Append("property"))
}

type PropertiesPropertyAttributes struct {
	ref terra.Reference
}

func (p PropertiesPropertyAttributes) InternalRef() (terra.Reference, error) {
	return p.ref, nil
}

func (p PropertiesPropertyAttributes) InternalWithRef(ref terra.Reference) PropertiesPropertyAttributes {
	return PropertiesPropertyAttributes{ref: ref}
}

func (p PropertiesPropertyAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return p.ref.InternalTokens()
}

func (p PropertiesPropertyAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(p.ref.Append("name"))
}

func (p PropertiesPropertyAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(p.ref.Append("value"))
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("create"))
}

func (t TimeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("delete"))
}

func (t TimeoutsAttributes) Update() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("update"))
}

type PropertiesState struct {
	Property []PropertiesPropertyState `json:"property"`
}

type PropertiesPropertyState struct {
	Name  string `json:"name"`
	Value string `json:"value"`
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
	Update string `json:"update"`
}
