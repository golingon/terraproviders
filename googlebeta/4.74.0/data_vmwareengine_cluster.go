// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package googlebeta

import (
	datavmwareenginecluster "github.com/golingon/terraproviders/googlebeta/4.74.0/datavmwareenginecluster"
	"github.com/volvo-cars/lingon/pkg/terra"
)

// NewDataVmwareengineCluster creates a new instance of [DataVmwareengineCluster].
func NewDataVmwareengineCluster(name string, args DataVmwareengineClusterArgs) *DataVmwareengineCluster {
	return &DataVmwareengineCluster{
		Args: args,
		Name: name,
	}
}

var _ terra.DataResource = (*DataVmwareengineCluster)(nil)

// DataVmwareengineCluster represents the Terraform data resource google_vmwareengine_cluster.
type DataVmwareengineCluster struct {
	Name string
	Args DataVmwareengineClusterArgs
}

// DataSource returns the Terraform object type for [DataVmwareengineCluster].
func (vc *DataVmwareengineCluster) DataSource() string {
	return "google_vmwareengine_cluster"
}

// LocalName returns the local name for [DataVmwareengineCluster].
func (vc *DataVmwareengineCluster) LocalName() string {
	return vc.Name
}

// Configuration returns the configuration (args) for [DataVmwareengineCluster].
func (vc *DataVmwareengineCluster) Configuration() interface{} {
	return vc.Args
}

// Attributes returns the attributes for [DataVmwareengineCluster].
func (vc *DataVmwareengineCluster) Attributes() dataVmwareengineClusterAttributes {
	return dataVmwareengineClusterAttributes{ref: terra.ReferenceDataResource(vc)}
}

// DataVmwareengineClusterArgs contains the configurations for google_vmwareengine_cluster.
type DataVmwareengineClusterArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Parent: string, required
	Parent terra.StringValue `hcl:"parent,attr" validate:"required"`
	// NodeTypeConfigs: min=0
	NodeTypeConfigs []datavmwareenginecluster.NodeTypeConfigs `hcl:"node_type_configs,block" validate:"min=0"`
}
type dataVmwareengineClusterAttributes struct {
	ref terra.Reference
}

// Id returns a reference to field id of google_vmwareengine_cluster.
func (vc dataVmwareengineClusterAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(vc.ref.Append("id"))
}

// Management returns a reference to field management of google_vmwareengine_cluster.
func (vc dataVmwareengineClusterAttributes) Management() terra.BoolValue {
	return terra.ReferenceAsBool(vc.ref.Append("management"))
}

// Name returns a reference to field name of google_vmwareengine_cluster.
func (vc dataVmwareengineClusterAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(vc.ref.Append("name"))
}

// Parent returns a reference to field parent of google_vmwareengine_cluster.
func (vc dataVmwareengineClusterAttributes) Parent() terra.StringValue {
	return terra.ReferenceAsString(vc.ref.Append("parent"))
}

// State returns a reference to field state of google_vmwareengine_cluster.
func (vc dataVmwareengineClusterAttributes) State() terra.StringValue {
	return terra.ReferenceAsString(vc.ref.Append("state"))
}

// Uid returns a reference to field uid of google_vmwareengine_cluster.
func (vc dataVmwareengineClusterAttributes) Uid() terra.StringValue {
	return terra.ReferenceAsString(vc.ref.Append("uid"))
}

func (vc dataVmwareengineClusterAttributes) NodeTypeConfigs() terra.SetValue[datavmwareenginecluster.NodeTypeConfigsAttributes] {
	return terra.ReferenceAsSet[datavmwareenginecluster.NodeTypeConfigsAttributes](vc.ref.Append("node_type_configs"))
}
