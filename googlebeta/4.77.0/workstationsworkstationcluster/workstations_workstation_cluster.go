// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package workstationsworkstationcluster

import (
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
	terra "github.com/volvo-cars/lingon/pkg/terra"
)

type Conditions struct{}

type PrivateClusterConfig struct {
	// EnablePrivateEndpoint: bool, required
	EnablePrivateEndpoint terra.BoolValue `hcl:"enable_private_endpoint,attr" validate:"required"`
}

type Timeouts struct {
	// Create: string, optional
	Create terra.StringValue `hcl:"create,attr"`
	// Delete: string, optional
	Delete terra.StringValue `hcl:"delete,attr"`
	// Update: string, optional
	Update terra.StringValue `hcl:"update,attr"`
}

type ConditionsAttributes struct {
	ref terra.Reference
}

func (c ConditionsAttributes) InternalRef() (terra.Reference, error) {
	return c.ref, nil
}

func (c ConditionsAttributes) InternalWithRef(ref terra.Reference) ConditionsAttributes {
	return ConditionsAttributes{ref: ref}
}

func (c ConditionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return c.ref.InternalTokens()
}

func (c ConditionsAttributes) Code() terra.NumberValue {
	return terra.ReferenceAsNumber(c.ref.Append("code"))
}

func (c ConditionsAttributes) Details() terra.ListValue[terra.MapValue[terra.StringValue]] {
	return terra.ReferenceAsList[terra.MapValue[terra.StringValue]](c.ref.Append("details"))
}

func (c ConditionsAttributes) Message() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("message"))
}

type PrivateClusterConfigAttributes struct {
	ref terra.Reference
}

func (pcc PrivateClusterConfigAttributes) InternalRef() (terra.Reference, error) {
	return pcc.ref, nil
}

func (pcc PrivateClusterConfigAttributes) InternalWithRef(ref terra.Reference) PrivateClusterConfigAttributes {
	return PrivateClusterConfigAttributes{ref: ref}
}

func (pcc PrivateClusterConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return pcc.ref.InternalTokens()
}

func (pcc PrivateClusterConfigAttributes) ClusterHostname() terra.StringValue {
	return terra.ReferenceAsString(pcc.ref.Append("cluster_hostname"))
}

func (pcc PrivateClusterConfigAttributes) EnablePrivateEndpoint() terra.BoolValue {
	return terra.ReferenceAsBool(pcc.ref.Append("enable_private_endpoint"))
}

func (pcc PrivateClusterConfigAttributes) ServiceAttachmentUri() terra.StringValue {
	return terra.ReferenceAsString(pcc.ref.Append("service_attachment_uri"))
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("create"))
}

func (t TimeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("delete"))
}

func (t TimeoutsAttributes) Update() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("update"))
}

type ConditionsState struct {
	Code    float64             `json:"code"`
	Details []map[string]string `json:"details"`
	Message string              `json:"message"`
}

type PrivateClusterConfigState struct {
	ClusterHostname       string `json:"cluster_hostname"`
	EnablePrivateEndpoint bool   `json:"enable_private_endpoint"`
	ServiceAttachmentUri  string `json:"service_attachment_uri"`
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
	Update string `json:"update"`
}
