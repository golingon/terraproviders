// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package googlebeta

import (
	"encoding/json"
	"fmt"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

// NewIapWebRegionBackendServiceIamPolicy creates a new instance of [IapWebRegionBackendServiceIamPolicy].
func NewIapWebRegionBackendServiceIamPolicy(name string, args IapWebRegionBackendServiceIamPolicyArgs) *IapWebRegionBackendServiceIamPolicy {
	return &IapWebRegionBackendServiceIamPolicy{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*IapWebRegionBackendServiceIamPolicy)(nil)

// IapWebRegionBackendServiceIamPolicy represents the Terraform resource google_iap_web_region_backend_service_iam_policy.
type IapWebRegionBackendServiceIamPolicy struct {
	Name      string
	Args      IapWebRegionBackendServiceIamPolicyArgs
	state     *iapWebRegionBackendServiceIamPolicyState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [IapWebRegionBackendServiceIamPolicy].
func (iwrbsip *IapWebRegionBackendServiceIamPolicy) Type() string {
	return "google_iap_web_region_backend_service_iam_policy"
}

// LocalName returns the local name for [IapWebRegionBackendServiceIamPolicy].
func (iwrbsip *IapWebRegionBackendServiceIamPolicy) LocalName() string {
	return iwrbsip.Name
}

// Configuration returns the configuration (args) for [IapWebRegionBackendServiceIamPolicy].
func (iwrbsip *IapWebRegionBackendServiceIamPolicy) Configuration() interface{} {
	return iwrbsip.Args
}

// DependOn is used for other resources to depend on [IapWebRegionBackendServiceIamPolicy].
func (iwrbsip *IapWebRegionBackendServiceIamPolicy) DependOn() terra.Reference {
	return terra.ReferenceResource(iwrbsip)
}

// Dependencies returns the list of resources [IapWebRegionBackendServiceIamPolicy] depends_on.
func (iwrbsip *IapWebRegionBackendServiceIamPolicy) Dependencies() terra.Dependencies {
	return iwrbsip.DependsOn
}

// LifecycleManagement returns the lifecycle block for [IapWebRegionBackendServiceIamPolicy].
func (iwrbsip *IapWebRegionBackendServiceIamPolicy) LifecycleManagement() *terra.Lifecycle {
	return iwrbsip.Lifecycle
}

// Attributes returns the attributes for [IapWebRegionBackendServiceIamPolicy].
func (iwrbsip *IapWebRegionBackendServiceIamPolicy) Attributes() iapWebRegionBackendServiceIamPolicyAttributes {
	return iapWebRegionBackendServiceIamPolicyAttributes{ref: terra.ReferenceResource(iwrbsip)}
}

// ImportState imports the given attribute values into [IapWebRegionBackendServiceIamPolicy]'s state.
func (iwrbsip *IapWebRegionBackendServiceIamPolicy) ImportState(av io.Reader) error {
	iwrbsip.state = &iapWebRegionBackendServiceIamPolicyState{}
	if err := json.NewDecoder(av).Decode(iwrbsip.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", iwrbsip.Type(), iwrbsip.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [IapWebRegionBackendServiceIamPolicy] has state.
func (iwrbsip *IapWebRegionBackendServiceIamPolicy) State() (*iapWebRegionBackendServiceIamPolicyState, bool) {
	return iwrbsip.state, iwrbsip.state != nil
}

// StateMust returns the state for [IapWebRegionBackendServiceIamPolicy]. Panics if the state is nil.
func (iwrbsip *IapWebRegionBackendServiceIamPolicy) StateMust() *iapWebRegionBackendServiceIamPolicyState {
	if iwrbsip.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", iwrbsip.Type(), iwrbsip.LocalName()))
	}
	return iwrbsip.state
}

// IapWebRegionBackendServiceIamPolicyArgs contains the configurations for google_iap_web_region_backend_service_iam_policy.
type IapWebRegionBackendServiceIamPolicyArgs struct {
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// PolicyData: string, required
	PolicyData terra.StringValue `hcl:"policy_data,attr" validate:"required"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
	// Region: string, optional
	Region terra.StringValue `hcl:"region,attr"`
	// WebRegionBackendService: string, required
	WebRegionBackendService terra.StringValue `hcl:"web_region_backend_service,attr" validate:"required"`
}
type iapWebRegionBackendServiceIamPolicyAttributes struct {
	ref terra.Reference
}

// Etag returns a reference to field etag of google_iap_web_region_backend_service_iam_policy.
func (iwrbsip iapWebRegionBackendServiceIamPolicyAttributes) Etag() terra.StringValue {
	return terra.ReferenceAsString(iwrbsip.ref.Append("etag"))
}

// Id returns a reference to field id of google_iap_web_region_backend_service_iam_policy.
func (iwrbsip iapWebRegionBackendServiceIamPolicyAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(iwrbsip.ref.Append("id"))
}

// PolicyData returns a reference to field policy_data of google_iap_web_region_backend_service_iam_policy.
func (iwrbsip iapWebRegionBackendServiceIamPolicyAttributes) PolicyData() terra.StringValue {
	return terra.ReferenceAsString(iwrbsip.ref.Append("policy_data"))
}

// Project returns a reference to field project of google_iap_web_region_backend_service_iam_policy.
func (iwrbsip iapWebRegionBackendServiceIamPolicyAttributes) Project() terra.StringValue {
	return terra.ReferenceAsString(iwrbsip.ref.Append("project"))
}

// Region returns a reference to field region of google_iap_web_region_backend_service_iam_policy.
func (iwrbsip iapWebRegionBackendServiceIamPolicyAttributes) Region() terra.StringValue {
	return terra.ReferenceAsString(iwrbsip.ref.Append("region"))
}

// WebRegionBackendService returns a reference to field web_region_backend_service of google_iap_web_region_backend_service_iam_policy.
func (iwrbsip iapWebRegionBackendServiceIamPolicyAttributes) WebRegionBackendService() terra.StringValue {
	return terra.ReferenceAsString(iwrbsip.ref.Append("web_region_backend_service"))
}

type iapWebRegionBackendServiceIamPolicyState struct {
	Etag                    string `json:"etag"`
	Id                      string `json:"id"`
	PolicyData              string `json:"policy_data"`
	Project                 string `json:"project"`
	Region                  string `json:"region"`
	WebRegionBackendService string `json:"web_region_backend_service"`
}
