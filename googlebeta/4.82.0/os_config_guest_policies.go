// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package googlebeta

import (
	"encoding/json"
	"fmt"
	osconfigguestpolicies "github.com/golingon/terraproviders/googlebeta/4.82.0/osconfigguestpolicies"
	"github.com/volvo-cars/lingon/pkg/terra"
	"io"
)

// NewOsConfigGuestPolicies creates a new instance of [OsConfigGuestPolicies].
func NewOsConfigGuestPolicies(name string, args OsConfigGuestPoliciesArgs) *OsConfigGuestPolicies {
	return &OsConfigGuestPolicies{
		Args: args,
		Name: name,
	}
}

var _ terra.Resource = (*OsConfigGuestPolicies)(nil)

// OsConfigGuestPolicies represents the Terraform resource google_os_config_guest_policies.
type OsConfigGuestPolicies struct {
	Name      string
	Args      OsConfigGuestPoliciesArgs
	state     *osConfigGuestPoliciesState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [OsConfigGuestPolicies].
func (ocgp *OsConfigGuestPolicies) Type() string {
	return "google_os_config_guest_policies"
}

// LocalName returns the local name for [OsConfigGuestPolicies].
func (ocgp *OsConfigGuestPolicies) LocalName() string {
	return ocgp.Name
}

// Configuration returns the configuration (args) for [OsConfigGuestPolicies].
func (ocgp *OsConfigGuestPolicies) Configuration() interface{} {
	return ocgp.Args
}

// DependOn is used for other resources to depend on [OsConfigGuestPolicies].
func (ocgp *OsConfigGuestPolicies) DependOn() terra.Reference {
	return terra.ReferenceResource(ocgp)
}

// Dependencies returns the list of resources [OsConfigGuestPolicies] depends_on.
func (ocgp *OsConfigGuestPolicies) Dependencies() terra.Dependencies {
	return ocgp.DependsOn
}

// LifecycleManagement returns the lifecycle block for [OsConfigGuestPolicies].
func (ocgp *OsConfigGuestPolicies) LifecycleManagement() *terra.Lifecycle {
	return ocgp.Lifecycle
}

// Attributes returns the attributes for [OsConfigGuestPolicies].
func (ocgp *OsConfigGuestPolicies) Attributes() osConfigGuestPoliciesAttributes {
	return osConfigGuestPoliciesAttributes{ref: terra.ReferenceResource(ocgp)}
}

// ImportState imports the given attribute values into [OsConfigGuestPolicies]'s state.
func (ocgp *OsConfigGuestPolicies) ImportState(av io.Reader) error {
	ocgp.state = &osConfigGuestPoliciesState{}
	if err := json.NewDecoder(av).Decode(ocgp.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", ocgp.Type(), ocgp.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [OsConfigGuestPolicies] has state.
func (ocgp *OsConfigGuestPolicies) State() (*osConfigGuestPoliciesState, bool) {
	return ocgp.state, ocgp.state != nil
}

// StateMust returns the state for [OsConfigGuestPolicies]. Panics if the state is nil.
func (ocgp *OsConfigGuestPolicies) StateMust() *osConfigGuestPoliciesState {
	if ocgp.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", ocgp.Type(), ocgp.LocalName()))
	}
	return ocgp.state
}

// OsConfigGuestPoliciesArgs contains the configurations for google_os_config_guest_policies.
type OsConfigGuestPoliciesArgs struct {
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// Etag: string, optional
	Etag terra.StringValue `hcl:"etag,attr"`
	// GuestPolicyId: string, required
	GuestPolicyId terra.StringValue `hcl:"guest_policy_id,attr" validate:"required"`
	// Id: string, optional
	Id terra.StringValue `hcl:"id,attr"`
	// Project: string, optional
	Project terra.StringValue `hcl:"project,attr"`
	// Assignment: required
	Assignment *osconfigguestpolicies.Assignment `hcl:"assignment,block" validate:"required"`
	// PackageRepositories: min=0
	PackageRepositories []osconfigguestpolicies.PackageRepositories `hcl:"package_repositories,block" validate:"min=0"`
	// Packages: min=0
	Packages []osconfigguestpolicies.Packages `hcl:"packages,block" validate:"min=0"`
	// Recipes: min=0
	Recipes []osconfigguestpolicies.Recipes `hcl:"recipes,block" validate:"min=0"`
	// Timeouts: optional
	Timeouts *osconfigguestpolicies.Timeouts `hcl:"timeouts,block"`
}
type osConfigGuestPoliciesAttributes struct {
	ref terra.Reference
}

// CreateTime returns a reference to field create_time of google_os_config_guest_policies.
func (ocgp osConfigGuestPoliciesAttributes) CreateTime() terra.StringValue {
	return terra.ReferenceAsString(ocgp.ref.Append("create_time"))
}

// Description returns a reference to field description of google_os_config_guest_policies.
func (ocgp osConfigGuestPoliciesAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(ocgp.ref.Append("description"))
}

// Etag returns a reference to field etag of google_os_config_guest_policies.
func (ocgp osConfigGuestPoliciesAttributes) Etag() terra.StringValue {
	return terra.ReferenceAsString(ocgp.ref.Append("etag"))
}

// GuestPolicyId returns a reference to field guest_policy_id of google_os_config_guest_policies.
func (ocgp osConfigGuestPoliciesAttributes) GuestPolicyId() terra.StringValue {
	return terra.ReferenceAsString(ocgp.ref.Append("guest_policy_id"))
}

// Id returns a reference to field id of google_os_config_guest_policies.
func (ocgp osConfigGuestPoliciesAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(ocgp.ref.Append("id"))
}

// Name returns a reference to field name of google_os_config_guest_policies.
func (ocgp osConfigGuestPoliciesAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(ocgp.ref.Append("name"))
}

// Project returns a reference to field project of google_os_config_guest_policies.
func (ocgp osConfigGuestPoliciesAttributes) Project() terra.StringValue {
	return terra.ReferenceAsString(ocgp.ref.Append("project"))
}

// UpdateTime returns a reference to field update_time of google_os_config_guest_policies.
func (ocgp osConfigGuestPoliciesAttributes) UpdateTime() terra.StringValue {
	return terra.ReferenceAsString(ocgp.ref.Append("update_time"))
}

func (ocgp osConfigGuestPoliciesAttributes) Assignment() terra.ListValue[osconfigguestpolicies.AssignmentAttributes] {
	return terra.ReferenceAsList[osconfigguestpolicies.AssignmentAttributes](ocgp.ref.Append("assignment"))
}

func (ocgp osConfigGuestPoliciesAttributes) PackageRepositories() terra.ListValue[osconfigguestpolicies.PackageRepositoriesAttributes] {
	return terra.ReferenceAsList[osconfigguestpolicies.PackageRepositoriesAttributes](ocgp.ref.Append("package_repositories"))
}

func (ocgp osConfigGuestPoliciesAttributes) Packages() terra.ListValue[osconfigguestpolicies.PackagesAttributes] {
	return terra.ReferenceAsList[osconfigguestpolicies.PackagesAttributes](ocgp.ref.Append("packages"))
}

func (ocgp osConfigGuestPoliciesAttributes) Recipes() terra.ListValue[osconfigguestpolicies.RecipesAttributes] {
	return terra.ReferenceAsList[osconfigguestpolicies.RecipesAttributes](ocgp.ref.Append("recipes"))
}

func (ocgp osConfigGuestPoliciesAttributes) Timeouts() osconfigguestpolicies.TimeoutsAttributes {
	return terra.ReferenceAsSingle[osconfigguestpolicies.TimeoutsAttributes](ocgp.ref.Append("timeouts"))
}

type osConfigGuestPoliciesState struct {
	CreateTime          string                                           `json:"create_time"`
	Description         string                                           `json:"description"`
	Etag                string                                           `json:"etag"`
	GuestPolicyId       string                                           `json:"guest_policy_id"`
	Id                  string                                           `json:"id"`
	Name                string                                           `json:"name"`
	Project             string                                           `json:"project"`
	UpdateTime          string                                           `json:"update_time"`
	Assignment          []osconfigguestpolicies.AssignmentState          `json:"assignment"`
	PackageRepositories []osconfigguestpolicies.PackageRepositoriesState `json:"package_repositories"`
	Packages            []osconfigguestpolicies.PackagesState            `json:"packages"`
	Recipes             []osconfigguestpolicies.RecipesState             `json:"recipes"`
	Timeouts            *osconfigguestpolicies.TimeoutsState             `json:"timeouts"`
}
