// CODE GENERATED BY github.com/volvo-cars/lingon. DO NOT EDIT.

package gkehubscoperbacrolebinding

import (
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
	terra "github.com/volvo-cars/lingon/pkg/terra"
)

type State struct{}

type Role struct {
	// PredefinedRole: string, optional
	PredefinedRole terra.StringValue `hcl:"predefined_role,attr"`
}

type Timeouts struct {
	// Create: string, optional
	Create terra.StringValue `hcl:"create,attr"`
	// Delete: string, optional
	Delete terra.StringValue `hcl:"delete,attr"`
	// Update: string, optional
	Update terra.StringValue `hcl:"update,attr"`
}

type StateAttributes struct {
	ref terra.Reference
}

func (s StateAttributes) InternalRef() (terra.Reference, error) {
	return s.ref, nil
}

func (s StateAttributes) InternalWithRef(ref terra.Reference) StateAttributes {
	return StateAttributes{ref: ref}
}

func (s StateAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return s.ref.InternalTokens()
}

func (s StateAttributes) Code() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("code"))
}

type RoleAttributes struct {
	ref terra.Reference
}

func (r RoleAttributes) InternalRef() (terra.Reference, error) {
	return r.ref, nil
}

func (r RoleAttributes) InternalWithRef(ref terra.Reference) RoleAttributes {
	return RoleAttributes{ref: ref}
}

func (r RoleAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return r.ref.InternalTokens()
}

func (r RoleAttributes) PredefinedRole() terra.StringValue {
	return terra.ReferenceAsString(r.ref.Append("predefined_role"))
}

type TimeoutsAttributes struct {
	ref terra.Reference
}

func (t TimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t TimeoutsAttributes) InternalWithRef(ref terra.Reference) TimeoutsAttributes {
	return TimeoutsAttributes{ref: ref}
}

func (t TimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t TimeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("create"))
}

func (t TimeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("delete"))
}

func (t TimeoutsAttributes) Update() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("update"))
}

type StateState struct {
	Code string `json:"code"`
}

type RoleState struct {
	PredefinedRole string `json:"predefined_role"`
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
	Update string `json:"update"`
}
